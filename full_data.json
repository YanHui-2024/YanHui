[
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/98521",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/98521/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/98521/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/98521/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/98521",
        "id": 1657811014,
        "node_id": "I_kwDOA-j9z85i0DBG",
        "number": 98521,
        "title": "Unsupported annotation when using generics for typing",
        "user": {
            "login": "abidwael",
            "id": 103003638,
            "node_id": "U_kgDOBiO19g",
            "avatar_url": "https://avatars.githubusercontent.com/u/103003638?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/abidwael",
            "html_url": "https://github.com/abidwael",
            "followers_url": "https://api.github.com/users/abidwael/followers",
            "following_url": "https://api.github.com/users/abidwael/following{/other_user}",
            "gists_url": "https://api.github.com/users/abidwael/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/abidwael/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/abidwael/subscriptions",
            "organizations_url": "https://api.github.com/users/abidwael/orgs",
            "repos_url": "https://api.github.com/users/abidwael/repos",
            "events_url": "https://api.github.com/users/abidwael/events{/privacy}",
            "received_events_url": "https://api.github.com/users/abidwael/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "malfet",
            "id": 2453524,
            "node_id": "MDQ6VXNlcjI0NTM1MjQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2453524?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/malfet",
            "html_url": "https://github.com/malfet",
            "followers_url": "https://api.github.com/users/malfet/followers",
            "following_url": "https://api.github.com/users/malfet/following{/other_user}",
            "gists_url": "https://api.github.com/users/malfet/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/malfet/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/malfet/subscriptions",
            "organizations_url": "https://api.github.com/users/malfet/orgs",
            "repos_url": "https://api.github.com/users/malfet/repos",
            "events_url": "https://api.github.com/users/malfet/events{/privacy}",
            "received_events_url": "https://api.github.com/users/malfet/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "malfet",
                "id": 2453524,
                "node_id": "MDQ6VXNlcjI0NTM1MjQ=",
                "avatar_url": "https://avatars.githubusercontent.com/u/2453524?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/malfet",
                "html_url": "https://github.com/malfet",
                "followers_url": "https://api.github.com/users/malfet/followers",
                "following_url": "https://api.github.com/users/malfet/following{/other_user}",
                "gists_url": "https://api.github.com/users/malfet/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/malfet/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/malfet/subscriptions",
                "organizations_url": "https://api.github.com/users/malfet/orgs",
                "repos_url": "https://api.github.com/users/malfet/repos",
                "events_url": "https://api.github.com/users/malfet/events{/privacy}",
                "received_events_url": "https://api.github.com/users/malfet/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-04-06T17:37:58Z",
        "updated_at": "2023-04-09T22:59:04Z",
        "closed_at": "2023-04-09T22:59:04Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### \ud83d\udc1b Describe the bug\r\n\r\nWhen using [generics for typing](https://peps.python.org/pep-0585/#reference-implementation) in Python 3.9, I run into this error\r\n```\r\nTraceback (most recent call last):\r\n  File \"/Users/scripts/torchscript_bug.py\", line 24, in <module>\r\n    out = torch.jit.script(pad)\r\n  File \"/usr/local/Caskroom/miniforge/base/envs/ludwig/lib/python3.9/site-packages/torch/jit/_script.py\", line 1341, in script\r\n    fn = torch._C._jit_script_compile(\r\n  File \"/usr/local/Caskroom/miniforge/base/envs/ludwig/lib/python3.9/site-packages/torch/jit/annotations.py\", line 366, in try_ann_to_type\r\n    assert maybe_type, msg.format(repr(ann), repr(maybe_type))\r\nAssertionError: Unsupported annotation typing.Union[int, tuple[int, int]] could not be resolved because None could not be resolved.\r\n```\r\nrepro script\r\n```\r\nimport torch\r\nimport torchvision.transforms.functional as F\r\nfrom typing import Union\r\n\r\n\r\ndef to_tuple(v: Union[int, tuple[int, int]]) -> tuple[int, int]:\r\n    \"\"\"Converts int or tuple to tuple of ints.\"\"\"\r\n    if torch.jit.isinstance(v, int):\r\n        return v, v\r\n    else:\r\n        return v\r\n\r\n\r\ndef pad(img: torch.Tensor, new_size: Union[int, tuple[int, int]]) -> torch.Tensor:\r\n    new_size = to_tuple(new_size)\r\n    old_size = img.shape[-2:]\r\n    pad_size = (torch.tensor(new_size) - torch.tensor(old_size)) / 2\r\n    padding = torch.cat((torch.floor(pad_size), torch.ceil(pad_size)))\r\n    padding[padding < 0] = 0\r\n    padding = [int(x) for x in padding]\r\n    return F.pad(img, padding=padding, padding_mode=\"edge\")\r\n\r\n\r\nout = torch.jit.script(pad)\r\n```\r\n\r\n### Versions\r\n\r\n`Python 3.9.16`\r\n```\r\ntorch                                    2.0.0\r\ntorchaudio                               2.0.1\r\ntorchdata                                0.6.0\r\ntorchinfo                                1.7.2\r\ntorchmetrics                             0.11.4\r\ntorchtext                                0.15.1\r\ntorchvision                              0.15.1\r\n```\n\ncc @EikanWang @jgong5 @wenzhe-nrv @sanchitintel",
        "closed_by": {
            "login": "pytorchmergebot",
            "id": 97764156,
            "node_id": "U_kgDOBdPDPA",
            "avatar_url": "https://avatars.githubusercontent.com/u/97764156?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pytorchmergebot",
            "html_url": "https://github.com/pytorchmergebot",
            "followers_url": "https://api.github.com/users/pytorchmergebot/followers",
            "following_url": "https://api.github.com/users/pytorchmergebot/following{/other_user}",
            "gists_url": "https://api.github.com/users/pytorchmergebot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pytorchmergebot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pytorchmergebot/subscriptions",
            "organizations_url": "https://api.github.com/users/pytorchmergebot/orgs",
            "repos_url": "https://api.github.com/users/pytorchmergebot/repos",
            "events_url": "https://api.github.com/users/pytorchmergebot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pytorchmergebot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/98521/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/98521/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/97229",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/97229/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/97229/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/97229/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/97229",
        "id": 1633481881,
        "node_id": "I_kwDOA-j9z85hXPSZ",
        "number": 97229,
        "title": "Jit trace failed with dict inputs",
        "user": {
            "login": "jiqing-feng",
            "id": 107918818,
            "node_id": "U_kgDOBm614g",
            "avatar_url": "https://avatars.githubusercontent.com/u/107918818?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jiqing-feng",
            "html_url": "https://github.com/jiqing-feng",
            "followers_url": "https://api.github.com/users/jiqing-feng/followers",
            "following_url": "https://api.github.com/users/jiqing-feng/following{/other_user}",
            "gists_url": "https://api.github.com/users/jiqing-feng/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jiqing-feng/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jiqing-feng/subscriptions",
            "organizations_url": "https://api.github.com/users/jiqing-feng/orgs",
            "repos_url": "https://api.github.com/users/jiqing-feng/repos",
            "events_url": "https://api.github.com/users/jiqing-feng/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jiqing-feng/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-03-21T09:06:03Z",
        "updated_at": "2023-03-31T19:39:08Z",
        "closed_at": "2023-03-31T19:39:08Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### \ud83d\udc1b Describe the bug\r\n\r\nBackground: I want to trace the model for generating tasks, and my input is as follows:\r\ninput_dict = {\r\n'input_ids': Tensor,\r\n'past_key_values': Tuple,\r\n'attention_mask': Tensor,\r\n'position_ids': Tensor\r\n}\r\nmodel = [gpt2](https://github.com/huggingface/transformers/blob/main/src/transformers/models/gpt2/modeling_gpt2.py#L955)\r\n\r\nwhen I run `torch.jit.trace(model, example_kwarg_inputs=input_dict, strict=False)`\r\nI got this error:\r\n![image](https://user-images.githubusercontent.com/107918818/226558952-66815927-ea11-44cf-8378-27062f6c6371.png)\r\n\r\nThe error is occurred on [mod(**input)](https://github.com/pytorch/pytorch/blob/master/torch/jit/_trace.py#L459)\r\n\r\nCould you please help me check this error? Thanks!\r\n\r\nBTW, I tried to use jit trace by tuple inputs with past_key_values and it works. I also removed past_key_values in my input dict and it also works, so the bug may have happened when the input dict contains tuples.\r\n\r\n\r\n### Versions\r\n\r\nCollecting environment information...\r\nPyTorch version: 2.0.0.dev20230228+cpu-cxx11-abi\r\nIs debug build: False\r\nCUDA used to build PyTorch: None\r\nROCM used to build PyTorch: N/A\r\n\r\nOS: CentOS Stream 8 (x86_64)\r\nGCC version: (GCC) 8.5.0 20210514 (Red Hat 8.5.0-18)\r\nClang version: Could not collect\r\nCMake version: version 3.20.2\r\nLibc version: glibc-2.28\r\n\r\nPython version: 3.9.16 (main, Mar  1 2023, 18:22:10)  [GCC 11.2.0] (64-bit runtime)\r\nPython platform: Linux-5.16.0-rc8-intel-next-01534-g53cb5f883cf7-x86_64-with-glibc2.28\r\nIs CUDA available: False\r\nCUDA runtime version: No CUDA\r\nCUDA_MODULE_LOADING set to: N/A\r\nGPU models and configuration: No CUDA\r\nNvidia driver version: No CUDA\r\ncuDNN version: No CUDA\r\nHIP runtime version: N/A\r\nMIOpen runtime version: N/A\r\nIs XNNPACK available: True\r\n\r\nCPU:\r\nArchitecture:        x86_64\r\nCPU op-mode(s):      32-bit, 64-bit\r\nByte Order:          Little Endian\r\nCPU(s):              224\r\nOn-line CPU(s) list: 0-223\r\nThread(s) per core:  2\r\nCore(s) per socket:  56\r\nSocket(s):           2\r\nNUMA node(s):        2\r\nVendor ID:           GenuineIntel\r\nCPU family:          6\r\nModel:               143\r\nModel name:          Genuine Intel(R) CPU 0000%@\r\nStepping:            3\r\nCPU MHz:             1900.000\r\nCPU max MHz:         1900.0000\r\nCPU min MHz:         800.0000\r\nBogoMIPS:            3800.00\r\nVirtualization:      VT-x\r\nL1d cache:           48K\r\nL1i cache:           32K\r\nL2 cache:            2048K\r\nL3 cache:            107520K\r\nNUMA node0 CPU(s):   0-55,112-167\r\nNUMA node1 CPU(s):   56-111,168-223\r\nFlags:               fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc art arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc cpuid aperfmperf tsc_known_freq pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm 3dnowprefetch cpuid_fault epb cat_l3 cat_l2 cdp_l3 invpcid_single intel_ppin cdp_l2 ssbd mba ibrs ibpb stibp ibrs_enhanced tpr_shadow vnmi flexpriority ept vpid ept_ad fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm cqm rdt_a avx512f avx512dq rdseed adx smap avx512ifma clflushopt clwb intel_pt avx512cd sha_ni avx512bw avx512vl xsaveopt xsavec xgetbv1 xsaves cqm_llc cqm_occup_llc cqm_mbm_total cqm_mbm_local split_lock_detect avx_vnni avx512_bf16 wbnoinvd dtherm arat pln pts hwp hwp_act_window hwp_epp hwp_pkg_req hfi avx512vbmi umip pku ospke waitpkg avx512_vbmi2 gfni vaes vpclmulqdq avx512_vnni avx512_bitalg tme avx512_vpopcntdq la57 rdpid bus_lock_detect cldemote movdiri movdir64b enqcmd fsrm uintr avx512_vp2intersect md_clear serialize tsxldtrk pconfig arch_lbr amx_bf16 avx512_fp16 amx_tile amx_int8 flush_l1d arch_capabilities\r\n\r\nVersions of relevant libraries:\r\n[pip3] intel-extension-for-pytorch==2.0.0+git2cb04e0\r\n[pip3] mypy-extensions==1.0.0\r\n[pip3] numpy==1.24.2\r\n[pip3] torch==2.0.0.dev20230228+cpu.cxx11.abi\r\n[conda] intel-extension-for-pytorch 2.0.0+git2cb04e0          pypi_0    pypi\r\n[conda] mkl-include               2023.0.0                 pypi_0    pypi\r\n[conda] mkl-static                2023.0.0                 pypi_0    pypi\r\n[conda] numpy                     1.24.2                   pypi_0    pypi\r\n[conda] torch                     2.0.0.dev20230228+cpu.cxx11.abi          pypi_0    pypi\r\n\n\ncc @EikanWang @jgong5 @wenzhe-nrv @sanchitintel",
        "closed_by": {
            "login": "pytorchmergebot",
            "id": 97764156,
            "node_id": "U_kgDOBdPDPA",
            "avatar_url": "https://avatars.githubusercontent.com/u/97764156?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pytorchmergebot",
            "html_url": "https://github.com/pytorchmergebot",
            "followers_url": "https://api.github.com/users/pytorchmergebot/followers",
            "following_url": "https://api.github.com/users/pytorchmergebot/following{/other_user}",
            "gists_url": "https://api.github.com/users/pytorchmergebot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pytorchmergebot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pytorchmergebot/subscriptions",
            "organizations_url": "https://api.github.com/users/pytorchmergebot/orgs",
            "repos_url": "https://api.github.com/users/pytorchmergebot/repos",
            "events_url": "https://api.github.com/users/pytorchmergebot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pytorchmergebot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/97229/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/97229/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/96858",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/96858/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/96858/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/96858/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/96858",
        "id": 1625902397,
        "node_id": "I_kwDOA-j9z85g6U09",
        "number": 96858,
        "title": "Broken test_ops_jit on Windows (CPU, and CUDA)",
        "user": {
            "login": "huydhn",
            "id": 475357,
            "node_id": "MDQ6VXNlcjQ3NTM1Nw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/475357?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/huydhn",
            "html_url": "https://github.com/huydhn",
            "followers_url": "https://api.github.com/users/huydhn/followers",
            "following_url": "https://api.github.com/users/huydhn/following{/other_user}",
            "gists_url": "https://api.github.com/users/huydhn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/huydhn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/huydhn/subscriptions",
            "organizations_url": "https://api.github.com/users/huydhn/orgs",
            "repos_url": "https://api.github.com/users/huydhn/repos",
            "events_url": "https://api.github.com/users/huydhn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/huydhn/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 790080431,
                "node_id": "MDU6TGFiZWw3OTAwODA0MzE=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20windows",
                "name": "module: windows",
                "color": "f7e101",
                "default": false,
                "description": "Windows support for PyTorch"
            },
            {
                "id": 1300896147,
                "node_id": "MDU6TGFiZWwxMzAwODk2MTQ3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20ci",
                "name": "module: ci",
                "color": "f7e101",
                "default": false,
                "description": "Related to continuous integration"
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "huydhn",
            "id": 475357,
            "node_id": "MDQ6VXNlcjQ3NTM1Nw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/475357?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/huydhn",
            "html_url": "https://github.com/huydhn",
            "followers_url": "https://api.github.com/users/huydhn/followers",
            "following_url": "https://api.github.com/users/huydhn/following{/other_user}",
            "gists_url": "https://api.github.com/users/huydhn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/huydhn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/huydhn/subscriptions",
            "organizations_url": "https://api.github.com/users/huydhn/orgs",
            "repos_url": "https://api.github.com/users/huydhn/repos",
            "events_url": "https://api.github.com/users/huydhn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/huydhn/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "huydhn",
                "id": 475357,
                "node_id": "MDQ6VXNlcjQ3NTM1Nw==",
                "avatar_url": "https://avatars.githubusercontent.com/u/475357?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/huydhn",
                "html_url": "https://github.com/huydhn",
                "followers_url": "https://api.github.com/users/huydhn/followers",
                "following_url": "https://api.github.com/users/huydhn/following{/other_user}",
                "gists_url": "https://api.github.com/users/huydhn/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/huydhn/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/huydhn/subscriptions",
                "organizations_url": "https://api.github.com/users/huydhn/orgs",
                "repos_url": "https://api.github.com/users/huydhn/repos",
                "events_url": "https://api.github.com/users/huydhn/events{/privacy}",
                "received_events_url": "https://api.github.com/users/huydhn/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-03-15T16:52:55Z",
        "updated_at": "2023-03-17T22:42:29Z",
        "closed_at": "2023-03-17T22:42:29Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### \ud83d\udc1b Describe the bug\r\n\r\nThis test starts to break on Windows.  Many tests there are failing, and the jobs are close very close to timing out.  At first glance, it doesn\u2019t look like a PR causes it.  The error points to opening a temp file:\r\n\r\n```\r\n2023-03-15T16:06:39.6597601Z ================================== FAILURES ===================================\r\n2023-03-15T16:06:39.6597885Z _________ TestJitCPU.test_variant_consistency_jit_diff_cpu_complex64 __________\r\n2023-03-15T16:06:39.6598150Z Traceback (most recent call last):\r\n2023-03-15T16:06:39.6598490Z   File \"C:\\actions-runner\\_work\\pytorch\\pytorch\\test\\test_ops_jit.py\", line 85, in test_variant_consistency_jit\r\n2023-03-15T16:06:39.6598879Z     self.indiv_variant_test_jit(device, dtype, op, sample, func_type, variant, has_fake_function)\r\n2023-03-15T16:06:39.6599279Z   File \"C:\\actions-runner\\_work\\pytorch\\pytorch\\test\\test_ops_jit.py\", line 136, in indiv_variant_test_jit\r\n2023-03-15T16:06:39.6599585Z     check_against_reference(self,\r\n2023-03-15T16:06:39.6599950Z   File \"C:\\actions-runner\\_work\\pytorch\\pytorch\\build\\win_tmp\\build\\torch\\testing\\_internal\\common_jit.py\", line 108, in check_against_reference\r\n2023-03-15T16:06:39.6600379Z     outputs_test = output_func(self.runAndSaveRNG(func, recording_inputs, kwargs))\r\n2023-03-15T16:06:39.6600910Z   File \"C:\\actions-runner\\_work\\pytorch\\pytorch\\build\\win_tmp\\build\\torch\\testing\\_internal\\common_jit.py\", line 160, in runAndSaveRNG\r\n2023-03-15T16:06:39.6601259Z     results = func(*inputs, **kwargs)\r\n2023-03-15T16:06:39.6601687Z   File \"C:\\actions-runner\\_work\\pytorch\\pytorch\\build\\win_tmp\\build\\torch\\testing\\_internal\\jit_metaprogramming_utils.py\", line 471, in traced_fn\r\n2023-03-15T16:06:39.6602114Z     self.assertExportImport(traced.graph, split_inputs.all_tensors)\r\n2023-03-15T16:06:39.6602550Z   File \"C:\\actions-runner\\_work\\pytorch\\pytorch\\build\\win_tmp\\build\\torch\\testing\\_internal\\common_jit.py\", line 148, in assertExportImport\r\n2023-03-15T16:06:39.6602944Z     self.assertExportImportModule(m, inputs)\r\n2023-03-15T16:06:39.6603348Z   File \"C:\\actions-runner\\_work\\pytorch\\pytorch\\build\\win_tmp\\build\\torch\\testing\\_internal\\common_jit.py\", line 151, in assertExportImportModule\r\n2023-03-15T16:06:39.6603740Z     m_import = self.getExportImportCopy(m)\r\n2023-03-15T16:06:39.6604141Z   File \"C:\\actions-runner\\_work\\pytorch\\pytorch\\build\\win_tmp\\build\\torch\\testing\\_internal\\common_jit.py\", line 174, in getExportImportCopy\r\n2023-03-15T16:06:39.6604525Z     return torch.jit.load(fname, map_location=map_location)\r\n2023-03-15T16:06:39.6604900Z   File \"C:\\actions-runner\\_work\\pytorch\\pytorch\\build\\win_tmp\\build\\torch\\jit\\_serialization.py\", line 162, in load\r\n2023-03-15T16:06:39.6605388Z     cpp_module = torch._C.import_ir_module(cu, str(f), map_location, _extra_files, _restore_shapes)  # type: ignore[call-arg]\r\n2023-03-15T16:06:39.6605886Z RuntimeError: open file failed because of errno 22 on fopen: Invalid argument, file path: C:\\Users\\RUNNER~1\\AppData\\Local\\Temp\\tmpbg1wa8z3\r\n```\r\n\r\nI will disable the test on Windows while we investigate.\r\n\r\n### Versions\r\n\r\nWindows, PyTorch CI, CPU and CUDA\r\n\r\ncc @EikanWang @jgong5 @wenzhe-nrv @sanchitintel @peterjc123 @mszhanyi @skyline75489 @nbcsm @seemethere @malfet @pytorch/pytorch-dev-infra @kit1980 ",
        "closed_by": {
            "login": "pytorchmergebot",
            "id": 97764156,
            "node_id": "U_kgDOBdPDPA",
            "avatar_url": "https://avatars.githubusercontent.com/u/97764156?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pytorchmergebot",
            "html_url": "https://github.com/pytorchmergebot",
            "followers_url": "https://api.github.com/users/pytorchmergebot/followers",
            "following_url": "https://api.github.com/users/pytorchmergebot/following{/other_user}",
            "gists_url": "https://api.github.com/users/pytorchmergebot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pytorchmergebot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pytorchmergebot/subscriptions",
            "organizations_url": "https://api.github.com/users/pytorchmergebot/orgs",
            "repos_url": "https://api.github.com/users/pytorchmergebot/repos",
            "events_url": "https://api.github.com/users/pytorchmergebot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pytorchmergebot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/96858/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/96858/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/96515",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/96515/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/96515/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/96515/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/96515",
        "id": 1618722109,
        "node_id": "I_kwDOA-j9z85ge709",
        "number": 96515,
        "title": "Incorrect links",
        "user": {
            "login": "albert-github",
            "id": 5223533,
            "node_id": "MDQ6VXNlcjUyMjM1MzM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5223533?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/albert-github",
            "html_url": "https://github.com/albert-github",
            "followers_url": "https://api.github.com/users/albert-github/followers",
            "following_url": "https://api.github.com/users/albert-github/following{/other_user}",
            "gists_url": "https://api.github.com/users/albert-github/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/albert-github/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/albert-github/subscriptions",
            "organizations_url": "https://api.github.com/users/albert-github/orgs",
            "repos_url": "https://api.github.com/users/albert-github/repos",
            "events_url": "https://api.github.com/users/albert-github/events{/privacy}",
            "received_events_url": "https://api.github.com/users/albert-github/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 897287230,
                "node_id": "MDU6TGFiZWw4OTcyODcyMzA=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20docs",
                "name": "module: docs",
                "color": "f7e101",
                "default": false,
                "description": "Related to our documentation, both in docs/ and docblocks"
            },
            {
                "id": 1300977106,
                "node_id": "MDU6TGFiZWwxMzAwOTc3MTA2",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20serialization",
                "name": "module: serialization",
                "color": "f7e101",
                "default": false,
                "description": "Issues related to serialization (e.g., via pickle, or otherwise) of PyTorch objects"
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-03-10T10:22:23Z",
        "updated_at": "2023-03-14T09:50:09Z",
        "closed_at": "2023-03-13T22:26:28Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "https://github.com/pytorch/pytorch/blob/987eade3f38cde7113c7241831030c829879bf9b/torch/csrc/jit/docs/serialization.md?plain=1#L136\r\n\r\n`constantspkl-Constants-in-code` should be `constantspkl-constants-in-code`\r\n\r\nhttps://github.com/pytorch/pytorch/blob/987eade3f38cde7113c7241831030c829879bf9b/torch/csrc/jit/docs/serialization.md?plain=1#L245\r\n\r\n`(#tensors-How-tensors-are-serialized)` should probably be `(#data-how-tensors-are-serialized)`\r\n\r\nhttps://github.com/pytorch/pytorch/blob/987eade3f38cde7113c7241831030c829879bf9b/torch/csrc/jit/JIT-AUTOCAST.md?plain=1#L17\r\nThe link `(#mixing-eager-mode-and-scripting-autocast)` doesn't point to anything\r\n\r\nhttps://github.com/pytorch/pytorch/blob/987eade3f38cde7113c7241831030c829879bf9b/torch/csrc/jit/OVERVIEW.md?plain=1#L595\r\n\r\n`(#Block)` should be `(#block)`\r\n\r\n\r\n\n\ncc @EikanWang @jgong5 @wenzhe-nrv @sanchitintel @svekars @carljparker @mruberry",
        "closed_by": {
            "login": "pytorchmergebot",
            "id": 97764156,
            "node_id": "U_kgDOBdPDPA",
            "avatar_url": "https://avatars.githubusercontent.com/u/97764156?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pytorchmergebot",
            "html_url": "https://github.com/pytorchmergebot",
            "followers_url": "https://api.github.com/users/pytorchmergebot/followers",
            "following_url": "https://api.github.com/users/pytorchmergebot/following{/other_user}",
            "gists_url": "https://api.github.com/users/pytorchmergebot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pytorchmergebot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pytorchmergebot/subscriptions",
            "organizations_url": "https://api.github.com/users/pytorchmergebot/orgs",
            "repos_url": "https://api.github.com/users/pytorchmergebot/repos",
            "events_url": "https://api.github.com/users/pytorchmergebot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pytorchmergebot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/96515/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/96515/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/95749",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/95749/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/95749/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/95749/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/95749",
        "id": 1604038699,
        "node_id": "I_kwDOA-j9z85fm7Ar",
        "number": 95749,
        "title": "DISABLED test_schema_correctness_fft_fft_cuda_bool (__main__.TestSchemaCheckModeOpInfoCUDA)",
        "user": {
            "login": "pytorch-bot[bot]",
            "id": 54816060,
            "node_id": "MDM6Qm90NTQ4MTYwNjA=",
            "avatar_url": "https://avatars.githubusercontent.com/in/40112?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pytorch-bot%5Bbot%5D",
            "html_url": "https://github.com/apps/pytorch-bot",
            "followers_url": "https://api.github.com/users/pytorch-bot%5Bbot%5D/followers",
            "following_url": "https://api.github.com/users/pytorch-bot%5Bbot%5D/following{/other_user}",
            "gists_url": "https://api.github.com/users/pytorch-bot%5Bbot%5D/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pytorch-bot%5Bbot%5D/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pytorch-bot%5Bbot%5D/subscriptions",
            "organizations_url": "https://api.github.com/users/pytorch-bot%5Bbot%5D/orgs",
            "repos_url": "https://api.github.com/users/pytorch-bot%5Bbot%5D/repos",
            "events_url": "https://api.github.com/users/pytorch-bot%5Bbot%5D/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pytorch-bot%5Bbot%5D/received_events",
            "type": "Bot",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1301397902,
                "node_id": "MDU6TGFiZWwxMzAxMzk3OTAy",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20flaky-tests",
                "name": "module: flaky-tests",
                "color": "f7e101",
                "default": false,
                "description": "Problem is a flaky test in CI"
            },
            {
                "id": 1679533716,
                "node_id": "MDU6TGFiZWwxNjc5NTMzNzE2",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/skipped",
                "name": "skipped",
                "color": "bfdadc",
                "default": false,
                "description": "Denotes a (flaky) test currently skipped in CI."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-03-01T00:58:29Z",
        "updated_at": "2023-03-20T20:57:35Z",
        "closed_at": "2023-03-20T20:57:35Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Platforms: linux\n\nThis test was disabled because it is failing in CI. See [recent examples](https://hud.pytorch.org/failure/test_schema_correctness_fft_fft_cuda_bool) and the most recent trunk [workflow logs](https://github.com/pytorch/pytorch/runs/11613789052).\n\nOver the past 72 hours, it has flakily failed in 2 workflow(s).\n\n**Debugging instructions (after clicking on the recent samples link):**\nTo find relevant log snippets:\n1. Click on the workflow logs linked above\n2. Grep for `test_schema_correctness_fft_fft_cuda_bool`\n\n\nTest file path: `test_schema_check.py`\n\ncc @EikanWang @jgong5 @wenzhe-nrv @sanchitintel",
        "closed_by": {
            "login": "pytorchmergebot",
            "id": 97764156,
            "node_id": "U_kgDOBdPDPA",
            "avatar_url": "https://avatars.githubusercontent.com/u/97764156?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pytorchmergebot",
            "html_url": "https://github.com/pytorchmergebot",
            "followers_url": "https://api.github.com/users/pytorchmergebot/followers",
            "following_url": "https://api.github.com/users/pytorchmergebot/following{/other_user}",
            "gists_url": "https://api.github.com/users/pytorchmergebot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pytorchmergebot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pytorchmergebot/subscriptions",
            "organizations_url": "https://api.github.com/users/pytorchmergebot/orgs",
            "repos_url": "https://api.github.com/users/pytorchmergebot/repos",
            "events_url": "https://api.github.com/users/pytorchmergebot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pytorchmergebot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/95749/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/95749/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/95305",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/95305/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/95305/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/95305/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/95305",
        "id": 1595626509,
        "node_id": "I_kwDOA-j9z85fG1QN",
        "number": 95305,
        "title": "[TorchScript] Test fails on multiple GPUs ",
        "user": {
            "login": "Aidyn-A",
            "id": 31858918,
            "node_id": "MDQ6VXNlcjMxODU4OTE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/31858918?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Aidyn-A",
            "html_url": "https://github.com/Aidyn-A",
            "followers_url": "https://api.github.com/users/Aidyn-A/followers",
            "following_url": "https://api.github.com/users/Aidyn-A/following{/other_user}",
            "gists_url": "https://api.github.com/users/Aidyn-A/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Aidyn-A/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Aidyn-A/subscriptions",
            "organizations_url": "https://api.github.com/users/Aidyn-A/orgs",
            "repos_url": "https://api.github.com/users/Aidyn-A/repos",
            "events_url": "https://api.github.com/users/Aidyn-A/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Aidyn-A/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-02-22T18:44:08Z",
        "updated_at": "2023-03-08T20:29:19Z",
        "closed_at": "2023-03-08T20:29:19Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### \ud83d\udc1b Describe the bug\n\nAfter a introducing `_exchange_device` #91127 `test_jit.py` started to fail on multiple GPUs. \r\n\r\n```\r\n======================================================================\r\nERROR: test_python_submodule_script (jit.test_data_parallel.TestDataParallel)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/opt/pytorch/pytorch/test/jit/test_data_parallel.py\", line 89, in test_python_submodule_script\r\n    replicas = dp.replicate(module, {0, 1})\r\n  File \"/opt/pytorch/pytorch/torch/nn/parallel/replicate.py\", line 91, in replicate\r\n    param_copies = _broadcast_coalesced_reshape(params, devices, detach)\r\n  File \"/opt/pytorch/pytorch/torch/nn/parallel/replicate.py\", line 71, in _broadcast_coalesced_reshape\r\n    tensor_copies = Broadcast.apply(devices, *tensors)\r\n  File \"/opt/pytorch/pytorch/torch/autograd/function.py\", line 506, in apply\r\n    return super().apply(*args, **kwargs)  # type: ignore[misc]\r\n  File \"/opt/pytorch/pytorch/torch/nn/parallel/_functions.py\", line 23, in forward\r\n    outputs = comm.broadcast_coalesced(inputs, ctx.target_gpus)\r\n  File \"/opt/pytorch/pytorch/torch/nn/parallel/comm.py\", line 58, in broadcast_coalesced\r\n    return torch._C._broadcast_coalesced(tensors, devices, buffer_size)\r\nRuntimeError: All tensors must be on devices[0]: 0\r\n\r\n======================================================================\r\nERROR: test_shared_module (jit.test_data_parallel.TestDataParallel)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/opt/pytorch/pytorch/test/jit/test_data_parallel.py\", line 97, in test_shared_module\r\n    replicas = dp.replicate(module, {0, 1})\r\n  File \"/opt/pytorch/pytorch/torch/nn/parallel/replicate.py\", line 91, in replicate\r\n    param_copies = _broadcast_coalesced_reshape(params, devices, detach)\r\n  File \"/opt/pytorch/pytorch/torch/nn/parallel/replicate.py\", line 71, in _broadcast_coalesced_reshape\r\n    tensor_copies = Broadcast.apply(devices, *tensors)\r\n  File \"/opt/pytorch/pytorch/torch/autograd/function.py\", line 506, in apply\r\n    return super().apply(*args, **kwargs)  # type: ignore[misc]\r\n  File \"/opt/pytorch/pytorch/torch/nn/parallel/_functions.py\", line 23, in forward\r\n    outputs = comm.broadcast_coalesced(inputs, ctx.target_gpus)\r\n  File \"/opt/pytorch/pytorch/torch/nn/parallel/comm.py\", line 58, in broadcast_coalesced\r\n    return torch._C._broadcast_coalesced(tensors, devices, buffer_size)\r\nRuntimeError: All tensors must be on devices[0]: 0\r\n\r\n======================================================================\r\nERROR: test_tensor_sharing (jit.test_data_parallel.TestDataParallel)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/opt/pytorch/pytorch/test/jit/test_data_parallel.py\", line 109, in test_tensor_sharing\r\n    replica = dp.replicate(module, {0, 1})\r\n  File \"/opt/pytorch/pytorch/torch/nn/parallel/replicate.py\", line 91, in replicate\r\n    param_copies = _broadcast_coalesced_reshape(params, devices, detach)\r\n  File \"/opt/pytorch/pytorch/torch/nn/parallel/replicate.py\", line 71, in _broadcast_coalesced_reshape\r\n    tensor_copies = Broadcast.apply(devices, *tensors)\r\n  File \"/opt/pytorch/pytorch/torch/autograd/function.py\", line 506, in apply\r\n    return super().apply(*args, **kwargs)  # type: ignore[misc]\r\n  File \"/opt/pytorch/pytorch/torch/nn/parallel/_functions.py\", line 23, in forward\r\n    outputs = comm.broadcast_coalesced(inputs, ctx.target_gpus)\r\n  File \"/opt/pytorch/pytorch/torch/nn/parallel/comm.py\", line 58, in broadcast_coalesced\r\n    return torch._C._broadcast_coalesced(tensors, devices, buffer_size)\r\nRuntimeError: All tensors must be on devices[0]: 0\r\n\r\n======================================================================\r\nERROR: test_tensor_sharing_with_forward (jit.test_data_parallel.TestDataParallel)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/opt/pytorch/pytorch/test/jit/test_data_parallel.py\", line 134, in test_tensor_sharing_with_forward\r\n    replica = dp.replicate(module, {0, 1})\r\n  File \"/opt/pytorch/pytorch/torch/nn/parallel/replicate.py\", line 91, in replicate\r\n    param_copies = _broadcast_coalesced_reshape(params, devices, detach)\r\n  File \"/opt/pytorch/pytorch/torch/nn/parallel/replicate.py\", line 71, in _broadcast_coalesced_reshape\r\n    tensor_copies = Broadcast.apply(devices, *tensors)\r\n  File \"/opt/pytorch/pytorch/torch/autograd/function.py\", line 506, in apply\r\n    return super().apply(*args, **kwargs)  # type: ignore[misc]\r\n  File \"/opt/pytorch/pytorch/torch/nn/parallel/_functions.py\", line 23, in forward\r\n    outputs = comm.broadcast_coalesced(inputs, ctx.target_gpus)\r\n  File \"/opt/pytorch/pytorch/torch/nn/parallel/comm.py\", line 58, in broadcast_coalesced\r\n    return torch._C._broadcast_coalesced(tensors, devices, buffer_size)\r\nRuntimeError: All tensors must be on devices[0]: 0\r\n\r\n======================================================================\r\nERROR: test_traced_module (jit.test_data_parallel.TestDataParallel)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/opt/pytorch/pytorch/test/jit/test_data_parallel.py\", line 103, in test_traced_module\r\n    replicas = dp.replicate(module, {0, 1})\r\n  File \"/opt/pytorch/pytorch/torch/nn/parallel/replicate.py\", line 91, in replicate\r\n    param_copies = _broadcast_coalesced_reshape(params, devices, detach)\r\n  File \"/opt/pytorch/pytorch/torch/nn/parallel/replicate.py\", line 71, in _broadcast_coalesced_reshape\r\n    tensor_copies = Broadcast.apply(devices, *tensors)\r\n  File \"/opt/pytorch/pytorch/torch/autograd/function.py\", line 506, in apply\r\n    return super().apply(*args, **kwargs)  # type: ignore[misc]\r\n  File \"/opt/pytorch/pytorch/torch/nn/parallel/_functions.py\", line 23, in forward\r\n    outputs = comm.broadcast_coalesced(inputs, ctx.target_gpus)\r\n  File \"/opt/pytorch/pytorch/torch/nn/parallel/comm.py\", line 58, in broadcast_coalesced\r\n    return torch._C._broadcast_coalesced(tensors, devices, buffer_size)\r\nRuntimeError: All tensors must be on devices[0]: 0\r\n\r\n======================================================================\r\nFAIL: test_streams_and_events (jit.test_cuda.TestCUDA)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/opt/pytorch/pytorch/torch/testing/_internal/common_utils.py\", line 1075, in wrapper\r\n    fn(*args, **kwargs)\r\n  File \"/opt/pytorch/pytorch/test/jit/test_cuda.py\", line 220, in test_streams_and_events\r\n    self.assertTrue(is_device_d0)\r\nAssertionError: False is not true\r\n\r\n======================================================================\r\nFAIL: test_script_get_device_cuda (__main__.TestScript)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/opt/pytorch/pytorch/test/test_jit.py\", line 9824, in test_script_get_device_cuda\r\n    self.assertEqual(foo(v), 0)\r\n  File \"/opt/pytorch/pytorch/torch/testing/_internal/common_utils.py\", line 2979, in assertEqual\r\n    raise error_metas[0].to_error(\r\nAssertionError: Scalars are not equal!\r\n\r\nAbsolute difference: 1\r\nRelative difference: inf\r\n\r\n----------------------------------------------------------------------\r\nRan 2676 tests in 159.745s\r\n\r\nFAILED (failures=2, errors=5, skipped=67, expected failures=10)\r\n```\n\n### Versions\n\nmaster\n\ncc @EikanWang @jgong5 @wenzhe-nrv @sanchitintel",
        "closed_by": {
            "login": "pytorchmergebot",
            "id": 97764156,
            "node_id": "U_kgDOBdPDPA",
            "avatar_url": "https://avatars.githubusercontent.com/u/97764156?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pytorchmergebot",
            "html_url": "https://github.com/pytorchmergebot",
            "followers_url": "https://api.github.com/users/pytorchmergebot/followers",
            "following_url": "https://api.github.com/users/pytorchmergebot/following{/other_user}",
            "gists_url": "https://api.github.com/users/pytorchmergebot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pytorchmergebot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pytorchmergebot/subscriptions",
            "organizations_url": "https://api.github.com/users/pytorchmergebot/orgs",
            "repos_url": "https://api.github.com/users/pytorchmergebot/repos",
            "events_url": "https://api.github.com/users/pytorchmergebot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pytorchmergebot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/95305/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/95305/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/95061",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/95061/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/95061/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/95061/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/95061",
        "id": 1589403849,
        "node_id": "I_kwDOA-j9z85evGDJ",
        "number": 95061,
        "title": "Null pointer dereference in `third_party/flatbuffers/include/flatbuffers/vector.h:158:48`",
        "user": {
            "login": "kobrineli",
            "id": 75036757,
            "node_id": "MDQ6VXNlcjc1MDM2NzU3",
            "avatar_url": "https://avatars.githubusercontent.com/u/75036757?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kobrineli",
            "html_url": "https://github.com/kobrineli",
            "followers_url": "https://api.github.com/users/kobrineli/followers",
            "following_url": "https://api.github.com/users/kobrineli/following{/other_user}",
            "gists_url": "https://api.github.com/users/kobrineli/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kobrineli/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kobrineli/subscriptions",
            "organizations_url": "https://api.github.com/users/kobrineli/orgs",
            "repos_url": "https://api.github.com/users/kobrineli/repos",
            "events_url": "https://api.github.com/users/kobrineli/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kobrineli/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 443484135,
                "node_id": "MDU6TGFiZWw0NDM0ODQxMzU=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/high%20priority",
                "name": "high priority",
                "color": "F22613",
                "default": false,
                "description": null
            },
            {
                "id": 466131885,
                "node_id": "MDU6TGFiZWw0NjYxMzE4ODU=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triage%20review",
                "name": "triage review",
                "color": "cc317c",
                "default": false,
                "description": ""
            },
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-02-17T14:01:26Z",
        "updated_at": "2023-05-24T21:16:28Z",
        "closed_at": "2023-05-24T21:16:28Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hi! We've been fuzzing pytorch using [oss-sydr-fuzz](https://github.com/ispras/oss-sydr-fuzz) and found a null pointer dereference in `third_party/flatbuffers/include/flatbuffers/vector.h:158:48`.\r\n\r\n### How to reproduce the error\r\n\r\n1. Build docker container from [here](https://github.com/ispras/oss-sydr-fuzz/tree/master/projects/pytorch-py)\r\n\r\n        sudo docker build -t oss-sydr-fuzz-pytorch-py .\r\n\r\n2. Run docker container\r\n\r\n        sudo docker run --rm -v `pwd`:/fuzz -it oss-sydr-fuzz-pytorch-py /bin/bash\r\n\r\n3. Run `/load_fuzz.py` target with [input](https://github.com/pytorch/pytorch/files/10767469/crash-7e8ffd314223be96b43ca246d3d3481702869455.txt)\r\n\r\n        LD_PRELOAD=/usr/local/lib/python3.8/dist-packages/asan_with_fuzzer.so /load_fuzz.py crash-7e8ffd314223be96b43ca246d3d3481702869455.txt\r\n\r\n4. You will see something like this\r\n\r\n        AddressSanitizer:DEADLYSIGNAL\r\n        =================================================================\r\n        ==82629==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x7fd667df9101 bp 0x7fffddaab470 sp 0x7fffddaab1e0 T0)\r\n        ==82629==The signal is caused by a READ memory access.\r\n        ==82629==Hint: address points to the zero page.\r\n            #0 0x7fd667df9101 in flatbuffers::Vector<flatbuffers::Offset<torch::jit::mobile::serialization::IValue> >::size() const /pytorch/third_party/flatbuffers/include/flatbuffers/vector.h:158:48\r\n            #1 0x7fd667df9101 in torch::jit::(anonymous namespace)::FlatbufferLoader::parseModule(torch::jit::mobile::serialization::Module*) /pytorch/torch/csrc/jit/mobile/flatbuffer_loader.cpp:293:32\r\n            #2 0x7fd667dfe106 in torch::jit::parse_and_initialize_mobile_module_for_jit(void*, unsigned long, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&, std::vector<c10::IValue, std::allocator<c10::IValue> >&, c10::optional<c10::Device>, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >*) /pytorch/torch/csrc/jit/mobile/flatbuffer_loader.cpp:797:29\r\n            #3 0x7fd668c44d4c in torch::jit::parse_and_initialize_jit_module(std::shared_ptr<char>, unsigned long, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&, c10::optional<c10::Device>) /pytorch/torch/csrc/jit/serialization/import.cpp:342:28\r\n            #4 0x7fd668c5283c in torch::jit::_load_jit_module_from_bytes(std::shared_ptr<char>, unsigned long, std::shared_ptr<torch::jit::CompilationUnit>, c10::optional<c10::Device>, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&, bool) /pytorch/torch/csrc/jit/serialization/import.cpp:544:14\r\n            #5 0x7fd668c56b33 in torch::jit::import_ir_module(std::shared_ptr<torch::jit::CompilationUnit>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, c10::optional<c10::Device>, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&, bool, bool) /pytorch/torch/csrc/jit/serialization/import.cpp:440:10\r\n            #6 0x7fd67b9e7306 in torch::jit::initJitScriptBindings(_object*)::$_83::operator()(std::shared_ptr<torch::jit::CompilationUnit>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, pybind11::object, pybind11::dict const&, bool) const /pytorch/torch/csrc/jit/python/script_init.cpp:1807:20\r\n            #7 0x7fd67b9e7306 in torch::jit::Module pybind11::detail::argument_loader<std::shared_ptr<torch::jit::CompilationUnit>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, pybind11::object, pybind11::dict const&, bool>::call_impl<torch::jit::Module, torch::jit::initJitScriptBindings(_object*)::$_83&, 0ul, 1ul, 2ul, 3ul, 4ul, pybind11::detail::void_type>(torch::jit::initJitScriptBindings(_object*)::$_83&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul, 4ul>, pybind11::detail::void_type&&) && /pytorch/cmake/../third_party/pybind11/include/pybind11/cast.h:1439:16\r\n            #8 0x7fd67b9e7306 in std::enable_if<!(std::is_void<torch::jit::Module>::value), torch::jit::Module>::type pybind11::detail::argument_loader<std::shared_ptr<torch::jit::CompilationUnit>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, pybind11::object, pybind11::dict const&, bool>::call<torch::jit::Module, pybind11::detail::void_type, torch::jit::initJitScriptBindings(_object*)::$_83&>(torch::jit::initJitScriptBindings(_object*)::$_83&) && /pytorch/cmake/../third_party/pybind11/include/pybind11/cast.h:1407:42\r\n            #9 0x7fd67b9e7306 in void pybind11::cpp_function::initialize<torch::jit::initJitScriptBindings(_object*)::$_83, torch::jit::Module, std::shared_ptr<torch::jit::CompilationUnit>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, pybind11::object, pybind11::dict const&, bool, pybind11::name, pybind11::scope, pybind11::sibling>(torch::jit::initJitScriptBindings(_object*)::$_83&&, torch::jit::Module (*)(std::shared_ptr<torch::jit::CompilationUnit>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, pybind11::object, pybind11::dict const&, bool), pybind11::name const&, pybind11::scope const&, pybind11::sibling const&)::'lambda'(pybind11::detail::function_call&)::operator()(pybind11::detail::function_call&) const /pytorch/cmake/../third_party/pybind11/include/pybind11/pybind11.h:249:69\r\n            #10 0x7fd67b9e7306 in void pybind11::cpp_function::initialize<torch::jit::initJitScriptBindings(_object*)::$_83, torch::jit::Module, std::shared_ptr<torch::jit::CompilationUnit>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, pybind11::object, pybind11::dict const&, bool, pybind11::name, pybind11::scope, pybind11::sibling>(torch::jit::initJitScriptBindings(_object*)::$_83&&, torch::jit::Module (*)(std::shared_ptr<torch::jit::CompilationUnit>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, pybind11::object, pybind11::dict const&, bool), pybind11::name const&, pybind11::scope const&, pybind11::sibling const&)::'lambda'(pybind11::detail::function_call&)::__invoke(pybind11::detail::function_call&) /pytorch/cmake/../third_party/pybind11/include/pybind11/pybind11.h:224:21\r\n        \r\n        ...\r\n        \r\n        SUMMARY: AddressSanitizer: SEGV /pytorch/third_party/flatbuffers/include/flatbuffers/vector.h:158:48 in flatbuffers::Vector<flatbuffers::Offset<torch::jit::mobile::serialization::IValue> >::size() const\r\n        ==82629==ABORTING\r\n\r\n\r\n\r\n### Versions\r\n\r\n- OS: ubuntu 20.04\r\n- pytorch version: 49444c3e546bf240bed24a101e747422d1f8a0ee\n\ncc @ezyang @gchanan @zou3519 @EikanWang @jgong5 @wenzhe-nrv @sanchitintel",
        "closed_by": {
            "login": "pytorchmergebot",
            "id": 97764156,
            "node_id": "U_kgDOBdPDPA",
            "avatar_url": "https://avatars.githubusercontent.com/u/97764156?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pytorchmergebot",
            "html_url": "https://github.com/pytorchmergebot",
            "followers_url": "https://api.github.com/users/pytorchmergebot/followers",
            "following_url": "https://api.github.com/users/pytorchmergebot/following{/other_user}",
            "gists_url": "https://api.github.com/users/pytorchmergebot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pytorchmergebot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pytorchmergebot/subscriptions",
            "organizations_url": "https://api.github.com/users/pytorchmergebot/orgs",
            "repos_url": "https://api.github.com/users/pytorchmergebot/repos",
            "events_url": "https://api.github.com/users/pytorchmergebot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pytorchmergebot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/95061/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/95061/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/91483",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/91483/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/91483/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/91483/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/91483",
        "id": 1513341108,
        "node_id": "I_kwDOA-j9z85aM8C0",
        "number": 91483,
        "title": "DISABLED test_stack (test_jit.TestScript)",
        "user": {
            "login": "pytorch-bot[bot]",
            "id": 54816060,
            "node_id": "MDM6Qm90NTQ4MTYwNjA=",
            "avatar_url": "https://avatars.githubusercontent.com/in/40112?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pytorch-bot%5Bbot%5D",
            "html_url": "https://github.com/apps/pytorch-bot",
            "followers_url": "https://api.github.com/users/pytorch-bot%5Bbot%5D/followers",
            "following_url": "https://api.github.com/users/pytorch-bot%5Bbot%5D/following{/other_user}",
            "gists_url": "https://api.github.com/users/pytorch-bot%5Bbot%5D/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pytorch-bot%5Bbot%5D/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pytorch-bot%5Bbot%5D/subscriptions",
            "organizations_url": "https://api.github.com/users/pytorch-bot%5Bbot%5D/orgs",
            "repos_url": "https://api.github.com/users/pytorch-bot%5Bbot%5D/repos",
            "events_url": "https://api.github.com/users/pytorch-bot%5Bbot%5D/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pytorch-bot%5Bbot%5D/received_events",
            "type": "Bot",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1301397902,
                "node_id": "MDU6TGFiZWwxMzAxMzk3OTAy",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20flaky-tests",
                "name": "module: flaky-tests",
                "color": "f7e101",
                "default": false,
                "description": "Problem is a flaky test in CI"
            },
            {
                "id": 1679533716,
                "node_id": "MDU6TGFiZWwxNjc5NTMzNzE2",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/skipped",
                "name": "skipped",
                "color": "bfdadc",
                "default": false,
                "description": "Denotes a (flaky) test currently skipped in CI."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2022-12-29T03:39:43Z",
        "updated_at": "2023-03-07T04:21:26Z",
        "closed_at": "2023-03-07T04:21:26Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Platforms: linux\n\nThis test was disabled because it is failing in CI. See [recent examples](https://hud.pytorch.org/failure/test_stack) and the most recent trunk [workflow logs](https://github.com/pytorch/pytorch/runs/10335682113).\n\nOver the past 72 hours, it has flakily failed in 2 workflow(s).\n\n**Debugging instructions (after clicking on the recent samples link):**\nTo find relevant log snippets:\n1. Click on the workflow logs linked above\n2. Grep for `test_stack`\n\n\ncc @EikanWang @jgong5 @wenzhe-nrv @sanchitintel",
        "closed_by": {
            "login": "pytorchmergebot",
            "id": 97764156,
            "node_id": "U_kgDOBdPDPA",
            "avatar_url": "https://avatars.githubusercontent.com/u/97764156?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pytorchmergebot",
            "html_url": "https://github.com/pytorchmergebot",
            "followers_url": "https://api.github.com/users/pytorchmergebot/followers",
            "following_url": "https://api.github.com/users/pytorchmergebot/following{/other_user}",
            "gists_url": "https://api.github.com/users/pytorchmergebot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pytorchmergebot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pytorchmergebot/subscriptions",
            "organizations_url": "https://api.github.com/users/pytorchmergebot/orgs",
            "repos_url": "https://api.github.com/users/pytorchmergebot/repos",
            "events_url": "https://api.github.com/users/pytorchmergebot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pytorchmergebot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/91483/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/91483/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/91351",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/91351/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/91351/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/91351/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/91351",
        "id": 1508957355,
        "node_id": "I_kwDOA-j9z85Z8Nyr",
        "number": 91351,
        "title": "RNN/LSTM are not being correctly traced with JIT/ONNX (with a fix)",
        "user": {
            "login": "borisfom",
            "id": 14189615,
            "node_id": "MDQ6VXNlcjE0MTg5NjE1",
            "avatar_url": "https://avatars.githubusercontent.com/u/14189615?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/borisfom",
            "html_url": "https://github.com/borisfom",
            "followers_url": "https://api.github.com/users/borisfom/followers",
            "following_url": "https://api.github.com/users/borisfom/following{/other_user}",
            "gists_url": "https://api.github.com/users/borisfom/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/borisfom/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/borisfom/subscriptions",
            "organizations_url": "https://api.github.com/users/borisfom/orgs",
            "repos_url": "https://api.github.com/users/borisfom/repos",
            "events_url": "https://api.github.com/users/borisfom/events{/privacy}",
            "received_events_url": "https://api.github.com/users/borisfom/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "titaiwangms",
            "id": 18010845,
            "node_id": "MDQ6VXNlcjE4MDEwODQ1",
            "avatar_url": "https://avatars.githubusercontent.com/u/18010845?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/titaiwangms",
            "html_url": "https://github.com/titaiwangms",
            "followers_url": "https://api.github.com/users/titaiwangms/followers",
            "following_url": "https://api.github.com/users/titaiwangms/following{/other_user}",
            "gists_url": "https://api.github.com/users/titaiwangms/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/titaiwangms/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/titaiwangms/subscriptions",
            "organizations_url": "https://api.github.com/users/titaiwangms/orgs",
            "repos_url": "https://api.github.com/users/titaiwangms/repos",
            "events_url": "https://api.github.com/users/titaiwangms/events{/privacy}",
            "received_events_url": "https://api.github.com/users/titaiwangms/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "titaiwangms",
                "id": 18010845,
                "node_id": "MDQ6VXNlcjE4MDEwODQ1",
                "avatar_url": "https://avatars.githubusercontent.com/u/18010845?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/titaiwangms",
                "html_url": "https://github.com/titaiwangms",
                "followers_url": "https://api.github.com/users/titaiwangms/followers",
                "following_url": "https://api.github.com/users/titaiwangms/following{/other_user}",
                "gists_url": "https://api.github.com/users/titaiwangms/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/titaiwangms/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/titaiwangms/subscriptions",
                "organizations_url": "https://api.github.com/users/titaiwangms/orgs",
                "repos_url": "https://api.github.com/users/titaiwangms/repos",
                "events_url": "https://api.github.com/users/titaiwangms/events{/privacy}",
                "received_events_url": "https://api.github.com/users/titaiwangms/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 5,
        "created_at": "2022-12-23T06:35:41Z",
        "updated_at": "2023-03-15T05:33:49Z",
        "closed_at": "2023-03-15T05:33:49Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### \ud83d\udc1b Describe the bug\r\n\r\nCurrently, RNN/LSTM networks are not being correctly JIT-traced because of a few int() casts that break the trace. Here is a patch that fixes that (line numbers may differ, I did that against NVIDIA 'upstream' fork): \r\n```\r\ndiff --git a/torch/nn/modules/rnn.py b/torch/nn/modules/rnn.py\r\nindex f94728653b..2320fc1f15 100644\r\n@@ -731,7 +731,6 @@ class LSTM(RNNBase):\r\n         if isinstance(orig_input, PackedSequence):\r\n             input, batch_sizes, sorted_indices, unsorted_indices = input\r\n             max_batch_size = batch_sizes[0]\r\n-            max_batch_size = int(max_batch_size)\r\n         else:\r\n             batch_sizes = None\r\n             assert (input.dim() in (2, 3)), f\"LSTM: Expected input to be 2-D or 3-D but received {input.dim()}-D tensor\"\r\n@@ -739,7 +738,7 @@ class LSTM(RNNBase):\r\n             batch_dim = 0 if self.batch_first else 1\r\n             if not is_batched:\r\n                 input = input.unsqueeze(batch_dim)\r\n-            max_batch_size = input.size(0) if self.batch_first else input.size(1)\r\n+            max_batch_size = torch.as_tensor(input.size(0) if self.batch_first else input.size(1))\r\n             sorted_indices = None  \r\n             unsorted_indices = None\r\n \r\n@@ -922,7 +921,6 @@ class GRU(RNNBase):\r\n         if isinstance(orig_input, PackedSequence):\r\n             input, batch_sizes, sorted_indices, unsorted_indices = input\r\n             max_batch_size = batch_sizes[0]\r\n-            max_batch_size = int(max_batch_size)\r\n         else:\r\n             batch_sizes = None\r\n             assert (input.dim() in (2, 3)), f\"GRU: Expected input to be 2-D or 3-D but received {input.dim()}-D tensor\"\r\n@@ -939,7 +937,7 @@ class GRU(RNNBase):\r\n                 if hx is not None and hx.dim() != 3:\r\n                     raise RuntimeError(\r\n                         f\"For batched 3-D input, hx should also be 3-D but got {hx.dim()}-D tensor\")\r\n-            max_batch_size = input.size(0) if self.batch_first else input.size(1)\r\n+            max_batch_size = torch.as_tensor(input.size(0) if self.batch_first else input.size(1))\r\n             sorted_indices = None  \r\n             unsorted_indices = None\r\n```\r\n\r\n\r\n### Versions\r\n\r\nCollecting environment information...\r\nPyTorch version: 1.14.0a0+410ce96\r\nIs debug build: False\r\nCUDA used to build PyTorch: 11.8\r\nROCM used to build PyTorch: N/A\r\n\r\nOS: Ubuntu 20.04.5 LTS (x86_64)\r\nGCC version: (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0\r\nClang version: Could not collect\r\nCMake version: version 3.24.1  \r\nLibc version: glibc-2.31\r\n\r\nPython version: 3.8.10 (default, Nov 14 2022, 12:59:47)  [GCC 9.4.0] (64-bit runtime)\r\nPython platform: Linux-5.15.0-46-generic-x86_64-with-glibc2.29\r\nIs CUDA available: True\r\nCUDA runtime version: 11.8.89\r\nGPU models and configuration: GPU 0: NVIDIA RTX A5000\r\nNvidia driver version: 515.65.01\r\ncuDNN version: Probably one of the following:\r\n/usr/lib/x86_64-linux-gnu/libcudnn.so.8.7.0\r\n/usr/lib/x86_64-linux-gnu/libcudnn_adv_infer.so.8.7.0\r\n/usr/lib/x86_64-linux-gnu/libcudnn_adv_train.so.8.7.0\r\n/usr/lib/x86_64-linux-gnu/libcudnn_cnn_infer.so.8.7.0\r\n/usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8.7.0\r\n/usr/lib/x86_64-linux-gnu/libcudnn_ops_infer.so.8.7.0\r\n/usr/lib/x86_64-linux-gnu/libcudnn_ops_train.so.8.7.0\r\nHIP runtime version: N/A\r\nMIOpen runtime version: N/A\r\nIs XNNPACK available: True\r\n\r\nVersions of relevant libraries:\r\n[pip3] k2==1.23.2.dev20221221+cuda11.8.torch1.14.0a0\r\n[pip3] numpy==1.22.2\r\n[pip3] pytorch-lightning==1.8.6\r\n[pip3] pytorch-quantization==2.1.2\r\n[pip3] torch==1.14.0a0+410ce96\r\n[pip3] torch-tensorrt==1.3.0a0\r\n[pip3] torchaudio==0.14.0\r\n[pip3] torchmetrics==0.11.0\r\n[pip3] torchvision==0.15.0a0\r\n[conda] Could not collect\r\n\r\n\r\ncc @EikanWang @jgong5 @wenzhe-nrv @sanchitintel @mruberry @jbschlosser @walterddr @kshitij12345 @saketh-are",
        "closed_by": {
            "login": "pytorchmergebot",
            "id": 97764156,
            "node_id": "U_kgDOBdPDPA",
            "avatar_url": "https://avatars.githubusercontent.com/u/97764156?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pytorchmergebot",
            "html_url": "https://github.com/pytorchmergebot",
            "followers_url": "https://api.github.com/users/pytorchmergebot/followers",
            "following_url": "https://api.github.com/users/pytorchmergebot/following{/other_user}",
            "gists_url": "https://api.github.com/users/pytorchmergebot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pytorchmergebot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pytorchmergebot/subscriptions",
            "organizations_url": "https://api.github.com/users/pytorchmergebot/orgs",
            "repos_url": "https://api.github.com/users/pytorchmergebot/repos",
            "events_url": "https://api.github.com/users/pytorchmergebot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pytorchmergebot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/91351/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/91351/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/88868",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/88868/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/88868/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/88868/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/88868",
        "id": 1444898821,
        "node_id": "I_kwDOA-j9z85WH2gF",
        "number": 88868,
        "title": "`torch.jit.annotations.parse_type_line` is not safe (command injection) even it seems already deprecated.",
        "user": {
            "login": "Lyutoon",
            "id": 57178900,
            "node_id": "MDQ6VXNlcjU3MTc4OTAw",
            "avatar_url": "https://avatars.githubusercontent.com/u/57178900?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Lyutoon",
            "html_url": "https://github.com/Lyutoon",
            "followers_url": "https://api.github.com/users/Lyutoon/followers",
            "following_url": "https://api.github.com/users/Lyutoon/following{/other_user}",
            "gists_url": "https://api.github.com/users/Lyutoon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Lyutoon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Lyutoon/subscriptions",
            "organizations_url": "https://api.github.com/users/Lyutoon/orgs",
            "repos_url": "https://api.github.com/users/Lyutoon/repos",
            "events_url": "https://api.github.com/users/Lyutoon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Lyutoon/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 443484135,
                "node_id": "MDU6TGFiZWw0NDM0ODQxMzU=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/high%20priority",
                "name": "high priority",
                "color": "F22613",
                "default": false,
                "description": null
            },
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            },
            {
                "id": 3804378402,
                "node_id": "LA_kwDOA-j9z87iwjUi",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/topic:%20security",
                "name": "topic: security",
                "color": "3F4E19",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "malfet",
            "id": 2453524,
            "node_id": "MDQ6VXNlcjI0NTM1MjQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2453524?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/malfet",
            "html_url": "https://github.com/malfet",
            "followers_url": "https://api.github.com/users/malfet/followers",
            "following_url": "https://api.github.com/users/malfet/following{/other_user}",
            "gists_url": "https://api.github.com/users/malfet/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/malfet/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/malfet/subscriptions",
            "organizations_url": "https://api.github.com/users/malfet/orgs",
            "repos_url": "https://api.github.com/users/malfet/repos",
            "events_url": "https://api.github.com/users/malfet/events{/privacy}",
            "received_events_url": "https://api.github.com/users/malfet/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "malfet",
                "id": 2453524,
                "node_id": "MDQ6VXNlcjI0NTM1MjQ=",
                "avatar_url": "https://avatars.githubusercontent.com/u/2453524?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/malfet",
                "html_url": "https://github.com/malfet",
                "followers_url": "https://api.github.com/users/malfet/followers",
                "following_url": "https://api.github.com/users/malfet/following{/other_user}",
                "gists_url": "https://api.github.com/users/malfet/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/malfet/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/malfet/subscriptions",
                "organizations_url": "https://api.github.com/users/malfet/orgs",
                "repos_url": "https://api.github.com/users/malfet/repos",
                "events_url": "https://api.github.com/users/malfet/events{/privacy}",
                "received_events_url": "https://api.github.com/users/malfet/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": {
            "url": "https://api.github.com/repos/pytorch/pytorch/milestones/34",
            "html_url": "https://github.com/pytorch/pytorch/milestone/34",
            "labels_url": "https://api.github.com/repos/pytorch/pytorch/milestones/34/labels",
            "id": 8606822,
            "node_id": "MI_kwDOA-j9z84Ag1Rm",
            "number": 34,
            "title": "1.13.1",
            "description": null,
            "creator": {
                "login": "malfet",
                "id": 2453524,
                "node_id": "MDQ6VXNlcjI0NTM1MjQ=",
                "avatar_url": "https://avatars.githubusercontent.com/u/2453524?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/malfet",
                "html_url": "https://github.com/malfet",
                "followers_url": "https://api.github.com/users/malfet/followers",
                "following_url": "https://api.github.com/users/malfet/following{/other_user}",
                "gists_url": "https://api.github.com/users/malfet/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/malfet/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/malfet/subscriptions",
                "organizations_url": "https://api.github.com/users/malfet/orgs",
                "repos_url": "https://api.github.com/users/malfet/repos",
                "events_url": "https://api.github.com/users/malfet/events{/privacy}",
                "received_events_url": "https://api.github.com/users/malfet/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 19,
            "state": "closed",
            "created_at": "2022-11-02T02:59:41Z",
            "updated_at": "2022-12-21T17:06:38Z",
            "due_on": null,
            "closed_at": "2022-12-19T23:00:02Z"
        },
        "comments": 16,
        "created_at": "2022-11-11T04:09:54Z",
        "updated_at": "2022-12-16T21:06:00Z",
        "closed_at": "2022-11-17T22:05:35Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### \ud83d\udc1b Describe the bug\n\nIn `torch.jit.annotations`, it looks like there are some functions that are deprecated, but still retain code, which may lead to some backdoors, especially since some of these functions still use eval while implementing. \r\nBut now I'm not sure if there are some features (jit decorator) in some version of pytorch are still using this function `parse_type_line` or `get_signature` which calls `parse_type_line`, if so, it can cause RCE, if not, maybe someone can also leave a backdoor by calling this function while writing code and share it to the people.\r\n```\r\nimport torch\r\n\r\ntorch.jit.annotations.parse_type_line('# type: __import__(\"os\").system(\"ls\") -> 234', None, 1)\r\n```\r\n\n\n### Versions\n\nmaster\n\ncc @ezyang @gchanan @zou3519 @EikanWang @jgong5 @wenzhe-nrv @sanchitintel",
        "closed_by": {
            "login": "pytorchmergebot",
            "id": 97764156,
            "node_id": "U_kgDOBdPDPA",
            "avatar_url": "https://avatars.githubusercontent.com/u/97764156?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pytorchmergebot",
            "html_url": "https://github.com/pytorchmergebot",
            "followers_url": "https://api.github.com/users/pytorchmergebot/followers",
            "following_url": "https://api.github.com/users/pytorchmergebot/following{/other_user}",
            "gists_url": "https://api.github.com/users/pytorchmergebot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pytorchmergebot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pytorchmergebot/subscriptions",
            "organizations_url": "https://api.github.com/users/pytorchmergebot/orgs",
            "repos_url": "https://api.github.com/users/pytorchmergebot/repos",
            "events_url": "https://api.github.com/users/pytorchmergebot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pytorchmergebot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/88868/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/88868/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/88820",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/88820/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/88820/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/88820/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/88820",
        "id": 1444244671,
        "node_id": "I_kwDOA-j9z85WFWy_",
        "number": 88820,
        "title": "RuntimeError: supported devices include CPU, CUDA and HPU, however got MPS when mapping to MPS in `torch.jit.load`",
        "user": {
            "login": "carbocation",
            "id": 218804,
            "node_id": "MDQ6VXNlcjIxODgwNA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/218804?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/carbocation",
            "html_url": "https://github.com/carbocation",
            "followers_url": "https://api.github.com/users/carbocation/followers",
            "following_url": "https://api.github.com/users/carbocation/following{/other_user}",
            "gists_url": "https://api.github.com/users/carbocation/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/carbocation/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/carbocation/subscriptions",
            "organizations_url": "https://api.github.com/users/carbocation/orgs",
            "repos_url": "https://api.github.com/users/carbocation/repos",
            "events_url": "https://api.github.com/users/carbocation/events{/privacy}",
            "received_events_url": "https://api.github.com/users/carbocation/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 4121057428,
                "node_id": "LA_kwDOA-j9z871oliU",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20mps",
                "name": "module: mps",
                "color": "f7e101",
                "default": false,
                "description": "Related to Apple Metal Performance Shaders framework"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2022-11-10T16:54:53Z",
        "updated_at": "2023-05-24T20:36:06Z",
        "closed_at": "2023-05-24T20:36:06Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### \ud83d\udc1b Describe the bug\n\nMapping a traced model to the Apple Silicon MPS device during loading (`torch.jit.load(..., map_location=torch.device(\"mps\"))`) does not appear to be implemented as of pytorch version `1.14.0.dev20221104`.\r\n\r\n```py\r\nFile \"/opt/homebrew/lib/python3.10/site-packages/torch/jit/_serialization.py\", line 162, in load\r\n    cpp_module = torch._C.import_ir_module(cu, str(f), map_location, _extra_files)\r\nRuntimeError: supported devices include CPU, CUDA and HPU, however got MPS\r\n```\n\n### Versions\n\n```plaintext\r\nCollecting environment information...\r\nPyTorch version: 1.14.0.dev20221104\r\nIs debug build: False\r\nCUDA used to build PyTorch: None\r\nROCM used to build PyTorch: N/A\r\n\r\nOS: macOS 13.0 (arm64)\r\nGCC version: Could not collect\r\nClang version: Could not collect\r\nCMake version: version 3.24.2\r\nLibc version: N/A\r\n\r\nPython version: 3.10.8 (main, Oct 13 2022, 09:48:40) [Clang 14.0.0 (clang-1400.0.29.102)] (64-bit runtime)\r\nPython platform: macOS-13.0-arm64-arm-64bit\r\nIs CUDA available: False\r\nCUDA runtime version: No CUDA\r\nCUDA_MODULE_LOADING set to: N/A\r\nGPU models and configuration: No CUDA\r\nNvidia driver version: No CUDA\r\ncuDNN version: No CUDA\r\nHIP runtime version: N/A\r\nMIOpen runtime version: N/A\r\nIs XNNPACK available: True\r\n\r\nVersions of relevant libraries:\r\n[pip3] condor-pytorch==1.1.0\r\n[pip3] numpy==1.23.2\r\n[pip3] torch==1.14.0.dev20221104\r\n[pip3] torch-lr-finder==0.2.1\r\n[pip3] torchaudio==0.14.0.dev20221104\r\n[pip3] torchmetrics==0.10.0\r\n[pip3] torchvision==0.15.0.dev20221104\r\n[conda] nomkl                     3.0                           0  \r\n[conda] numpy                     1.21.5           py39h42add53_3  \r\n[conda] numpy-base                1.21.5           py39hadd41eb_3  \r\n[conda] numpydoc                  1.2                pyhd3eb1b0_0  \r\n[conda] pytorch                   1.13.0.dev20220826         py3.9_0    pytorch-nightly\r\n[conda] torchaudio                0.13.0.dev20220826        py39_cpu    pytorch-nightly\r\n[conda] torchvision               0.14.0.dev20220826        py39_cpu    pytorch-nightly\r\n```\n\ncc @EikanWang @jgong5 @wenzhe-nrv @sanchitintel @kulinseth @albanD @malfet @DenisVieriu97 @razarmehr @abhudev",
        "closed_by": {
            "login": "kulinseth",
            "id": 453004,
            "node_id": "MDQ6VXNlcjQ1MzAwNA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/453004?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kulinseth",
            "html_url": "https://github.com/kulinseth",
            "followers_url": "https://api.github.com/users/kulinseth/followers",
            "following_url": "https://api.github.com/users/kulinseth/following{/other_user}",
            "gists_url": "https://api.github.com/users/kulinseth/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kulinseth/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kulinseth/subscriptions",
            "organizations_url": "https://api.github.com/users/kulinseth/orgs",
            "repos_url": "https://api.github.com/users/kulinseth/repos",
            "events_url": "https://api.github.com/users/kulinseth/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kulinseth/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/88820/reactions",
            "total_count": 3,
            "+1": 3,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/88820/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/86556",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/86556/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/86556/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/86556/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/86556",
        "id": 1402307286,
        "node_id": "I_kwDOA-j9z85TlYLW",
        "number": 86556,
        "title": "`optimize_for_inference` leads to wrong results for model with conv2d, max and clip",
        "user": {
            "login": "Co1lin",
            "id": 17642707,
            "node_id": "MDQ6VXNlcjE3NjQyNzA3",
            "avatar_url": "https://avatars.githubusercontent.com/u/17642707?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Co1lin",
            "html_url": "https://github.com/Co1lin",
            "followers_url": "https://api.github.com/users/Co1lin/followers",
            "following_url": "https://api.github.com/users/Co1lin/following{/other_user}",
            "gists_url": "https://api.github.com/users/Co1lin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Co1lin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Co1lin/subscriptions",
            "organizations_url": "https://api.github.com/users/Co1lin/orgs",
            "repos_url": "https://api.github.com/users/Co1lin/repos",
            "events_url": "https://api.github.com/users/Co1lin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Co1lin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 466131885,
                "node_id": "MDU6TGFiZWw0NjYxMzE4ODU=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triage%20review",
                "name": "triage review",
                "color": "cc317c",
                "default": false,
                "description": ""
            },
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1031340614,
                "node_id": "MDU6TGFiZWwxMDMxMzQwNjE0",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20quantization",
                "name": "oncall: quantization",
                "color": "f7e101",
                "default": false,
                "description": "Quantization support in PyTorch"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2022-10-09T15:22:28Z",
        "updated_at": "2022-10-15T09:27:45Z",
        "closed_at": "2022-10-13T19:35:45Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### \ud83d\udc1b Describe the bug\r\n\r\nHi! I find that the following model gives wrong results after `optimize_for_inference`. I think there's some issue with the optimization passes.\r\n\r\n```python\r\nimport torch\r\nimport torch.nn as nn\r\n\r\nclass MyModule(nn.Module):\r\n    def __init__(self):\r\n        super().__init__()\r\n        self.conv1 = nn.Conv2d(\r\n            1, 2, kernel_size=(2,4), stride=2, padding=2, dilation=(2,1),\r\n        )\r\n        \r\n    def forward(self, i0):\r\n        x = self.conv1(i0)\r\n        o0 = torch.max(x, i0)\r\n        o1 = torch.clip(x, -1.5, 1.5)\r\n        return o0, o1\r\n\r\n\r\n\r\ninp = {\r\n    'i0': torch.zeros((1,1,1,2), dtype=torch.float32),\r\n}\r\n\r\nmod = MyModule()\r\n\r\nout = mod(**inp)\r\nprint(f'{out = }')\r\n\r\nexported = torch.jit.trace(mod, list(inp.values()))\r\nexported = torch.jit.optimize_for_inference(exported)\r\n\r\neout = exported(**inp) # <-- wrong results here\r\nprint(f'{eout = }')\r\n\r\neqs = []\r\nfor x, y in zip(out, eout):\r\n    eqs.append(torch.allclose(x, y))\r\nprint(eqs)\r\nassert all(eqs)\r\n```\r\n\r\n### Versions\r\n\r\n```python\r\nPyTorch version: 1.12.1+cu116\r\nIs debug build: False\r\nCUDA used to build PyTorch: 11.6\r\nROCM used to build PyTorch: N/A\r\n\r\nOS: Ubuntu 22.04.1 LTS (x86_64)\r\nGCC version: (Ubuntu 11.2.0-19ubuntu1) 11.2.0\r\nClang version: Could not collect\r\nCMake version: version 3.22.1\r\nLibc version: glibc-2.35\r\n\r\nPython version: 3.9.13 (main, Aug 25 2022, 23:26:10)  [GCC 11.2.0] (64-bit runtime)\r\nPython platform: Linux-5.15.0-48-generic-x86_64-with-glibc2.35\r\nIs CUDA available: True\r\nCUDA runtime version: 11.6.124\r\nGPU models and configuration:\r\nGPU 0: NVIDIA GeForce RTX 3090\r\nGPU 1: NVIDIA GeForce RTX 3090\r\nGPU 2: NVIDIA GeForce RTX 3090\r\n\r\nNvidia driver version: 515.65.01\r\ncuDNN version: Could not collect\r\nHIP runtime version: N/A\r\nMIOpen runtime version: N/A\r\nIs XNNPACK available: True\r\n\r\nVersions of relevant libraries:\r\n[pip3] numpy==1.23.3\r\n[pip3] torch==1.12.1+cu116\r\n[pip3] torchaudio==0.12.1+cu116\r\n[pip3] torchvision==0.13.1+cu116\r\n[conda] numpy                     1.23.3                   pypi_0    pypi\r\n[conda] torch                     1.12.1+cu116             pypi_0    pypi\r\n[conda] torchaudio                0.12.1+cu116             pypi_0    pypi\r\n[conda] torchvision               0.13.1+cu116             pypi_0    pypi\r\n```\r\n\r\ncc @jerryzh168 @jianyuh @raghuramank100 @jamesr66a @vkuzo",
        "closed_by": {
            "login": "pytorchmergebot",
            "id": 97764156,
            "node_id": "U_kgDOBdPDPA",
            "avatar_url": "https://avatars.githubusercontent.com/u/97764156?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pytorchmergebot",
            "html_url": "https://github.com/pytorchmergebot",
            "followers_url": "https://api.github.com/users/pytorchmergebot/followers",
            "following_url": "https://api.github.com/users/pytorchmergebot/following{/other_user}",
            "gists_url": "https://api.github.com/users/pytorchmergebot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pytorchmergebot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pytorchmergebot/subscriptions",
            "organizations_url": "https://api.github.com/users/pytorchmergebot/orgs",
            "repos_url": "https://api.github.com/users/pytorchmergebot/repos",
            "events_url": "https://api.github.com/users/pytorchmergebot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pytorchmergebot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/86556/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/86556/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/85506",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/85506/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/85506/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/85506/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/85506",
        "id": 1383054774,
        "node_id": "I_kwDOA-j9z85Sb722",
        "number": 85506,
        "title": "`import torch` fails on Python-3.11 runtime",
        "user": {
            "login": "malfet",
            "id": 2453524,
            "node_id": "MDQ6VXNlcjI0NTM1MjQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2453524?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/malfet",
            "html_url": "https://github.com/malfet",
            "followers_url": "https://api.github.com/users/malfet/followers",
            "following_url": "https://api.github.com/users/malfet/following{/other_user}",
            "gists_url": "https://api.github.com/users/malfet/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/malfet/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/malfet/subscriptions",
            "organizations_url": "https://api.github.com/users/malfet/orgs",
            "repos_url": "https://api.github.com/users/malfet/repos",
            "events_url": "https://api.github.com/users/malfet/events{/privacy}",
            "received_events_url": "https://api.github.com/users/malfet/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            },
            {
                "id": 4081012228,
                "node_id": "LA_kwDOA-j9z87zP04E",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20primTorch",
                "name": "module: primTorch",
                "color": "455561",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": {
            "url": "https://api.github.com/repos/pytorch/pytorch/milestones/35",
            "html_url": "https://github.com/pytorch/pytorch/milestone/35",
            "labels_url": "https://api.github.com/repos/pytorch/pytorch/milestones/35/labels",
            "id": 8779735,
            "node_id": "MI_kwDOA-j9z84AhffX",
            "number": 35,
            "title": "Python 3.11",
            "description": "These issues / pull requests encompass bugs / features that block support for Python 3.11 in PyTorch",
            "creator": {
                "login": "seemethere",
                "id": 1700823,
                "node_id": "MDQ6VXNlcjE3MDA4MjM=",
                "avatar_url": "https://avatars.githubusercontent.com/u/1700823?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/seemethere",
                "html_url": "https://github.com/seemethere",
                "followers_url": "https://api.github.com/users/seemethere/followers",
                "following_url": "https://api.github.com/users/seemethere/following{/other_user}",
                "gists_url": "https://api.github.com/users/seemethere/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/seemethere/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seemethere/subscriptions",
                "organizations_url": "https://api.github.com/users/seemethere/orgs",
                "repos_url": "https://api.github.com/users/seemethere/repos",
                "events_url": "https://api.github.com/users/seemethere/events{/privacy}",
                "received_events_url": "https://api.github.com/users/seemethere/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 5,
            "closed_issues": 29,
            "state": "open",
            "created_at": "2022-12-19T23:01:09Z",
            "updated_at": "2023-05-18T22:00:39Z",
            "due_on": null,
            "closed_at": null
        },
        "comments": 3,
        "created_at": "2022-09-22T21:48:59Z",
        "updated_at": "2023-01-11T22:26:52Z",
        "closed_at": "2023-01-11T22:26:51Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### \ud83d\udc1b Describe the bug\n\n```python\r\nPython 3.11.0b1 (main, Jul 28 2022, 09:24:40) [GCC 7.3.1 20180303 (Red Hat 7.3.1-5)] on linux\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> from functorch.dim import dims\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/root/pytorch/functorch/__init__.py\", line 6, in <module>\r\n    import torch\r\n    ^^^^^^^^^^^^\r\n  File \"/root/pytorch/torch/__init__.py\", line 917, in <module>\r\n    os.environ.get('PYTORCH_DISABLE_LIBRARY', \"0\") == \"0\"):\r\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/root/pytorch/torch/_decomp/decompositions_for_jvp.py\", line 287, in <module>\r\n    _register_jit_decomposition_for_jvp(torch.ops.aten.nll_loss_backward.default)\r\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/root/pytorch/torch/_decomp/decompositions_for_jvp.py\", line 83, in _register_jit_decomposition_for_jvp\r\n    graph = torch.jit.script(decomp_fn).graph\r\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/root/pytorch/torch/jit/_script.py\", line 1343, in script\r\n    fn = torch._C._jit_script_compile(\r\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/root/pytorch/torch/jit/annotations.py\", line 386, in try_ann_to_type\r\n    scripted_class = torch.jit._script._recursive_compile_class(ann, loc)\r\n                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/root/pytorch/torch/jit/_script.py\", line 1465, in _recursive_compile_class\r\n    rcb = _jit_internal.createResolutionCallbackForClassMethods(obj)\r\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/root/pytorch/torch/_jit_internal.py\", line 454, in createResolutionCallbackForClassMethods\r\n    captures.update(get_closure(fn))\r\n                    ^^^^^^^^^^^^^^^\r\n  File \"/root/pytorch/torch/_jit_internal.py\", line 206, in get_closure\r\n    captures.update(fn.__globals__)\r\n                    ^^^^^^^^^^^^^^\r\nAttributeError: 'builtin_function_or_method' object has no attribute '__globals__'\r\n>>> \r\n```\r\n\r\nThis is probably caused by https://github.com/pytorch/pytorch/pull/84976 but py-3.11 builds are broken since Sep 12th so it was caught on time\n\n### Versions\n\nnightly\n\ncc @ezyang @mruberry @ngimel @Lezcano @fdrocha",
        "closed_by": {
            "login": "albanD",
            "id": 6359743,
            "node_id": "MDQ6VXNlcjYzNTk3NDM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6359743?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/albanD",
            "html_url": "https://github.com/albanD",
            "followers_url": "https://api.github.com/users/albanD/followers",
            "following_url": "https://api.github.com/users/albanD/following{/other_user}",
            "gists_url": "https://api.github.com/users/albanD/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/albanD/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/albanD/subscriptions",
            "organizations_url": "https://api.github.com/users/albanD/orgs",
            "repos_url": "https://api.github.com/users/albanD/repos",
            "events_url": "https://api.github.com/users/albanD/events{/privacy}",
            "received_events_url": "https://api.github.com/users/albanD/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/85506/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/85506/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/84873",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/84873/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/84873/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/84873/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/84873",
        "id": 1370316214,
        "node_id": "I_kwDOA-j9z85RrV22",
        "number": 84873,
        "title": "torch.jit.freeze assumes forward method exists",
        "user": {
            "login": "florensacc",
            "id": 12584127,
            "node_id": "MDQ6VXNlcjEyNTg0MTI3",
            "avatar_url": "https://avatars.githubusercontent.com/u/12584127?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/florensacc",
            "html_url": "https://github.com/florensacc",
            "followers_url": "https://api.github.com/users/florensacc/followers",
            "following_url": "https://api.github.com/users/florensacc/following{/other_user}",
            "gists_url": "https://api.github.com/users/florensacc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/florensacc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/florensacc/subscriptions",
            "organizations_url": "https://api.github.com/users/florensacc/orgs",
            "repos_url": "https://api.github.com/users/florensacc/repos",
            "events_url": "https://api.github.com/users/florensacc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/florensacc/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "davidberard98",
            "id": 5067123,
            "node_id": "MDQ6VXNlcjUwNjcxMjM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5067123?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidberard98",
            "html_url": "https://github.com/davidberard98",
            "followers_url": "https://api.github.com/users/davidberard98/followers",
            "following_url": "https://api.github.com/users/davidberard98/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidberard98/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidberard98/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidberard98/subscriptions",
            "organizations_url": "https://api.github.com/users/davidberard98/orgs",
            "repos_url": "https://api.github.com/users/davidberard98/repos",
            "events_url": "https://api.github.com/users/davidberard98/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidberard98/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "davidberard98",
                "id": 5067123,
                "node_id": "MDQ6VXNlcjUwNjcxMjM=",
                "avatar_url": "https://avatars.githubusercontent.com/u/5067123?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidberard98",
                "html_url": "https://github.com/davidberard98",
                "followers_url": "https://api.github.com/users/davidberard98/followers",
                "following_url": "https://api.github.com/users/davidberard98/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidberard98/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidberard98/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidberard98/subscriptions",
                "organizations_url": "https://api.github.com/users/davidberard98/orgs",
                "repos_url": "https://api.github.com/users/davidberard98/repos",
                "events_url": "https://api.github.com/users/davidberard98/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidberard98/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2022-09-12T18:05:26Z",
        "updated_at": "2022-09-28T18:41:59Z",
        "closed_at": "2022-09-28T18:41:59Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### \ud83d\udc1b Describe the bug\n\n`torch.jit.freeze` allows to pass `preserved_attrs=[\"f\"]` to specify what methods/attributes to preserve when freezing. But there is no way of PREVENTING it from freezing the `forward` method, which will then error out if the module being frozen doesn't have such method. Lifting this assumption should be easy to do, and as an interface, if `preserved_attrs` are passed there should be no assumptions about any method's name beyond the ones specified by the user.\r\n\r\n```\r\nclass Model(nn.Module):\r\n    def __init__(self):\r\n        super().__init__()\r\n    \r\n    def f(self, x):\r\n        return x\r\n    \r\nmodule = Model()\r\ntraced_module = torch.jit.trace_module(module, {\"f\": torch.randn(3)})\r\ntorch.jit.freeze(traced_module.eval(), preserved_attrs=[\"f\"])\r\n```\r\nWill throw:\r\n```\r\n---------------------------------------------------------------------------\r\nRuntimeError                              Traceback (most recent call last)\r\n<ipython-input-51-b5b4f0d5a0f4> in <module>\r\n      9 x = torch.randn(3)\r\n     10 traced_module = torch.jit.trace_module(module, {\"f\": torch.randn(3)})\r\n---> 11 torch.jit.freeze(traced_module.eval(), preserved_attrs=[\"f\"])\r\n\r\n/opt/conda/envs/lab42/lib/python3.7/site-packages/torch/jit/_freeze.py in freeze(mod, preserved_attrs, optimize_numerics)\r\n    117 \r\n    118     preserved_methods = [x for x in preserved_attrs if mod._c._has_method(x)]\r\n--> 119     run_frozen_optimizations(out, optimize_numerics, preserved_methods)\r\n    120 \r\n    121     return out\r\n\r\n/opt/conda/envs/lab42/lib/python3.7/site-packages/torch/jit/_freeze.py in run_frozen_optimizations(mod, optimize_numerics, preserved_methods)\r\n    165 \r\n    166     \"\"\"\r\n--> 167     torch._C._jit_pass_optimize_frozen_graph(mod.graph, optimize_numerics)\r\n    168 \r\n    169     if preserved_methods is None:\r\n\r\n/opt/conda/envs/lab42/lib/python3.7/site-packages/torch/jit/_script.py in graph(self)\r\n    650             ``forward`` method. See :ref:`interpreting-graphs` for details.\r\n    651             \"\"\"\r\n--> 652             return self._c._get_method(\"forward\").graph\r\n    653 \r\n    654         @property\r\n\r\nRuntimeError: Method 'forward' is not defined.\r\n```\r\nThis is not the expected behavior, and the examples described in [this closed issue](https://github.com/pytorch/pytorch/issues/33258) would actually also break (because there's no `forward` method).\n\n### Versions\n\n```\r\nPyTorch version: 1.11.0+cu115\r\nIs debug build: False\r\nCUDA used to build PyTorch: 11.5\r\nROCM used to build PyTorch: N/A\r\n\r\nOS: Ubuntu 18.04.6 LTS (x86_64)\r\nGCC version: (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0\r\nClang version: 6.0.0-1ubuntu2 (tags/RELEASE_600/final)\r\nCMake version: version 3.20.1\r\nLibc version: glibc-2.17\r\n\r\nPython version: 3.7.13 (default, Mar 29 2022, 02:18:16)  [GCC 7.5.0] (64-bit runtime)\r\nPython platform: Linux-5.4.0-120-generic-x86_64-with-debian-buster-sid\r\nIs CUDA available: True\r\nCUDA runtime version: 11.1.105\r\nGPU models and configuration:\r\nGPU 0: NVIDIA RTX A5000\r\nGPU 1: NVIDIA RTX A5000\r\nGPU 2: NVIDIA RTX A5000\r\nGPU 3: NVIDIA RTX A5000\r\nGPU 4: NVIDIA RTX A5000\r\nGPU 5: NVIDIA RTX A5000\r\nGPU 6: NVIDIA RTX A5000\r\nGPU 7: NVIDIA RTX A5000\r\n\r\nNvidia driver version: 510.73.08\r\ncuDNN version: Probably one of the following:\r\n/usr/lib/x86_64-linux-gnu/libcudnn.so.8.4.0\r\n/usr/lib/x86_64-linux-gnu/libcudnn_adv_infer.so.8.4.0\r\n/usr/lib/x86_64-linux-gnu/libcudnn_adv_train.so.8.4.0\r\n/usr/lib/x86_64-linux-gnu/libcudnn_cnn_infer.so.8.4.0\r\n/usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8.4.0\r\n/usr/lib/x86_64-linux-gnu/libcudnn_ops_infer.so.8.4.0\r\n/usr/lib/x86_64-linux-gnu/libcudnn_ops_train.so.8.4.0\r\nHIP runtime version: N/A\r\nMIOpen runtime version: N/A\r\nIs XNNPACK available: True\r\n\r\nVersions of relevant libraries:\r\n[pip3] efficientnet-pytorch==0.7.1\r\n[pip3] msgpack-numpy==0.4.4.3\r\n[pip3] mypy==0.812\r\n[pip3] mypy-extensions==0.4.3\r\n[pip3] mypy-protobuf==2.4\r\n[pip3] numpy==1.21.0\r\n[pip3] numpy-quaternion==2020.11.2.17.0.49\r\n[pip3] numpy-stl==2.10.1\r\n[pip3] torch==1.11.0+cu115\r\n[pip3] torchvision==0.12.0+cu115\r\n[conda] efficientnet-pytorch      0.7.1                    pypi_0    pypi\r\n[conda] mkl                       2021.4.0                 pypi_0    pypi\r\n[conda] mkl-fft                   1.3.0                    pypi_0    pypi\r\n[conda] mkl-service               2.3.0                    pypi_0    pypi\r\n[conda] msgpack-numpy             0.4.4.3                  pypi_0    pypi\r\n[conda] numpy                     1.21.0           py37h038b26d_0    conda-forge\r\n[conda] numpy-quaternion          2020.11.2.17.0.49          pypi_0    pypi\r\n[conda] numpy-stl                 2.10.1                   pypi_0    pypi\r\n[conda] torch                     1.11.0+cu115             pypi_0    pypi\r\n[conda] torchvision               0.12.0+cu115             pypi_0    pypi\r\n```",
        "closed_by": {
            "login": "davidberard98",
            "id": 5067123,
            "node_id": "MDQ6VXNlcjUwNjcxMjM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5067123?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidberard98",
            "html_url": "https://github.com/davidberard98",
            "followers_url": "https://api.github.com/users/davidberard98/followers",
            "following_url": "https://api.github.com/users/davidberard98/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidberard98/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidberard98/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidberard98/subscriptions",
            "organizations_url": "https://api.github.com/users/davidberard98/orgs",
            "repos_url": "https://api.github.com/users/davidberard98/repos",
            "events_url": "https://api.github.com/users/davidberard98/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidberard98/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/84873/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/84873/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/84365",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/84365/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/84365/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/84365/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/84365",
        "id": 1357714919,
        "node_id": "I_kwDOA-j9z85Q7RXn",
        "number": 84365,
        "title": "RuntimeError: r INTERNAL ASSERT FAILED at \"../aten/src/ATen/core/jit_type_base.h\":545",
        "user": {
            "login": "valeriosofi",
            "id": 28647171,
            "node_id": "MDQ6VXNlcjI4NjQ3MTcx",
            "avatar_url": "https://avatars.githubusercontent.com/u/28647171?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/valeriosofi",
            "html_url": "https://github.com/valeriosofi",
            "followers_url": "https://api.github.com/users/valeriosofi/followers",
            "following_url": "https://api.github.com/users/valeriosofi/following{/other_user}",
            "gists_url": "https://api.github.com/users/valeriosofi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/valeriosofi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/valeriosofi/subscriptions",
            "organizations_url": "https://api.github.com/users/valeriosofi/orgs",
            "repos_url": "https://api.github.com/users/valeriosofi/repos",
            "events_url": "https://api.github.com/users/valeriosofi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/valeriosofi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 553773019,
                "node_id": "MDU6TGFiZWw1NTM3NzMwMTk=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/needs%20reproduction",
                "name": "needs reproduction",
                "color": "cc9fe0",
                "default": false,
                "description": "Someone else needs to try reproducing the issue given the instructions. No action needed from user"
            },
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 693805995,
                "node_id": "MDU6TGFiZWw2OTM4MDU5OTU=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20onnx",
                "name": "module: onnx",
                "color": "f7e101",
                "default": false,
                "description": "Related to torch.onnx"
            },
            {
                "id": 1313495464,
                "node_id": "MDU6TGFiZWwxMzEzNDk1NDY0",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20regression",
                "name": "module: regression",
                "color": "f7e101",
                "default": false,
                "description": "It used to work, and now it doesn't"
            },
            {
                "id": 3202390887,
                "node_id": "MDU6TGFiZWwzMjAyMzkwODg3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/onnx-triaged",
                "name": "onnx-triaged",
                "color": "006b75",
                "default": false,
                "description": "triaged by ONNX team"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "BowenBao",
            "id": 9376104,
            "node_id": "MDQ6VXNlcjkzNzYxMDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9376104?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/BowenBao",
            "html_url": "https://github.com/BowenBao",
            "followers_url": "https://api.github.com/users/BowenBao/followers",
            "following_url": "https://api.github.com/users/BowenBao/following{/other_user}",
            "gists_url": "https://api.github.com/users/BowenBao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/BowenBao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/BowenBao/subscriptions",
            "organizations_url": "https://api.github.com/users/BowenBao/orgs",
            "repos_url": "https://api.github.com/users/BowenBao/repos",
            "events_url": "https://api.github.com/users/BowenBao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/BowenBao/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "abock",
                "id": 49539,
                "node_id": "MDQ6VXNlcjQ5NTM5",
                "avatar_url": "https://avatars.githubusercontent.com/u/49539?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/abock",
                "html_url": "https://github.com/abock",
                "followers_url": "https://api.github.com/users/abock/followers",
                "following_url": "https://api.github.com/users/abock/following{/other_user}",
                "gists_url": "https://api.github.com/users/abock/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/abock/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/abock/subscriptions",
                "organizations_url": "https://api.github.com/users/abock/orgs",
                "repos_url": "https://api.github.com/users/abock/repos",
                "events_url": "https://api.github.com/users/abock/events{/privacy}",
                "received_events_url": "https://api.github.com/users/abock/received_events",
                "type": "User",
                "site_admin": false
            },
            {
                "login": "thiagocrepaldi",
                "id": 5469809,
                "node_id": "MDQ6VXNlcjU0Njk4MDk=",
                "avatar_url": "https://avatars.githubusercontent.com/u/5469809?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/thiagocrepaldi",
                "html_url": "https://github.com/thiagocrepaldi",
                "followers_url": "https://api.github.com/users/thiagocrepaldi/followers",
                "following_url": "https://api.github.com/users/thiagocrepaldi/following{/other_user}",
                "gists_url": "https://api.github.com/users/thiagocrepaldi/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/thiagocrepaldi/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/thiagocrepaldi/subscriptions",
                "organizations_url": "https://api.github.com/users/thiagocrepaldi/orgs",
                "repos_url": "https://api.github.com/users/thiagocrepaldi/repos",
                "events_url": "https://api.github.com/users/thiagocrepaldi/events{/privacy}",
                "received_events_url": "https://api.github.com/users/thiagocrepaldi/received_events",
                "type": "User",
                "site_admin": false
            },
            {
                "login": "BowenBao",
                "id": 9376104,
                "node_id": "MDQ6VXNlcjkzNzYxMDQ=",
                "avatar_url": "https://avatars.githubusercontent.com/u/9376104?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/BowenBao",
                "html_url": "https://github.com/BowenBao",
                "followers_url": "https://api.github.com/users/BowenBao/followers",
                "following_url": "https://api.github.com/users/BowenBao/following{/other_user}",
                "gists_url": "https://api.github.com/users/BowenBao/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/BowenBao/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/BowenBao/subscriptions",
                "organizations_url": "https://api.github.com/users/BowenBao/orgs",
                "repos_url": "https://api.github.com/users/BowenBao/repos",
                "events_url": "https://api.github.com/users/BowenBao/events{/privacy}",
                "received_events_url": "https://api.github.com/users/BowenBao/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 10,
        "created_at": "2022-08-31T18:39:51Z",
        "updated_at": "2022-12-20T10:13:16Z",
        "closed_at": "2022-11-03T03:01:39Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### \ud83d\udc1b Describe the bug\n\nHello, I was trying to convert a model taken from the flair library to onnx using the `torch.onnx.export` function, but starting from pytorch version 1.12 it crashes giving the error `RuntimeError: r INTERNAL ASSERT FAILED at \"../aten/src/ATen/core/jit_type_base.h\":545, please report a bug to PyTorch` (with pytorch version 1.11 it works). I can share a colab notebook where the issue can be easily reproduced and that contains the full output of the error: https://colab.research.google.com/drive/1lI6khnqeeb1yEBNVtUIqeIkgzi-8i5h8?usp=sharing. The notebook shows how the same code works with pytorch version 1.11 while it doesn't from 1.12.\r\n\r\nThe full traceback of the error is the following:\r\n```---------------------------------------------------------------------------\r\nRuntimeError                              Traceback (most recent call last)\r\n[<ipython-input-1-74e307417192>] in <module>\r\n     87         input_names=input_names,\r\n     88         # the model's input names\r\n---> 89         output_names=output_names,\r\n     90         # the model's output names\r\n     91     )\r\n\r\n11 frames\r\n[/usr/local/lib/python3.7/dist-packages/torch/onnx/__init__.py] in export(model, args, f, export_params, verbose, training, input_names, output_names, operator_export_type, opset_version, do_constant_folding, dynamic_axes, keep_initializers_as_inputs, custom_opsets, export_modules_as_functions)\r\n    363         keep_initializers_as_inputs,\r\n    364         custom_opsets,\r\n--> 365         export_modules_as_functions,\r\n    366     )\r\n    367 \r\n\r\n[/usr/local/lib/python3.7/dist-packages/torch/onnx/utils.py] in export(model, args, f, export_params, verbose, training, input_names, output_names, operator_export_type, opset_version, do_constant_folding, dynamic_axes, keep_initializers_as_inputs, custom_opsets, export_modules_as_functions)\r\n    176         keep_initializers_as_inputs=keep_initializers_as_inputs,\r\n    177         custom_opsets=custom_opsets,\r\n--> 178         export_modules_as_functions=export_modules_as_functions,\r\n    179     )\r\n    180 \r\n\r\n[/usr/local/lib/python3.7/dist-packages/torch/onnx/utils.py] in _export(model, args, f, export_params, verbose, training, input_names, output_names, operator_export_type, export_type, opset_version, do_constant_folding, dynamic_axes, keep_initializers_as_inputs, fixed_batch_size, custom_opsets, add_node_names, onnx_shape_inference, export_modules_as_functions)\r\n   1082                 fixed_batch_size=fixed_batch_size,\r\n   1083                 training=training,\r\n-> 1084                 dynamic_axes=dynamic_axes,\r\n   1085             )\r\n   1086 \r\n\r\n[/usr/local/lib/python3.7/dist-packages/torch/onnx/utils.py] in _model_to_graph(model, args, verbose, input_names, output_names, operator_export_type, do_constant_folding, _disable_torch_constant_prop, fixed_batch_size, training, dynamic_axes)\r\n    737             dynamic_axes=dynamic_axes,\r\n    738             input_names=input_names,\r\n--> 739             module=module,\r\n    740         )\r\n    741     except Exception as e:\r\n\r\n[/usr/local/lib/python3.7/dist-packages/torch/onnx/utils.py] in _optimize_graph(graph, operator_export_type, _disable_torch_constant_prop, fixed_batch_size, params_dict, dynamic_axes, input_names, module)\r\n    306         _C._jit_pass_onnx_set_dynamic_input_shape(graph, dynamic_axes, input_names)\r\n    307     _C._jit_pass_onnx_lint(graph)\r\n--> 308     graph = _C._jit_pass_onnx(graph, operator_export_type)\r\n    309     _C._jit_pass_onnx_lint(graph)\r\n    310     _C._jit_pass_lint(graph)\r\n\r\n[/usr/local/lib/python3.7/dist-packages/torch/onnx/__init__.py] in _run_symbolic_function(*args, **kwargs)\r\n    414     from torch.onnx import utils\r\n    415 \r\n--> 416     return utils._run_symbolic_function(*args, **kwargs)\r\n    417 \r\n    418 \r\n\r\n[/usr/local/lib/python3.7/dist-packages/torch/onnx/utils.py] in _run_symbolic_function(g, block, n, inputs, env, operator_export_type)\r\n   1399             if _need_symbolic_context(symbolic_fn):\r\n   1400                 ctx = torch.onnx.SymbolicContext(_params_dict, env, n, block)\r\n-> 1401                 return symbolic_fn(ctx, g, *inputs, **attrs)\r\n   1402             # PythonOp symbolic need access to the node to resolve the name conflict,\r\n   1403             # this is inconsistent with regular op symbolic.\r\n\r\n[/usr/local/lib/python3.7/dist-packages/torch/onnx/symbolic_opset9.py] in Loop(ctx, g, *inputs, **attrs)\r\n   5063                     b_in.setType(inputs[i + 1].type())\r\n   5064             torch._C._jit_pass_onnx_block(\r\n-> 5065                 b, new_block, operator_export_type, env, False  # type:ignore[arg-type]\r\n   5066             )\r\n   5067         new_op_outputs = torch._C._jit_pass_fixup_onnx_controlflow_node(\r\n\r\n[/usr/local/lib/python3.7/dist-packages/torch/onnx/__init__.py] in _run_symbolic_function(*args, **kwargs)\r\n    414     from torch.onnx import utils\r\n    415 \r\n--> 416     return utils._run_symbolic_function(*args, **kwargs)\r\n    417 \r\n    418 \r\n\r\n[/usr/local/lib/python3.7/dist-packages/torch/onnx/utils.py] in _run_symbolic_function(g, block, n, inputs, env, operator_export_type)\r\n   1404             if op_name == \"PythonOp\":\r\n   1405                 inputs = (n, *inputs)\r\n-> 1406             return symbolic_fn(g, *inputs, **attrs)\r\n   1407         elif ns == \"onnx\":\r\n   1408             # Clone node to trigger ONNX shape inference\r\n\r\n[/usr/local/lib/python3.7/dist-packages/torch/onnx/symbolic_opset9.py] in gt(g, input, other)\r\n   1481 \r\n   1482 def gt(g, input, other):\r\n-> 1483     return gt_impl(g, input, other)\r\n   1484 \r\n   1485 \r\n\r\n[/usr/local/lib/python3.7/dist-packages/torch/onnx/symbolic_opset9.py] in gt_impl(g, input, other)\r\n   1486 def gt_impl(g, input, other):\r\n   1487     if (\r\n-> 1488         input.type().scalarType() is not None\r\n   1489         and input.type().scalarType() == \"Bool\"\r\n   1490         and other.type().scalarType() is not None\r\n\r\nRuntimeError: r INTERNAL ASSERT FAILED at \"../aten/src/ATen/core/jit_type_base.h\":545, please report a bug to PyTorch.``\n\n### Versions\n\nPyTorch version: 1.12.1+cu113\r\nIs debug build: False\r\nCUDA used to build PyTorch: 11.3\r\nROCM used to build PyTorch: N/A\r\n\r\nOS: Ubuntu 18.04.6 LTS (x86_64)\r\nGCC version: (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0\r\nClang version: 6.0.0-1ubuntu2 (tags/RELEASE_600/final)\r\nCMake version: version 3.22.6\r\nLibc version: glibc-2.26\r\n\r\nPython version: 3.7.13 (default, Apr 24 2022, 01:04:09)  [GCC 7.5.0] (64-bit runtime)\r\nPython platform: Linux-5.4.188+-x86_64-with-Ubuntu-18.04-bionic\r\nIs CUDA available: False\r\nCUDA runtime version: 11.1.105\r\nGPU models and configuration: Could not collect\r\nNvidia driver version: Could not collect\r\ncuDNN version: Probably one of the following:\r\n/usr/lib/x86_64-linux-gnu/libcudnn.so.7.6.5\r\n/usr/lib/x86_64-linux-gnu/libcudnn.so.8.0.5\r\n/usr/lib/x86_64-linux-gnu/libcudnn_adv_infer.so.8.0.5\r\n/usr/lib/x86_64-linux-gnu/libcudnn_adv_train.so.8.0.5\r\n/usr/lib/x86_64-linux-gnu/libcudnn_cnn_infer.so.8.0.5\r\n/usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8.0.5\r\n/usr/lib/x86_64-linux-gnu/libcudnn_ops_infer.so.8.0.5\r\n/usr/lib/x86_64-linux-gnu/libcudnn_ops_train.so.8.0.5\r\nHIP runtime version: N/A\r\nMIOpen runtime version: N/A\r\nIs XNNPACK available: True\r\n\r\nVersions of relevant libraries:\r\n[pip3] numpy==1.21.6\r\n[pip3] torch==1.12.1+cu113\r\n[pip3] torchaudio==0.12.1+cu113\r\n[pip3] torchsummary==1.5.1\r\n[pip3] torchtext==0.13.1\r\n[pip3] torchvision==0.13.1+cu113\r\n[conda] Could not collect",
        "closed_by": {
            "login": "pytorchmergebot",
            "id": 97764156,
            "node_id": "U_kgDOBdPDPA",
            "avatar_url": "https://avatars.githubusercontent.com/u/97764156?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pytorchmergebot",
            "html_url": "https://github.com/pytorchmergebot",
            "followers_url": "https://api.github.com/users/pytorchmergebot/followers",
            "following_url": "https://api.github.com/users/pytorchmergebot/following{/other_user}",
            "gists_url": "https://api.github.com/users/pytorchmergebot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pytorchmergebot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pytorchmergebot/subscriptions",
            "organizations_url": "https://api.github.com/users/pytorchmergebot/orgs",
            "repos_url": "https://api.github.com/users/pytorchmergebot/repos",
            "events_url": "https://api.github.com/users/pytorchmergebot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pytorchmergebot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/84365/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/84365/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/84092",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/84092/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/84092/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/84092/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/84092",
        "id": 1351523172,
        "node_id": "I_kwDOA-j9z85Qjptk",
        "number": 84092,
        "title": "torch.jit.trace doesn't work with autocast on Conv node.",
        "user": {
            "login": "titaiwangms",
            "id": 18010845,
            "node_id": "MDQ6VXNlcjE4MDEwODQ1",
            "avatar_url": "https://avatars.githubusercontent.com/u/18010845?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/titaiwangms",
            "html_url": "https://github.com/titaiwangms",
            "followers_url": "https://api.github.com/users/titaiwangms/followers",
            "following_url": "https://api.github.com/users/titaiwangms/following{/other_user}",
            "gists_url": "https://api.github.com/users/titaiwangms/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/titaiwangms/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/titaiwangms/subscriptions",
            "organizations_url": "https://api.github.com/users/titaiwangms/orgs",
            "repos_url": "https://api.github.com/users/titaiwangms/repos",
            "events_url": "https://api.github.com/users/titaiwangms/events{/privacy}",
            "received_events_url": "https://api.github.com/users/titaiwangms/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 693805995,
                "node_id": "MDU6TGFiZWw2OTM4MDU5OTU=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20onnx",
                "name": "module: onnx",
                "color": "f7e101",
                "default": false,
                "description": "Related to torch.onnx"
            },
            {
                "id": 1972560798,
                "node_id": "MDU6TGFiZWwxOTcyNTYwNzk4",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20amp%20(automated%20mixed%20precision)",
                "name": "module: amp (automated mixed precision)",
                "color": "f7e101",
                "default": false,
                "description": "autocast"
            },
            {
                "id": 3202390887,
                "node_id": "MDU6TGFiZWwzMjAyMzkwODg3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/onnx-triaged",
                "name": "onnx-triaged",
                "color": "006b75",
                "default": false,
                "description": "triaged by ONNX team"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "thiagocrepaldi",
            "id": 5469809,
            "node_id": "MDQ6VXNlcjU0Njk4MDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5469809?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/thiagocrepaldi",
            "html_url": "https://github.com/thiagocrepaldi",
            "followers_url": "https://api.github.com/users/thiagocrepaldi/followers",
            "following_url": "https://api.github.com/users/thiagocrepaldi/following{/other_user}",
            "gists_url": "https://api.github.com/users/thiagocrepaldi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/thiagocrepaldi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/thiagocrepaldi/subscriptions",
            "organizations_url": "https://api.github.com/users/thiagocrepaldi/orgs",
            "repos_url": "https://api.github.com/users/thiagocrepaldi/repos",
            "events_url": "https://api.github.com/users/thiagocrepaldi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/thiagocrepaldi/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "thiagocrepaldi",
                "id": 5469809,
                "node_id": "MDQ6VXNlcjU0Njk4MDk=",
                "avatar_url": "https://avatars.githubusercontent.com/u/5469809?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/thiagocrepaldi",
                "html_url": "https://github.com/thiagocrepaldi",
                "followers_url": "https://api.github.com/users/thiagocrepaldi/followers",
                "following_url": "https://api.github.com/users/thiagocrepaldi/following{/other_user}",
                "gists_url": "https://api.github.com/users/thiagocrepaldi/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/thiagocrepaldi/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/thiagocrepaldi/subscriptions",
                "organizations_url": "https://api.github.com/users/thiagocrepaldi/orgs",
                "repos_url": "https://api.github.com/users/thiagocrepaldi/repos",
                "events_url": "https://api.github.com/users/thiagocrepaldi/events{/privacy}",
                "received_events_url": "https://api.github.com/users/thiagocrepaldi/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 10,
        "created_at": "2022-08-25T22:52:17Z",
        "updated_at": "2022-09-27T21:26:49Z",
        "closed_at": "2022-09-27T21:26:49Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "### \ud83d\udc1b Describe the bug\n\nI was trying a mix precision model, and found that the Conv weight/bias become constant with autocast. So I made a liitle repro, finding that when `torch.jit.trace` is applied with autocast. Trace sanity check would fail.\r\n\r\n```python\r\nimport torch\r\n\r\nclass MyModule(torch.nn.Module):\r\n    def __init__(self):\r\n        super().__init__()\r\n        self.cv1 = torch.nn.Conv2d(3, 3, 5, 2, 1)\r\n\r\n    def forward(self, x):\r\n        x = self.cv1(x)\r\n        return x\r\n\r\nx = torch.randn(10, 3, 20, 20) * 2\r\nm = MyModule().eval()\r\nx = x.cuda()\r\nm = m.cuda()\r\n\r\nwith torch.no_grad():\r\n    print(\"outside result: \", torch.jit.trace(m, x))\r\n    with torch.cuda.amp.autocast(enabled = True, dtype=torch.float16):\r\n        print(\"inside result: \", torch.jit.trace(m, x))\r\n```\r\nError message\r\n```\r\nERROR: Graphs differed across invocations!\r\n        Graph diff:\r\n                  graph(%self.1 : __torch__.MyModule,\r\n                        %x : Tensor):\r\n                    %cv1 : __torch__.torch.nn.modules.conv.Conv2d = prim::GetAttr[name=\"cv1\"](%self.1)\r\n                    %4 : int = prim::Constant[value=15]()\r\n                    %5 : bool = prim::Constant[value=1](), scope: __module.cv1 # /home/titaiwang/pytorch/torch/nn/modules/conv.py:459:0\r\n                    %6 : int = prim::Constant[value=0](), scope: __module.cv1 # /home/titaiwang/pytorch/torch/nn/modules/conv.py:459:0\r\n                    %7 : int = prim::Constant[value=1](), scope: __module.cv1 # /home/titaiwang/pytorch/torch/nn/modules/conv.py:459:0\r\n                    %8 : int = prim::Constant[value=2](), scope: __module.cv1 # /home/titaiwang/pytorch/torch/nn/modules/conv.py:459:0\r\n                +   %9 : Tensor = prim::Constant[value=0.01 *  6.7810  6.4636  5.3894 [ CUDAHalfType{3} ]](), scope: __module.cv1 # /home/titaiwang/pytorch/torch/nn/modules/conv.py:459:0\r\n                +   %10 : Tensor = prim::Constant[value=<Tensor>](), scope: __module.cv1 # /home/titaiwang/pytorch/torch/nn/modules/conv.py:459:0\r\n                -   %9 : NoneType = prim::Constant(), scope: __module.cv1\r\n                ?    ^\r\n                +   %11 : NoneType = prim::Constant(), scope: __module.cv1\r\n                ?    ^^\r\n                -   %10 : bool = prim::Constant[value=0](), scope: __module.cv1 # /home/titaiwang/pytorch/torch/nn/modules/conv.py:459:0\r\n                ?     ^\r\n                +   %12 : bool = prim::Constant[value=0](), scope: __module.cv1 # /home/titaiwang/pytorch/torch/nn/modules/conv.py:459:0\r\n                ?     ^\r\n                -   %11 : int = prim::Constant[value=5](), scope: __module.cv1 # /home/titaiwang/pytorch/torch/nn/modules/conv.py:459:0\r\n                ?     ^\r\n                +   %13 : int = prim::Constant[value=5](), scope: __module.cv1 # /home/titaiwang/pytorch/torch/nn/modules/conv.py:459:0\r\n                ?     ^\r\n                -   %weight : Tensor = prim::GetAttr[name=\"weight\"](%cv1)\r\n                -   %bias : Tensor = prim::GetAttr[name=\"bias\"](%cv1)\r\n                -   %14 : Tensor = aten::to(%bias, %11, %10, %10, %9), scope: __module.cv1 # /home/titaiwang/pytorch/torch/nn/modules/conv.py:459:0\r\n                -   %15 : Tensor = aten::to(%weight, %11, %10, %10, %9), scope: __module.cv1 # /home/titaiwang/pytorch/torch/nn/modules/conv.py:459:0\r\n                -   %16 : Tensor = aten::to(%x, %11, %10, %10, %9), scope: __module.cv1 # /home/titaiwang/pytorch/torch/nn/modules/conv.py:459:0\r\n                ?     ^                            --------------\r\n                +   %14 : Tensor = aten::to(%x, %13, %12, %12, %11), scope: __module.cv1 # /home/titaiwang/pytorch/torch/nn/modules/conv.py:459:0\r\n                ?     ^                         +++++++++++++++\r\n                -   %17 : int[] = prim::ListConstruct(%8, %8), scope: __module.cv1\r\n                ?     ^\r\n                +   %15 : int[] = prim::ListConstruct(%8, %8), scope: __module.cv1\r\n                ?     ^\r\n                -   %18 : int[] = prim::ListConstruct(%7, %7), scope: __module.cv1\r\n                ?     ^\r\n                +   %16 : int[] = prim::ListConstruct(%7, %7), scope: __module.cv1\r\n                ?     ^\r\n                -   %19 : int[] = prim::ListConstruct(%7, %7), scope: __module.cv1\r\n                ?     ^\r\n                +   %17 : int[] = prim::ListConstruct(%7, %7), scope: __module.cv1\r\n                ?     ^\r\n                -   %20 : int[] = prim::ListConstruct(%6, %6), scope: __module.cv1\r\n                ?    ^^\r\n                +   %18 : int[] = prim::ListConstruct(%6, %6), scope: __module.cv1\r\n                ?    ^^\r\n                +   %19 : Tensor = aten::_autocast_to_reduced_precision(%14, %5, %12, %13, %4)\r\n                +   %20 : Tensor = aten::_autocast_to_reduced_precision(%10, %5, %12, %13, %4)\r\n                -   %21 : Tensor = aten::_autocast_to_reduced_precision(%16, %5, %10, %11, %4)\r\n                ?                                                        ^^        ^    ^\r\n                +   %21 : Tensor = aten::_autocast_to_reduced_precision(%9, %5, %12, %13, %4)\r\n                ?                                                        ^        ^    ^\r\n                -   %22 : Tensor = aten::_autocast_to_reduced_precision(%15, %5, %10, %11, %4)\r\n                -   %23 : Tensor = aten::_autocast_to_reduced_precision(%14, %5, %10, %11, %4)\r\n                -   %24 : Tensor = aten::_convolution(%21, %22, %23, %17, %18, %19, %10, %20, %7, %10, %10, %5, %5), scope: __module.cv1 # /home/titaiwang/pytorch/torch/nn/modules/conv.py:459:0\r\n                ?     ^                                     ^^   ^^            ---------------      ^    ^\r\n                +   %22 : Tensor = aten::_convolution(%19, %20, %21, %15, %16, %17, %12, %18, %7, %12, %12, %5, %5), scope: __module.cv1 # /home/titaiwang/pytorch/torch/nn/modules/conv.py:459:0\r\n                ?     ^                                ++++++++++     ^^   ^^       +++++           ^    ^\r\n                -   return (%24)\r\n                ?             ^\r\n                +   return (%22)\r\n                ?             ^\r\n        First diverging operator:\r\n        Node diff:\r\n                - %cv1 : __torch__.torch.nn.modules.conv.___torch_mangle_2.Conv2d = prim::GetAttr[name=\"cv1\"](%self.1)\r\n                ?                                                        ^\r\n                + %cv1 : __torch__.torch.nn.modules.conv.___torch_mangle_4.Conv2d = prim::GetAttr[name=\"cv1\"](%self.1)\r\n                ?                                                        ^\r\n```\n\n### Versions\n\nPytorch nightly\n\ncc @mcarilli @ptrblck",
        "closed_by": {
            "login": "pytorchmergebot",
            "id": 97764156,
            "node_id": "U_kgDOBdPDPA",
            "avatar_url": "https://avatars.githubusercontent.com/u/97764156?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pytorchmergebot",
            "html_url": "https://github.com/pytorchmergebot",
            "followers_url": "https://api.github.com/users/pytorchmergebot/followers",
            "following_url": "https://api.github.com/users/pytorchmergebot/following{/other_user}",
            "gists_url": "https://api.github.com/users/pytorchmergebot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pytorchmergebot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pytorchmergebot/subscriptions",
            "organizations_url": "https://api.github.com/users/pytorchmergebot/orgs",
            "repos_url": "https://api.github.com/users/pytorchmergebot/repos",
            "events_url": "https://api.github.com/users/pytorchmergebot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pytorchmergebot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/84092/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/84092/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/83533",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/83533/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/83533/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/83533/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/83533",
        "id": 1340762938,
        "node_id": "I_kwDOA-j9z85P6ms6",
        "number": 83533,
        "title": "[jit] jit.trace fails on mps models",
        "user": {
            "login": "justinchuby",
            "id": 11205048,
            "node_id": "MDQ6VXNlcjExMjA1MDQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/11205048?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/justinchuby",
            "html_url": "https://github.com/justinchuby",
            "followers_url": "https://api.github.com/users/justinchuby/followers",
            "following_url": "https://api.github.com/users/justinchuby/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinchuby/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/justinchuby/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinchuby/subscriptions",
            "organizations_url": "https://api.github.com/users/justinchuby/orgs",
            "repos_url": "https://api.github.com/users/justinchuby/repos",
            "events_url": "https://api.github.com/users/justinchuby/events{/privacy}",
            "received_events_url": "https://api.github.com/users/justinchuby/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 693805995,
                "node_id": "MDU6TGFiZWw2OTM4MDU5OTU=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20onnx",
                "name": "module: onnx",
                "color": "f7e101",
                "default": false,
                "description": "Related to torch.onnx"
            },
            {
                "id": 1150417147,
                "node_id": "MDU6TGFiZWwxMTUwNDE3MTQ3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/good%20first%20issue",
                "name": "good first issue",
                "color": "34c182",
                "default": true,
                "description": ""
            },
            {
                "id": 1622453609,
                "node_id": "MDU6TGFiZWwxNjIyNDUzNjA5",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/OSS%20contribution%20wanted",
                "name": "OSS contribution wanted",
                "color": "0e8a16",
                "default": false,
                "description": "PR from open source contributors welcome to solve this issue."
            },
            {
                "id": 4121057428,
                "node_id": "LA_kwDOA-j9z871oliU",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20mps",
                "name": "module: mps",
                "color": "f7e101",
                "default": false,
                "description": "Related to Apple Metal Performance Shaders framework"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "tgadeliya",
            "id": 32731151,
            "node_id": "MDQ6VXNlcjMyNzMxMTUx",
            "avatar_url": "https://avatars.githubusercontent.com/u/32731151?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tgadeliya",
            "html_url": "https://github.com/tgadeliya",
            "followers_url": "https://api.github.com/users/tgadeliya/followers",
            "following_url": "https://api.github.com/users/tgadeliya/following{/other_user}",
            "gists_url": "https://api.github.com/users/tgadeliya/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tgadeliya/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tgadeliya/subscriptions",
            "organizations_url": "https://api.github.com/users/tgadeliya/orgs",
            "repos_url": "https://api.github.com/users/tgadeliya/repos",
            "events_url": "https://api.github.com/users/tgadeliya/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tgadeliya/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "tgadeliya",
                "id": 32731151,
                "node_id": "MDQ6VXNlcjMyNzMxMTUx",
                "avatar_url": "https://avatars.githubusercontent.com/u/32731151?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/tgadeliya",
                "html_url": "https://github.com/tgadeliya",
                "followers_url": "https://api.github.com/users/tgadeliya/followers",
                "following_url": "https://api.github.com/users/tgadeliya/following{/other_user}",
                "gists_url": "https://api.github.com/users/tgadeliya/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/tgadeliya/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tgadeliya/subscriptions",
                "organizations_url": "https://api.github.com/users/tgadeliya/orgs",
                "repos_url": "https://api.github.com/users/tgadeliya/repos",
                "events_url": "https://api.github.com/users/tgadeliya/events{/privacy}",
                "received_events_url": "https://api.github.com/users/tgadeliya/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 9,
        "created_at": "2022-08-16T19:06:20Z",
        "updated_at": "2022-09-16T03:01:33Z",
        "closed_at": "2022-09-16T01:45:33Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "### \ud83d\udc1b Describe the bug\r\n\r\nTracing fails for models running on MPS with `Cannot convert a MPS Tensor to float64 dtype as the MPS framework doesn't support float64. Please use float32 instead.`\r\n\r\n```python\r\nimport torch\r\nfrom torch import nn\r\n\r\nx = torch.tensor([[[[ 1.1227, -0.5545, -0.7871,  0.0841,  0.3714,  0.1612],\r\n          [-0.2052, -0.6623,  1.6033,  2.1245,  1.9609, -1.6847],\r\n          [ 0.1736, -0.7240, -0.0737,  0.3207,  1.5287, -1.3479]],\r\n\r\n         [[-0.0267,  1.3100, -0.5756,  0.9288,  1.0432, -0.4871],\r\n          [-0.9110, -0.2054, -1.6963,  0.5995,  1.7877, -2.0397],\r\n          [-0.1205, -1.0103, -2.1805,  1.4364, -1.3835,  0.6537]]]])\r\n\r\ndevice = \"mps\"\r\nx_m1 = x.to(device=device)\r\nconv_m1 = nn.Sequential(\r\n    nn.Conv2d(2, 2, stride=1, kernel_size=3),\r\n    nn.BatchNorm2d(num_features=2)\r\n).to(device=device)\r\n\r\ny_m1 = conv_m1(x_m1)\r\nconv_m1.eval()\r\neval_m1 = conv_m1(x_m1)\r\n\r\ntorch.jit.trace(conv_m1, x_m1)\r\n```\r\n\r\n```\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-15-10e6455dfe2d> in <module>\r\n----> 1 torch.jit.trace(conv_m1, (x_m1,))\r\n\r\n/opt/homebrew/lib/python3.9/site-packages/torch/jit/_trace.py in trace(func, example_inputs, optimize, check_trace, check_inputs, check_tolerance, strict, _force_outplace, _module_class, _compilation_unit)\r\n    748\r\n    749     if isinstance(func, torch.nn.Module):\r\n--> 750         return trace_module(\r\n    751             func,\r\n    752             {\"forward\": example_inputs},\r\n\r\n/opt/homebrew/lib/python3.9/site-packages/torch/jit/_trace.py in trace_module(mod, inputs, optimize, check_trace, check_inputs, check_tolerance, strict, _force_outplace, _module_class, _compilation_unit)\r\n    990                     )\r\n    991                 else:\r\n--> 992                     _check_trace(\r\n    993                         [inputs],\r\n    994                         func,\r\n\r\n/opt/homebrew/lib/python3.9/site-packages/torch/autograd/grad_mode.py in decorate_context(*args, **kwargs)\r\n     25         def decorate_context(*args, **kwargs):\r\n     26             with self.clone():\r\n---> 27                 return func(*args, **kwargs)\r\n     28         return cast(F, decorate_context)\r\n     29\r\n\r\n/opt/homebrew/lib/python3.9/site-packages/torch/jit/_trace.py in _check_trace(check_inputs, func, traced_func, check_tolerance, strict, force_outplace, is_trace_module, _module_class)\r\n    525         traced_outs = run_mod_and_filter_tensor_outputs(traced_func, inputs, \"trace\")\r\n    526         fn_outs = run_mod_and_filter_tensor_outputs(func, inputs, \"Python function\")\r\n--> 527         if compare_outputs(traced_outs, fn_outs, \"Python function\"):\r\n    528             check_outs = run_mod_and_filter_tensor_outputs(\r\n    529                 check_mod_func, inputs, \"repeated trace\"\r\n\r\n/opt/homebrew/lib/python3.9/site-packages/torch/jit/_trace.py in compare_outputs(original, reference, match_what)\r\n    500                     else:\r\n    501                         torch.testing.assert_close(\r\n--> 502                             orig.double(),\r\n    503                             ref.double(),\r\n    504                             rtol=check_tolerance,\r\n\r\nTypeError: Cannot convert a MPS Tensor to float64 dtype as the MPS framework doesn't support float64. Please use float32 instead.\r\n```\r\n\r\n### Versions\r\n\r\n```\r\nPyTorch version: 1.12.1\r\nIs debug build: False\r\nCUDA used to build PyTorch: None\r\nROCM used to build PyTorch: N/A\r\n\r\nOS: macOS 12.5 (arm64)\r\nGCC version: Could not collect\r\nClang version: 13.1.6 (clang-1316.0.21.2.5)\r\nCMake version: version 3.23.2\r\nLibc version: N/A\r\n\r\nPython version: 3.9.13 (main, May 24 2022, 21:13:51)  [Clang 13.1.6 (clang-1316.0.21.2)] (64-bit runtime)\r\nPython platform: macOS-12.5-arm64-arm-64bit\r\nIs CUDA available: False\r\nCUDA runtime version: No CUDA\r\nGPU models and configuration: No CUDA\r\nNvidia driver version: No CUDA\r\ncuDNN version: No CUDA\r\nHIP runtime version: N/A\r\nMIOpen runtime version: N/A\r\nIs XNNPACK available: True\r\n\r\nVersions of relevant libraries:\r\n[pip3] mypy==0.960\r\n[pip3] mypy-extensions==0.4.3\r\n[pip3] numpy==1.21.6\r\n[pip3] pytorch==1.12.0a0+git3230a4d\r\n[pip3] torch==1.12.0\r\n[pip3] torchaudio==0.12.1\r\n[pip3] torchtyping==0.1.4\r\n[pip3] torchvision==0.13.1\r\n[conda] Could not collect\r\n```\n\ncc @kulinseth @albanD",
        "closed_by": {
            "login": "pytorchmergebot",
            "id": 97764156,
            "node_id": "U_kgDOBdPDPA",
            "avatar_url": "https://avatars.githubusercontent.com/u/97764156?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pytorchmergebot",
            "html_url": "https://github.com/pytorchmergebot",
            "followers_url": "https://api.github.com/users/pytorchmergebot/followers",
            "following_url": "https://api.github.com/users/pytorchmergebot/following{/other_user}",
            "gists_url": "https://api.github.com/users/pytorchmergebot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pytorchmergebot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pytorchmergebot/subscriptions",
            "organizations_url": "https://api.github.com/users/pytorchmergebot/orgs",
            "repos_url": "https://api.github.com/users/pytorchmergebot/repos",
            "events_url": "https://api.github.com/users/pytorchmergebot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pytorchmergebot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/83533/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/83533/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/82889",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/82889/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/82889/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/82889/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/82889",
        "id": 1330135716,
        "node_id": "I_kwDOA-j9z85PSEKk",
        "number": 82889,
        "title": "LayerNorm+CUDA+JIT",
        "user": {
            "login": "DavidSlayback",
            "id": 68602513,
            "node_id": "MDQ6VXNlcjY4NjAyNTEz",
            "avatar_url": "https://avatars.githubusercontent.com/u/68602513?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/DavidSlayback",
            "html_url": "https://github.com/DavidSlayback",
            "followers_url": "https://api.github.com/users/DavidSlayback/followers",
            "following_url": "https://api.github.com/users/DavidSlayback/following{/other_user}",
            "gists_url": "https://api.github.com/users/DavidSlayback/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/DavidSlayback/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/DavidSlayback/subscriptions",
            "organizations_url": "https://api.github.com/users/DavidSlayback/orgs",
            "repos_url": "https://api.github.com/users/DavidSlayback/repos",
            "events_url": "https://api.github.com/users/DavidSlayback/events{/privacy}",
            "received_events_url": "https://api.github.com/users/DavidSlayback/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 3997471357,
                "node_id": "LA_kwDOA-j9z87uRJJ9",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20nvfuser",
                "name": "module: nvfuser",
                "color": "9CA380",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "jjsjann123",
            "id": 3709243,
            "node_id": "MDQ6VXNlcjM3MDkyNDM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3709243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jjsjann123",
            "html_url": "https://github.com/jjsjann123",
            "followers_url": "https://api.github.com/users/jjsjann123/followers",
            "following_url": "https://api.github.com/users/jjsjann123/following{/other_user}",
            "gists_url": "https://api.github.com/users/jjsjann123/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jjsjann123/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jjsjann123/subscriptions",
            "organizations_url": "https://api.github.com/users/jjsjann123/orgs",
            "repos_url": "https://api.github.com/users/jjsjann123/repos",
            "events_url": "https://api.github.com/users/jjsjann123/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jjsjann123/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "jjsjann123",
                "id": 3709243,
                "node_id": "MDQ6VXNlcjM3MDkyNDM=",
                "avatar_url": "https://avatars.githubusercontent.com/u/3709243?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/jjsjann123",
                "html_url": "https://github.com/jjsjann123",
                "followers_url": "https://api.github.com/users/jjsjann123/followers",
                "following_url": "https://api.github.com/users/jjsjann123/following{/other_user}",
                "gists_url": "https://api.github.com/users/jjsjann123/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/jjsjann123/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jjsjann123/subscriptions",
                "organizations_url": "https://api.github.com/users/jjsjann123/orgs",
                "repos_url": "https://api.github.com/users/jjsjann123/repos",
                "events_url": "https://api.github.com/users/jjsjann123/events{/privacy}",
                "received_events_url": "https://api.github.com/users/jjsjann123/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 13,
        "created_at": "2022-08-05T16:26:12Z",
        "updated_at": "2022-08-11T15:45:13Z",
        "closed_at": "2022-08-11T15:45:13Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### \ud83d\udc1b Describe the bug\n\n[File](https://gist.github.com/DavidSlayback/dd327d17d41e67267f0026efb0686fc5)\r\n\r\nIn an RL workflow, when I use CUDA, JIT, and a LayerNorm together in this script, I get the following error\r\n```python\r\n\r\n/home/david/Documents/GitHub/cleanoc/cleanrl/ppo_lngru_jit.py:281: UserWarning: FALLBACK path has been taken inside: compileCudaFusionGroup. This is an indication that codegen Failed for some reason.\r\nTo debug try disable codegen fallback path via setting the env variable `export PYTORCH_NVFUSER_DISABLE=fallback`\r\nTo report the issue, try enable logging via setting the envvariable ` export PYTORCH_JIT_LOG_LEVEL=manager.cpp`\r\n (Triggered internally at  /opt/conda/conda-bld/pytorch_1656352657443/work/torch/csrc/jit/codegen/cuda/manager.cpp:237.)\r\n  next_gru_state = agent.get_next_state(next_obs, next_gru_state, next_done, prev_actions[step])\r\n/home/david/Documents/GitHub/cleanoc/cleanrl/ppo_lngru_jit.py:281: UserWarning: FALLBACK path has been taken inside: runCudaFusionGroup. This is an indication that codegen Failed for some reason.\r\nTo debug try disable codegen fallback path via setting the env variable `export PYTORCH_NVFUSER_DISABLE=fallback`\r\n (Triggered internally at  /opt/conda/conda-bld/pytorch_1656352657443/work/torch/csrc/jit/codegen/cuda/manager.cpp:329.)\r\n  next_gru_state = agent.get_next_state(next_obs, next_gru_state, next_done, prev_actions[step])\r\nTraceback (most recent call last):\r\n  File \"/home/david/Documents/GitHub/cleanoc/cleanrl/ppo_lngru_jit.py\", line 281, in <module>\r\n    next_gru_state = agent.get_next_state(next_obs, next_gru_state, next_done, prev_actions[step])\r\nRuntimeError: The following operation failed in the TorchScript interpreter.\r\nTraceback of TorchScript (most recent call last):\r\nRuntimeError: The following operation failed in the TorchScript interpreter.\r\nTraceback of TorchScript (most recent call last):\r\nRuntimeError: Expected weight to be of same shape as normalized_shape, but got weight of shape [4, 128] and normalized_shape = [384]\r\n```\r\n\r\nFollowing the advice above (manager.cpp for debugging, disable NVFUSER), I get\r\n```python\r\nTraceback (most recent call last):\r\n  File \"/home/david/Documents/GitHub/cleanoc/cleanrl/ppo_lngru_jit.py\", line 277, in <module>\r\n    next_gru_state = agent.get_next_state(next_obs, next_gru_state, next_done, prev_actions[step])\r\nRuntimeError: Invalid broadcast, number of false entries in is_broadcast_dim expected to be 2 but received 1\r\n```\r\n\r\nThis does not occur if:\r\n\r\n1. I run on CPU\r\n2. I uncomment any of the print statements inside the LNGRU\r\n3. I turn off the first layer norms\r\n4. I assert that both i_n and i_h have a shape (any shape that tests True)\r\n5. I attempt to reproduce with JUST the LNGRU or even the Agent (I tried making a minimal working example with both but could not reproduce the bug). See below:\r\n\r\n```python\r\nimport torch\r\nimport torch.nn as nn\r\nimport torch.nn.functional as F\r\n\r\nclass LNGRUCell(nn.RNNCellBase):\r\n    n_preact: torch.jit.Final[bool]\r\n    \"\"\"Layer-normalized GRU as in https://arxiv.org/pdf/1607.06450.pdf\r\n    https://github.com/pytorch/pytorch/issues/12482#issuecomment-440485163\"\"\"\r\n\r\n    def __init__(self, input_size, hidden_size, bias=True, n_preact=True):\r\n        super().__init__(input_size, hidden_size, bias, num_chunks=3)\r\n        self.n_preact = n_preact\r\n        if n_preact:\r\n            self.n_ih = nn.LayerNorm(int(3 * self.hidden_size))\r\n            self.n_hh = nn.LayerNorm(int(3 * self.hidden_size))\r\n        self.n_in = nn.LayerNorm(self.hidden_size)\r\n        self.n_hn = nn.LayerNorm(self.hidden_size)\r\n        # Orthogonal initialization\r\n        nn.init.orthogonal_(self.weight_hh, 2 ** 0.5)\r\n        nn.init.orthogonal_(self.weight_ih, 2 ** 0.5)\r\n        if self.bias:\r\n            nn.init.constant_(self.bias_hh, 0)\r\n            nn.init.constant_(self.bias_ih, 0)\r\n\r\n    def forward(self, x, gru_state):\r\n        ih = x @ self.weight_ih.T + self.bias_ih\r\n        hh = gru_state @ self.weight_hh.T + self.bias_hh\r\n        if self.n_preact:  # In CUDA, with jit, breaks here\r\n            ih = self.n_ih(ih)\r\n            hh = self.n_hh(hh)\r\n\r\n        i_r, i_z, i_n = ih.chunk(3, dim=1)\r\n        h_r, h_z, h_n = hh.chunk(3, dim=1)\r\n        # No idea why I need to do this, but ok...\r\n        # assert i_n.shape# [-1] == self.hidden_size\r\n        # assert h_n.shape# [-1] == self.hidden_size\r\n        i_n = self.n_in(i_n)\r\n        h_n = self.n_hn(h_n)\r\n\r\n        r = torch.sigmoid(i_r + h_r)\r\n        z = torch.sigmoid(i_z + h_z)\r\n        n = torch.tanh(i_n + r * h_n)\r\n        h = (1 - z) * n + z * gru_state\r\n        return h\r\n\r\nclass LNGRUCell_WithAssert(nn.RNNCellBase):\r\n    n_preact: torch.jit.Final[bool]\r\n    \"\"\"Layer-normalized GRU as in https://arxiv.org/pdf/1607.06450.pdf\r\n    https://github.com/pytorch/pytorch/issues/12482#issuecomment-440485163\"\"\"\r\n\r\n    def __init__(self, input_size, hidden_size, bias=True, n_preact=True):\r\n        super().__init__(input_size, hidden_size, bias, num_chunks=3)\r\n        self.n_preact = n_preact\r\n        if n_preact:\r\n            self.n_ih = nn.LayerNorm(int(3 * self.hidden_size))\r\n            self.n_hh = nn.LayerNorm(int(3 * self.hidden_size))\r\n        self.n_in = nn.LayerNorm(self.hidden_size)\r\n        self.n_hn = nn.LayerNorm(self.hidden_size)\r\n        # Orthogonal initialization\r\n        nn.init.orthogonal_(self.weight_hh, 2 ** 0.5)\r\n        nn.init.orthogonal_(self.weight_ih, 2 ** 0.5)\r\n        if self.bias:\r\n            nn.init.constant_(self.bias_hh, 0)\r\n            nn.init.constant_(self.bias_ih, 0)\r\n\r\n    def forward(self, x, gru_state):\r\n        ih = x @ self.weight_ih.T + self.bias_ih\r\n        hh = gru_state @ self.weight_hh.T + self.bias_hh\r\n        if self.n_preact:\r\n            ih = self.n_ih(ih)\r\n            hh = self.n_hh(hh)\r\n\r\n        i_r, i_z, i_n = ih.chunk(3, dim=1)\r\n        h_r, h_z, h_n = hh.chunk(3, dim=1)\r\n        # No idea why I need to do this, but ok...\r\n        assert i_n.shape\r\n        assert h_n.shape\r\n        i_n = self.n_in(i_n)\r\n        h_n = self.n_hn(h_n)\r\n\r\n        r = torch.sigmoid(i_r + h_r)\r\n        z = torch.sigmoid(i_z + h_z)\r\n        n = torch.tanh(i_n + r * h_n)\r\n        h = (1 - z) * n + z * gru_state\r\n        return h\r\n\r\n\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    na, batch_size, input_size, hidden_size = 2, 8, 128, 256\r\n    class Agent(nn.Module):\r\n        num_actions: torch.jit.Final[int]\r\n        def __init__(self, with_assert=False, with_preact=True):\r\n            super().__init__()\r\n            self.num_actions = 2\r\n            if with_assert: self.rnn = LNGRUCell_WithAssert(input_size + na, hidden_size, n_preact=with_preact)\r\n            self.rnn = LNGRUCell(input_size + na, hidden_size, n_preact=with_preact)\r\n\r\n        @torch.jit.export\r\n        def get_next_state(self, x, gru_state, is_init, prev_action):\r\n            return self.rnn(torch.cat([x, F.one_hot(prev_action, self.num_actions)], -1),\r\n                            (1. - is_init.unsqueeze(-1)) * gru_state)\r\n\r\n    # Input and hidden state\r\n    x = torch.ones((batch_size, input_size)); xc = x.to('cuda')\r\n    a = torch.randint(2, (batch_size,), dtype=torch.int64); ac = a.to('cuda')\r\n    is_init = torch.zeros(batch_size); is_initc = is_init.to('cuda')\r\n    h = torch.zeros((batch_size, hidden_size)); hc = h.to('cuda')\r\n    # Without JIT, cuda and cpu. Works!\r\n    cuda_lngru = Agent().to('cuda')\r\n    cpu_lngru = Agent()\r\n    _ = cuda_lngru.get_next_state(xc, hc, is_initc, ac)\r\n    _ = cpu_lngru.get_next_state(x, h, is_init, a)\r\n    # With JIT, cuda and cpu. CPU works! CUDA doesn't...\r\n    cuda_lngru = torch.jit.script(Agent().to('cuda'))\r\n    cpu_lngru = torch.jit.script(Agent())\r\n    _ = cpu_lngru.get_next_state(x, h, is_init, a)\r\n    try:\r\n        _ = cuda_lngru.get_next_state(xc, hc, is_initc, ac)\r\n        _ = cuda_lngru.get_next_state(xc, _, is_initc, ac)\r\n    except Exception as e:\r\n        print(f'CUDA size error: \\n{e}')\r\n    # With JIT and assert, CUDA works\r\n    cuda_lngru = torch.jit.script(Agent(with_assert=True).to('cuda'))\r\n    _ = cuda_lngru.get_next_state(xc, hc, is_initc, ac)\r\n    print('Assert works!')\r\n    # With JIT and without the \"preactivation\" LayerNorm, CUDA works\r\n    cuda_lngru = torch.jit.script(Agent(with_preact=False).to('cuda'))\r\n    _ = cuda_lngru.get_next_state(xc, hc, is_initc, ac)\r\n    print('No preactivate works')\r\n```\n\n### Versions\n\nPyTorch version: 1.12.0\r\nIs debug build: False\r\nCUDA used to build PyTorch: 11.6\r\nROCM used to build PyTorch: N/A\r\n\r\nOS: Linux Mint 20.3 (x86_64)\r\nGCC version: (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0\r\nClang version: Could not collect\r\nCMake version: version 3.16.3\r\nLibc version: glibc-2.31\r\n\r\nPython version: 3.9.13 | packaged by conda-forge | (main, May 27 2022, 16:56:21)  [GCC 10.3.0] (64-bit runtime)\r\nPython platform: Linux-5.4.0-122-generic-x86_64-with-glibc2.31\r\nIs CUDA available: True\r\nCUDA runtime version: 11.7.64\r\nGPU models and configuration: GPU 0: NVIDIA GeForce RTX 2080\r\nNvidia driver version: 515.43.04\r\ncuDNN version: Could not collect\r\nHIP runtime version: N/A\r\nMIOpen runtime version: N/A\r\nIs XNNPACK available: True\r\n\r\nVersions of relevant libraries:\r\n[pip3] numpy==1.22.4\r\n[pip3] torch==1.12.0\r\n[pip3] torchaudio==0.12.0\r\n[pip3] torchvision==0.13.0\r\n[conda] blas                      2.115                       mkl    conda-forge\r\n[conda] blas-devel                3.9.0            15_linux64_mkl    conda-forge\r\n[conda] cudatoolkit               11.6.0              hecad31d_10    conda-forge\r\n[conda] ffmpeg                    4.3                  hf484d3e_0    pytorch\r\n[conda] libblas                   3.9.0            15_linux64_mkl    conda-forge\r\n[conda] libcblas                  3.9.0            15_linux64_mkl    conda-forge\r\n[conda] liblapack                 3.9.0            15_linux64_mkl    conda-forge\r\n[conda] liblapacke                3.9.0            15_linux64_mkl    conda-forge\r\n[conda] mkl                       2022.1.0           h84fe81f_915    conda-forge\r\n[conda] mkl-devel                 2022.1.0           ha770c72_916    conda-forge\r\n[conda] mkl-include               2022.1.0           h84fe81f_915    conda-forge\r\n[conda] numpy                     1.22.4                   pypi_0    pypi\r\n[conda] pytorch                   1.12.0          py3.9_cuda11.6_cudnn8.3.2_0    pytorch\r\n[conda] pytorch-mutex             1.0                        cuda    pytorch\r\n[conda] torchaudio                0.12.0               py39_cu116    pytorch\r\n[conda] torchvision               0.13.0               py39_cu116    pytorch\r\n",
        "closed_by": {
            "login": "pytorchmergebot",
            "id": 97764156,
            "node_id": "U_kgDOBdPDPA",
            "avatar_url": "https://avatars.githubusercontent.com/u/97764156?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pytorchmergebot",
            "html_url": "https://github.com/pytorchmergebot",
            "followers_url": "https://api.github.com/users/pytorchmergebot/followers",
            "following_url": "https://api.github.com/users/pytorchmergebot/following{/other_user}",
            "gists_url": "https://api.github.com/users/pytorchmergebot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pytorchmergebot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pytorchmergebot/subscriptions",
            "organizations_url": "https://api.github.com/users/pytorchmergebot/orgs",
            "repos_url": "https://api.github.com/users/pytorchmergebot/repos",
            "events_url": "https://api.github.com/users/pytorchmergebot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pytorchmergebot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/82889/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/82889/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/79963",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/79963/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/79963/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/79963/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/79963",
        "id": 1278947769,
        "node_id": "I_kwDOA-j9z85MOzG5",
        "number": 79963,
        "title": "Linkage of `void Lint(const AliasDb* db)` is internal",
        "user": {
            "login": "wschin",
            "id": 3524474,
            "node_id": "MDQ6VXNlcjM1MjQ0NzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3524474?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wschin",
            "html_url": "https://github.com/wschin",
            "followers_url": "https://api.github.com/users/wschin/followers",
            "following_url": "https://api.github.com/users/wschin/following{/other_user}",
            "gists_url": "https://api.github.com/users/wschin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wschin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wschin/subscriptions",
            "organizations_url": "https://api.github.com/users/wschin/orgs",
            "repos_url": "https://api.github.com/users/wschin/repos",
            "events_url": "https://api.github.com/users/wschin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wschin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2022-06-21T19:28:10Z",
        "updated_at": "2022-07-20T19:43:32Z",
        "closed_at": "2022-07-20T19:43:32Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "### \ud83d\udc1b Describe the bug\n\nI expect the function\r\n```c++\r\n// File: pytorch/torch/csrc/jit/ir/alias_analysis.h\r\nvoid Lint(const AliasDb* db);\r\n```\r\nhas external linkage so my library can reference it. However, I got a missing symbol error and ELF tool also shows\r\n\r\nFile: pytorch/torch/lib/libtorch_cpu.so\r\n1606970: 00000000072194fe   902 FUNC    `LOCAL`  DEFAULT   12 _ZN5torch3jit4LintEPKNS0_7AliasDbE\r\n\r\nAny idea to make it `GLOBAL`? Or this is by design?\n\n### Versions\n\nLatest Pytorch branch should reproduce it.",
        "closed_by": {
            "login": "pytorchmergebot",
            "id": 97764156,
            "node_id": "U_kgDOBdPDPA",
            "avatar_url": "https://avatars.githubusercontent.com/u/97764156?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pytorchmergebot",
            "html_url": "https://github.com/pytorchmergebot",
            "followers_url": "https://api.github.com/users/pytorchmergebot/followers",
            "following_url": "https://api.github.com/users/pytorchmergebot/following{/other_user}",
            "gists_url": "https://api.github.com/users/pytorchmergebot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pytorchmergebot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pytorchmergebot/subscriptions",
            "organizations_url": "https://api.github.com/users/pytorchmergebot/orgs",
            "repos_url": "https://api.github.com/users/pytorchmergebot/repos",
            "events_url": "https://api.github.com/users/pytorchmergebot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pytorchmergebot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/79963/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/79963/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/79583",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/79583/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/79583/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/79583/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/79583",
        "id": 1271486022,
        "node_id": "I_kwDOA-j9z85LyVZG",
        "number": 79583,
        "title": "Torchscript Serialisation is broken for numbers over 1000 if global locale is set",
        "user": {
            "login": "xsacha",
            "id": 61218,
            "node_id": "MDQ6VXNlcjYxMjE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/61218?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xsacha",
            "html_url": "https://github.com/xsacha",
            "followers_url": "https://api.github.com/users/xsacha/followers",
            "following_url": "https://api.github.com/users/xsacha/following{/other_user}",
            "gists_url": "https://api.github.com/users/xsacha/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xsacha/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xsacha/subscriptions",
            "organizations_url": "https://api.github.com/users/xsacha/orgs",
            "repos_url": "https://api.github.com/users/xsacha/repos",
            "events_url": "https://api.github.com/users/xsacha/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xsacha/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679952949,
                "node_id": "MDU6TGFiZWw2Nzk5NTI5NDk=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20binaries",
                "name": "oncall: binaries",
                "color": "f7e101",
                "default": false,
                "description": "Anything related to official binaries that we release to users"
            },
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1076930055,
                "node_id": "MDU6TGFiZWwxMDc2OTMwMDU1",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20cuda",
                "name": "module: cuda",
                "color": "f7e101",
                "default": false,
                "description": "Related to torch.cuda, and CUDA support in general"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "davidberard98",
            "id": 5067123,
            "node_id": "MDQ6VXNlcjUwNjcxMjM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5067123?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidberard98",
            "html_url": "https://github.com/davidberard98",
            "followers_url": "https://api.github.com/users/davidberard98/followers",
            "following_url": "https://api.github.com/users/davidberard98/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidberard98/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidberard98/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidberard98/subscriptions",
            "organizations_url": "https://api.github.com/users/davidberard98/orgs",
            "repos_url": "https://api.github.com/users/davidberard98/repos",
            "events_url": "https://api.github.com/users/davidberard98/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidberard98/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "davidberard98",
                "id": 5067123,
                "node_id": "MDQ6VXNlcjUwNjcxMjM=",
                "avatar_url": "https://avatars.githubusercontent.com/u/5067123?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidberard98",
                "html_url": "https://github.com/davidberard98",
                "followers_url": "https://api.github.com/users/davidberard98/followers",
                "following_url": "https://api.github.com/users/davidberard98/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidberard98/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidberard98/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidberard98/subscriptions",
                "organizations_url": "https://api.github.com/users/davidberard98/orgs",
                "repos_url": "https://api.github.com/users/davidberard98/repos",
                "events_url": "https://api.github.com/users/davidberard98/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidberard98/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 31,
        "created_at": "2022-06-15T00:01:32Z",
        "updated_at": "2022-06-21T13:51:45Z",
        "closed_at": "2022-06-21T13:51:45Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### \ud83d\udc1b Describe the bug\r\n\r\n>   File \"/home/sacha/.local/lib/python3.10/site-packages/torch/jit/_serialization.py\", line 162, in load\r\n>     cpp_module = torch._C.import_ir_module(cu, str(f), map_location, _extra_files)\r\n> RuntimeError: expected ) but found 'number' here:\r\n> Serialized   File \"code/__torch__/backbone/sacha.py\", line 189\r\n>   softmax2_blocks : __torch__.torch.nn.modules.container.___torch_mangle_550.Sequential\r\n>   last_blocks : __torch__.backbone.common.___torch_mangle_558.sacha_IR\r\n>   def forward(self.1,027: __torch__.backbone.sacha.AttentionModule_stage4,\r\n>                   ~~ <--- HERE\r\n>     argument_1: Tensor) -> Tensor:\r\n>     last_blocks = self.1,027.last_blocks\r\n> \r\n\r\nFor deeper models, I can no longer load the serialised model due to the commas placed in numbers >= 1000.\r\n\r\n### Versions\r\n\r\n1.12.0-dev\n\ncc @ezyang @seemethere @malfet @ngimel",
        "closed_by": {
            "login": "pytorchmergebot",
            "id": 97764156,
            "node_id": "U_kgDOBdPDPA",
            "avatar_url": "https://avatars.githubusercontent.com/u/97764156?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pytorchmergebot",
            "html_url": "https://github.com/pytorchmergebot",
            "followers_url": "https://api.github.com/users/pytorchmergebot/followers",
            "following_url": "https://api.github.com/users/pytorchmergebot/following{/other_user}",
            "gists_url": "https://api.github.com/users/pytorchmergebot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pytorchmergebot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pytorchmergebot/subscriptions",
            "organizations_url": "https://api.github.com/users/pytorchmergebot/orgs",
            "repos_url": "https://api.github.com/users/pytorchmergebot/repos",
            "events_url": "https://api.github.com/users/pytorchmergebot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pytorchmergebot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/79583/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/79583/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/79190",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/79190/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/79190/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/79190/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/79190",
        "id": 1265682013,
        "node_id": "I_kwDOA-j9z85LcMZd",
        "number": 79190,
        "title": "Compilation failure seen on 1.12 rc2 when trying to use pretty_print_onnx function",
        "user": {
            "login": "amitchawla1",
            "id": 44491848,
            "node_id": "MDQ6VXNlcjQ0NDkxODQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/44491848?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/amitchawla1",
            "html_url": "https://github.com/amitchawla1",
            "followers_url": "https://api.github.com/users/amitchawla1/followers",
            "following_url": "https://api.github.com/users/amitchawla1/following{/other_user}",
            "gists_url": "https://api.github.com/users/amitchawla1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/amitchawla1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/amitchawla1/subscriptions",
            "organizations_url": "https://api.github.com/users/amitchawla1/orgs",
            "repos_url": "https://api.github.com/users/amitchawla1/repos",
            "events_url": "https://api.github.com/users/amitchawla1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/amitchawla1/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2022-06-09T06:57:26Z",
        "updated_at": "2022-06-21T18:17:12Z",
        "closed_at": "2022-06-21T18:17:12Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### \ud83d\udc1b Describe the bug\n\nOn 1.12-rc2, Getting compilation error if trying to use function \"torch::jit::pretty_print_onnx\" by including file <torch/csrc/jit/serialization/export.h>\r\n\r\nGetting following error:\r\n\r\n/site-packages/torch/include/torch/csrc/jit/serialization/export_bytecode.h:11:10: fatal error: torch/csrc/jit/mobile/function.h: No such file or directory\r\n11 | #include <torch/csrc/jit/mobile/function.h>\r\n\r\nThis is because of no \"mobile\" folder in torch installation.\r\nProbably 'include/torch/csrc/jit/mobile/*.h' needs to be included in setup.py\n\n### Versions\n\nCollecting environment information...\r\nPyTorch version: 1.12.0a0+gite1edcac\r\nIs debug build: False\r\nCUDA used to build PyTorch: None\r\nROCM used to build PyTorch: N/A\r\n\r\nOS: Ubuntu 20.04.2 LTS (x86_64)\r\nGCC version: (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0\r\nClang version: 12.0.1 (ssh://gerrit:29418/tpc_llvm10 4f0317d1e33979c9fd564a3e129129f6d711409d)\r\nCMake version: version 3.20.2\r\nLibc version: glibc-2.31\r\n\r\nPython version: 3.8.13 (default, Mar 28 2022, 11:38:47)  [GCC 7.5.0] (64-bit runtime)\r\nPython platform: Linux-5.4.0-90-generic-x86_64-with-glibc2.17\r\nIs CUDA available: False\r\nCUDA runtime version: No CUDA\r\nGPU models and configuration: No CUDA\r\nNvidia driver version: No CUDA\r\ncuDNN version: No CUDA\r\nHIP runtime version: N/A\r\nMIOpen runtime version: N/A\r\nIs XNNPACK available: True\r\n\r\nVersions of relevant libraries:\r\n[pip3] numpy==1.22.3\r\n[pip3] pytorch-ranger==0.1.1\r\n[pip3] torch==1.12.0a0+gite1edcac\r\n[pip3] torch-optimizer==0.0.1a15\r\n[conda] mkl                       2022.0.2                 pypi_0    pypi\r\n[conda] mkl-include               2022.0.2                 pypi_0    pypi\r\n[conda] numpy                     1.22.3                   pypi_0    pypi\r\n[conda] torch                     1.12.0a0+gite1edcac          pypi_0    pypi",
        "closed_by": {
            "login": "pytorchmergebot",
            "id": 97764156,
            "node_id": "U_kgDOBdPDPA",
            "avatar_url": "https://avatars.githubusercontent.com/u/97764156?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pytorchmergebot",
            "html_url": "https://github.com/pytorchmergebot",
            "followers_url": "https://api.github.com/users/pytorchmergebot/followers",
            "following_url": "https://api.github.com/users/pytorchmergebot/following{/other_user}",
            "gists_url": "https://api.github.com/users/pytorchmergebot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pytorchmergebot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pytorchmergebot/subscriptions",
            "organizations_url": "https://api.github.com/users/pytorchmergebot/orgs",
            "repos_url": "https://api.github.com/users/pytorchmergebot/repos",
            "events_url": "https://api.github.com/users/pytorchmergebot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pytorchmergebot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/79190/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/79190/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/78787",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/78787/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/78787/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/78787/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/78787",
        "id": 1259131413,
        "node_id": "I_kwDOA-j9z85LDNIV",
        "number": 78787,
        "title": "torch.jit.script matches wrong version of repeat_interleave",
        "user": {
            "login": "davidberard98",
            "id": 5067123,
            "node_id": "MDQ6VXNlcjUwNjcxMjM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5067123?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidberard98",
            "html_url": "https://github.com/davidberard98",
            "followers_url": "https://api.github.com/users/davidberard98/followers",
            "following_url": "https://api.github.com/users/davidberard98/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidberard98/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidberard98/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidberard98/subscriptions",
            "organizations_url": "https://api.github.com/users/davidberard98/orgs",
            "repos_url": "https://api.github.com/users/davidberard98/repos",
            "events_url": "https://api.github.com/users/davidberard98/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidberard98/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 2063790344,
                "node_id": "MDU6TGFiZWwyMDYzNzkwMzQ0",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20correctness%20(silent)",
                "name": "module: correctness (silent)",
                "color": "f7e101",
                "default": false,
                "description": "issue that returns an incorrect result silently"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2022-06-03T01:12:07Z",
        "updated_at": "2022-06-09T23:37:49Z",
        "closed_at": "2022-06-09T23:37:49Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### \ud83d\udc1b Describe the bug\r\n\r\n```python\r\nimport torch\r\n\r\nfrom typing import List\r\n\r\ndef on_tensor(a, b) -> List[torch.Tensor]:\r\n    c = a.repeat_interleave(b)\r\n    return [c, a, b]\r\non_tensor_s = torch.jit.script(on_tensor)\r\n\r\ndef functional(a, b) -> List[torch.Tensor]:\r\n    c = torch.repeat_interleave(a, b)\r\n    return [c, a, b]\r\nfunctional_s = torch.jit.script(functional)\r\n\r\noffs = torch.tensor([0, 0, 2, 5, 7], dtype=torch.int64)\r\nlens = torch.tensor([0, 0, 5, 0, 4], dtype=torch.int64)\r\n\r\nr1 = on_tensor(offs, lens)\r\nr2 = on_tensor_s(offs, lens)\r\nprint(\"a.repeat_interleave(b)\")\r\nprint(r1)\r\nprint(r2)\r\nprint(on_tensor_s.graph)\r\n\r\nprint()\r\n\r\nprint(\"repeat_interleave(a, b\")\r\nr3 = functional(offs, lens)\r\nr4 = functional_s(offs, lens)\r\nprint(r3)\r\nprint(r4)\r\nprint(functional_s.graph)\r\n```\r\n\r\n`print(on_tensor_s.graph)` returns this:\r\n```\r\ngraph(%a.1 : Tensor,\r\n      %b.1 : Tensor):\r\n  %4 : NoneType = prim::Constant()\r\n  %c.1 : Tensor = aten::repeat_interleave(%b.1, %4) # /data/users/dberard/scripts/oncall/repeat-interleave.py:6:8\r\n  %9 : Tensor[] = prim::ListConstruct(%c.1, %a.1, %b.1)\r\n  return (%9)\r\n```\r\nin which `repeat_interleave` is isn't taking `%a` as an input.\r\n\r\ncc @dracifer who wrote most of this repro script^\r\n\r\n### Versions\r\n\r\nmaster branch",
        "closed_by": {
            "login": "davidberard98",
            "id": 5067123,
            "node_id": "MDQ6VXNlcjUwNjcxMjM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5067123?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidberard98",
            "html_url": "https://github.com/davidberard98",
            "followers_url": "https://api.github.com/users/davidberard98/followers",
            "following_url": "https://api.github.com/users/davidberard98/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidberard98/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidberard98/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidberard98/subscriptions",
            "organizations_url": "https://api.github.com/users/davidberard98/orgs",
            "repos_url": "https://api.github.com/users/davidberard98/repos",
            "events_url": "https://api.github.com/users/davidberard98/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidberard98/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/78787/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/78787/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/78331",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/78331/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/78331/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/78331/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/78331",
        "id": 1248970591,
        "node_id": "I_kwDOA-j9z85Kccdf",
        "number": 78331,
        "title": "`torch.load` does not propagate `map_location` arg to `torch.jit.load`",
        "user": {
            "login": "shenyih0ng",
            "id": 47914880,
            "node_id": "MDQ6VXNlcjQ3OTE0ODgw",
            "avatar_url": "https://avatars.githubusercontent.com/u/47914880?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shenyih0ng",
            "html_url": "https://github.com/shenyih0ng",
            "followers_url": "https://api.github.com/users/shenyih0ng/followers",
            "following_url": "https://api.github.com/users/shenyih0ng/following{/other_user}",
            "gists_url": "https://api.github.com/users/shenyih0ng/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shenyih0ng/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shenyih0ng/subscriptions",
            "organizations_url": "https://api.github.com/users/shenyih0ng/orgs",
            "repos_url": "https://api.github.com/users/shenyih0ng/repos",
            "events_url": "https://api.github.com/users/shenyih0ng/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shenyih0ng/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2022-05-26T01:16:00Z",
        "updated_at": "2022-06-14T16:04:49Z",
        "closed_at": "2022-06-14T16:04:49Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## Issue description\r\n\r\n`torch.load` checks if the given file is a torchscript zip and when it is found to be true, it delegates loading to `torch.jit.load`. However, arguments such as `map_location` is not propagated to the subsequent invocation of `torch.jit.load`(seen below L711).\r\n\r\nhttps://github.com/pytorch/pytorch/blob/e9d0f5fb17ad30939b7217f1a1d0552a6d005ba0/torch/serialization.py#L699-L713\r\n\r\n## Code example\r\n\r\nThis might be out of convention, but when trying to use `torch.load` as a generic way to load both torch and torchscript files, enforcing `torch.load` with `map_location=torch.device('cpu')` will have no effect on `torch.jit.load` since the arg is not propagated.\r\n\r\n```python\r\n'''\r\nThis following load of torchscript model does not enforce parameters \r\nto be mapped to a CPU when it is originally mapped to a GPU\r\n'''\r\ntorch.load('<torchscript-file-path>', map_location=torch.device('cpu')) # fails when no GPU is available\r\n```\r\n\r\n",
        "closed_by": {
            "login": "pytorchmergebot",
            "id": 97764156,
            "node_id": "U_kgDOBdPDPA",
            "avatar_url": "https://avatars.githubusercontent.com/u/97764156?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pytorchmergebot",
            "html_url": "https://github.com/pytorchmergebot",
            "followers_url": "https://api.github.com/users/pytorchmergebot/followers",
            "following_url": "https://api.github.com/users/pytorchmergebot/following{/other_user}",
            "gists_url": "https://api.github.com/users/pytorchmergebot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pytorchmergebot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pytorchmergebot/subscriptions",
            "organizations_url": "https://api.github.com/users/pytorchmergebot/orgs",
            "repos_url": "https://api.github.com/users/pytorchmergebot/repos",
            "events_url": "https://api.github.com/users/pytorchmergebot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pytorchmergebot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/78331/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/78331/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/78206",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/78206/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/78206/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/78206/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/78206",
        "id": 1247125565,
        "node_id": "I_kwDOA-j9z85KVaA9",
        "number": 78206,
        "title": "Deprecate `TSNodeLoweringInterface`",
        "user": {
            "login": "antoniojkim",
            "id": 17433012,
            "node_id": "MDQ6VXNlcjE3NDMzMDEy",
            "avatar_url": "https://avatars.githubusercontent.com/u/17433012?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/antoniojkim",
            "html_url": "https://github.com/antoniojkim",
            "followers_url": "https://api.github.com/users/antoniojkim/followers",
            "following_url": "https://api.github.com/users/antoniojkim/following{/other_user}",
            "gists_url": "https://api.github.com/users/antoniojkim/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/antoniojkim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/antoniojkim/subscriptions",
            "organizations_url": "https://api.github.com/users/antoniojkim/orgs",
            "repos_url": "https://api.github.com/users/antoniojkim/repos",
            "events_url": "https://api.github.com/users/antoniojkim/events{/privacy}",
            "received_events_url": "https://api.github.com/users/antoniojkim/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1311538328,
                "node_id": "MDU6TGFiZWwxMzExNTM4MzI4",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20xla",
                "name": "module: xla",
                "color": "f7e101",
                "default": false,
                "description": "Related to XLA support"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2022-05-24T21:05:27Z",
        "updated_at": "2022-05-31T18:09:16Z",
        "closed_at": "2022-05-31T18:09:16Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "### \ud83d\ude80 The feature, motivation and pitch\n\nAs a follow up to #76535, I'd like to propose a change that would effectively remove the need for `TSNodeLoweringInterface`.\r\n\r\nRight now, there is a function called `LowerNonCodegenOps` which dispatches the `lower` function depending on the op type. However, I don't think there is any need to do this. By declaring\r\n```c++\r\nTSOpVector Lower(std::shared_ptr<torch::jit::GraphFunction> function,\r\n                 TSLoweringContext* loctx) const override;\r\n```\r\nfor those IR nodes (which is very easily done now that they are being codegen'd), we can implement those lowering functions inside `ts_node_lowerings.cpp`. This would remove the need to cast and dispatch those nodes in the `LowerNonCodegenOps` function which effectively means that we could deprecate `TSNodeLoweringInterface` altogether.\r\n\r\n@wconstab @desertfire Thoughts?\n\n### Alternatives\n\n_No response_\n\n### Additional context\n\n_No response_\n\ncc @bdhirsh",
        "closed_by": {
            "login": "pytorchmergebot",
            "id": 97764156,
            "node_id": "U_kgDOBdPDPA",
            "avatar_url": "https://avatars.githubusercontent.com/u/97764156?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pytorchmergebot",
            "html_url": "https://github.com/pytorchmergebot",
            "followers_url": "https://api.github.com/users/pytorchmergebot/followers",
            "following_url": "https://api.github.com/users/pytorchmergebot/following{/other_user}",
            "gists_url": "https://api.github.com/users/pytorchmergebot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pytorchmergebot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pytorchmergebot/subscriptions",
            "organizations_url": "https://api.github.com/users/pytorchmergebot/orgs",
            "repos_url": "https://api.github.com/users/pytorchmergebot/repos",
            "events_url": "https://api.github.com/users/pytorchmergebot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pytorchmergebot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/78206/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/78206/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/77561",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/77561/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/77561/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/77561/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/77561",
        "id": 1237410973,
        "node_id": "I_kwDOA-j9z85JwWSd",
        "number": 77561,
        "title": "Unhandled std::out_of_range exception in torch::jit::load()",
        "user": {
            "login": "apach301",
            "id": 13482580,
            "node_id": "MDQ6VXNlcjEzNDgyNTgw",
            "avatar_url": "https://avatars.githubusercontent.com/u/13482580?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/apach301",
            "html_url": "https://github.com/apach301",
            "followers_url": "https://api.github.com/users/apach301/followers",
            "following_url": "https://api.github.com/users/apach301/following{/other_user}",
            "gists_url": "https://api.github.com/users/apach301/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/apach301/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/apach301/subscriptions",
            "organizations_url": "https://api.github.com/users/apach301/orgs",
            "repos_url": "https://api.github.com/users/apach301/repos",
            "events_url": "https://api.github.com/users/apach301/events{/privacy}",
            "received_events_url": "https://api.github.com/users/apach301/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2022-05-16T16:34:27Z",
        "updated_at": "2022-06-02T23:27:48Z",
        "closed_at": "2022-06-02T23:26:10Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### \ud83d\udc1b Describe the bug\r\n\r\nHi,\r\nI found uncaught exception during testing with libFuzzer.\r\nThe out_of_range exception occurs at `/pytorch/aten/src/ATen/core/ivalue_inl.h:501` during execution of torch::jit::load() funciton:\r\n```\r\n    498          TORCH_CHECK(idx < inlineSize_, \\\"TupleElements: invalid index Index = \\\", idx, \\\"; Length = \\\", inlineSize_);\r\n    499          return elementsInline_[idx];\r\n    500        } else {\r\n--->501          return elementsVector_.at(idx);\r\n    502        }\r\n    503      }\r\n    504    \r\n    505      C10_NODISCARD iterator begin() {\r\n    506        if (inlineSize_) {\r\n    507          return elementsInline_;\r\n    508        } else {\r\n    509          return elementsVector_.data()\r\n\r\n```\r\n\r\nThe bug could be reproduced with `aot_model_compiler` binary:\r\n```\r\naot_model_compiler --model=crash-file --model_name=name --model_version=1 --input_dims='1,3,224,224;2,2' --input_types='float;float'\r\n```\r\nCrashing file is provided in [crash.zip](https://github.com/pytorch/pytorch/files/8701735/crash.zip)\r\n\r\nAsan output is:\r\n```\r\n  \"AsanReport\": [\r\n    \"==142006== ERROR: libFuzzer: deadly signal\\n\",\r\n    \"[Detaching after fork from child process 142353]\\n\",\r\n    \"    #0 0x59ec11 in __sanitizer_print_stack_trace /llvm-project/compiler-rt/lib/asan/asan_stack.cpp:87:3\\n\",\r\n    \"    #1 0x513547 in fuzzer::PrintStackTrace() /llvm-project/compiler-rt/lib/fuzzer/FuzzerUtil.cpp:210:5\\n\",\r\n    \"    #2 0x4f9753 in fuzzer::Fuzzer::CrashCallback() /llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:233:3\\n\",\r\n    \"    #3 0x7f402f8a63bf  (/lib/x86_64-linux-gnu/libpthread.so.0+0x153bf)\\n\",\r\n    \"    #4 0x7f402f6c818a in __libc_signal_restore_set /build/glibc-eX1tMB/glibc-2.31/signal/../sysdeps/unix/sysv/linux/internal-signals.h:86:3\\n\",\r\n    \"    #5 0x7f402f6c818a in raise /build/glibc-eX1tMB/glibc-2.31/signal/../sysdeps/unix/sysv/linux/raise.c:48:3\\n\",\r\n    \"    #6 0x7f402f6a7858 in abort /build/glibc-eX1tMB/glibc-2.31/stdlib/abort.c:79:7\\n\",\r\n    \"    #7 0x7f402fab2910  (/lib/x86_64-linux-gnu/libstdc++.so.6+0x9e910)\\n\",\r\n    \"    #8 0x7f402fabe38b  (/lib/x86_64-linux-gnu/libstdc++.so.6+0xaa38b)\\n\",\r\n    \"    #9 0x7f402fabe3f6 in std::terminate() (/lib/x86_64-linux-gnu/libstdc++.so.6+0xaa3f6)\\n\",\r\n    \"    #10 0x7f402fabe6a8 in __cxa_throw (/lib/x86_64-linux-gnu/libstdc++.so.6+0xaa6a8)\\n\",\r\n    \"    #11 0x7f402fab53aa  (/lib/x86_64-linux-gnu/libstdc++.so.6+0xa13aa)\\n\",\r\n    \"    #12 0x6a4cdf in std::vector<c10::IValue, std::allocator<c10::IValue> >::_M_range_check(unsigned long) const /usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/stl_vector.h:1073:4\\n\",\r\n    \"    #13 0x9315ee3 in std::vector<c10::IValue, std::allocator<c10::IValue> >::at(unsigned long) const /usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/stl_vector.h:1112:2\\n\",\r\n    \"    #14 0x9315ee3 in c10::ivalue::TupleElements::at(unsigned long) const /pytorch_fuzz/aten/src/ATen/core/ivalue_inl.h:501:30\\n\",\r\n    \"    #15 0x9ec5505 in torch::jit::restoreAccurateTypeTags(c10::IValue const&, c10::Type::SingletonOrSharedTypePtr<c10::Type> const&) /pytorch_fuzz/torch/csrc/jit/serialization/unpickler.cpp:97:64\\n\",\r\n    \"    #16 0x9e0514b in torch::jit::(anonymous namespace)::ScriptModuleDeserializer::readArchive(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::$_1::operator()(c10::StrongTypePtr const&, c10::IValue) const /pytorch_fuzz/torch/csrc/jit/serialization/import.cpp:157:7\\n\",\r\n    \"    #17 0x9e0514b in c10::intrusive_ptr<c10::ivalue::Object, c10::detail::intrusive_target_default_null_type<c10::ivalue::Object> > std::__invoke_impl<c10::intrusive_ptr<c10::ivalue::Object, c10::detail::intrusive_target_default_null_type<c10::ivalue::Object> >, torch::jit::(anonymous namespace)::ScriptModuleDeserializer::readArchive(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::$_1&, c10::StrongTypePtr, c10::IValue>(std::__invoke_other, torch::jit::(anonymous namespace)::ScriptModuleDeserializer::readArchive(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::$_1&, c10::StrongTypePtr&&, c10::IValue&&) /usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/invoke.h:60:14\\n\",\r\n    \"    #18 0x9e044b0 in std::enable_if<__and_<std::__not_<std::is_void<c10::intrusive_ptr<c10::ivalue::Object, c10::detail::intrusive_target_default_null_type<c10::ivalue::Object> > > >, std::is_convertible<std::__invoke_result<torch::jit::(anonymous namespace)::ScriptModuleDeserializer::readArchive(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::$_1&, c10::StrongTypePtr, c10::IValue>::type, c10::intrusive_ptr<c10::ivalue::Object, c10::detail::intrusive_target_default_null_type<c10::ivalue::Object> > > >::value, c10::intrusive_ptr<c10::ivalue::Object, c10::detail::intrusive_target_default_null_type<c10::ivalue::Object> > >::type std::__invoke_r<c10::intrusive_ptr<c10::ivalue::Object, c10::detail::intrusive_target_default_null_type<c10::ivalue::Object> >, torch::jit::(anonymous namespace)::ScriptModuleDeserializer::readArchive(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::$_1&, c10::StrongTypePtr, c10::IValue>(torch::jit::(anonymous namespace)::ScriptModuleDeserializer::readArchive(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::$_1&, c10::StrongTypePtr&&, c10::IValue&&) /usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/invoke.h:141:14\\n\",\r\n    \"    #19 0x9e0431b in std::_Function_handler<c10::intrusive_ptr<c10::ivalue::Object, c10::detail::intrusive_target_default_null_type<c10::ivalue::Object> > (c10::StrongTypePtr, c10::IValue), torch::jit::(anonymous namespace)::ScriptModuleDeserializer::readArchive(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::$_1>::_M_invoke(std::_Any_data const&, c10::StrongTypePtr&&, c10::IValue&&) /usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/std_function.h:291:9\\n\",\r\n    \"    #20 0x9eed44d in std::function<c10::intrusive_ptr<c10::ivalue::Object, c10::detail::intrusive_target_default_null_type<c10::ivalue::Object> > (c10::StrongTypePtr, c10::IValue)>::operator()(c10::StrongTypePtr, c10::IValue) const /usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/std_function.h:622:14\\n\",\r\n    \"    #21 0x9eed0ee in torch::jit::Unpickler::readGlobal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::$_9::operator()() const /pytorch_fuzz/torch/csrc/jit/serialization/unpickler.cpp:704:20\\n\",\r\n    \"    #22 0x9eed0ee in void std::__invoke_impl<void, torch::jit::Unpickler::readGlobal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::$_9&>(std::__invoke_other, torch::jit::Unpickler::readGlobal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::$_9&) /usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/invoke.h:60:14\\n\",\r\n    \"    #23 0x9ecb6d4 in torch::jit::Unpickler::readInstruction() /pytorch_fuzz/torch/csrc/jit/serialization/unpickler.cpp:444:7\\n\",\r\n    \"    #24 0x9ec9ac7 in torch::jit::Unpickler::run() /pytorch_fuzz/torch/csrc/jit/serialization/unpickler.cpp:226:27\\n\",\r\n    \"    #25 0x9ec9762 in torch::jit::Unpickler::parse_ivalue() /pytorch_fuzz/torch/csrc/jit/serialization/unpickler.cpp:183:3\\n\",\r\n    \"    #26 0x9e0c84e in torch::jit::readArchiveAndTensors(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, c10::optional<std::function<c10::StrongTypePtr (c10::QualifiedName const&)> >, c10::optional<std::function<c10::intrusive_ptr<c10::ivalue::Object, c10::detail::intrusive_target_default_null_type<c10::ivalue::Object> > (c10::StrongTypePtr, c10::IValue)> >, c10::optional<c10::Device>, caffe2::serialize::PyTorchStreamReader&, c10::Type::SingletonOrSharedTypePtr<c10::Type> (*)(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&), std::shared_ptr<torch::jit::DeserializationStorageContext>) /pytorch_fuzz/torch/csrc/jit/serialization/import_read.cpp:54:20\\n\",\r\n    \"    #27 0x9e02779 in torch::jit::(anonymous namespace)::ScriptModuleDeserializer::readArchive(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) /pytorch_fuzz/torch/csrc/jit/serialization/import.cpp:171:10\\n\",\r\n    \"    #28 0x9dfe60b in torch::jit::(anonymous namespace)::ScriptModuleDeserializer::deserialize(c10::optional<c10::Device>, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&) /pytorch_fuzz/torch/csrc/jit/serialization/import.cpp:274:19\\n\",\r\n    \"    #29 0x9e013c4 in torch::jit::load(std::shared_ptr<caffe2::serialize::ReadAdapterInterface>, c10::optional<c10::Device>, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&) /pytorch_fuzz/torch/csrc/jit/serialization/import.cpp:403:23\\n\",\r\n    \"    #30 0x9e01977 in torch::jit::load(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, c10::optional<c10::Device>, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&) /pytorch_fuzz/torch/csrc/jit/serialization/import.cpp:375:17\\n\",\r\n    \"    #31 0x9e0176c in torch::jit::load(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, c10::optional<c10::Device>) /pytorch_fuzz/torch/csrc/jit/serialization/import.cpp:367:10\\n\",\r\n    \"    #32 0x5cdfd2 in LLVMFuzzerTestOneInput /load_fuzz.cc:45:18\\n\",\r\n    \"    #33 0x4fac81 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:611:15\\n\",\r\n    \"    #34 0x4e4b9c in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:324:6\\n\",\r\n    \"    #35 0x4ea8eb in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:860:9\\n\",\r\n    \"    #36 0x513e82 in main /llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10\\n\",\r\n    \"    #37 0x7f402f6a90b2 in __libc_start_main /build/glibc-eX1tMB/glibc-2.31/csu/../csu/libc-start.c:308:16\\n\",\r\n    \"    #38 0x4df4bd in _start (/fuzz/load_fuzz+0x4df4bd)\\n\",\r\n```\r\n\r\n\r\n### Versions\r\n\r\nPyTorch version: 1.12.0a0\r\nIs debug build: False\r\nCUDA used to build PyTorch: None\r\nROCM used to build PyTorch: N/A\r\n\r\nOS: Ubuntu 20.04.3 LTS (x86_64)\r\nGCC version: (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0\r\nClang version: 14.0.0 (https://github.com/llvm/llvm-project.git de5b16d8ca2d14ff0d9b6be9cf40566bc7eb5a01)\r\nCMake version: version 3.22.4\r\nLibc version: glibc-2.31\r\n\r\nPython version: 3.8.10 (default, Nov 26 2021, 20:14:08)  [GCC 9.3.0] (64-bit runtime)\r\nPython platform: Linux-4.15.0-175-generic-x86_64-with-glibc2.29\r\nIs CUDA available: False\r\nCUDA runtime version: No CUDA\r\nGPU models and configuration: No CUDA\r\nNvidia driver version: No CUDA\r\ncuDNN version: No CUDA\r\nHIP runtime version: N/A\r\nMIOpen runtime version: N/A\r\nIs XNNPACK available: N/A\r\n\r\nVersions of relevant libraries:\r\n[pip3] numpy==1.22.2\r\n[conda] Could not collect",
        "closed_by": {
            "login": "Gamrix",
            "id": 7299303,
            "node_id": "MDQ6VXNlcjcyOTkzMDM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7299303?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Gamrix",
            "html_url": "https://github.com/Gamrix",
            "followers_url": "https://api.github.com/users/Gamrix/followers",
            "following_url": "https://api.github.com/users/Gamrix/following{/other_user}",
            "gists_url": "https://api.github.com/users/Gamrix/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Gamrix/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Gamrix/subscriptions",
            "organizations_url": "https://api.github.com/users/Gamrix/orgs",
            "repos_url": "https://api.github.com/users/Gamrix/repos",
            "events_url": "https://api.github.com/users/Gamrix/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Gamrix/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/77561/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/77561/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/77111",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/77111/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/77111/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/77111/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/77111",
        "id": 1230343522,
        "node_id": "I_kwDOA-j9z85JVY1i",
        "number": 77111,
        "title": "Support torch.is_autocast_enabled in jit",
        "user": {
            "login": "ngimel",
            "id": 15841449,
            "node_id": "MDQ6VXNlcjE1ODQxNDQ5",
            "avatar_url": "https://avatars.githubusercontent.com/u/15841449?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ngimel",
            "html_url": "https://github.com/ngimel",
            "followers_url": "https://api.github.com/users/ngimel/followers",
            "following_url": "https://api.github.com/users/ngimel/following{/other_user}",
            "gists_url": "https://api.github.com/users/ngimel/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ngimel/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ngimel/subscriptions",
            "organizations_url": "https://api.github.com/users/ngimel/orgs",
            "repos_url": "https://api.github.com/users/ngimel/repos",
            "events_url": "https://api.github.com/users/ngimel/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ngimel/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "davidberard98",
            "id": 5067123,
            "node_id": "MDQ6VXNlcjUwNjcxMjM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5067123?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidberard98",
            "html_url": "https://github.com/davidberard98",
            "followers_url": "https://api.github.com/users/davidberard98/followers",
            "following_url": "https://api.github.com/users/davidberard98/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidberard98/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidberard98/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidberard98/subscriptions",
            "organizations_url": "https://api.github.com/users/davidberard98/orgs",
            "repos_url": "https://api.github.com/users/davidberard98/repos",
            "events_url": "https://api.github.com/users/davidberard98/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidberard98/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "davidberard98",
                "id": 5067123,
                "node_id": "MDQ6VXNlcjUwNjcxMjM=",
                "avatar_url": "https://avatars.githubusercontent.com/u/5067123?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidberard98",
                "html_url": "https://github.com/davidberard98",
                "followers_url": "https://api.github.com/users/davidberard98/followers",
                "following_url": "https://api.github.com/users/davidberard98/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidberard98/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidberard98/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidberard98/subscriptions",
                "organizations_url": "https://api.github.com/users/davidberard98/orgs",
                "repos_url": "https://api.github.com/users/davidberard98/repos",
                "events_url": "https://api.github.com/users/davidberard98/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidberard98/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2022-05-09T22:58:40Z",
        "updated_at": "2023-05-30T18:00:57Z",
        "closed_at": "2023-05-30T18:00:57Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "see #76394, we need it in scripted models to properly disable fast path. \r\ncc @eellison ",
        "closed_by": {
            "login": "ngimel",
            "id": 15841449,
            "node_id": "MDQ6VXNlcjE1ODQxNDQ5",
            "avatar_url": "https://avatars.githubusercontent.com/u/15841449?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ngimel",
            "html_url": "https://github.com/ngimel",
            "followers_url": "https://api.github.com/users/ngimel/followers",
            "following_url": "https://api.github.com/users/ngimel/following{/other_user}",
            "gists_url": "https://api.github.com/users/ngimel/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ngimel/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ngimel/subscriptions",
            "organizations_url": "https://api.github.com/users/ngimel/orgs",
            "repos_url": "https://api.github.com/users/ngimel/repos",
            "events_url": "https://api.github.com/users/ngimel/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ngimel/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/77111/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/77111/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/77068",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/77068/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/77068/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/77068/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/77068",
        "id": 1229628629,
        "node_id": "I_kwDOA-j9z85JSqTV",
        "number": 77068,
        "title": "torch.jit.Attribute is broken",
        "user": {
            "login": "janvainer",
            "id": 31015638,
            "node_id": "MDQ6VXNlcjMxMDE1NjM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/31015638?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/janvainer",
            "html_url": "https://github.com/janvainer",
            "followers_url": "https://api.github.com/users/janvainer/followers",
            "following_url": "https://api.github.com/users/janvainer/following{/other_user}",
            "gists_url": "https://api.github.com/users/janvainer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/janvainer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/janvainer/subscriptions",
            "organizations_url": "https://api.github.com/users/janvainer/orgs",
            "repos_url": "https://api.github.com/users/janvainer/repos",
            "events_url": "https://api.github.com/users/janvainer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/janvainer/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2022-05-09T12:25:00Z",
        "updated_at": "2022-05-11T01:36:02Z",
        "closed_at": "2022-05-11T01:36:02Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### \ud83d\udc1b Describe the bug\n\nRunning example from [pytorch docs ](https://pytorch.org/docs/stable/generated/torch.jit.Attribute.html#torch.jit.Attribute) for `Attribute` is not working:\r\n\r\n```\r\nimport torch\r\nfrom typing import Dict\r\n\r\nclass AttributeModule(torch.nn.Module):\r\n    def __init__(self):\r\n        super().__init__()\r\n        self.foo = torch.jit.Attribute(0.1, float)\r\n\r\n        # we should be able to use self.foo as a float here\r\n        assert 0.0 < self.foo\r\n\r\n        self.names_ages = torch.jit.Attribute({}, Dict[str, int])\r\n        self.names_ages[\"someone\"] = 20\r\n        assert isinstance(self.names_ages[\"someone\"], int)\r\n\r\nm = AttributeModule()\r\n```\r\n\r\nI am getting \r\n```\r\nTypeError                                 Traceback (most recent call last)\r\nInput In [87], in <cell line: 16>()\r\n     13         self.names_ages[\"someone\"] = 20\r\n     14         assert isinstance(self.names_ages[\"someone\"], int)\r\n---> 16 m = AttributeModule()\r\n\r\nInput In [87], in AttributeModule.__init__(self)\r\n      7 self.foo = torch.jit.Attribute(0.1, float)\r\n      9 # we should be able to use self.foo as a float here\r\n---> 10 assert 0.0 < self.foo\r\n     12 self.names_ages = torch.jit.Attribute({}, Dict[str, int])\r\n     13 self.names_ages[\"someone\"] = 20\r\n\r\nTypeError: '<' not supported between instances of 'float' and 'Attribute'\r\n```\n\n### Versions\n\ntorch 1.11.0",
        "closed_by": {
            "login": "davidberard98",
            "id": 5067123,
            "node_id": "MDQ6VXNlcjUwNjcxMjM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5067123?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidberard98",
            "html_url": "https://github.com/davidberard98",
            "followers_url": "https://api.github.com/users/davidberard98/followers",
            "following_url": "https://api.github.com/users/davidberard98/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidberard98/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidberard98/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidberard98/subscriptions",
            "organizations_url": "https://api.github.com/users/davidberard98/orgs",
            "repos_url": "https://api.github.com/users/davidberard98/repos",
            "events_url": "https://api.github.com/users/davidberard98/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidberard98/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/77068/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/77068/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/76602",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/76602/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/76602/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/76602/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/76602",
        "id": 1221455879,
        "node_id": "I_kwDOA-j9z85IzfAH",
        "number": 76602,
        "title": "`ParameterDict` doesn't work in TorchScript",
        "user": {
            "login": "Linux-cpp-lisp",
            "id": 1473644,
            "node_id": "MDQ6VXNlcjE0NzM2NDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1473644?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Linux-cpp-lisp",
            "html_url": "https://github.com/Linux-cpp-lisp",
            "followers_url": "https://api.github.com/users/Linux-cpp-lisp/followers",
            "following_url": "https://api.github.com/users/Linux-cpp-lisp/following{/other_user}",
            "gists_url": "https://api.github.com/users/Linux-cpp-lisp/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Linux-cpp-lisp/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Linux-cpp-lisp/subscriptions",
            "organizations_url": "https://api.github.com/users/Linux-cpp-lisp/orgs",
            "repos_url": "https://api.github.com/users/Linux-cpp-lisp/repos",
            "events_url": "https://api.github.com/users/Linux-cpp-lisp/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Linux-cpp-lisp/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2022-04-29T19:49:27Z",
        "updated_at": "2022-05-13T21:55:32Z",
        "closed_at": "2022-05-13T21:55:32Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### \ud83d\udc1b Describe the bug\n\n```\r\nIn [1]: import torch\r\n\r\nIn [2]: torch.__version__\r\nOut[2]: '1.12.0.dev20220412'\r\n\r\nIn [3]: import torch as th\r\n   ...: \r\n   ...: \r\n   ...: class TestMod(th.nn.Module):\r\n   ...:     def __init__(self):\r\n   ...:         super().__init__()\r\n   ...:         self.params = th.nn.ParameterDict(\r\n   ...:             {\"hi\": th.nn.Parameter(th.zeros(3)), \"bye\": th.nn.Parameter(th.zeros(3))}\r\n   ...:         )\r\n   ...: \r\n   ...:     def forward(self, x):\r\n   ...:         return x + self.params[\"hi\"] + self.params[\"bye\"]\r\n   ...: \r\n   ...: \r\n   ...: mod = TestMod()\r\n   ...: smod = th.jit.script(mod)\r\n```\r\ngives\r\n```\r\nRuntimeError: \r\nOnly ModuleList, Sequential, and ModuleDict modules are subscriptable:\r\n  File \"<ipython-input-3-6fafe8d819b8>\", line 12\r\n    def forward(self, x):\r\n        return x + self.params[\"hi\"] + self.params[\"bye\"]\r\n                   ~~~~~~~~~~~~~~~~ <--- HERE\r\n```\r\n\r\nSee https://github.com/pytorch/pytorch/issues/25367.\n\n### Versions\n\nOccurs also on 1.10 stable.",
        "closed_by": {
            "login": "davidberard98",
            "id": 5067123,
            "node_id": "MDQ6VXNlcjUwNjcxMjM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5067123?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidberard98",
            "html_url": "https://github.com/davidberard98",
            "followers_url": "https://api.github.com/users/davidberard98/followers",
            "following_url": "https://api.github.com/users/davidberard98/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidberard98/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidberard98/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidberard98/subscriptions",
            "organizations_url": "https://api.github.com/users/davidberard98/orgs",
            "repos_url": "https://api.github.com/users/davidberard98/repos",
            "events_url": "https://api.github.com/users/davidberard98/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidberard98/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/76602/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/76602/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/75866",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/75866/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/75866/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/75866/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/75866",
        "id": 1205442349,
        "node_id": "I_kwDOA-j9z85H2Zct",
        "number": 75866,
        "title": "[JIT] [Autocast] Autocast Pass induce warning in Jit Trace",
        "user": {
            "login": "leslie-fang-intel",
            "id": 53841472,
            "node_id": "MDQ6VXNlcjUzODQxNDcy",
            "avatar_url": "https://avatars.githubusercontent.com/u/53841472?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/leslie-fang-intel",
            "html_url": "https://github.com/leslie-fang-intel",
            "followers_url": "https://api.github.com/users/leslie-fang-intel/followers",
            "following_url": "https://api.github.com/users/leslie-fang-intel/following{/other_user}",
            "gists_url": "https://api.github.com/users/leslie-fang-intel/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/leslie-fang-intel/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/leslie-fang-intel/subscriptions",
            "organizations_url": "https://api.github.com/users/leslie-fang-intel/orgs",
            "repos_url": "https://api.github.com/users/leslie-fang-intel/repos",
            "events_url": "https://api.github.com/users/leslie-fang-intel/events{/privacy}",
            "received_events_url": "https://api.github.com/users/leslie-fang-intel/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "davidberard98",
            "id": 5067123,
            "node_id": "MDQ6VXNlcjUwNjcxMjM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5067123?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidberard98",
            "html_url": "https://github.com/davidberard98",
            "followers_url": "https://api.github.com/users/davidberard98/followers",
            "following_url": "https://api.github.com/users/davidberard98/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidberard98/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidberard98/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidberard98/subscriptions",
            "organizations_url": "https://api.github.com/users/davidberard98/orgs",
            "repos_url": "https://api.github.com/users/davidberard98/repos",
            "events_url": "https://api.github.com/users/davidberard98/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidberard98/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "davidberard98",
                "id": 5067123,
                "node_id": "MDQ6VXNlcjUwNjcxMjM=",
                "avatar_url": "https://avatars.githubusercontent.com/u/5067123?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidberard98",
                "html_url": "https://github.com/davidberard98",
                "followers_url": "https://api.github.com/users/davidberard98/followers",
                "following_url": "https://api.github.com/users/davidberard98/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidberard98/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidberard98/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidberard98/subscriptions",
                "organizations_url": "https://api.github.com/users/davidberard98/orgs",
                "repos_url": "https://api.github.com/users/davidberard98/repos",
                "events_url": "https://api.github.com/users/davidberard98/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidberard98/received_events",
                "type": "User",
                "site_admin": false
            },
            {
                "login": "leslie-fang-intel",
                "id": 53841472,
                "node_id": "MDQ6VXNlcjUzODQxNDcy",
                "avatar_url": "https://avatars.githubusercontent.com/u/53841472?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/leslie-fang-intel",
                "html_url": "https://github.com/leslie-fang-intel",
                "followers_url": "https://api.github.com/users/leslie-fang-intel/followers",
                "following_url": "https://api.github.com/users/leslie-fang-intel/following{/other_user}",
                "gists_url": "https://api.github.com/users/leslie-fang-intel/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/leslie-fang-intel/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/leslie-fang-intel/subscriptions",
                "organizations_url": "https://api.github.com/users/leslie-fang-intel/orgs",
                "repos_url": "https://api.github.com/users/leslie-fang-intel/repos",
                "events_url": "https://api.github.com/users/leslie-fang-intel/events{/privacy}",
                "received_events_url": "https://api.github.com/users/leslie-fang-intel/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 3,
        "created_at": "2022-04-15T09:47:08Z",
        "updated_at": "2022-05-08T20:58:17Z",
        "closed_at": "2022-05-08T20:58:17Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "### \ud83d\udc1b Describe the bug\n\nWe find after we enable the Autocast Pass as default https://github.com/pytorch/pytorch/pull/74178 . There are lots of calculation error warning in `Jit Trace`.\r\n\r\nHere is the code to reproduce this error:\r\n```\r\nimport torch\r\nimport torch.nn as nn\r\n\r\nclass AtenSoftmaxRepalce(nn.Module):\r\n    def __init__(self, dim=-1):\r\n        super(AtenSoftmaxRepalce, self).__init__()\r\n        self.conv = torch.nn.Conv2d(3, 64, (3, 3), stride=(2, 2), padding=(1, 1), bias=False)\r\n        self.softmax = torch.nn.Softmax(dim)\r\n\r\n    def forward(self, x):\r\n        x1 = self.conv(x)\r\n        return self.softmax(x1)\r\n\r\nmodel = AtenSoftmaxRepalce()\r\nmodel.eval()\r\n\r\nx = torch.rand(1, 3, 224, 224).to(torch.bfloat16)\r\n\r\nwith torch.no_grad():\r\n    with torch.cpu.amp.autocast(cache_enabled=False):\r\n        model = torch.jit.trace(model, x).eval()\r\n```\r\nHere is the details of warning message:\r\n```\r\n/home/lesliefang/pytorch_1_7_1/Autocast_Pytorch/pytorch/torch/jit/_trace.py:983: TracerWarning: Output nr 1. of the traced function does not match the corresponding output of the Python function. Detailed error:\r\nTensor-likes are not close!\r\n\r\nMismatched elements: 595329 / 802816 (74.2%)\r\nGreatest absolute difference: 0.00012071523815393448 at index (0, 63, 43, 30) (up to 1e-05 allowed)\r\nGreatest relative difference: 0.01244930820610687 at index (0, 27, 106, 34) (up to 1e-05 allowed)\r\n\r\n  _check_trace(\r\n```\r\n\r\nIf we disable the Autocast Pass (https://github.com/pytorch/pytorch/blob/master/torch/csrc/jit/passes/autocast.cpp#L22), we will not see this warning messages.\n\n### Versions\n\nAnd we are using stock pytorch with commit: 123297a8c02e0ebbf8b0ae3d3cb16d0dc2e350b4.",
        "closed_by": {
            "login": "davidberard98",
            "id": 5067123,
            "node_id": "MDQ6VXNlcjUwNjcxMjM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5067123?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidberard98",
            "html_url": "https://github.com/davidberard98",
            "followers_url": "https://api.github.com/users/davidberard98/followers",
            "following_url": "https://api.github.com/users/davidberard98/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidberard98/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidberard98/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidberard98/subscriptions",
            "organizations_url": "https://api.github.com/users/davidberard98/orgs",
            "repos_url": "https://api.github.com/users/davidberard98/repos",
            "events_url": "https://api.github.com/users/davidberard98/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidberard98/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/75866/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/75866/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/75758",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/75758/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/75758/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/75758/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/75758",
        "id": 1203765382,
        "node_id": "I_kwDOA-j9z85HwACG",
        "number": 75758,
        "title": "nvfuser opinfos for extremal values",
        "user": {
            "login": "davidberard98",
            "id": 5067123,
            "node_id": "MDQ6VXNlcjUwNjcxMjM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5067123?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidberard98",
            "html_url": "https://github.com/davidberard98",
            "followers_url": "https://api.github.com/users/davidberard98/followers",
            "following_url": "https://api.github.com/users/davidberard98/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidberard98/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidberard98/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidberard98/subscriptions",
            "organizations_url": "https://api.github.com/users/davidberard98/orgs",
            "repos_url": "https://api.github.com/users/davidberard98/repos",
            "events_url": "https://api.github.com/users/davidberard98/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidberard98/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "davidberard98",
            "id": 5067123,
            "node_id": "MDQ6VXNlcjUwNjcxMjM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5067123?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidberard98",
            "html_url": "https://github.com/davidberard98",
            "followers_url": "https://api.github.com/users/davidberard98/followers",
            "following_url": "https://api.github.com/users/davidberard98/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidberard98/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidberard98/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidberard98/subscriptions",
            "organizations_url": "https://api.github.com/users/davidberard98/orgs",
            "repos_url": "https://api.github.com/users/davidberard98/repos",
            "events_url": "https://api.github.com/users/davidberard98/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidberard98/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "davidberard98",
                "id": 5067123,
                "node_id": "MDQ6VXNlcjUwNjcxMjM=",
                "avatar_url": "https://avatars.githubusercontent.com/u/5067123?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidberard98",
                "html_url": "https://github.com/davidberard98",
                "followers_url": "https://api.github.com/users/davidberard98/followers",
                "following_url": "https://api.github.com/users/davidberard98/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidberard98/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidberard98/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidberard98/subscriptions",
                "organizations_url": "https://api.github.com/users/davidberard98/orgs",
                "repos_url": "https://api.github.com/users/davidberard98/repos",
                "events_url": "https://api.github.com/users/davidberard98/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidberard98/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2022-04-13T20:36:21Z",
        "updated_at": "2022-05-11T01:37:42Z",
        "closed_at": "2022-05-11T01:37:42Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### \ud83d\ude80 The feature, motivation and pitch\n\nTest supported ops at extremal values\r\n\r\nwe can copy the same strategy as test_binary_ufuncs.py\n\n### Alternatives\n\n_No response_\n\n### Additional context\n\n_No response_",
        "closed_by": {
            "login": "davidberard98",
            "id": 5067123,
            "node_id": "MDQ6VXNlcjUwNjcxMjM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5067123?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidberard98",
            "html_url": "https://github.com/davidberard98",
            "followers_url": "https://api.github.com/users/davidberard98/followers",
            "following_url": "https://api.github.com/users/davidberard98/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidberard98/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidberard98/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidberard98/subscriptions",
            "organizations_url": "https://api.github.com/users/davidberard98/orgs",
            "repos_url": "https://api.github.com/users/davidberard98/repos",
            "events_url": "https://api.github.com/users/davidberard98/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidberard98/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/75758/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/75758/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/75627",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/75627/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/75627/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/75627/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/75627",
        "id": 1200635058,
        "node_id": "I_kwDOA-j9z85HkDyy",
        "number": 75627,
        "title": "Move test/jit/test_onnx_export.py to test/onnx",
        "user": {
            "login": "garymm",
            "id": 421339,
            "node_id": "MDQ6VXNlcjQyMTMzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/421339?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/garymm",
            "html_url": "https://github.com/garymm",
            "followers_url": "https://api.github.com/users/garymm/followers",
            "following_url": "https://api.github.com/users/garymm/following{/other_user}",
            "gists_url": "https://api.github.com/users/garymm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/garymm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/garymm/subscriptions",
            "organizations_url": "https://api.github.com/users/garymm/orgs",
            "repos_url": "https://api.github.com/users/garymm/repos",
            "events_url": "https://api.github.com/users/garymm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/garymm/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 693805995,
                "node_id": "MDU6TGFiZWw2OTM4MDU5OTU=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20onnx",
                "name": "module: onnx",
                "color": "f7e101",
                "default": false,
                "description": "Related to torch.onnx"
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            },
            {
                "id": 3202390887,
                "node_id": "MDU6TGFiZWwzMjAyMzkwODg3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/onnx-triaged",
                "name": "onnx-triaged",
                "color": "006b75",
                "default": false,
                "description": "triaged by ONNX team"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "titaiwangms",
            "id": 18010845,
            "node_id": "MDQ6VXNlcjE4MDEwODQ1",
            "avatar_url": "https://avatars.githubusercontent.com/u/18010845?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/titaiwangms",
            "html_url": "https://github.com/titaiwangms",
            "followers_url": "https://api.github.com/users/titaiwangms/followers",
            "following_url": "https://api.github.com/users/titaiwangms/following{/other_user}",
            "gists_url": "https://api.github.com/users/titaiwangms/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/titaiwangms/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/titaiwangms/subscriptions",
            "organizations_url": "https://api.github.com/users/titaiwangms/orgs",
            "repos_url": "https://api.github.com/users/titaiwangms/repos",
            "events_url": "https://api.github.com/users/titaiwangms/events{/privacy}",
            "received_events_url": "https://api.github.com/users/titaiwangms/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "titaiwangms",
                "id": 18010845,
                "node_id": "MDQ6VXNlcjE4MDEwODQ1",
                "avatar_url": "https://avatars.githubusercontent.com/u/18010845?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/titaiwangms",
                "html_url": "https://github.com/titaiwangms",
                "followers_url": "https://api.github.com/users/titaiwangms/followers",
                "following_url": "https://api.github.com/users/titaiwangms/following{/other_user}",
                "gists_url": "https://api.github.com/users/titaiwangms/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/titaiwangms/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/titaiwangms/subscriptions",
                "organizations_url": "https://api.github.com/users/titaiwangms/orgs",
                "repos_url": "https://api.github.com/users/titaiwangms/repos",
                "events_url": "https://api.github.com/users/titaiwangms/events{/privacy}",
                "received_events_url": "https://api.github.com/users/titaiwangms/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 5,
        "created_at": "2022-04-11T22:35:56Z",
        "updated_at": "2022-06-08T19:21:46Z",
        "closed_at": "2022-06-08T19:21:46Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "This file should be moved to the test/onnx dir:\r\ntest/jit/test_onnx_export.py\r\n\r\nPerhaps combined with test/onnx/test_pytorch_onnx_no_runtime.py which is being added in https://github.com/pytorch/pytorch/pull/73284.\r\n\r\nThat will let us merge changes to that file without going through the PyTorch internal tests, and it will also just consolidate all the ONNX tests for easier discoverability.",
        "closed_by": {
            "login": "pytorchmergebot",
            "id": 97764156,
            "node_id": "U_kgDOBdPDPA",
            "avatar_url": "https://avatars.githubusercontent.com/u/97764156?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pytorchmergebot",
            "html_url": "https://github.com/pytorchmergebot",
            "followers_url": "https://api.github.com/users/pytorchmergebot/followers",
            "following_url": "https://api.github.com/users/pytorchmergebot/following{/other_user}",
            "gists_url": "https://api.github.com/users/pytorchmergebot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pytorchmergebot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pytorchmergebot/subscriptions",
            "organizations_url": "https://api.github.com/users/pytorchmergebot/orgs",
            "repos_url": "https://api.github.com/users/pytorchmergebot/repos",
            "events_url": "https://api.github.com/users/pytorchmergebot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pytorchmergebot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/75627/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/75627/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/75464",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/75464/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/75464/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/75464/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/75464",
        "id": 1196605552,
        "node_id": "I_kwDOA-j9z85HUsBw",
        "number": 75464,
        "title": "Strict torch.jit.script fusion mode",
        "user": {
            "login": "cpuhrsch",
            "id": 1716488,
            "node_id": "MDQ6VXNlcjE3MTY0ODg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1716488?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cpuhrsch",
            "html_url": "https://github.com/cpuhrsch",
            "followers_url": "https://api.github.com/users/cpuhrsch/followers",
            "following_url": "https://api.github.com/users/cpuhrsch/following{/other_user}",
            "gists_url": "https://api.github.com/users/cpuhrsch/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cpuhrsch/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cpuhrsch/subscriptions",
            "organizations_url": "https://api.github.com/users/cpuhrsch/orgs",
            "repos_url": "https://api.github.com/users/cpuhrsch/repos",
            "events_url": "https://api.github.com/users/cpuhrsch/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cpuhrsch/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            },
            {
                "id": 3997471357,
                "node_id": "LA_kwDOA-j9z87uRJJ9",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20nvfuser",
                "name": "module: nvfuser",
                "color": "9CA380",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2022-04-07T21:50:37Z",
        "updated_at": "2022-04-25T16:09:04Z",
        "closed_at": "2022-04-25T16:09:04Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### \ud83d\ude80 The feature, motivation and pitch\r\n\r\nNot easily knowing when something is fused has bitten the e3nn team quite a bit I think. Turns out control flow prevented all their [ridiculously fuseable code](https://github.com/e3nn/e3nn/blob/main/e3nn/o3/_spherical_harmonics.py#L184-L456) from being fully optimized. [Removing control flow](https://gist.github.com/cpuhrsch/71ff55435c480ff03f399006bfa4c602) shows significant increase in perf (4x to 7x).\r\n\r\nAnother example is a recent feature request https://github.com/pytorch/pytorch/issues/75251 . The fusers (both nnc(assume this is default) and nvfuser) makes it trivial to try this implementation and gives much better performance, but I don't know whether they actually fully fused the code. In particular, when I replaced `square` with `pow(x, 2)` I [got a significant speedup](https://gist.github.com/cpuhrsch/e5ce5a91c60aec01d939da6c36f16e1e).\r\n\r\nCan we have a context in which a call to torch.jit.script fails if it wasn't able to entirely fuse it?\r\n\r\nExample\r\n```\r\nwith torch.jit.fuser(\"fuser2\", force_fusion=True):\r\n    fused_op = torch.jit.script(op)\r\n```\r\n\r\n\r\n### Alternatives\r\n\r\nThere are options to inspect whether a fusion succeeded or not via environment variable, inspecting the result of torch.jit.script, etc. However, this seems pretty difficult for most users to give us good feedback on whether it worked on their case and open issues if it didn't. Surely we'd want to know when fusion failed to collect snippets or user requests.\r\n\r\n### Additional context\r\n\r\n_No response_",
        "closed_by": {
            "login": "pytorchmergebot",
            "id": 97764156,
            "node_id": "U_kgDOBdPDPA",
            "avatar_url": "https://avatars.githubusercontent.com/u/97764156?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pytorchmergebot",
            "html_url": "https://github.com/pytorchmergebot",
            "followers_url": "https://api.github.com/users/pytorchmergebot/followers",
            "following_url": "https://api.github.com/users/pytorchmergebot/following{/other_user}",
            "gists_url": "https://api.github.com/users/pytorchmergebot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pytorchmergebot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pytorchmergebot/subscriptions",
            "organizations_url": "https://api.github.com/users/pytorchmergebot/orgs",
            "repos_url": "https://api.github.com/users/pytorchmergebot/repos",
            "events_url": "https://api.github.com/users/pytorchmergebot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pytorchmergebot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/75464/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/75464/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/75029",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/75029/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/75029/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/75029/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/75029",
        "id": 1188447427,
        "node_id": "I_kwDOA-j9z85G1kTD",
        "number": 75029,
        "title": "2022-03-31 disabled nvfuser tests",
        "user": {
            "login": "davidberard98",
            "id": 5067123,
            "node_id": "MDQ6VXNlcjUwNjcxMjM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5067123?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidberard98",
            "html_url": "https://github.com/davidberard98",
            "followers_url": "https://api.github.com/users/davidberard98/followers",
            "following_url": "https://api.github.com/users/davidberard98/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidberard98/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidberard98/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidberard98/subscriptions",
            "organizations_url": "https://api.github.com/users/davidberard98/orgs",
            "repos_url": "https://api.github.com/users/davidberard98/repos",
            "events_url": "https://api.github.com/users/davidberard98/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidberard98/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 3997471357,
                "node_id": "LA_kwDOA-j9z87uRJJ9",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20nvfuser",
                "name": "module: nvfuser",
                "color": "9CA380",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2022-03-31T18:06:03Z",
        "updated_at": "2022-04-07T18:02:26Z",
        "closed_at": "2022-04-07T18:02:26Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### \ud83d\udc1b Describe the bug\r\n\r\n- [x] #75122\r\n- [x] test_int_tensor_input (M60, https://github.com/pytorch/pytorch/runs/5775045801?check_suite_focus=true)\r\n- [x] (https://github.com/pytorch/pytorch/pull/75116 ) test_native_batch_norm_backward (M60, https://github.com/pytorch/pytorch/runs/5775045801?check_suite_focus=true)\r\n- [x] (https://github.com/pytorch/pytorch/pull/75116 ) test_reduction_empty_axes (M60, https://github.com/pytorch/pytorch/runs/5775045801?check_suite_focus=true)\r\n- [x] (opinfo) test_nvfuser_correctness_nn_functional_conv_transpose3d_cuda_float16 (M60 , https://github.com/pytorch/pytorch/runs/5775863924?check_suite_focus=true)\r\n- [x] (opinfo) test_nvfuser_correctness_nn_functional_conv_transpose3d_cuda_float32 (M60 , https://github.com/pytorch/pytorch/runs/5775863924?check_suite_focus=true)\r\n- [x] (https://github.com/pytorch/pytorch/pull/75116 ) test_context_manager_test (M60, https://github.com/pytorch/pytorch/runs/5775863870?check_suite_focus=true)\r\n- [x] (https://github.com/pytorch/pytorch/pull/75116 ) test_register_fuser (M60, https://github.com/pytorch/pytorch/runs/5775863870?check_suite_focus=true)\r\n- [x] (https://github.com/pytorch/pytorch/pull/75340) test_category_rule - fails sometimes, succeeds sometimes.\r\n\r\n```\r\n2022-03-31T17:11:07.8343008Z ======================================================================\r\n2022-03-31T17:11:07.8345843Z ERROR [0.014s]: test_linear_1d_weight_mismatch_bias_dtype (__main__.TestCudaFuser)\r\n2022-03-31T17:11:07.8347205Z ----------------------------------------------------------------------\r\n2022-03-31T17:11:07.8347834Z Traceback (most recent call last):\r\n2022-03-31T17:11:07.8348239Z   File \"test_jit_cuda_fuser.py\", line 3322, in test_linear_1d_weight_mismatch_bias_dtype\r\n2022-03-31T17:11:07.8348595Z     jit_o = jitted(x, w, b)\r\n2022-03-31T17:11:07.8349122Z   File \"/opt/conda/lib/python3.7/site-packages/torch/testing/_internal/common_utils.py\", line 428, in prof_func_call\r\n2022-03-31T17:11:07.8349661Z     return prof_callable(func_call, *args, **kwargs)\r\n2022-03-31T17:11:07.8350336Z   File \"/opt/conda/lib/python3.7/site-packages/torch/testing/_internal/common_utils.py\", line 425, in prof_callable\r\n2022-03-31T17:11:07.8351373Z     return callable(*args, **kwargs)\r\n2022-03-31T17:11:07.8355944Z RuntimeError: The following operation failed in the TorchScript interpreter.\r\n2022-03-31T17:11:07.8356484Z Traceback of TorchScript (most recent call last):\r\n2022-03-31T17:11:07.8357053Z   File \"test_jit_cuda_fuser.py\", line 3312, in t\r\n2022-03-31T17:11:07.8357728Z         def t(x: torch.Tensor, w: torch.Tensor, b: torch.Tensor):\r\n2022-03-31T17:11:07.8358665Z             o = torch.nn.functional.linear(x, w, b)\r\n2022-03-31T17:11:07.8359542Z                 ~~~~~~~~~~~~~~~~~~~~~~~~~~ <--- HERE\r\n2022-03-31T17:11:07.8360079Z             return o.relu()\r\n2022-03-31T17:11:07.8360774Z RuntimeError: mat2 must be a matrix, got 1-D tensor\r\n2022-03-31T17:11:07.8361193Z \r\n2022-03-31T17:11:07.8361223Z \r\n2022-03-31T17:11:07.8361691Z ======================================================================\r\n2022-03-31T17:11:07.8362326Z FAIL [0.006s]: test_int_tensor_input (__main__.TestCudaFuser)\r\n2022-03-31T17:11:07.8363398Z ----------------------------------------------------------------------\r\n2022-03-31T17:11:07.8364030Z Traceback (most recent call last):\r\n2022-03-31T17:11:07.8364752Z   File \"test_jit_cuda_fuser.py\", line 4060, in test_int_tensor_input\r\n2022-03-31T17:11:07.8365442Z     self._run_helper(t_jit, t, x)\r\n2022-03-31T17:11:07.8366108Z   File \"test_jit_cuda_fuser.py\", line 154, in _run_helper\r\n2022-03-31T17:11:07.8366768Z     self.assertGraphContainsExactly(jit_op.graph_for(*args), FUSION_GUARD, 1, consider_subgraphs=True)\r\n2022-03-31T17:11:07.8367464Z   File \"/opt/conda/lib/python3.7/site-packages/torch/testing/_internal/jit_utils.py\", line 326, in assertGraphContainsExactly\r\n2022-03-31T17:11:07.8367878Z     consider_subgraphs)\r\n2022-03-31T17:11:07.8368360Z   File \"/opt/conda/lib/python3.7/site-packages/torch/testing/_internal/jit_utils.py\", line 320, in perform_assert\r\n2022-03-31T17:11:07.8368781Z     graph, actual, kind, subgraph, expected))\r\n2022-03-31T17:11:07.8369104Z AssertionError: graph(%x.1 : Tensor):\r\n2022-03-31T17:11:07.8369413Z   %1 : bool = prim::Constant[value=0]()\r\n2022-03-31T17:11:07.8369720Z   %2 : int[] = prim::Constant[value=[0]]()\r\n2022-03-31T17:11:07.8370062Z   %3 : Tensor = aten::amax(%x.1, %2, %1) # test_jit_cuda_fuser.py:4057:23\r\n2022-03-31T17:11:07.8370369Z   return (%3)\r\n2022-03-31T17:11:07.8370503Z \r\n2022-03-31T17:11:07.8370734Z Error: graph contains 0 prim::CudaFusionGuard nodes (including subgraphs) but expected 1\r\n2022-03-31T17:11:07.8370999Z \r\n2022-03-31T17:11:07.8371142Z ======================================================================\r\n2022-03-31T17:11:07.8371486Z FAIL [0.012s]: test_native_batch_norm_backward (__main__.TestCudaFuser)\r\n2022-03-31T17:11:07.8371946Z ----------------------------------------------------------------------\r\n2022-03-31T17:11:07.8372293Z Traceback (most recent call last):\r\n2022-03-31T17:11:07.8372652Z   File \"test_jit_cuda_fuser.py\", line 4195, in test_native_batch_norm_backward\r\n2022-03-31T17:11:07.8373127Z     save_invstd, True, 1e-5, [True, True, True]), FUSION_GUARD)\r\n2022-03-31T17:11:07.8373673Z   File \"/opt/conda/lib/python3.7/site-packages/torch/testing/_internal/jit_utils.py\", line 311, in assertGraphContains\r\n2022-03-31T17:11:07.8374091Z     self.assertTrue(len(out_nodes) > 0)\r\n2022-03-31T17:11:07.8374393Z AssertionError: False is not true\r\n2022-03-31T17:11:07.8374576Z \r\n2022-03-31T17:11:07.8374694Z ======================================================================\r\n2022-03-31T17:11:07.8375029Z FAIL [0.006s]: test_reduction_empty_axes (__main__.TestCudaFuser)\r\n2022-03-31T17:11:07.8375493Z ----------------------------------------------------------------------\r\n2022-03-31T17:11:07.8375838Z Traceback (most recent call last):\r\n2022-03-31T17:11:07.8376169Z   File \"test_jit_cuda_fuser.py\", line 4047, in test_reduction_empty_axes\r\n2022-03-31T17:11:07.8376506Z     self._run_helper(t_jit, t, x)\r\n2022-03-31T17:11:07.8376834Z   File \"test_jit_cuda_fuser.py\", line 154, in _run_helper\r\n2022-03-31T17:11:07.8377260Z     self.assertGraphContainsExactly(jit_op.graph_for(*args), FUSION_GUARD, 1, consider_subgraphs=True)\r\n2022-03-31T17:11:07.8377929Z   File \"/opt/conda/lib/python3.7/site-packages/torch/testing/_internal/jit_utils.py\", line 326, in assertGraphContainsExactly\r\n2022-03-31T17:11:07.8378338Z     consider_subgraphs)\r\n2022-03-31T17:11:07.8378834Z   File \"/opt/conda/lib/python3.7/site-packages/torch/testing/_internal/jit_utils.py\", line 320, in perform_assert\r\n2022-03-31T17:11:07.8379234Z     graph, actual, kind, subgraph, expected))\r\n2022-03-31T17:11:07.8379550Z AssertionError: graph(%x.1 : Tensor):\r\n2022-03-31T17:11:07.8379941Z   %1 : bool = prim::Constant[value=0]()\r\n2022-03-31T17:11:07.8380231Z   %2 : NoneType = prim::Constant()\r\n2022-03-31T17:11:07.8380560Z   %3 : int[] = prim::Constant[value=annotate(List[int], [])]()\r\n2022-03-31T17:11:07.8380932Z   %4 : Tensor = aten::sum(%x.1, %3, %1, %2) # test_jit_cuda_fuser.py:4044:23\r\n2022-03-31T17:11:07.8381272Z   return (%4)\r\n2022-03-31T17:11:07.8381421Z \r\n2022-03-31T17:11:07.8381651Z Error: graph contains 0 prim::CudaFusionGuard nodes (including subgraphs) but expected 1\r\n```\r\n\r\n```\r\nFAIL [0.063s]: test_nvfuser_correctness_nn_functional_conv_transpose3d_cuda_float16 (__main__.TestCudaFuserOpInfoCUDA)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/opt/conda/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py\", line 1780, in wrapper\r\n    method(*args, **kwargs)\r\n  File \"/opt/conda/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py\", line 1780, in wrapper\r\n    method(*args, **kwargs)\r\n  File \"/opt/conda/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py\", line 376, in instantiated_test\r\n    result = test(self, **param_kwargs)\r\n  File \"/opt/conda/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py\", line 780, in test_wrapper\r\n    return test(*args, **kwargs)\r\n  File \"/opt/conda/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py\", line 1087, in wrapper\r\n    fn(*args, **kwargs)\r\n  File \"/var/lib/jenkins/workspace/test/test_jit_cuda_fuser.py\", line 4457, in test_nvfuser_correctness\r\n    val = trace(*clone_inputs((sample.input, *sample.args)), **sample.kwargs)\r\n  File \"/opt/conda/lib/python3.9/site-packages/torch/testing/_internal/jit_metaprogramming_utils.py\", line 368, in traced_fn\r\n    self.assertExportImport(traced.graph, inputs_tensors)\r\n  File \"/opt/conda/lib/python3.9/site-packages/torch/testing/_internal/common_jit.py\", line 148, in assertExportImport\r\n    self.assertExportImportModule(m, inputs)\r\n  File \"/opt/conda/lib/python3.9/site-packages/torch/testing/_internal/common_jit.py\", line 154, in assertExportImportModule\r\n    self.assertEqual(a, b, \"Results of original model and \"\r\n  File \"/opt/conda/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py\", line 2150, in assertEqual\r\n    assert_equal(\r\n  File \"/opt/conda/lib/python3.9/site-packages/torch/testing/_comparison.py\", line 1084, in assert_equal\r\n    raise error_metas[0].to_error()\r\nAssertionError: Results of original model and exported/imported version of model differed\r\n\r\n======================================================================\r\nFAIL [0.161s]: test_nvfuser_correctness_nn_functional_conv_transpose3d_cuda_float32 (__main__.TestCudaFuserOpInfoCUDA)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/opt/conda/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py\", line 1780, in wrapper\r\n    method(*args, **kwargs)\r\n  File \"/opt/conda/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py\", line 1780, in wrapper\r\n    method(*args, **kwargs)\r\n  File \"/opt/conda/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py\", line 376, in instantiated_test\r\n    result = test(self, **param_kwargs)\r\n  File \"/opt/conda/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py\", line 780, in test_wrapper\r\n    return test(*args, **kwargs)\r\n  File \"/opt/conda/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py\", line 1087, in wrapper\r\n    fn(*args, **kwargs)\r\n  File \"/var/lib/jenkins/workspace/test/test_jit_cuda_fuser.py\", line 4455, in test_nvfuser_correctness\r\n    trace(*clone_inputs((sample.input, *sample.args)), **sample.kwargs)\r\n  File \"/opt/conda/lib/python3.9/site-packages/torch/testing/_internal/jit_metaprogramming_utils.py\", line 368, in traced_fn\r\n    self.assertExportImport(traced.graph, inputs_tensors)\r\n  File \"/opt/conda/lib/python3.9/site-packages/torch/testing/_internal/common_jit.py\", line 148, in assertExportImport\r\n    self.assertExportImportModule(m, inputs)\r\n  File \"/opt/conda/lib/python3.9/site-packages/torch/testing/_internal/common_jit.py\", line 154, in assertExportImportModule\r\n    self.assertEqual(a, b, \"Results of original model and \"\r\n  File \"/opt/conda/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py\", line 2150, in assertEqual\r\n    assert_equal(\r\n  File \"/opt/conda/lib/python3.9/site-packages/torch/testing/_comparison.py\", line 1084, in assert_equal\r\n    raise error_metas[0].to_error()\r\nAssertionError: Results of original model and exported/imported version of model differed\r\n\r\n----------------------------------------------------------------------\r\nRan 4571 tests in 2673.458s\r\n\r\nFAILED (failures=2, skipped=206, expected failures=6)\r\n```\r\n\r\n```\r\n2022-03-31T18:09:00.4229799Z FAIL [0.513s]: test_context_manager_test (__main__.TestPassManagerCudaFuser)\r\n2022-03-31T18:09:00.4230330Z ----------------------------------------------------------------------\r\n2022-03-31T18:09:00.4230663Z Traceback (most recent call last):\r\n2022-03-31T18:09:00.4231703Z   File \"/opt/conda/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py\", line 1780, in wrapper\r\n2022-03-31T18:09:00.4232092Z     method(*args, **kwargs)\r\n2022-03-31T18:09:00.4232472Z   File \"/var/lib/jenkins/workspace/test/test_jit_cuda_fuser.py\", line 4422, in test_context_manager_test\r\n2022-03-31T18:09:00.4233045Z     self.assertGraphContainsExactly(t_jit_3.graph_for(x, y), FUSION_GUARD, 0)\r\n2022-03-31T18:09:00.4233690Z   File \"/opt/conda/lib/python3.9/site-packages/torch/testing/_internal/jit_utils.py\", line 339, in assertGraphContainsExactly\r\n2022-03-31T18:09:00.4234158Z     perform_assert(graph, kind, len(out_nodes), num_kind_nodes,\r\n2022-03-31T18:09:00.4234686Z   File \"/opt/conda/lib/python3.9/site-packages/torch/testing/_internal/jit_utils.py\", line 318, in perform_assert\r\n2022-03-31T18:09:00.4235076Z     raise AssertionError(\r\n2022-03-31T18:09:00.4235362Z AssertionError: graph(%x.1 : Tensor,\r\n2022-03-31T18:09:00.4235635Z       %y.1 : Tensor):\r\n2022-03-31T18:09:00.4236118Z   %2 : bool = prim::CudaFusionGuard[types=[Float(4, 8, strides=[8, 1], requires_grad=0, device=cuda:0), Float(4, 8, strides=[8, 1], requires_grad=0, device=cuda:0)]](%x.1, %y.1)\r\n2022-03-31T18:09:00.4236553Z   %3 : Tensor = prim::If(%2)\r\n2022-03-31T18:09:00.4236804Z     block0():\r\n2022-03-31T18:09:00.4237102Z       %o.8 : Tensor = prim::CudaFusionGroup_0[cache_id=1650](%x.1, %y.1)\r\n2022-03-31T18:09:00.4237453Z       -> (%o.8)\r\n2022-03-31T18:09:00.4237684Z     block1():\r\n2022-03-31T18:09:00.4237991Z       %5 : Function = prim::Constant[name=\"fallback_function\", fallback=1]()\r\n2022-03-31T18:09:00.4238425Z       %6 : (Float(4, 8, strides=[8, 1], requires_grad=0, device=cuda:0)) = prim::CallFunction(%5, %x.1, %y.1)\r\n2022-03-31T18:09:00.4238858Z       %7 : Float(4, 8, strides=[8, 1], requires_grad=0, device=cuda:0) = prim::TupleUnpack(%6)\r\n2022-03-31T18:09:00.4239209Z       -> (%7)\r\n2022-03-31T18:09:00.4239421Z   return (%3)\r\n2022-03-31T18:09:00.4239776Z with prim::CudaFusionGroup_0 = graph(%0 : Float(4, 8, strides=[8, 1], requires_grad=0, device=cuda:0),\r\n2022-03-31T18:09:00.4240186Z       %1 : Float(4, 8, strides=[8, 1], requires_grad=0, device=cuda:0)):\r\n2022-03-31T18:09:00.4240610Z   %2 : float = prim::Constant[value=4.]() # /var/lib/jenkins/workspace/test/test_jit_cuda_fuser.py:4417:20\r\n2022-03-31T18:09:00.4240968Z   %3 : int = prim::Constant[value=1]()\r\n2022-03-31T18:09:00.4241414Z   %o.1 : Float(4, 8, strides=[8, 1], requires_grad=0, device=cuda:0) = aten::add(%0, %1, %3) # /var/lib/jenkins/workspace/test/test_jit_cuda_fuser.py:4416:16\r\n2022-03-31T18:09:00.4241974Z   %o.5 : Float(4, 8, strides=[8, 1], requires_grad=0, device=cuda:0) = aten::add(%o.1, %2, %3) # /var/lib/jenkins/workspace/test/test_jit_cuda_fuser.py:4417:16\r\n2022-03-31T18:09:00.4242354Z   return (%o.5)\r\n2022-03-31T18:09:00.4242492Z \r\n2022-03-31T18:09:00.4242722Z Error: graph contains 1 prim::CudaFusionGuard nodes (excluding subgraphs) but expected 0\r\n2022-03-31T18:09:00.4242987Z \r\n2022-03-31T18:09:00.4243123Z ======================================================================\r\n2022-03-31T18:09:00.4243475Z FAIL [0.002s]: test_register_fuser (__main__.TestPassManagerCudaFuser)\r\n2022-03-31T18:09:00.4243946Z ----------------------------------------------------------------------\r\n2022-03-31T18:09:00.4244300Z Traceback (most recent call last):\r\n2022-03-31T18:09:00.4244810Z   File \"/opt/conda/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py\", line 1780, in wrapper\r\n2022-03-31T18:09:00.4245190Z     method(*args, **kwargs)\r\n2022-03-31T18:09:00.4245540Z   File \"/var/lib/jenkins/workspace/test/test_jit_cuda_fuser.py\", line 4426, in test_register_fuser\r\n2022-03-31T18:09:00.4245953Z     self.assertFalse(torch._C._jit_set_nvfuser_enabled(True))\r\n2022-03-31T18:09:00.4246285Z AssertionError: True is not false\r\n```\r\n\r\n### Versions\r\n\r\nVarious CI machines, as mentioned above",
        "closed_by": {
            "login": "davidberard98",
            "id": 5067123,
            "node_id": "MDQ6VXNlcjUwNjcxMjM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5067123?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidberard98",
            "html_url": "https://github.com/davidberard98",
            "followers_url": "https://api.github.com/users/davidberard98/followers",
            "following_url": "https://api.github.com/users/davidberard98/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidberard98/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidberard98/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidberard98/subscriptions",
            "organizations_url": "https://api.github.com/users/davidberard98/orgs",
            "repos_url": "https://api.github.com/users/davidberard98/repos",
            "events_url": "https://api.github.com/users/davidberard98/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidberard98/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/75029/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/75029/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/74628",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/74628/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/74628/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/74628/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/74628",
        "id": 1178536215,
        "node_id": "I_kwDOA-j9z85GPwkX",
        "number": 74628,
        "title": "Decouple LTC from TS backend",
        "user": {
            "login": "henrytwo",
            "id": 17518332,
            "node_id": "MDQ6VXNlcjE3NTE4MzMy",
            "avatar_url": "https://avatars.githubusercontent.com/u/17518332?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/henrytwo",
            "html_url": "https://github.com/henrytwo",
            "followers_url": "https://api.github.com/users/henrytwo/followers",
            "following_url": "https://api.github.com/users/henrytwo/following{/other_user}",
            "gists_url": "https://api.github.com/users/henrytwo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/henrytwo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/henrytwo/subscriptions",
            "organizations_url": "https://api.github.com/users/henrytwo/orgs",
            "repos_url": "https://api.github.com/users/henrytwo/repos",
            "events_url": "https://api.github.com/users/henrytwo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/henrytwo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1561970640,
                "node_id": "MDU6TGFiZWwxNTYxOTcwNjQw",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/lazy",
                "name": "lazy",
                "color": "75e545",
                "default": false,
                "description": "Lazy Tensor work items"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 10,
        "created_at": "2022-03-23T18:56:40Z",
        "updated_at": "2022-04-06T01:43:50Z",
        "closed_at": "2022-04-06T01:43:50Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### \ud83d\ude80 The feature, motivation and pitch\n\nCurrently, there are a few instances where components from the TorchScript LTC backend are used for infrastructure that should be backend agnostic. For example, [`LazyTensor::CreateTensorNode`](https://github.com/pytorch/pytorch/blob/master/torch/csrc/lazy/core/tensor.cpp#L426) relies on `DeviceData`, which is a class based on `TsNode`. This causes some issues when implementing a custom LTC backend, especially when the base class of custom nodes is not `TsNode`.\r\n\r\nI'm not sure what the best approach to fix this would be, so I think it would be good to get some other ideas.\r\n\r\nCC: @wconstab @antoniojkim \n\n### Alternatives\n\n_No response_\n\n### Additional context\n\n_No response_",
        "closed_by": {
            "login": "pytorchmergebot",
            "id": 97764156,
            "node_id": "U_kgDOBdPDPA",
            "avatar_url": "https://avatars.githubusercontent.com/u/97764156?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pytorchmergebot",
            "html_url": "https://github.com/pytorchmergebot",
            "followers_url": "https://api.github.com/users/pytorchmergebot/followers",
            "following_url": "https://api.github.com/users/pytorchmergebot/following{/other_user}",
            "gists_url": "https://api.github.com/users/pytorchmergebot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pytorchmergebot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pytorchmergebot/subscriptions",
            "organizations_url": "https://api.github.com/users/pytorchmergebot/orgs",
            "repos_url": "https://api.github.com/users/pytorchmergebot/repos",
            "events_url": "https://api.github.com/users/pytorchmergebot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pytorchmergebot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/74628/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/74628/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/74626",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/74626/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/74626/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/74626/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/74626",
        "id": 1178529347,
        "node_id": "I_kwDOA-j9z85GPu5D",
        "number": 74626,
        "title": "torch.jit.Attribute does not work as advertised",
        "user": {
            "login": "alanhdu",
            "id": 1914111,
            "node_id": "MDQ6VXNlcjE5MTQxMTE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1914111?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alanhdu",
            "html_url": "https://github.com/alanhdu",
            "followers_url": "https://api.github.com/users/alanhdu/followers",
            "following_url": "https://api.github.com/users/alanhdu/following{/other_user}",
            "gists_url": "https://api.github.com/users/alanhdu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alanhdu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alanhdu/subscriptions",
            "organizations_url": "https://api.github.com/users/alanhdu/orgs",
            "repos_url": "https://api.github.com/users/alanhdu/repos",
            "events_url": "https://api.github.com/users/alanhdu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alanhdu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "davidberard98",
            "id": 5067123,
            "node_id": "MDQ6VXNlcjUwNjcxMjM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5067123?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidberard98",
            "html_url": "https://github.com/davidberard98",
            "followers_url": "https://api.github.com/users/davidberard98/followers",
            "following_url": "https://api.github.com/users/davidberard98/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidberard98/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidberard98/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidberard98/subscriptions",
            "organizations_url": "https://api.github.com/users/davidberard98/orgs",
            "repos_url": "https://api.github.com/users/davidberard98/repos",
            "events_url": "https://api.github.com/users/davidberard98/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidberard98/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "davidberard98",
                "id": 5067123,
                "node_id": "MDQ6VXNlcjUwNjcxMjM=",
                "avatar_url": "https://avatars.githubusercontent.com/u/5067123?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidberard98",
                "html_url": "https://github.com/davidberard98",
                "followers_url": "https://api.github.com/users/davidberard98/followers",
                "following_url": "https://api.github.com/users/davidberard98/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidberard98/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidberard98/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidberard98/subscriptions",
                "organizations_url": "https://api.github.com/users/davidberard98/orgs",
                "repos_url": "https://api.github.com/users/davidberard98/repos",
                "events_url": "https://api.github.com/users/davidberard98/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidberard98/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2022-03-23T18:50:34Z",
        "updated_at": "2022-05-11T01:36:49Z",
        "closed_at": "2022-05-11T01:36:49Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### \ud83d\udc1b Describe the bug\n\nCurrently, the [docs](https://pytorch.org/docs/stable/generated/torch.jit.Attribute.html) say that `torch.jit.Attribute` is a pass-through function with no effect in eager evaluation mode. Unfortunately, this does not seem to be the case -- if I try to run the code linked in the example:\r\n\r\n```python\r\nimport torch\r\nfrom typing import Dict\r\n\r\nclass AttributeModule(torch.nn.Module):\r\n    def __init__(self):\r\n        super(torch.nn.Module, self).__init__()\r\n        self.foo = torch.jit.Attribute(0.1, float)\r\n\r\n        # we should be able to use self.foo as a float here\r\n        assert 0.0 < self.foo\r\n\r\n        self.names_ages = torch.jit.Attribute({}, Dict[str, int])\r\n        self.names_ages[\"someone\"] = 20\r\n        assert isinstance(self.names_ages[\"someone\"], int)\r\n\r\nm = AttributeModule()\r\n```\r\n\r\nI get the following error:\r\n\r\n```python\r\nTraceback (most recent call last):\r\n  File \"repro.py\", line 16, in <module>\r\n    a = AttributeModule()\r\n  File \"repro.py\", line 10, in __init__\r\n    assert 0.0 < self.foo\r\nTypeError: '<' not supported between instances of 'float' and 'Attribute'\r\n```\r\n\r\nI'm not sure if this is an implementation error or a documentation error about how to use `torch.jit.Attribute`.\n\n### Versions\n\n```\r\nPyTorch version: 1.11.0\r\nIs debug build: False\r\nCUDA used to build PyTorch: None\r\nROCM used to build PyTorch: N/A\r\n\r\nOS: Fedora release 34 (Thirty Four) (x86_64)\r\nGCC version: (GCC) 11.2.1 20220127 (Red Hat 11.2.1-9)\r\nClang version: 12.0.1 (Fedora 12.0.1-1.fc34)\r\nCMake version: Could not collect\r\nLibc version: glibc-2.33\r\n\r\nPython version: 3.8.12 | packaged by conda-forge | (default, Jan 30 2022, 23:53:36)  [GCC 9.4.0] (64-bit runtime)\r\nPython platform: Linux-5.15.18-100.fc34.x86_64-x86_64-with-glibc2.10\r\nIs CUDA available: False\r\nCUDA runtime version: No CUDA\r\nGPU models and configuration: No CUDA\r\nNvidia driver version: No CUDA\r\ncuDNN version: No CUDA\r\nHIP runtime version: N/A\r\nMIOpen runtime version: N/A\r\nIs XNNPACK available: True\r\n\r\nVersions of relevant libraries:\r\n[pip3] numpy==1.22.3\r\n[pip3] torch==1.11.0\r\n[conda] blas                      2.16                        mkl    conda-forge\r\n[conda] cpuonly                   2.0                           0    pytorch\r\n[conda] libblas                   3.8.0                    16_mkl    conda-forge\r\n[conda] libcblas                  3.8.0                    16_mkl    conda-forge\r\n[conda] liblapack                 3.8.0                    16_mkl    conda-forge\r\n[conda] liblapacke                3.8.0                    16_mkl    conda-forge\r\n[conda] mkl                       2020.2                      256  \r\n[conda] numpy                     1.22.3           py38h05e7239_0    conda-forge\r\n[conda] pytorch                   1.11.0              py3.8_cpu_0    pytorch\r\n[conda] pytorch-mutex             1.0                         cpu    pytorch\r\n```",
        "closed_by": {
            "login": "davidberard98",
            "id": 5067123,
            "node_id": "MDQ6VXNlcjUwNjcxMjM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5067123?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidberard98",
            "html_url": "https://github.com/davidberard98",
            "followers_url": "https://api.github.com/users/davidberard98/followers",
            "following_url": "https://api.github.com/users/davidberard98/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidberard98/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidberard98/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidberard98/subscriptions",
            "organizations_url": "https://api.github.com/users/davidberard98/orgs",
            "repos_url": "https://api.github.com/users/davidberard98/repos",
            "events_url": "https://api.github.com/users/davidberard98/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidberard98/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/74626/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/74626/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/74559",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/74559/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/74559/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/74559/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/74559",
        "id": 1177092851,
        "node_id": "I_kwDOA-j9z85GKQLz",
        "number": 74559,
        "title": "Improve NVFuser fallback performance",
        "user": {
            "login": "davidberard98",
            "id": 5067123,
            "node_id": "MDQ6VXNlcjUwNjcxMjM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5067123?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidberard98",
            "html_url": "https://github.com/davidberard98",
            "followers_url": "https://api.github.com/users/davidberard98/followers",
            "following_url": "https://api.github.com/users/davidberard98/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidberard98/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidberard98/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidberard98/subscriptions",
            "organizations_url": "https://api.github.com/users/davidberard98/orgs",
            "repos_url": "https://api.github.com/users/davidberard98/repos",
            "events_url": "https://api.github.com/users/davidberard98/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidberard98/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2022-03-22T17:35:28Z",
        "updated_at": "2022-05-04T20:45:29Z",
        "closed_at": "2022-05-04T20:45:28Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "NVFuser fallbacks are slow.\r\n\r\nFor example, on autogen-69 from https://github.com/pytorch/benchmark/pull/801, we have roughly (for V100):\r\n* 0.588 ms for eager\r\n* 0.436 ms for nnc static\r\n* 0.742 ms for nnc dynamic\r\n* 33.6 ms for nvfuser, which encounters an error and hits a fallback\r\n\r\nPart of this could be from caching the interpreter state / code as suggested below (to avoid costly graph copying and modification).\r\n\r\nHowever, benchmarking shows that most of the runtime is actually spent in the fused implementation (i.e. before it fails). To fix this we could either:\r\n* fix the fused implementation so it would fail faster, or\r\n* if the fallback gets run, always just use the fallback instead of the fused implementation.\r\n\r\n**original request below, from a comment on a PR**\r\n\r\nWe should really cache and save the `InterpreterState` code here. This fallback actually does get run in real networks, and this whole processes happens on each invocation\r\n\r\n_Originally posted by @eellison in https://github.com/pytorch/pytorch/pull/74361#discussion_r831556105_",
        "closed_by": {
            "login": "davidberard98",
            "id": 5067123,
            "node_id": "MDQ6VXNlcjUwNjcxMjM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5067123?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidberard98",
            "html_url": "https://github.com/davidberard98",
            "followers_url": "https://api.github.com/users/davidberard98/followers",
            "following_url": "https://api.github.com/users/davidberard98/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidberard98/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidberard98/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidberard98/subscriptions",
            "organizations_url": "https://api.github.com/users/davidberard98/orgs",
            "repos_url": "https://api.github.com/users/davidberard98/repos",
            "events_url": "https://api.github.com/users/davidberard98/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidberard98/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/74559/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/74559/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/74056",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/74056/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/74056/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/74056/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/74056",
        "id": 1165696823,
        "node_id": "I_kwDOA-j9z85Fex83",
        "number": 74056,
        "title": "REGR: Accessing dict in JITed code in 1.11",
        "user": {
            "login": "twoertwein",
            "id": 6618166,
            "node_id": "MDQ6VXNlcjY2MTgxNjY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6618166?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/twoertwein",
            "html_url": "https://github.com/twoertwein",
            "followers_url": "https://api.github.com/users/twoertwein/followers",
            "following_url": "https://api.github.com/users/twoertwein/following{/other_user}",
            "gists_url": "https://api.github.com/users/twoertwein/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/twoertwein/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/twoertwein/subscriptions",
            "organizations_url": "https://api.github.com/users/twoertwein/orgs",
            "repos_url": "https://api.github.com/users/twoertwein/repos",
            "events_url": "https://api.github.com/users/twoertwein/events{/privacy}",
            "received_events_url": "https://api.github.com/users/twoertwein/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "davidberard98",
            "id": 5067123,
            "node_id": "MDQ6VXNlcjUwNjcxMjM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5067123?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidberard98",
            "html_url": "https://github.com/davidberard98",
            "followers_url": "https://api.github.com/users/davidberard98/followers",
            "following_url": "https://api.github.com/users/davidberard98/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidberard98/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidberard98/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidberard98/subscriptions",
            "organizations_url": "https://api.github.com/users/davidberard98/orgs",
            "repos_url": "https://api.github.com/users/davidberard98/repos",
            "events_url": "https://api.github.com/users/davidberard98/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidberard98/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "davidberard98",
                "id": 5067123,
                "node_id": "MDQ6VXNlcjUwNjcxMjM=",
                "avatar_url": "https://avatars.githubusercontent.com/u/5067123?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidberard98",
                "html_url": "https://github.com/davidberard98",
                "followers_url": "https://api.github.com/users/davidberard98/followers",
                "following_url": "https://api.github.com/users/davidberard98/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidberard98/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidberard98/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidberard98/subscriptions",
                "organizations_url": "https://api.github.com/users/davidberard98/orgs",
                "repos_url": "https://api.github.com/users/davidberard98/repos",
                "events_url": "https://api.github.com/users/davidberard98/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidberard98/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 4,
        "created_at": "2022-03-10T20:41:04Z",
        "updated_at": "2022-03-31T22:33:58Z",
        "closed_at": "2022-03-31T22:33:58Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### \ud83d\udc1b Describe the bug\r\n\r\nThe following code worked with pytorch 1.10.2. Weirdly, there are many small independent (and sometimes seemingly unrelated) changes that make this error disappear.\r\n\r\n```py\r\nfrom typing import Final\r\n\r\nimport torch\r\n\r\n\r\nclass LinearActivation(torch.nn.Module):\r\n    def forward(\r\n        self, x: torch.Tensor, meta: dict[str, torch.Tensor]\r\n    ) -> tuple[torch.Tensor, dict[str, torch.Tensor]]:\r\n        meta = meta.copy()\r\n        meta[\"meta_y_hat\"] = x\r\n        # return x, meta # would make it work\r\n        return meta[\"meta_y_hat\"], meta  # JIT claims it errors here\r\n\r\n\r\nclass Test(torch.nn.Module):\r\n    def __init__(self):\r\n        super().__init__()\r\n\r\n        self.flag: Final = \"\"\r\n        self.activation = LinearActivation()\r\n\r\n    def forward(\r\n        self, x: torch.Tensor, meta: dict[str, torch.Tensor]\r\n    ) -> tuple[torch.Tensor, dict[str, torch.Tensor]]:\r\n        meta = meta.copy()\r\n        if self.flag != \"\":  # this branch should not even be compiled\r\n            # assert False # would make it work\r\n            score = x[:, -1:]\r\n            x, meta = self.activation(\r\n                x[:, :, :-1],  # replacing this with x, would make it work\r\n                meta,\r\n            )\r\n            x = torch.cat((x, score), dim=1)  # removing this line makes it work\r\n        else:\r\n            x, meta = self.activation(x, meta)\r\n        meta[\"meta_y_hat\"] = x  # removing this line makes it work\r\n        return meta[\"meta_y_hat\"], meta\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    model = torch.jit.script(Test())\r\n    x, xs = model.forward(torch.ones(10, 10), {})\r\n```\r\n\r\n```\r\npython test.py\r\nTraceback (most recent call last):\r\n  File \"test.py\", line 43, in <module>\r\n    x, xs = model.forward(torch.ones(10, 10), {})\r\nRuntimeError: The following operation failed in the TorchScript interpreter.\r\nTraceback of TorchScript (most recent call last):\r\n  File \"test.py\", line 36, in forward\r\n            x = torch.cat((x, score), dim=1)  # removing this line makes it work\r\n        else:\r\n            x, meta = self.activation(x, meta)\r\n                      ~~~~~~~~~~~~~~~ <--- HERE\r\n        meta[\"meta_y_hat\"] = x  # removing this line makes it work\r\n        return meta[\"meta_y_hat\"], meta\r\n  File \"test.py\", line 13, in forward\r\n        meta[\"meta_y_hat\"] = x\r\n        # return x, meta # would make it work\r\n        return meta[\"meta_y_hat\"], meta  # JIT claims it errors here\r\n               ~~~~~~~~~~~~~~~~~ <--- HERE\r\nRuntimeError: KeyError: meta_y_hat\r\n```\r\n\r\n### Versions\r\n\r\nCollecting environment information...\r\nPyTorch version: 1.11.0+cu102\r\nIs debug build: False\r\nCUDA used to build PyTorch: 10.2\r\nROCM used to build PyTorch: N/A\r\n\r\nOS: Ubuntu 16.04.7 LTS (x86_64)\r\nGCC version: (Ubuntu 9.4.0-1ubuntu1~16.04) 9.4.0\r\nClang version: 3.8.0-2ubuntu4 (tags/RELEASE_380/final)\r\nCMake version: version 3.15.1\r\nLibc version: glibc-2.23\r\n\r\nPython version: 3.9.9+ (heads/3.9:86c1265, Nov 27 2021, 15:32:47)  [GCC 9.4.0] (64-bit runtime)\r\nPython platform: Linux-4.13.0-36-generic-x86_64-with-glibc2.23\r\nIs CUDA available: True\r\nCUDA runtime version: 10.2.89\r\nGPU models and configuration: GPU 0: GeForce RTX 2080 Ti\r\nNvidia driver version: 440.64\r\ncuDNN version: /usr0/local/cuda-9.0/lib64/libcudnn.so.7.0.5\r\nHIP runtime version: N/A\r\nMIOpen runtime version: N/A\r\nIs XNNPACK available: True\r\n\r\nVersions of relevant libraries:\r\n[pip3] mypy==0.931\r\n[pip3] mypy-extensions==0.4.3\r\n[pip3] numpy==1.22.3\r\n[pip3] torch==1.11.0+cu102\r\n[pip3] torchvision==0.12.0\r\n[conda] Could not collect",
        "closed_by": {
            "login": "davidberard98",
            "id": 5067123,
            "node_id": "MDQ6VXNlcjUwNjcxMjM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5067123?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidberard98",
            "html_url": "https://github.com/davidberard98",
            "followers_url": "https://api.github.com/users/davidberard98/followers",
            "following_url": "https://api.github.com/users/davidberard98/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidberard98/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidberard98/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidberard98/subscriptions",
            "organizations_url": "https://api.github.com/users/davidberard98/orgs",
            "repos_url": "https://api.github.com/users/davidberard98/repos",
            "events_url": "https://api.github.com/users/davidberard98/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidberard98/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/74056/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/74056/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/74047",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/74047/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/74047/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/74047/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/74047",
        "id": 1165628129,
        "node_id": "I_kwDOA-j9z85FehLh",
        "number": 74047,
        "title": "tensor.numel() traced as constant",
        "user": {
            "login": "BowenBao",
            "id": 9376104,
            "node_id": "MDQ6VXNlcjkzNzYxMDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9376104?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/BowenBao",
            "html_url": "https://github.com/BowenBao",
            "followers_url": "https://api.github.com/users/BowenBao/followers",
            "following_url": "https://api.github.com/users/BowenBao/following{/other_user}",
            "gists_url": "https://api.github.com/users/BowenBao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/BowenBao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/BowenBao/subscriptions",
            "organizations_url": "https://api.github.com/users/BowenBao/orgs",
            "repos_url": "https://api.github.com/users/BowenBao/repos",
            "events_url": "https://api.github.com/users/BowenBao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/BowenBao/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "BowenBao",
            "id": 9376104,
            "node_id": "MDQ6VXNlcjkzNzYxMDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9376104?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/BowenBao",
            "html_url": "https://github.com/BowenBao",
            "followers_url": "https://api.github.com/users/BowenBao/followers",
            "following_url": "https://api.github.com/users/BowenBao/following{/other_user}",
            "gists_url": "https://api.github.com/users/BowenBao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/BowenBao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/BowenBao/subscriptions",
            "organizations_url": "https://api.github.com/users/BowenBao/orgs",
            "repos_url": "https://api.github.com/users/BowenBao/repos",
            "events_url": "https://api.github.com/users/BowenBao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/BowenBao/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "BowenBao",
                "id": 9376104,
                "node_id": "MDQ6VXNlcjkzNzYxMDQ=",
                "avatar_url": "https://avatars.githubusercontent.com/u/9376104?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/BowenBao",
                "html_url": "https://github.com/BowenBao",
                "followers_url": "https://api.github.com/users/BowenBao/followers",
                "following_url": "https://api.github.com/users/BowenBao/following{/other_user}",
                "gists_url": "https://api.github.com/users/BowenBao/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/BowenBao/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/BowenBao/subscriptions",
                "organizations_url": "https://api.github.com/users/BowenBao/orgs",
                "repos_url": "https://api.github.com/users/BowenBao/repos",
                "events_url": "https://api.github.com/users/BowenBao/events{/privacy}",
                "received_events_url": "https://api.github.com/users/BowenBao/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2022-03-10T19:22:59Z",
        "updated_at": "2022-04-27T17:48:47Z",
        "closed_at": "2022-04-27T17:48:47Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "### \ud83d\udc1b Describe the bug\n\nExample for repro:\r\n```python\r\nimport torch\r\n\r\nclass Model(torch.nn.Module):\r\n    def forward(self, x):\r\n        return torch.ones(x.numel())\r\n\r\nx = torch.randn(2, 3, 4)\r\ng = torch.jit.trace(Model(), (x, ))\r\nprint(g.graph)\r\n```\r\nLog:\r\n```\r\ngraph(%self : __torch__.Model,\r\n      %x : Float(2, 3, 4, strides=[12, 4, 1], requires_grad=0, device=cpu)):\r\n  %4 : int = prim::Constant[value=24]() # repro_march_numel.py:5:0\r\n  %5 : int[] = prim::ListConstruct(%4)\r\n  %6 : int = prim::Constant[value=6]() # repro_march_numel.py:5:0\r\n  %7 : NoneType = prim::Constant()\r\n  %8 : Device = prim::Constant[value=\"cpu\"]() # repro_march_numel.py:5:0\r\n  %9 : bool = prim::Constant[value=0]() # repro_march_numel.py:5:0\r\n  %10 : Float(24, strides=[1], requires_grad=0, device=cpu) = aten::ones(%5, %6, %7, %8, %9) # repro_march_numel.py:5:0\r\n  return (%10)\r\n```\r\nObserve that `x.numel()` got traced as `%4 : int = prim::Constant[value=24]()` which has fixed value. A more accurate graph is to dynamically compute from shape of `x`, as how `tensor.size()` is traced.\n\n### Versions\n\nPyTorch version: 1.12.0a0+git1908433\r\nIs debug build: False\r\nCUDA used to build PyTorch: 11.6\r\nROCM used to build PyTorch: N/A\r\n\r\nOS: Ubuntu 20.04.3 LTS (x86_64)\r\nGCC version: (Ubuntu 9.4.0-1ubuntu1~20.04) 9.4.0\r\nClang version: 10.0.0-4ubuntu1\r\nCMake version: version 3.22.2\r\nLibc version: glibc-2.17\r\n\r\nPython version: 3.7.11 (default, Jul 27 2021, 14:32:16)  [GCC 7.5.0] (64-bit runtime)\r\nPython platform: Linux-5.13.0-28-generic-x86_64-with-debian-bullseye-sid\r\nIs CUDA available: True\r\nCUDA runtime version: Could not collect\r\nGPU models and configuration: GPU 0: NVIDIA GeForce GTX 1080\r\nNvidia driver version: 510.47.03\r\ncuDNN version: Probably one of the following:\r\n/usr/lib/x86_64-linux-gnu/libcudnn.so.8.3.2\r\n/usr/lib/x86_64-linux-gnu/libcudnn_adv_infer.so.8.3.2\r\n/usr/lib/x86_64-linux-gnu/libcudnn_adv_train.so.8.3.2\r\n/usr/lib/x86_64-linux-gnu/libcudnn_cnn_infer.so.8.3.2\r\n/usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8.3.2\r\n/usr/lib/x86_64-linux-gnu/libcudnn_ops_infer.so.8.3.2\r\n/usr/lib/x86_64-linux-gnu/libcudnn_ops_train.so.8.3.2\r\nHIP runtime version: N/A\r\nMIOpen runtime version: N/A\r\n\r\nVersions of relevant libraries:\r\n[pip3] numpy==1.21.2\r\n[pip3] torch==1.12.0a0+git187f733",
        "closed_by": {
            "login": "garymm",
            "id": 421339,
            "node_id": "MDQ6VXNlcjQyMTMzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/421339?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/garymm",
            "html_url": "https://github.com/garymm",
            "followers_url": "https://api.github.com/users/garymm/followers",
            "following_url": "https://api.github.com/users/garymm/following{/other_user}",
            "gists_url": "https://api.github.com/users/garymm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/garymm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/garymm/subscriptions",
            "organizations_url": "https://api.github.com/users/garymm/orgs",
            "repos_url": "https://api.github.com/users/garymm/repos",
            "events_url": "https://api.github.com/users/garymm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/garymm/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/74047/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/74047/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/73984",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/73984/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/73984/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/73984/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/73984",
        "id": 1164498935,
        "node_id": "I_kwDOA-j9z85FaNf3",
        "number": 73984,
        "title": "[JIT] cannot parse IR for \"prim::Constant[value=annotate(List[int], []))]\"",
        "user": {
            "login": "davidberard98",
            "id": 5067123,
            "node_id": "MDQ6VXNlcjUwNjcxMjM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5067123?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidberard98",
            "html_url": "https://github.com/davidberard98",
            "followers_url": "https://api.github.com/users/davidberard98/followers",
            "following_url": "https://api.github.com/users/davidberard98/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidberard98/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidberard98/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidberard98/subscriptions",
            "organizations_url": "https://api.github.com/users/davidberard98/orgs",
            "repos_url": "https://api.github.com/users/davidberard98/repos",
            "events_url": "https://api.github.com/users/davidberard98/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidberard98/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2022-03-09T22:17:33Z",
        "updated_at": "2022-05-11T01:38:20Z",
        "closed_at": "2022-05-11T01:38:20Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### \ud83d\udc1b Describe the bug\r\n\r\nRepro:\r\n```python\r\ngraph = \"\"\"\r\ngraph(%p1 : Long(requires_grad=0, device=cuda:0),\r\n      %1 : Long(1, strides=[1], requires_grad=0, device=cuda:0),\r\n      %p0 : int):\r\n  %3 : int[] = prim::Constant[value=annotate(List[int], [])]()\r\n  %6 : Long(requires_grad=0, device=cuda:0) = aten::reshape(%1, %3)\r\n  %5 : Long(requires_grad=0, device=cuda:0) = aten::add(%6, %p1, %p0)\r\n  return (%5)\r\n\"\"\"\r\ntorch._C.parse_ir(graph)\r\n```\r\n\r\nError:\r\n```\r\nTraceback (most recent call last):\r\n  File \"/fsx/users/dberard/scripts/logscript/x.py\", line 13, in <module>\r\n    torch._C.parse_ir(graph)\r\nRuntimeError: expected ) but found '[' here:\r\n      %1 : Long(1, strides=[1], requires_grad=0, device=cuda:0),\r\n      %p0 : int):\r\n  %3 : int[] = prim::Constant[value=annotate(List[int], [])]()\r\n                                                 ~ <--- HERE\r\n  %6 : Long(requires_grad=0, device=cuda:0) = aten::reshape(%1, %3)\r\n  %5 : Long(requires_grad=0, device=cuda:0) = aten::add(%6, %p1, %p0\r\n```\r\n\r\n### also...\r\n\r\n```python\r\nimport torch\r\n\r\nir = \"\"\"\r\ngraph():\r\n  %7 : Long(1, strides=[1], requires_grad=0, device=cpu) = prim::Constant[value={0}]()\r\n  return (%7)\r\n\"\"\"\r\n\r\ntorch._C.parse_ir(ir)\r\n```\r\n\r\nContext: this comes from the log extract script https://github.com/pytorch/pytorch/pull/72889 running on torchbench.\r\n\r\n### Versions\r\n\r\nversion `1.12.0a0+git2e79740`",
        "closed_by": {
            "login": "davidberard98",
            "id": 5067123,
            "node_id": "MDQ6VXNlcjUwNjcxMjM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5067123?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidberard98",
            "html_url": "https://github.com/davidberard98",
            "followers_url": "https://api.github.com/users/davidberard98/followers",
            "following_url": "https://api.github.com/users/davidberard98/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidberard98/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidberard98/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidberard98/subscriptions",
            "organizations_url": "https://api.github.com/users/davidberard98/orgs",
            "repos_url": "https://api.github.com/users/davidberard98/repos",
            "events_url": "https://api.github.com/users/davidberard98/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidberard98/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/73984/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/73984/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/73737",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/73737/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/73737/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/73737/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/73737",
        "id": 1158447275,
        "node_id": "I_kwDOA-j9z85FDICr",
        "number": 73737,
        "title": "torch.jit.trace will fail on nn.Module with nn.ParameterList",
        "user": {
            "login": "zhuhaozhe",
            "id": 54701539,
            "node_id": "MDQ6VXNlcjU0NzAxNTM5",
            "avatar_url": "https://avatars.githubusercontent.com/u/54701539?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zhuhaozhe",
            "html_url": "https://github.com/zhuhaozhe",
            "followers_url": "https://api.github.com/users/zhuhaozhe/followers",
            "following_url": "https://api.github.com/users/zhuhaozhe/following{/other_user}",
            "gists_url": "https://api.github.com/users/zhuhaozhe/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zhuhaozhe/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zhuhaozhe/subscriptions",
            "organizations_url": "https://api.github.com/users/zhuhaozhe/orgs",
            "repos_url": "https://api.github.com/users/zhuhaozhe/repos",
            "events_url": "https://api.github.com/users/zhuhaozhe/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zhuhaozhe/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2022-03-03T14:03:00Z",
        "updated_at": "2022-04-05T23:40:24Z",
        "closed_at": "2022-04-05T23:40:24Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "### \ud83d\udc1b Describe the bug\n\nModule with ParameterList\r\n```python\r\nimport torch\r\nfrom torch import nn as nn\r\n\r\nclass M(torch.nn.Module):\r\n    def __init__(self):\r\n        super(M, self).__init__()\r\n        self.weights = torch.nn.ParameterList([nn.Parameter(torch.randn(1)) for i in range(10)])\r\n\r\n    def forward(self, x):\r\n        return x\r\n\r\nm = M()\r\ntorch.jit.trace(m, torch.randn(1))\r\n```\r\n\r\nwill be failed to trace\r\n```\r\nTraceback (most recent call last):\r\n  File \"test_trace.py\", line 13, in <module>\r\n    torch.jit.trace(m, torch.randn(1))\r\n  File \"/home/haozhe/rebase/frameworks.ai.pytorch.private-cpu/torch/jit/_trace.py\", line 741, in trace\r\n    return trace_module(\r\n  File \"/home/haozhe/rebase/frameworks.ai.pytorch.private-cpu/torch/jit/_trace.py\", line 942, in trace_module\r\n    module = make_module(mod, _module_class, _compilation_unit)\r\n  File \"/home/haozhe/rebase/frameworks.ai.pytorch.private-cpu/torch/jit/_trace.py\", line 568, in make_module\r\n    return _module_class(mod, _compilation_unit=_compilation_unit)\r\n  File \"/home/haozhe/rebase/frameworks.ai.pytorch.private-cpu/torch/jit/_trace.py\", line 1067, in __init__\r\n    tmp_module._modules[name] = make_module(\r\n  File \"/home/haozhe/rebase/frameworks.ai.pytorch.private-cpu/torch/jit/_trace.py\", line 556, in make_module\r\n    elif torch._jit_internal.module_has_exports(mod):\r\n  File \"/home/haozhe/rebase/frameworks.ai.pytorch.private-cpu/torch/_jit_internal.py\", line 675, in module_has_exports\r\n    if hasattr(mod, name):\r\nTypeError: hasattr(): attribute name must be string\r\n```\r\n\r\n\n\n### Versions\n\nCollecting environment information...\r\nPyTorch version: 1.12.0a0+gitf94b9e3\r\nIs debug build: False\r\nCUDA used to build PyTorch: None\r\nROCM used to build PyTorch: N/A\r\n\r\nOS: Ubuntu 20.04.3 LTS (x86_64)\r\nGCC version: (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0\r\nClang version: Could not collect\r\nCMake version: version 3.22.1\r\nLibc version: glibc-2.31\r\n\r\nPython version: 3.8.12 (default, Oct 12 2021, 13:49:34)  [GCC 7.5.0] (64-bit runtime)\r\nPython platform: Linux-5.11.0-46-generic-x86_64-with-glibc2.17\r\nIs CUDA available: False\r\nCUDA runtime version: No CUDA\r\nGPU models and configuration: No CUDA\r\nNvidia driver version: No CUDA\r\ncuDNN version: No CUDA\r\nHIP runtime version: N/A\r\nMIOpen runtime version: N/A\r\nIs XNNPACK available: True\r\n\r\nVersions of relevant libraries:\r\n[pip3] intel-extension-for-pytorch==1.10.0+cpu\r\n[pip3] numpy==1.21.2\r\n[pip3] pytorch-widedeep==1.0.0\r\n[pip3] torch==1.12.0a0+git539acb2\r\n[pip3] torchmetrics==0.7.2\r\n[pip3] torchvision==0.12.0a0+c6c1fb6\r\n[conda] intel-extension-for-pytorch 1.10.0+cpu                dev_0    <develop>\r\n[conda] mkl                       2022.0.1           h06a4308_117  \r\n[conda] mkl-include               2022.0.1           h06a4308_117  \r\n[conda] numpy                     1.21.2           py38hd8d4704_0  \r\n[conda] numpy-base                1.21.2           py38h2b8c604_0  \r\n[conda] pytorch-widedeep          1.0.0                     dev_0    <develop>\r\n[conda] torch                     1.12.0a0+git539acb2           dev_0    <develop>\r\n[conda] torchmetrics              0.7.2                    pypi_0    pypi\r\n[conda] torchvision               0.12.0a0+c6c1fb6           dev_0    <develop>\r\n\r\n\r\nIt is likely caused by this PR https://github.com/pytorch/pytorch/pull/70499.\r\n\r\nThe method \"__dir__\" of \"ParameterList\" is changed, the returned value will be int (0, 1, 2, ..., n) and cannot be passed to \"hasattr\" function since it only accepts \"str\".\r\nhttps://github.com/pytorch/pytorch/blob/20a037d80f51a74aabbcd305f2f3e3b55d41dd85/torch/_jit_internal.py#L674-L675",
        "closed_by": {
            "login": "davidberard98",
            "id": 5067123,
            "node_id": "MDQ6VXNlcjUwNjcxMjM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5067123?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidberard98",
            "html_url": "https://github.com/davidberard98",
            "followers_url": "https://api.github.com/users/davidberard98/followers",
            "following_url": "https://api.github.com/users/davidberard98/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidberard98/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidberard98/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidberard98/subscriptions",
            "organizations_url": "https://api.github.com/users/davidberard98/orgs",
            "repos_url": "https://api.github.com/users/davidberard98/repos",
            "events_url": "https://api.github.com/users/davidberard98/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidberard98/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/73737/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/73737/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/73620",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/73620/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/73620/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/73620/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/73620",
        "id": 1156204391,
        "node_id": "I_kwDOA-j9z85E6kdn",
        "number": 73620,
        "title": "[JIT] NVFuser tests that fail on windows",
        "user": {
            "login": "davidberard98",
            "id": 5067123,
            "node_id": "MDQ6VXNlcjUwNjcxMjM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5067123?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidberard98",
            "html_url": "https://github.com/davidberard98",
            "followers_url": "https://api.github.com/users/davidberard98/followers",
            "following_url": "https://api.github.com/users/davidberard98/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidberard98/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidberard98/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidberard98/subscriptions",
            "organizations_url": "https://api.github.com/users/davidberard98/orgs",
            "repos_url": "https://api.github.com/users/davidberard98/repos",
            "events_url": "https://api.github.com/users/davidberard98/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidberard98/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 3997471357,
                "node_id": "LA_kwDOA-j9z87uRJJ9",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20nvfuser",
                "name": "module: nvfuser",
                "color": "9CA380",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "davidberard98",
            "id": 5067123,
            "node_id": "MDQ6VXNlcjUwNjcxMjM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5067123?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidberard98",
            "html_url": "https://github.com/davidberard98",
            "followers_url": "https://api.github.com/users/davidberard98/followers",
            "following_url": "https://api.github.com/users/davidberard98/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidberard98/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidberard98/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidberard98/subscriptions",
            "organizations_url": "https://api.github.com/users/davidberard98/orgs",
            "repos_url": "https://api.github.com/users/davidberard98/repos",
            "events_url": "https://api.github.com/users/davidberard98/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidberard98/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "davidberard98",
                "id": 5067123,
                "node_id": "MDQ6VXNlcjUwNjcxMjM=",
                "avatar_url": "https://avatars.githubusercontent.com/u/5067123?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidberard98",
                "html_url": "https://github.com/davidberard98",
                "followers_url": "https://api.github.com/users/davidberard98/followers",
                "following_url": "https://api.github.com/users/davidberard98/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidberard98/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidberard98/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidberard98/subscriptions",
                "organizations_url": "https://api.github.com/users/davidberard98/orgs",
                "repos_url": "https://api.github.com/users/davidberard98/repos",
                "events_url": "https://api.github.com/users/davidberard98/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidberard98/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 8,
        "created_at": "2022-03-02T02:14:10Z",
        "updated_at": "2022-04-19T17:58:27Z",
        "closed_at": "2022-04-19T17:58:27Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### \ud83d\udc1b Describe the bug\r\n\r\nSome tests are failing/erroring. See https://gist.github.com/davidberard98/9941a73de26347f531e17d4167656ba6 for the full errors.\r\n\r\nOther tests are timing out. For example, previously windows CI tests would get stuck on `test_autocast_1` for about 2-3 hours before the job was killed due to timing out. For the other tests labeled as \"timing out\" below, the criteria was running for >10x the typical runtime on a linux machine.\r\n\r\nFail/Error: \r\n* test_alias_pass_fix\r\n* test_backward_type\r\n* test_batch_norm_half\r\n* test_batch_norm_impl_index_correctness\r\n* test_binary_ops_permutation\r\n* test_broadcasting_2\r\n* test_broadcasting_partition_logic_0\r\n* test_broadcasting_partition_logic_1\r\n* test_build_shape_expression_native_dropout\r\n* test_category_rule\r\n* test_channels_last_with_broadcast\r\n* test_conv2d_bias\r\n* test_dropout_inference_fusion\r\n* test_dropout_train_nograd_fusion\r\n* test_dropout_train_nograd_prob_check\r\n* test_dropout_training_prob_check\r\n* test_graph_rng\r\n* test_inplace_removal\r\n* test_linear\r\n* test_linear_1d_weight_mismatch_bias_dtype\r\n* test_native_layer_norm\r\n* test_native_layer_norm_half\r\n* test_norm\r\n* test_norm_channels_last\r\n* test_norm_half\r\n* test_norm_large\r\n* test_profile_ivalue\r\n* test_profiling_node\r\n* test_reduction_sizes_op\r\n* test_sibling_fusion\r\n* test_softmax\r\n* test_sum_to_size\r\n* test_view\r\n\r\nTimeout:\r\n* test_autocast_...\r\n* test_dropout_training_fusion\r\n* test_gelu\r\n* test_grad_sum_to_size\r\n* test_layer_norm_autodiff\r\n* test_softmax_dtype\r\n* test_softplus_fuser\r\n* test_unary_ops\r\n\r\n### Versions\r\n\r\nWindows CI build",
        "closed_by": {
            "login": "davidberard98",
            "id": 5067123,
            "node_id": "MDQ6VXNlcjUwNjcxMjM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5067123?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidberard98",
            "html_url": "https://github.com/davidberard98",
            "followers_url": "https://api.github.com/users/davidberard98/followers",
            "following_url": "https://api.github.com/users/davidberard98/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidberard98/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidberard98/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidberard98/subscriptions",
            "organizations_url": "https://api.github.com/users/davidberard98/orgs",
            "repos_url": "https://api.github.com/users/davidberard98/repos",
            "events_url": "https://api.github.com/users/davidberard98/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidberard98/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/73620/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/73620/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/73448",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/73448/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/73448/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/73448/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/73448",
        "id": 1150763934,
        "node_id": "I_kwDOA-j9z85El0Oe",
        "number": 73448,
        "title": "[JIT] Disable NVFuser for ROCm builds",
        "user": {
            "login": "davidberard98",
            "id": 5067123,
            "node_id": "MDQ6VXNlcjUwNjcxMjM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5067123?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidberard98",
            "html_url": "https://github.com/davidberard98",
            "followers_url": "https://api.github.com/users/davidberard98/followers",
            "following_url": "https://api.github.com/users/davidberard98/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidberard98/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidberard98/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidberard98/subscriptions",
            "organizations_url": "https://api.github.com/users/davidberard98/orgs",
            "repos_url": "https://api.github.com/users/davidberard98/repos",
            "events_url": "https://api.github.com/users/davidberard98/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidberard98/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1076930055,
                "node_id": "MDU6TGFiZWwxMDc2OTMwMDU1",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20cuda",
                "name": "module: cuda",
                "color": "f7e101",
                "default": false,
                "description": "Related to torch.cuda, and CUDA support in general"
            },
            {
                "id": 1078897659,
                "node_id": "MDU6TGFiZWwxMDc4ODk3NjU5",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20rocm",
                "name": "module: rocm",
                "color": "f7e101",
                "default": false,
                "description": "AMD GPU support for Pytorch"
            },
            {
                "id": 3997471357,
                "node_id": "LA_kwDOA-j9z87uRJJ9",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20nvfuser",
                "name": "module: nvfuser",
                "color": "9CA380",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "davidberard98",
            "id": 5067123,
            "node_id": "MDQ6VXNlcjUwNjcxMjM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5067123?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidberard98",
            "html_url": "https://github.com/davidberard98",
            "followers_url": "https://api.github.com/users/davidberard98/followers",
            "following_url": "https://api.github.com/users/davidberard98/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidberard98/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidberard98/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidberard98/subscriptions",
            "organizations_url": "https://api.github.com/users/davidberard98/orgs",
            "repos_url": "https://api.github.com/users/davidberard98/repos",
            "events_url": "https://api.github.com/users/davidberard98/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidberard98/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "davidberard98",
                "id": 5067123,
                "node_id": "MDQ6VXNlcjUwNjcxMjM=",
                "avatar_url": "https://avatars.githubusercontent.com/u/5067123?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidberard98",
                "html_url": "https://github.com/davidberard98",
                "followers_url": "https://api.github.com/users/davidberard98/followers",
                "following_url": "https://api.github.com/users/davidberard98/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidberard98/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidberard98/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidberard98/subscriptions",
                "organizations_url": "https://api.github.com/users/davidberard98/orgs",
                "repos_url": "https://api.github.com/users/davidberard98/repos",
                "events_url": "https://api.github.com/users/davidberard98/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidberard98/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 2,
        "created_at": "2022-02-25T19:09:25Z",
        "updated_at": "2022-04-19T17:58:13Z",
        "closed_at": "2022-04-19T17:58:12Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### \ud83d\udc1b Describe the bug\r\n\r\nNVFuser fails on ROCm builds. See here: https://github.com/pytorch/pytorch/runs/5330819673?check_suite_focus=true\r\n\r\nI've disabled the tests on ROCm for now.\r\n\r\nI think the right way to do this is with `#ifdef __HIP_PLATFORM_HCC__`\r\n\r\n### Versions\r\n\r\nROCm CI build\r\n\r\ncc @ngimel @jeffdaily @sunway513 @jithunnair-amd @ROCmSupport @KyleCZH",
        "closed_by": {
            "login": "davidberard98",
            "id": 5067123,
            "node_id": "MDQ6VXNlcjUwNjcxMjM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5067123?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidberard98",
            "html_url": "https://github.com/davidberard98",
            "followers_url": "https://api.github.com/users/davidberard98/followers",
            "following_url": "https://api.github.com/users/davidberard98/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidberard98/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidberard98/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidberard98/subscriptions",
            "organizations_url": "https://api.github.com/users/davidberard98/orgs",
            "repos_url": "https://api.github.com/users/davidberard98/repos",
            "events_url": "https://api.github.com/users/davidberard98/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidberard98/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/73448/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/73448/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/73228",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/73228/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/73228/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/73228/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/73228",
        "id": 1147299126,
        "node_id": "I_kwDOA-j9z85EYmU2",
        "number": 73228,
        "title": "TorchScript not computing the correct type for complex scalar",
        "user": {
            "login": "zasdfgbnm",
            "id": 1032377,
            "node_id": "MDQ6VXNlcjEwMzIzNzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1032377?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zasdfgbnm",
            "html_url": "https://github.com/zasdfgbnm",
            "followers_url": "https://api.github.com/users/zasdfgbnm/followers",
            "following_url": "https://api.github.com/users/zasdfgbnm/following{/other_user}",
            "gists_url": "https://api.github.com/users/zasdfgbnm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zasdfgbnm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zasdfgbnm/subscriptions",
            "organizations_url": "https://api.github.com/users/zasdfgbnm/orgs",
            "repos_url": "https://api.github.com/users/zasdfgbnm/repos",
            "events_url": "https://api.github.com/users/zasdfgbnm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zasdfgbnm/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "davidberard98",
            "id": 5067123,
            "node_id": "MDQ6VXNlcjUwNjcxMjM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5067123?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidberard98",
            "html_url": "https://github.com/davidberard98",
            "followers_url": "https://api.github.com/users/davidberard98/followers",
            "following_url": "https://api.github.com/users/davidberard98/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidberard98/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidberard98/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidberard98/subscriptions",
            "organizations_url": "https://api.github.com/users/davidberard98/orgs",
            "repos_url": "https://api.github.com/users/davidberard98/repos",
            "events_url": "https://api.github.com/users/davidberard98/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidberard98/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "davidberard98",
                "id": 5067123,
                "node_id": "MDQ6VXNlcjUwNjcxMjM=",
                "avatar_url": "https://avatars.githubusercontent.com/u/5067123?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidberard98",
                "html_url": "https://github.com/davidberard98",
                "followers_url": "https://api.github.com/users/davidberard98/followers",
                "following_url": "https://api.github.com/users/davidberard98/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidberard98/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidberard98/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidberard98/subscriptions",
                "organizations_url": "https://api.github.com/users/davidberard98/orgs",
                "repos_url": "https://api.github.com/users/davidberard98/repos",
                "events_url": "https://api.github.com/users/davidberard98/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidberard98/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2022-02-22T19:41:28Z",
        "updated_at": "2022-02-24T23:47:10Z",
        "closed_at": "2022-02-24T23:47:09Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "### \ud83d\udc1b Describe the bug\n\n```python\r\nimport torch\r\n\r\ndef f(x: complex, y: torch.Tensor):\r\n    o = torch.add(x, y)\r\n    o = 2 + o\r\n    return o\r\n\r\njf = torch.jit.script(f)\r\nx = 1j\r\ny = torch.tensor(5j, device='cuda')\r\n\r\nprint(f(x, y))\r\nprint(jf(x, y))\r\nprint(jf.graph)\r\nprint(jf.graph_for(x, y))\r\n```\r\n\r\nIn the above code, I am expecting `f` and `jf` to output the same type, but unfortunately it doesn't:\r\n```\r\ntensor(2.+6.j, device='cuda:0')\r\n(2+6j)\r\ngraph(%x.1 : complex,\r\n      %y.1 : Tensor):\r\n  %6 : int = prim::Constant[value=2]() # /home/gaoxiang/misc/jit_complex_scalar.py:5:8\r\n  %4 : complex = aten::ComplexImplicit(%y.1) # /home/gaoxiang/misc/jit_complex_scalar.py:4:8\r\n  %o.1 : complex = aten::add(%x.1, %4) # /home/gaoxiang/misc/jit_complex_scalar.py:4:8\r\n  %o.5 : complex = aten::add(%6, %o.1) # /home/gaoxiang/misc/jit_complex_scalar.py:5:8\r\n  return (%o.5)\r\n\r\ngraph(%x.1 : complex,\r\n      %y.1 : Tensor):\r\n  %2 : int = prim::Constant[value=2]() # /home/gaoxiang/misc/jit_complex_scalar.py:5:8\r\n  %3 : complex = aten::ComplexImplicit(%y.1) # /home/gaoxiang/misc/jit_complex_scalar.py:4:8\r\n  %o.1 : complex = aten::add(%x.1, %3) # /home/gaoxiang/misc/jit_complex_scalar.py:4:8\r\n  %o.5 : complex = aten::add(%2, %o.1) # /home/gaoxiang/misc/jit_complex_scalar.py:5:8\r\n  return (%o.5)\r\n```\r\n\n\n### Versions\n\n\r\n```\r\nCollecting environment information...\r\nPyTorch version: 1.12.0a0+gitec8d677\r\nIs debug build: True\r\nCUDA used to build PyTorch: 11.6\r\nROCM used to build PyTorch: N/A\r\n\r\nOS: Arch Linux (x86_64)\r\nGCC version: (GCC) 11.2.0\r\nClang version: 13.0.1\r\nCMake version: version 3.22.2\r\nLibc version: glibc-2.35\r\n\r\nPython version: 3.10.2 (main, Jan 15 2022, 19:56:27) [GCC 11.1.0] (64-bit runtime)\r\nPython platform: Linux-5.16.9-arch1-1-x86_64-with-glibc2.35\r\nIs CUDA available: True\r\nCUDA runtime version: 11.6.55\r\nGPU models and configuration: \r\nGPU 0: NVIDIA GeForce RTX 3090\r\nGPU 1: NVIDIA GeForce RTX 2080 Ti\r\n\r\nNvidia driver version: 510.54\r\ncuDNN version: Probably one of the following:\r\n/usr/lib/libcudnn.so.8.3.1\r\n/usr/lib/libcudnn_adv_infer.so.8.3.1\r\n/usr/lib/libcudnn_adv_train.so.8.3.1\r\n/usr/lib/libcudnn_cnn_infer.so.8.3.1\r\n/usr/lib/libcudnn_cnn_train.so.8.3.1\r\n/usr/lib/libcudnn_ops_infer.so.8.3.1\r\n/usr/lib/libcudnn_ops_train.so.8.3.1\r\nHIP runtime version: N/A\r\nMIOpen runtime version: N/A\r\n\r\nVersions of relevant libraries:\r\n[pip3] mypy-extensions==0.4.3\r\n[pip3] numpy==1.21.5\r\n[pip3] torch==1.12.0a0+gitec8d677\r\n[pip3] torch-ucc==1.0.0\r\n[pip3] torchani==2.2\r\n[conda] Could not collect\r\n```",
        "closed_by": {
            "login": "davidberard98",
            "id": 5067123,
            "node_id": "MDQ6VXNlcjUwNjcxMjM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5067123?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidberard98",
            "html_url": "https://github.com/davidberard98",
            "followers_url": "https://api.github.com/users/davidberard98/followers",
            "following_url": "https://api.github.com/users/davidberard98/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidberard98/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidberard98/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidberard98/subscriptions",
            "organizations_url": "https://api.github.com/users/davidberard98/orgs",
            "repos_url": "https://api.github.com/users/davidberard98/repos",
            "events_url": "https://api.github.com/users/davidberard98/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidberard98/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/73228/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/73228/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/72901",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/72901/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/72901/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/72901/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/72901",
        "id": 1139461440,
        "node_id": "I_kwDOA-j9z85D6s1A",
        "number": 72901,
        "title": "Support dataclasses in TorchScript",
        "user": {
            "login": "norabelrose",
            "id": 39116809,
            "node_id": "MDQ6VXNlcjM5MTE2ODA5",
            "avatar_url": "https://avatars.githubusercontent.com/u/39116809?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/norabelrose",
            "html_url": "https://github.com/norabelrose",
            "followers_url": "https://api.github.com/users/norabelrose/followers",
            "following_url": "https://api.github.com/users/norabelrose/following{/other_user}",
            "gists_url": "https://api.github.com/users/norabelrose/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/norabelrose/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/norabelrose/subscriptions",
            "organizations_url": "https://api.github.com/users/norabelrose/orgs",
            "repos_url": "https://api.github.com/users/norabelrose/repos",
            "events_url": "https://api.github.com/users/norabelrose/events{/privacy}",
            "received_events_url": "https://api.github.com/users/norabelrose/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 25,
        "created_at": "2022-02-16T02:53:56Z",
        "updated_at": "2023-02-09T03:36:13Z",
        "closed_at": "2022-06-07T21:44:59Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### \ud83d\ude80 The feature, motivation and pitch\n\nCurrently, TorchScript supports namedtuples as well as custom Python classes that meet certain requirements. Unfortunately, it's not possible to subclass a namedtuple to add extra methods (since inheritance is not supported), nor is it possible to use dataclasses (since the @dataclass decorator adds implementations of `__init__` and `__eq__` whose source code is not accessible with `inspect.getsource`). This means that anyone wanting to use custom data structures in TorchScript has to write them \"the old-fashioned way,\" manually implementing all the magic methods they'd like to use. In this respect, TorchScript is less user friendly than JAX + Flax, which has a  `flax.struct.dataclass` decorator that allows you to use (immutable) dataclass-like objects in jitted JAX code.\r\n\r\nIt seems like there are two possible ways to address this problem. First, we could add a new dataclass-like decorator, perhaps `torch.jit.dataclass`, which would transform a class just like the usual `@dataclass` decorator does but in a way that is compatible with TorchScript:\r\n```\r\n@torch.jit.dataclass\r\nclass Normal:\r\n    mu: Tensor\r\n    sigma: Tensor\r\n\r\n    def log_prob(self, value: Tensor) -> Tensor:\r\n        ...\r\n```\r\nThe other approach would be to add a special case into the TorchScript frontend that recognizes dataclasses, resulting in a double-decorator syntax like this:\r\n```\r\n@torch.jit.script\r\n@dataclass\r\nclass Normal:\r\n    mu: Tensor\r\n    sigma: Tensor\r\n\r\n    def log_prob(self, value: Tensor) -> Tensor:\r\n        ...\r\n```\r\nI think I'm partial to the first approach, since it is slightly more compact and might be a bit easier to implement, and it's also more similar to the Flax implementation, but I'm open to the latter approach as well. **I'm also interested in contributing a PR to implement this feature** if it seems that there's a consensus that this is a good idea.\n\n### Alternatives\n\n_No response_\n\n### Additional context\n\n_No response_",
        "closed_by": {
            "login": "pytorchmergebot",
            "id": 97764156,
            "node_id": "U_kgDOBdPDPA",
            "avatar_url": "https://avatars.githubusercontent.com/u/97764156?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pytorchmergebot",
            "html_url": "https://github.com/pytorchmergebot",
            "followers_url": "https://api.github.com/users/pytorchmergebot/followers",
            "following_url": "https://api.github.com/users/pytorchmergebot/following{/other_user}",
            "gists_url": "https://api.github.com/users/pytorchmergebot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pytorchmergebot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pytorchmergebot/subscriptions",
            "organizations_url": "https://api.github.com/users/pytorchmergebot/orgs",
            "repos_url": "https://api.github.com/users/pytorchmergebot/repos",
            "events_url": "https://api.github.com/users/pytorchmergebot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pytorchmergebot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/72901/reactions",
            "total_count": 7,
            "+1": 7,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/72901/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/72763",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/72763/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/72763/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/72763/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/72763",
        "id": 1133586031,
        "node_id": "I_kwDOA-j9z85DkSZv",
        "number": 72763,
        "title": "RuntimeError: input_values.size() == param_count_list.size()INTERNAL ASSERT FAILED at \"..\\\\torch\\\\csrc\\\\jit\\\\python\\\\script_init.cpp\":480",
        "user": {
            "login": "kyrie-23",
            "id": 55905034,
            "node_id": "MDQ6VXNlcjU1OTA1MDM0",
            "avatar_url": "https://avatars.githubusercontent.com/u/55905034?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kyrie-23",
            "html_url": "https://github.com/kyrie-23",
            "followers_url": "https://api.github.com/users/kyrie-23/followers",
            "following_url": "https://api.github.com/users/kyrie-23/following{/other_user}",
            "gists_url": "https://api.github.com/users/kyrie-23/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kyrie-23/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kyrie-23/subscriptions",
            "organizations_url": "https://api.github.com/users/kyrie-23/orgs",
            "repos_url": "https://api.github.com/users/kyrie-23/repos",
            "events_url": "https://api.github.com/users/kyrie-23/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kyrie-23/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 693805995,
                "node_id": "MDU6TGFiZWw2OTM4MDU5OTU=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20onnx",
                "name": "module: onnx",
                "color": "f7e101",
                "default": false,
                "description": "Related to torch.onnx"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "BowenBao",
            "id": 9376104,
            "node_id": "MDQ6VXNlcjkzNzYxMDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9376104?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/BowenBao",
            "html_url": "https://github.com/BowenBao",
            "followers_url": "https://api.github.com/users/BowenBao/followers",
            "following_url": "https://api.github.com/users/BowenBao/following{/other_user}",
            "gists_url": "https://api.github.com/users/BowenBao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/BowenBao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/BowenBao/subscriptions",
            "organizations_url": "https://api.github.com/users/BowenBao/orgs",
            "repos_url": "https://api.github.com/users/BowenBao/repos",
            "events_url": "https://api.github.com/users/BowenBao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/BowenBao/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "BowenBao",
                "id": 9376104,
                "node_id": "MDQ6VXNlcjkzNzYxMDQ=",
                "avatar_url": "https://avatars.githubusercontent.com/u/9376104?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/BowenBao",
                "html_url": "https://github.com/BowenBao",
                "followers_url": "https://api.github.com/users/BowenBao/followers",
                "following_url": "https://api.github.com/users/BowenBao/following{/other_user}",
                "gists_url": "https://api.github.com/users/BowenBao/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/BowenBao/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/BowenBao/subscriptions",
                "organizations_url": "https://api.github.com/users/BowenBao/orgs",
                "repos_url": "https://api.github.com/users/BowenBao/repos",
                "events_url": "https://api.github.com/users/BowenBao/events{/privacy}",
                "received_events_url": "https://api.github.com/users/BowenBao/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 6,
        "created_at": "2022-02-12T03:28:43Z",
        "updated_at": "2022-07-29T00:50:21Z",
        "closed_at": "2022-07-29T00:50:21Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### \ud83d\udc1b Describe the bug\r\n\r\n```python\r\nfrom nets.models import DigitModel\r\nimport torch\r\nimport os\r\nimport onnx\r\n\r\n#load pretrained torch model\r\ndef load_model(model, pretrained_path, load_to_cpu):\r\n    print('Loading pretrained model from {}'.format(pretrained_path))\r\n    if load_to_cpu:\r\n        pretrained_dict = torch.load(pretrained_path, map_location=lambda storage, loc: storage)\r\n    else:\r\n        device = torch.cuda.current_device()\r\n        pretrained_dict = torch.load(pretrained_path, map_location=lambda storage, loc: storage.cuda(device))\r\n    model.load_state_dict(pretrained_dict, strict=False)\r\n    return model\r\n\r\n#convert to onnx model\r\ndef pth_to_onnx(model,input_path, output_path):\r\n\r\n    \r\n    torch_model = load_model(model,input_path,True)  \r\n    torch_model.eval()\r\n    torch_model = torch.jit.script(torch_model)\r\n    x=torch.randn(1,1,28,28, device=\"cuda\")\r\n    export_onnx_file = output_path  \r\n    print(torch_model)\r\n    # Note: the bug is here\r\n    torch.onnx.export(torch_model,\r\n                      x,\r\n                      export_onnx_file,\r\n                      verbose=True,\r\n                      opset_version=9,  \r\n                      do_constant_folding=True, \r\n                      input_names=[\"input\"], \r\n                      output_names=[\"output\"] ,\r\n                      dynamic_axes={\"input\": {0: \"batch_size\"}, \r\n                                     \"output\": {0: \"batch_size\"}}\r\n                      )\r\n\r\n#DigitModel \r\n#@inproceedings{\r\n#  anonymous2022unsupervised,\r\n#  title={Unsupervised Federated Learning is Possible},\r\n#  author={Anonymous},\r\n#  booktitle={Submitted to The Tenth International Conference on Learning Representations},\r\n#  year={2022},\r\n#  url={https://openreview.net/forum?id=WHA8009laxu},\r\n#  note={under review}\r\n# }\r\nimport torch\r\nimport torch.nn as nn\r\nimport torch.nn.functional as func\r\nimport torchvision\r\nclass DigitModel(nn.Module):\r\n    def __init__(self, class_num=10):\r\n        super(DigitModel, self).__init__()\r\n        self.class_num = class_num\r\n\r\n        self.conv1 = nn.Conv2d(3, 64, 5, 1, 2)\r\n        self.bn1 = nn.BatchNorm2d(64)\r\n        self.conv2 = nn.Conv2d(64, 64, 5, 1, 2)\r\n        self.bn2 = nn.BatchNorm2d(64)\r\n        self.conv3 = nn.Conv2d(64, 128, 5, 1, 2)\r\n        self.bn3 = nn.BatchNorm2d(128)\r\n\r\n        self.fc1 = nn.Linear(6272, 2048)\r\n        self.bn4 = nn.BatchNorm1d(2048)\r\n        self.fc2 = nn.Linear(2048, 512)\r\n        self.bn5 = nn.BatchNorm1d(512)\r\n\r\n        self.fc3 = nn.Linear(512, class_num)\r\n\r\n    def forward(self, x, Pi, priors_corr, prior_test):\r\n        x = func.relu(self.bn1(self.conv1(x)))\r\n        x = func.max_pool2d(x, 2)\r\n\r\n        x = func.relu(self.bn2(self.conv2(x)))\r\n        x = func.max_pool2d(x, 2)\r\n\r\n        x = func.relu(self.bn3(self.conv3(x)))\r\n        x = x.view(x.shape[0], -1)\r\n\r\n        x = self.fc1(x)\r\n        x = self.bn4(x)\r\n        x = func.relu(x)\r\n\r\n        x = self.fc2(x)\r\n        x = self.bn5(x)\r\n        x = func.relu(x)\r\n\r\n        x = self.fc3(x)\r\n\r\n        g = torch.softmax(x, dim=1)\r\n        x = self.QfunctionMulticlass(g, Pi, priors_corr)\r\n\r\n        return x\r\n\r\n    def QfunctionMulticlass(self, g, Pi, priors_corr):\r\n        pi_ita = torch.mm(Pi, g.permute(1, 0))\r\n        rou_pi_ita = torch.matmul(priors_corr, pi_ita)\r\n\r\n        pi_corr = pi_ita.permute(1, 0) * priors_corr.unsqueeze(0)\r\n        output = (pi_corr.permute(1, 0) / rou_pi_ita).permute(1, 0)\r\n\r\n        return output\r\n\r\n    def predict(self, x):\r\n        x = func.relu(self.bn1(self.conv1(x)))\r\n        x = func.max_pool2d(x, 2)\r\n\r\n        x = func.relu(self.bn2(self.conv2(x)))\r\n        x = func.max_pool2d(x, 2)\r\n\r\n        x = func.relu(self.bn3(self.conv3(x)))\r\n\r\n        x = x.view(x.shape[0], -1)\r\n\r\n        x = self.fc1(x)\r\n        x = self.bn4(x)\r\n        x = func.relu(x)\r\n\r\n        x = self.fc2(x)\r\n        x = self.bn5(x)\r\n        x = func.relu(x)\r\n\r\n        x = self.fc3(x)\r\n\r\n        g = torch.softmax(x, dim=1)\r\n\r\n        return g\r\n\r\n#trackback\r\nTraceback (most recent call last):\r\n  File \"D:/BaiduNetdiskDownload/FedUL/load_model.py\", line 119, in <module>\r\n    pth_to_onnx(model,input_path, onnx_path) \r\n  File \"D:/BaiduNetdiskDownload/FedUL/load_model.py\", line 35, in pth_to_onnx\r\n    torch.onnx.export(torch_model,\r\n  File \"C:\\tools\\Anaconda3\\envs\\fedul\\lib\\site-packages\\torch\\onnx\\__init__.py\", line 316, in export\r\n    return utils.export(model, args, f, export_params, verbose, training,\r\n  File \"C:\\tools\\Anaconda3\\envs\\fedul\\lib\\site-packages\\torch\\onnx\\utils.py\", line 107, in export\r\n    _export(model, args, f, export_params, verbose, training, input_names, output_names,\r\n  File \"C:\\tools\\Anaconda3\\envs\\fedul\\lib\\site-packages\\torch\\onnx\\utils.py\", line 724, in _export\r\n    _model_to_graph(model, args, verbose, input_names,\r\n  File \"C:\\tools\\Anaconda3\\envs\\fedul\\lib\\site-packages\\torch\\onnx\\utils.py\", line 493, in _model_to_graph\r\n    graph, params, torch_out, module = _create_jit_graph(model, args)\r\n  File \"C:\\tools\\Anaconda3\\envs\\fedul\\lib\\site-packages\\torch\\onnx\\utils.py\", line 422, in _create_jit_graph\r\n    graph = _propagate_and_assign_input_shapes(\r\nRuntimeError: input_values.size() == param_count_list.size()INTERNAL ASSERT FAILED at \"..\\\\torch\\\\csrc\\\\jit\\\\python\\\\script_init.cpp\":480, please report a bug to PyTorch. \r\n\r\nProcess finished with exit code 1\r\n\r\n```\r\n\r\n### Versions\r\n\r\n```\r\npytorch 1.10.2\r\ntorchvision 0.11.3\r\npython 3.8.12\r\nonnx 1.10.2\r\n\r\nCuda compilation tools, release 11.3, V11.3.58\r\nBuild cuda_11.3.r11.3/compiler.29745058_0\r\n```",
        "closed_by": {
            "login": "pytorchmergebot",
            "id": 97764156,
            "node_id": "U_kgDOBdPDPA",
            "avatar_url": "https://avatars.githubusercontent.com/u/97764156?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pytorchmergebot",
            "html_url": "https://github.com/pytorchmergebot",
            "followers_url": "https://api.github.com/users/pytorchmergebot/followers",
            "following_url": "https://api.github.com/users/pytorchmergebot/following{/other_user}",
            "gists_url": "https://api.github.com/users/pytorchmergebot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pytorchmergebot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pytorchmergebot/subscriptions",
            "organizations_url": "https://api.github.com/users/pytorchmergebot/orgs",
            "repos_url": "https://api.github.com/users/pytorchmergebot/repos",
            "events_url": "https://api.github.com/users/pytorchmergebot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pytorchmergebot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/72763/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/72763/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/72743",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/72743/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/72743/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/72743/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/72743",
        "id": 1133100499,
        "node_id": "I_kwDOA-j9z85Dib3T",
        "number": 72743,
        "title": "[JIT] torch.jit.fuser(\"fuser1\") should enable cpu fusion",
        "user": {
            "login": "davidberard98",
            "id": 5067123,
            "node_id": "MDQ6VXNlcjUwNjcxMjM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5067123?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidberard98",
            "html_url": "https://github.com/davidberard98",
            "followers_url": "https://api.github.com/users/davidberard98/followers",
            "following_url": "https://api.github.com/users/davidberard98/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidberard98/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidberard98/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidberard98/subscriptions",
            "organizations_url": "https://api.github.com/users/davidberard98/orgs",
            "repos_url": "https://api.github.com/users/davidberard98/repos",
            "events_url": "https://api.github.com/users/davidberard98/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidberard98/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 2510754463,
                "node_id": "MDU6TGFiZWwyNTEwNzU0NDYz",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/NNC",
                "name": "NNC",
                "color": "e5678d",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "davidberard98",
            "id": 5067123,
            "node_id": "MDQ6VXNlcjUwNjcxMjM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5067123?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidberard98",
            "html_url": "https://github.com/davidberard98",
            "followers_url": "https://api.github.com/users/davidberard98/followers",
            "following_url": "https://api.github.com/users/davidberard98/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidberard98/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidberard98/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidberard98/subscriptions",
            "organizations_url": "https://api.github.com/users/davidberard98/orgs",
            "repos_url": "https://api.github.com/users/davidberard98/repos",
            "events_url": "https://api.github.com/users/davidberard98/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidberard98/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "davidberard98",
                "id": 5067123,
                "node_id": "MDQ6VXNlcjUwNjcxMjM=",
                "avatar_url": "https://avatars.githubusercontent.com/u/5067123?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidberard98",
                "html_url": "https://github.com/davidberard98",
                "followers_url": "https://api.github.com/users/davidberard98/followers",
                "following_url": "https://api.github.com/users/davidberard98/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidberard98/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidberard98/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidberard98/subscriptions",
                "organizations_url": "https://api.github.com/users/davidberard98/orgs",
                "repos_url": "https://api.github.com/users/davidberard98/repos",
                "events_url": "https://api.github.com/users/davidberard98/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidberard98/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2022-02-11T21:13:38Z",
        "updated_at": "2022-04-14T15:06:51Z",
        "closed_at": "2022-04-14T15:06:51Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### \ud83d\udc1b Describe the bug\n\nSee [here](https://github.com/pytorch/pytorch/blob/e0a0f37a11164f59b42bc80a6f95b54f722d47ce/torch/jit/_fuser.py#L42)\r\n\r\n`torch.jit.fuser('fuser1')` - which modifies settings to enable nnc - currently disables cpu fusion. CPU fusion should be enabled here.\r\n\r\nWill need to check for test failures, etc. And this might be a bc-breaking change? (torch.jit.fuser doesn't have an underscore, but it's also not documented)\r\n\r\nAlso probably should be changed in torchbench https://github.com/pytorch/benchmark/pull/744\n\n### Versions\n\nmaster branch",
        "closed_by": {
            "login": "davidberard98",
            "id": 5067123,
            "node_id": "MDQ6VXNlcjUwNjcxMjM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5067123?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidberard98",
            "html_url": "https://github.com/davidberard98",
            "followers_url": "https://api.github.com/users/davidberard98/followers",
            "following_url": "https://api.github.com/users/davidberard98/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidberard98/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidberard98/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidberard98/subscriptions",
            "organizations_url": "https://api.github.com/users/davidberard98/orgs",
            "repos_url": "https://api.github.com/users/davidberard98/repos",
            "events_url": "https://api.github.com/users/davidberard98/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidberard98/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/72743/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/72743/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/72674",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/72674/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/72674/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/72674/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/72674",
        "id": 1131024881,
        "node_id": "I_kwDOA-j9z85DahHx",
        "number": 72674,
        "title": "[JIT] Add pass that compares outputs of nvfuser & non-fused implementations",
        "user": {
            "login": "davidberard98",
            "id": 5067123,
            "node_id": "MDQ6VXNlcjUwNjcxMjM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5067123?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidberard98",
            "html_url": "https://github.com/davidberard98",
            "followers_url": "https://api.github.com/users/davidberard98/followers",
            "following_url": "https://api.github.com/users/davidberard98/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidberard98/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidberard98/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidberard98/subscriptions",
            "organizations_url": "https://api.github.com/users/davidberard98/orgs",
            "repos_url": "https://api.github.com/users/davidberard98/repos",
            "events_url": "https://api.github.com/users/davidberard98/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidberard98/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2022-02-10T21:33:23Z",
        "updated_at": "2022-04-11T22:51:17Z",
        "closed_at": "2022-04-11T22:51:17Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### \ud83d\ude80 The feature, motivation and pitch\n\nThis pass could be used for automating performance tests for nvfuser (internally)\n\n### Alternatives\n\n_No response_\n\n### Additional context\n\n_No response_",
        "closed_by": {
            "login": "davidberard98",
            "id": 5067123,
            "node_id": "MDQ6VXNlcjUwNjcxMjM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5067123?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidberard98",
            "html_url": "https://github.com/davidberard98",
            "followers_url": "https://api.github.com/users/davidberard98/followers",
            "following_url": "https://api.github.com/users/davidberard98/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidberard98/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidberard98/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidberard98/subscriptions",
            "organizations_url": "https://api.github.com/users/davidberard98/orgs",
            "repos_url": "https://api.github.com/users/davidberard98/repos",
            "events_url": "https://api.github.com/users/davidberard98/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidberard98/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/72674/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/72674/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/72471",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/72471/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/72471/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/72471/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/72471",
        "id": 1126553238,
        "node_id": "I_kwDOA-j9z85DJdaW",
        "number": 72471,
        "title": "Tool for capturing script-able logging output",
        "user": {
            "login": "davidberard98",
            "id": 5067123,
            "node_id": "MDQ6VXNlcjUwNjcxMjM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5067123?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidberard98",
            "html_url": "https://github.com/davidberard98",
            "followers_url": "https://api.github.com/users/davidberard98/followers",
            "following_url": "https://api.github.com/users/davidberard98/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidberard98/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidberard98/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidberard98/subscriptions",
            "organizations_url": "https://api.github.com/users/davidberard98/orgs",
            "repos_url": "https://api.github.com/users/davidberard98/repos",
            "events_url": "https://api.github.com/users/davidberard98/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidberard98/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2022-02-07T22:08:15Z",
        "updated_at": "2022-04-05T21:27:38Z",
        "closed_at": "2022-04-05T21:27:38Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### \ud83d\ude80 The feature, motivation and pitch\n\nThis could be a useful tool for debugging & isolating performance issues with fusions.\r\n\r\n1) in relevant places (e.g. nvfuser fusion), print logs of graphs with full shape info, so that inputs can be generated based only on the printed graph information\r\n2) write a script that can load IR from the logs, and generate inputs to test on the IR.\n\n### Alternatives\n\n_No response_\n\n### Additional context\n\n_No response_",
        "closed_by": {
            "login": "davidberard98",
            "id": 5067123,
            "node_id": "MDQ6VXNlcjUwNjcxMjM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5067123?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidberard98",
            "html_url": "https://github.com/davidberard98",
            "followers_url": "https://api.github.com/users/davidberard98/followers",
            "following_url": "https://api.github.com/users/davidberard98/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidberard98/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidberard98/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidberard98/subscriptions",
            "organizations_url": "https://api.github.com/users/davidberard98/orgs",
            "repos_url": "https://api.github.com/users/davidberard98/repos",
            "events_url": "https://api.github.com/users/davidberard98/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidberard98/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/72471/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/72471/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/72466",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/72466/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/72466/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/72466/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/72466",
        "id": 1126535663,
        "node_id": "I_kwDOA-j9z85DJZHv",
        "number": 72466,
        "title": "Add nvfuser tests to CI",
        "user": {
            "login": "davidberard98",
            "id": 5067123,
            "node_id": "MDQ6VXNlcjUwNjcxMjM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5067123?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidberard98",
            "html_url": "https://github.com/davidberard98",
            "followers_url": "https://api.github.com/users/davidberard98/followers",
            "following_url": "https://api.github.com/users/davidberard98/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidberard98/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidberard98/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidberard98/subscriptions",
            "organizations_url": "https://api.github.com/users/davidberard98/orgs",
            "repos_url": "https://api.github.com/users/davidberard98/repos",
            "events_url": "https://api.github.com/users/davidberard98/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidberard98/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2022-02-07T21:48:10Z",
        "updated_at": "2022-04-05T22:04:25Z",
        "closed_at": "2022-04-05T22:04:25Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### \ud83d\ude80 The feature, motivation and pitch\n\n`test/test_jit_cuda_fuser.py` doesn't seem like it's in any github or internal CI runs. Check if this is true - if so, we should try to add it.\n\n### Alternatives\n\n_No response_\n\n### Additional context\n\n_No response_",
        "closed_by": {
            "login": "davidberard98",
            "id": 5067123,
            "node_id": "MDQ6VXNlcjUwNjcxMjM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5067123?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidberard98",
            "html_url": "https://github.com/davidberard98",
            "followers_url": "https://api.github.com/users/davidberard98/followers",
            "following_url": "https://api.github.com/users/davidberard98/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidberard98/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidberard98/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidberard98/subscriptions",
            "organizations_url": "https://api.github.com/users/davidberard98/orgs",
            "repos_url": "https://api.github.com/users/davidberard98/repos",
            "events_url": "https://api.github.com/users/davidberard98/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidberard98/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/72466/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/72466/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/70607",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/70607/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/70607/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/70607/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/70607",
        "id": 1093572351,
        "node_id": "I_kwDOA-j9z85BLpb_",
        "number": 70607,
        "title": "test_jit_fuser_te not testing failures properly due to unexpected implicit string concatenation ",
        "user": {
            "login": "code-review-doctor",
            "id": 72647856,
            "node_id": "MDQ6VXNlcjcyNjQ3ODU2",
            "avatar_url": "https://avatars.githubusercontent.com/u/72647856?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/code-review-doctor",
            "html_url": "https://github.com/code-review-doctor",
            "followers_url": "https://api.github.com/users/code-review-doctor/followers",
            "following_url": "https://api.github.com/users/code-review-doctor/following{/other_user}",
            "gists_url": "https://api.github.com/users/code-review-doctor/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/code-review-doctor/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/code-review-doctor/subscriptions",
            "organizations_url": "https://api.github.com/users/code-review-doctor/orgs",
            "repos_url": "https://api.github.com/users/code-review-doctor/repos",
            "events_url": "https://api.github.com/users/code-review-doctor/events{/privacy}",
            "received_events_url": "https://api.github.com/users/code-review-doctor/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "davidberard98",
            "id": 5067123,
            "node_id": "MDQ6VXNlcjUwNjcxMjM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5067123?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidberard98",
            "html_url": "https://github.com/davidberard98",
            "followers_url": "https://api.github.com/users/davidberard98/followers",
            "following_url": "https://api.github.com/users/davidberard98/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidberard98/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidberard98/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidberard98/subscriptions",
            "organizations_url": "https://api.github.com/users/davidberard98/orgs",
            "repos_url": "https://api.github.com/users/davidberard98/repos",
            "events_url": "https://api.github.com/users/davidberard98/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidberard98/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "davidberard98",
                "id": 5067123,
                "node_id": "MDQ6VXNlcjUwNjcxMjM=",
                "avatar_url": "https://avatars.githubusercontent.com/u/5067123?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidberard98",
                "html_url": "https://github.com/davidberard98",
                "followers_url": "https://api.github.com/users/davidberard98/followers",
                "following_url": "https://api.github.com/users/davidberard98/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidberard98/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidberard98/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidberard98/subscriptions",
                "organizations_url": "https://api.github.com/users/davidberard98/orgs",
                "repos_url": "https://api.github.com/users/davidberard98/repos",
                "events_url": "https://api.github.com/users/davidberard98/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidberard98/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2022-01-04T16:57:26Z",
        "updated_at": "2022-01-25T07:06:12Z",
        "closed_at": "2022-01-25T07:06:12Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### \ud83d\udc1b Describe the bug\n\nA comma is missing from line 2093\r\n\r\nhttps://github.com/pytorch/pytorch/blob/1b66915f3916273edcf9dc5c3853bb31f21ed8f4/test/test_jit_fuser_te.py#L2092-L2096\r\n\r\nThis results in `'__rmatmul__'`  and `'frac'` being concatenated together to form `'__rmatmul__frac'` \r\n\r\nso the list evaluates to two items instead of three: `['__rmatmul__frac', 'matmul']`\r\n\r\nThe impact of this missing comma is `test_failures` and `test_failures` will not be testing `__rmatmul__` and `frac`:\r\n\r\nhttps://github.com/pytorch/pytorch/blob/1b66915f3916273edcf9dc5c3853bb31f21ed8f4/test/test_jit_fuser_te.py#L2159\r\n\r\nhttps://github.com/pytorch/pytorch/blob/1b66915f3916273edcf9dc5c3853bb31f21ed8f4/test/test_jit_fuser_te.py#L2170\r\n\r\nThe fix is of course to add the comma like so:\r\n\r\n```py\r\n known_failures = [ \r\n     '__rmatmul__' ,\r\n     'frac', \r\n     'matmul', \r\n ] \r\n```\r\n\r\nI can raise a PR for this?\n\n### Versions\n\nNA",
        "closed_by": {
            "login": "davidberard98",
            "id": 5067123,
            "node_id": "MDQ6VXNlcjUwNjcxMjM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5067123?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidberard98",
            "html_url": "https://github.com/davidberard98",
            "followers_url": "https://api.github.com/users/davidberard98/followers",
            "following_url": "https://api.github.com/users/davidberard98/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidberard98/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidberard98/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidberard98/subscriptions",
            "organizations_url": "https://api.github.com/users/davidberard98/orgs",
            "repos_url": "https://api.github.com/users/davidberard98/repos",
            "events_url": "https://api.github.com/users/davidberard98/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidberard98/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/70607/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/70607/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/70525",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/70525/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/70525/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/70525/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/70525",
        "id": 1091097032,
        "node_id": "I_kwDOA-j9z85BCNHI",
        "number": 70525,
        "title": "C++ extension JIT import: module 'importlib' has no attribute 'abc' ",
        "user": {
            "login": "lumaku",
            "id": 6996289,
            "node_id": "MDQ6VXNlcjY5OTYyODk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6996289?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lumaku",
            "html_url": "https://github.com/lumaku",
            "followers_url": "https://api.github.com/users/lumaku/followers",
            "following_url": "https://api.github.com/users/lumaku/following{/other_user}",
            "gists_url": "https://api.github.com/users/lumaku/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lumaku/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lumaku/subscriptions",
            "organizations_url": "https://api.github.com/users/lumaku/orgs",
            "repos_url": "https://api.github.com/users/lumaku/repos",
            "events_url": "https://api.github.com/users/lumaku/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lumaku/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 2695910552,
                "node_id": "MDU6TGFiZWwyNjk1OTEwNTUy",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/Stale",
                "name": "Stale",
                "color": "ededed",
                "default": false,
                "description": null
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2021-12-30T13:11:35Z",
        "updated_at": "2022-04-14T03:32:34Z",
        "closed_at": "2022-04-14T03:32:34Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### \ud83d\udc1b Describe the bug\n\nWhen importing a C++ extension, Pytorch crashes on this line:\r\nhttps://github.com/pytorch/pytorch/blob/36db501736cafd69cdfd0114b6136b6cc2e91160/torch/utils/cpp_extension.py#L1762\r\n\r\nTo reproduce:\r\nOn Arch Linux latest\r\nPython 3.10.1 (main, Dec 18 2021, 23:53:45) [GCC 11.1.0]\r\nPytorch 1.10.1\r\n\r\nWith the example from https://pytorch.org/tutorials/advanced/cpp_extension.html\r\n\r\n```python\r\nfrom torch.utils.cpp_extension import load\r\nlltm_cpp = load(name=\"lltm_cpp\", sources=[\"lltm.cpp\"])\r\n```\r\n\r\nThe error:\r\n```\r\n---------------------------------------------------------------------------\r\nAttributeError                            Traceback (most recent call last)\r\n<ipython-input-3-334d309cf512> in <module>\r\n----> 1 lltm_cpp = load(name=\"lltm_cpp\", sources=[\"lltm.cpp\"])\r\n\r\n/usr/lib/python3.10/site-packages/torch/utils/cpp_extension.py in load(name, sources, extra_cflags, extra_cuda_cflags, extra_ldflags, extra_include_paths, build_directory, verbose, with_cuda, is_python_module, is_standalone, keep_intermediates)\r\n   1122                 verbose=True)\r\n   1123     '''\r\n-> 1124     return _jit_compile(\r\n   1125         name,\r\n   1126         [sources] if isinstance(sources, str) else sources,\r\n\r\n/usr/lib/python3.10/site-packages/torch/utils/cpp_extension.py in _jit_compile(name, sources, extra_cflags, extra_cuda_cflags, extra_ldflags, extra_include_paths, build_directory, verbose, with_cuda, is_python_module, is_standalone, keep_intermediates)\r\n   1360         return _get_exec_path(name, build_directory)\r\n   1361 \r\n-> 1362     return _import_module_from_library(name, build_directory, is_python_module)\r\n   1363 \r\n   1364 \r\n\r\n/usr/lib/python3.10/site-packages/torch/utils/cpp_extension.py in _import_module_from_library(module_name, path, is_python_module)\r\n   1751         spec = importlib.util.spec_from_file_location(module_name, filepath)\r\n   1752         module = importlib.util.module_from_spec(spec)\r\n-> 1753         assert isinstance(spec.loader, importlib.abc.Loader)\r\n   1754         spec.loader.exec_module(module)\r\n   1755         return module\r\n\r\nAttributeError: module 'importlib' has no attribute 'abc'\r\n\r\n```\r\n\r\nIt seems that importlib does not explicitely load `abc` as a submodule?\r\nAdding this to the code solved the issue:\r\n\r\n```python\r\nimport importlib.abc\r\n```\r\n\r\nThank you.\n\n### Versions\n\nPyTorch version: 1.10.1\r\nIs debug build: False\r\nCUDA used to build PyTorch: 11.5\r\nROCM used to build PyTorch: N/A\r\n\r\nOS: Arch Linux (x86_64)\r\nGCC version: (GCC) 11.1.0\r\nClang version: 13.0.0\r\nCMake version: version 3.22.1\r\nLibc version: glibc-2.33\r\n\r\nPython version: 3.10.1 (main, Dec 18 2021, 23:53:45) [GCC 11.1.0] (64-bit runtime)\r\nPython platform: Linux-5.15.11-arch2-1-x86_64-with-glibc2.33\r\nIs CUDA available: True\r\nCUDA runtime version: 11.5.119\r\nGPU models and configuration: GPU 0: NVIDIA GeForce MX250\r\nNvidia driver version: 495.46\r\ncuDNN version: Probably one of the following:\r\n/usr/lib/libcudnn.so.8.3.0\r\n/usr/lib/libcudnn_adv_infer.so.8.3.0\r\n/usr/lib/libcudnn_adv_train.so.8.3.0\r\n/usr/lib/libcudnn_cnn_infer.so.8.3.0\r\n/usr/lib/libcudnn_cnn_train.so.8.3.0\r\n/usr/lib/libcudnn_ops_infer.so.8.3.0\r\n/usr/lib/libcudnn_ops_train.so.8.3.0\r\nHIP runtime version: N/A\r\nMIOpen runtime version: N/A\r\n\r\nVersions of relevant libraries:\r\n[pip3] mypy-extensions==0.4.3\r\n[pip3] numpy==1.21.5\r\n[pip3] torch==1.10.1\r\n[pip3] torchaudio==0.10.0+d2634d8\r\n[conda] Could not collect\r\n",
        "closed_by": {
            "login": "pytorchmergebot",
            "id": 97764156,
            "node_id": "U_kgDOBdPDPA",
            "avatar_url": "https://avatars.githubusercontent.com/u/97764156?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pytorchmergebot",
            "html_url": "https://github.com/pytorchmergebot",
            "followers_url": "https://api.github.com/users/pytorchmergebot/followers",
            "following_url": "https://api.github.com/users/pytorchmergebot/following{/other_user}",
            "gists_url": "https://api.github.com/users/pytorchmergebot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pytorchmergebot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pytorchmergebot/subscriptions",
            "organizations_url": "https://api.github.com/users/pytorchmergebot/orgs",
            "repos_url": "https://api.github.com/users/pytorchmergebot/repos",
            "events_url": "https://api.github.com/users/pytorchmergebot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pytorchmergebot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/70525/reactions",
            "total_count": 2,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/70525/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/69905",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/69905/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/69905/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/69905/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/69905",
        "id": 1079904885,
        "node_id": "I_kwDOA-j9z85AXgp1",
        "number": 69905,
        "title": "`torch.jit.operator_upgraders` introduces new runtime dependency to `yaml`",
        "user": {
            "login": "malfet",
            "id": 2453524,
            "node_id": "MDQ6VXNlcjI0NTM1MjQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2453524?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/malfet",
            "html_url": "https://github.com/malfet",
            "followers_url": "https://api.github.com/users/malfet/followers",
            "following_url": "https://api.github.com/users/malfet/following{/other_user}",
            "gists_url": "https://api.github.com/users/malfet/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/malfet/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/malfet/subscriptions",
            "organizations_url": "https://api.github.com/users/malfet/orgs",
            "repos_url": "https://api.github.com/users/malfet/repos",
            "events_url": "https://api.github.com/users/malfet/events{/privacy}",
            "received_events_url": "https://api.github.com/users/malfet/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 443484135,
                "node_id": "MDU6TGFiZWw0NDM0ODQxMzU=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/high%20priority",
                "name": "high priority",
                "color": "F22613",
                "default": false,
                "description": null
            },
            {
                "id": 466131885,
                "node_id": "MDU6TGFiZWw0NjYxMzE4ODU=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triage%20review",
                "name": "triage review",
                "color": "cc317c",
                "default": false,
                "description": ""
            },
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 778855555,
                "node_id": "MDU6TGFiZWw3Nzg4NTU1NTU=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20build",
                "name": "module: build",
                "color": "f7e101",
                "default": false,
                "description": "Build system issues"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2021-12-14T15:34:28Z",
        "updated_at": "2021-12-21T22:45:20Z",
        "closed_at": "2021-12-21T22:45:20Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### \ud83d\udc1b Describe the bug\r\n\r\n`import yaml` was added to `torch/jit/operator_upgraders.py` by https://github.com/pytorch/pytorch/pull/68772\r\nWhich is not properly reflected as `setup.py` dependency. \r\n\r\nTODO: Revert https://github.com/pytorch/vision/commit/743fe1ab802c27c52a5372577d006d595e65677b after issue is closed\r\n\r\n\r\n### Versions\r\n\r\nhttps://download.pytorch.org/whl/nightly/cpu/torch-1.11.0.dev20211214%2Bcpu-cp36-cp36m-linux_x86_64.whl\r\n\r\ncc @ezyang @gchanan @zou3519 @bdhirsh @malfet @seemethere",
        "closed_by": {
            "login": "malfet",
            "id": 2453524,
            "node_id": "MDQ6VXNlcjI0NTM1MjQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2453524?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/malfet",
            "html_url": "https://github.com/malfet",
            "followers_url": "https://api.github.com/users/malfet/followers",
            "following_url": "https://api.github.com/users/malfet/following{/other_user}",
            "gists_url": "https://api.github.com/users/malfet/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/malfet/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/malfet/subscriptions",
            "organizations_url": "https://api.github.com/users/malfet/orgs",
            "repos_url": "https://api.github.com/users/malfet/repos",
            "events_url": "https://api.github.com/users/malfet/events{/privacy}",
            "received_events_url": "https://api.github.com/users/malfet/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/69905/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/69905/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/68221",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/68221/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/68221/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/68221/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/68221",
        "id": 1051443259,
        "node_id": "I_kwDOA-j9z84-q8A7",
        "number": 68221,
        "title": "[JIT][C++ Parser] Bug in processing ternary expressions",
        "user": {
            "login": "eellison",
            "id": 11477974,
            "node_id": "MDQ6VXNlcjExNDc3OTc0",
            "avatar_url": "https://avatars.githubusercontent.com/u/11477974?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eellison",
            "html_url": "https://github.com/eellison",
            "followers_url": "https://api.github.com/users/eellison/followers",
            "following_url": "https://api.github.com/users/eellison/following{/other_user}",
            "gists_url": "https://api.github.com/users/eellison/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eellison/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eellison/subscriptions",
            "organizations_url": "https://api.github.com/users/eellison/orgs",
            "repos_url": "https://api.github.com/users/eellison/repos",
            "events_url": "https://api.github.com/users/eellison/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eellison/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2021-11-11T23:28:56Z",
        "updated_at": "2022-03-01T23:28:22Z",
        "closed_at": "2022-03-01T23:28:22Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug \r\n\r\nI ran into the following bug when specifying shape functions in C++. Because we rely on the python ast parser generally, and then export ternary expressions as if statements, this doesn't come up very often. \r\n\r\n```\r\nimport torch\r\n\r\ncu = torch.jit.CompilationUnit('''\r\n    def foo(x: List[int]):\r\n        return 1 if len(x) == 0 else x[0] if len(x) == 1 else x[1]\r\n''')\r\nprint(cu.foo([]))\r\n```\r\nthrows an exception\r\n",
        "closed_by": {
            "login": "pytorchmergebot",
            "id": 97764156,
            "node_id": "U_kgDOBdPDPA",
            "avatar_url": "https://avatars.githubusercontent.com/u/97764156?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pytorchmergebot",
            "html_url": "https://github.com/pytorchmergebot",
            "followers_url": "https://api.github.com/users/pytorchmergebot/followers",
            "following_url": "https://api.github.com/users/pytorchmergebot/following{/other_user}",
            "gists_url": "https://api.github.com/users/pytorchmergebot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pytorchmergebot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pytorchmergebot/subscriptions",
            "organizations_url": "https://api.github.com/users/pytorchmergebot/orgs",
            "repos_url": "https://api.github.com/users/pytorchmergebot/repos",
            "events_url": "https://api.github.com/users/pytorchmergebot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pytorchmergebot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/68221/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/68221/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/66654",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/66654/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/66654/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/66654/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/66654",
        "id": 1026798873,
        "node_id": "I_kwDOA-j9z849M7UZ",
        "number": 66654,
        "title": "[JIT] Optimize Cat",
        "user": {
            "login": "eellison",
            "id": 11477974,
            "node_id": "MDQ6VXNlcjExNDc3OTc0",
            "avatar_url": "https://avatars.githubusercontent.com/u/11477974?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eellison",
            "html_url": "https://github.com/eellison",
            "followers_url": "https://api.github.com/users/eellison/followers",
            "following_url": "https://api.github.com/users/eellison/following{/other_user}",
            "gists_url": "https://api.github.com/users/eellison/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eellison/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eellison/subscriptions",
            "organizations_url": "https://api.github.com/users/eellison/orgs",
            "repos_url": "https://api.github.com/users/eellison/repos",
            "events_url": "https://api.github.com/users/eellison/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eellison/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 2203967172,
                "node_id": "MDU6TGFiZWwyMjAzOTY3MTcy",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/days",
                "name": "days",
                "color": "77f497",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "mikeiovine",
            "id": 6158008,
            "node_id": "MDQ6VXNlcjYxNTgwMDg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6158008?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mikeiovine",
            "html_url": "https://github.com/mikeiovine",
            "followers_url": "https://api.github.com/users/mikeiovine/followers",
            "following_url": "https://api.github.com/users/mikeiovine/following{/other_user}",
            "gists_url": "https://api.github.com/users/mikeiovine/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mikeiovine/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mikeiovine/subscriptions",
            "organizations_url": "https://api.github.com/users/mikeiovine/orgs",
            "repos_url": "https://api.github.com/users/mikeiovine/repos",
            "events_url": "https://api.github.com/users/mikeiovine/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mikeiovine/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "mikeiovine",
                "id": 6158008,
                "node_id": "MDQ6VXNlcjYxNTgwMDg=",
                "avatar_url": "https://avatars.githubusercontent.com/u/6158008?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/mikeiovine",
                "html_url": "https://github.com/mikeiovine",
                "followers_url": "https://api.github.com/users/mikeiovine/followers",
                "following_url": "https://api.github.com/users/mikeiovine/following{/other_user}",
                "gists_url": "https://api.github.com/users/mikeiovine/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/mikeiovine/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mikeiovine/subscriptions",
                "organizations_url": "https://api.github.com/users/mikeiovine/orgs",
                "repos_url": "https://api.github.com/users/mikeiovine/repos",
                "events_url": "https://api.github.com/users/mikeiovine/events{/privacy}",
                "received_events_url": "https://api.github.com/users/mikeiovine/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2021-10-14T20:36:26Z",
        "updated_at": "2022-06-04T02:20:08Z",
        "closed_at": "2022-06-04T02:20:08Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "## \ud83d\ude80 Feature\r\n\r\nOptimize out series of cats such as:\r\n\r\n```\r\ngraph(%view_20.1 : Float(10, 2, 96, strides=[192, 96, 1], requires_grad=0, device=cpu),\r\n      %view_19.1 : Float(10, 2, 96, strides=[192, 96, 1], requires_grad=0, device=cpu),\r\n      %view_18.1 : Float(10, 2, 96, strides=[192, 96, 1], requires_grad=0, device=cpu),\r\n      %reshape.1 : Float(10, 38, 96, strides=[3648, 96, 1], requires_grad=0, device=cpu),\r\n      %view_17.1 : Float(10, 2, 96, strides=[192, 96, 1], requires_grad=0, device=cpu)):\r\n  %19 : int = prim::Constant[value=1]()\r\n  %23 : Tensor[] = prim::ListConstruct(%reshape.1, %view_17.1)\r\n  %cat_3.2 : Float(10, 40, 96, strides=[3840, 96, 1], requires_grad=0, device=cpu) = aten::cat(%23, %19)\r\n  %17 : Tensor[] = prim::ListConstruct(%cat_3.2, %view_18.1)\r\n  %cat_5.2 : Float(10, 42, 96, strides=[4032, 96, 1], requires_grad=0, device=cpu) = aten::cat(%17, %19)\r\n  %11 : Tensor[] = prim::ListConstruct(%cat_5.2, %view_19.1)\r\n  %cat_7.2 : Float(10, 44, 96, strides=[4224, 96, 1], requires_grad=0, device=cpu) = aten::cat(%11, %19) # <eval_with_key>.0:324:12\r\n  %5 : Tensor[] = prim::ListConstruct(%cat_7.2, %view_20.1)\r\n  %cat_9.2 : Float(10, 46, 96, strides=[4416, 96, 1], requires_grad=0, device=cpu) = aten::cat(%5, %19) # <eval_with_key>.0:343:12\r\n  return (%cat_9.2)\r\n```\r\n\r\nInto a single cat.  We saw a model internally with such a pattern, and we all have observed cats with a single input that can be optimized out. Reach out to me for more details on benchmarking internal model.. cc @navahgar  @mikeiovine  @d1jang this was in SR model",
        "closed_by": {
            "login": "mikeiovine",
            "id": 6158008,
            "node_id": "MDQ6VXNlcjYxNTgwMDg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6158008?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mikeiovine",
            "html_url": "https://github.com/mikeiovine",
            "followers_url": "https://api.github.com/users/mikeiovine/followers",
            "following_url": "https://api.github.com/users/mikeiovine/following{/other_user}",
            "gists_url": "https://api.github.com/users/mikeiovine/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mikeiovine/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mikeiovine/subscriptions",
            "organizations_url": "https://api.github.com/users/mikeiovine/orgs",
            "repos_url": "https://api.github.com/users/mikeiovine/repos",
            "events_url": "https://api.github.com/users/mikeiovine/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mikeiovine/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/66654/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/66654/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/66650",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/66650/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/66650/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/66650/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/66650",
        "id": 1026761437,
        "node_id": "I_kwDOA-j9z849MyLd",
        "number": 66650,
        "title": " [JIT] Add Debug Assertions that the Stack is empty after inference",
        "user": {
            "login": "eellison",
            "id": 11477974,
            "node_id": "MDQ6VXNlcjExNDc3OTc0",
            "avatar_url": "https://avatars.githubusercontent.com/u/11477974?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eellison",
            "html_url": "https://github.com/eellison",
            "followers_url": "https://api.github.com/users/eellison/followers",
            "following_url": "https://api.github.com/users/eellison/following{/other_user}",
            "gists_url": "https://api.github.com/users/eellison/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eellison/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eellison/subscriptions",
            "organizations_url": "https://api.github.com/users/eellison/orgs",
            "repos_url": "https://api.github.com/users/eellison/repos",
            "events_url": "https://api.github.com/users/eellison/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eellison/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "davidberard98",
            "id": 5067123,
            "node_id": "MDQ6VXNlcjUwNjcxMjM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5067123?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidberard98",
            "html_url": "https://github.com/davidberard98",
            "followers_url": "https://api.github.com/users/davidberard98/followers",
            "following_url": "https://api.github.com/users/davidberard98/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidberard98/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidberard98/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidberard98/subscriptions",
            "organizations_url": "https://api.github.com/users/davidberard98/orgs",
            "repos_url": "https://api.github.com/users/davidberard98/repos",
            "events_url": "https://api.github.com/users/davidberard98/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidberard98/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "davidberard98",
                "id": 5067123,
                "node_id": "MDQ6VXNlcjUwNjcxMjM=",
                "avatar_url": "https://avatars.githubusercontent.com/u/5067123?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidberard98",
                "html_url": "https://github.com/davidberard98",
                "followers_url": "https://api.github.com/users/davidberard98/followers",
                "following_url": "https://api.github.com/users/davidberard98/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidberard98/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidberard98/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidberard98/subscriptions",
                "organizations_url": "https://api.github.com/users/davidberard98/orgs",
                "repos_url": "https://api.github.com/users/davidberard98/repos",
                "events_url": "https://api.github.com/users/davidberard98/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidberard98/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2021-10-14T19:49:47Z",
        "updated_at": "2021-12-08T00:51:06Z",
        "closed_at": "2021-12-08T00:51:06Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "## \ud83d\ude80 Feature\r\n\r\nIt's easy to accidentally leave extra values on the stack. This should be easy to catch - at the end of the invocation the size of the stack must be equal to number of returns. \r\n\r\nChange is in https://github.com/pytorch/pytorch/blob/master/torch/csrc/jit/runtime/interpreter.cpp, TODO: figure out more detailed information",
        "closed_by": {
            "login": "davidberard98",
            "id": 5067123,
            "node_id": "MDQ6VXNlcjUwNjcxMjM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5067123?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidberard98",
            "html_url": "https://github.com/davidberard98",
            "followers_url": "https://api.github.com/users/davidberard98/followers",
            "following_url": "https://api.github.com/users/davidberard98/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidberard98/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidberard98/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidberard98/subscriptions",
            "organizations_url": "https://api.github.com/users/davidberard98/orgs",
            "repos_url": "https://api.github.com/users/davidberard98/repos",
            "events_url": "https://api.github.com/users/davidberard98/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidberard98/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/66650/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/66650/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/66541",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/66541/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/66541/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/66541/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/66541",
        "id": 1024801724,
        "node_id": "I_kwDOA-j9z849FTu8",
        "number": 66541,
        "title": "Static Runtime clone test is failing intermittently",
        "user": {
            "login": "mruberry",
            "id": 38511765,
            "node_id": "MDQ6VXNlcjM4NTExNzY1",
            "avatar_url": "https://avatars.githubusercontent.com/u/38511765?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mruberry",
            "html_url": "https://github.com/mruberry",
            "followers_url": "https://api.github.com/users/mruberry/followers",
            "following_url": "https://api.github.com/users/mruberry/following{/other_user}",
            "gists_url": "https://api.github.com/users/mruberry/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mruberry/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mruberry/subscriptions",
            "organizations_url": "https://api.github.com/users/mruberry/orgs",
            "repos_url": "https://api.github.com/users/mruberry/repos",
            "events_url": "https://api.github.com/users/mruberry/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mruberry/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 443484135,
                "node_id": "MDU6TGFiZWw0NDM0ODQxMzU=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/high%20priority",
                "name": "high priority",
                "color": "F22613",
                "default": false,
                "description": null
            },
            {
                "id": 466131885,
                "node_id": "MDU6TGFiZWw0NjYxMzE4ODU=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triage%20review",
                "name": "triage review",
                "color": "cc317c",
                "default": false,
                "description": ""
            },
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1300933336,
                "node_id": "MDU6TGFiZWwxMzAwOTMzMzM2",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20tests",
                "name": "module: tests",
                "color": "f7e101",
                "default": false,
                "description": "Issues related to tests (not the torch.testing module)"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "mikeiovine",
            "id": 6158008,
            "node_id": "MDQ6VXNlcjYxNTgwMDg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6158008?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mikeiovine",
            "html_url": "https://github.com/mikeiovine",
            "followers_url": "https://api.github.com/users/mikeiovine/followers",
            "following_url": "https://api.github.com/users/mikeiovine/following{/other_user}",
            "gists_url": "https://api.github.com/users/mikeiovine/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mikeiovine/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mikeiovine/subscriptions",
            "organizations_url": "https://api.github.com/users/mikeiovine/orgs",
            "repos_url": "https://api.github.com/users/mikeiovine/repos",
            "events_url": "https://api.github.com/users/mikeiovine/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mikeiovine/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "mikeiovine",
                "id": 6158008,
                "node_id": "MDQ6VXNlcjYxNTgwMDg=",
                "avatar_url": "https://avatars.githubusercontent.com/u/6158008?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/mikeiovine",
                "html_url": "https://github.com/mikeiovine",
                "followers_url": "https://api.github.com/users/mikeiovine/followers",
                "following_url": "https://api.github.com/users/mikeiovine/following{/other_user}",
                "gists_url": "https://api.github.com/users/mikeiovine/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/mikeiovine/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mikeiovine/subscriptions",
                "organizations_url": "https://api.github.com/users/mikeiovine/orgs",
                "repos_url": "https://api.github.com/users/mikeiovine/repos",
                "events_url": "https://api.github.com/users/mikeiovine/events{/privacy}",
                "received_events_url": "https://api.github.com/users/mikeiovine/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 4,
        "created_at": "2021-10-13T05:26:38Z",
        "updated_at": "2021-10-20T21:03:06Z",
        "closed_at": "2021-10-20T21:03:06Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "See https://app.circleci.com/pipelines/github/pytorch/pytorch/393578/workflows/ab2692af-b59b-4440-bdce-cce268b649b8/jobs/16430958. Relevant snippet:\r\n\r\n```\r\n/var/lib/jenkins/workspace/benchmarks/static_runtime/test_utils.cc:140\r\nValue of: expect.toTensor().equal(actual.toTensor())\r\n  Actual: false\r\nExpected: true\r\n```\n\ncc @ezyang @gchanan @zou3519 @bdhirsh @jbschlosser @mruberry",
        "closed_by": {
            "login": "mruberry",
            "id": 38511765,
            "node_id": "MDQ6VXNlcjM4NTExNzY1",
            "avatar_url": "https://avatars.githubusercontent.com/u/38511765?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mruberry",
            "html_url": "https://github.com/mruberry",
            "followers_url": "https://api.github.com/users/mruberry/followers",
            "following_url": "https://api.github.com/users/mruberry/following{/other_user}",
            "gists_url": "https://api.github.com/users/mruberry/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mruberry/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mruberry/subscriptions",
            "organizations_url": "https://api.github.com/users/mruberry/orgs",
            "repos_url": "https://api.github.com/users/mruberry/repos",
            "events_url": "https://api.github.com/users/mruberry/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mruberry/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/66541/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/66541/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/65652",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/65652/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/65652/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/65652/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/65652",
        "id": 1007034379,
        "node_id": "I_kwDOA-j9z848BiAL",
        "number": 65652,
        "title": "[Pytorch Tensorboard] torch.utils.tensorboard parse jit tracing pytorch graph incorrectly",
        "user": {
            "login": "liulixinkerry",
            "id": 20508677,
            "node_id": "MDQ6VXNlcjIwNTA4Njc3",
            "avatar_url": "https://avatars.githubusercontent.com/u/20508677?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/liulixinkerry",
            "html_url": "https://github.com/liulixinkerry",
            "followers_url": "https://api.github.com/users/liulixinkerry/followers",
            "following_url": "https://api.github.com/users/liulixinkerry/following{/other_user}",
            "gists_url": "https://api.github.com/users/liulixinkerry/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/liulixinkerry/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/liulixinkerry/subscriptions",
            "organizations_url": "https://api.github.com/users/liulixinkerry/orgs",
            "repos_url": "https://api.github.com/users/liulixinkerry/repos",
            "events_url": "https://api.github.com/users/liulixinkerry/events{/privacy}",
            "received_events_url": "https://api.github.com/users/liulixinkerry/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2021-09-25T09:22:32Z",
        "updated_at": "2021-10-20T21:36:44Z",
        "closed_at": "2021-10-20T21:36:44Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\n<!-- A clear and concise description of what the bug is. -->\r\n\r\n## To Reproduce\r\nCode:\r\n```\r\nimport torch\r\nimport torch.nn as nn\r\nfrom torch.utils.tensorboard._pytorch_graph import parse\r\n\r\n\r\nclass KVTransform(nn.Module):\r\n    def __init__(self, num_heads, head_dim):\r\n        super(KVTransform, self).__init__()\r\n        self.num_heads = num_heads\r\n        self.head_dim = head_dim\r\n\r\n    def forward(self, x):\r\n        n, b, _ = x.size()\r\n        x = x.contiguous().view(n, b * self.num_heads, self.head_dim).transpose(0, 1)\r\n        return x\r\n\r\n\r\nclass QTransform(nn.Module):\r\n    def __init__(self, num_heads, head_dim, scaling):\r\n        super(QTransform, self).__init__()\r\n        self.num_heads = num_heads\r\n        self.head_dim = head_dim\r\n        self.scaling = scaling\r\n\r\n    def forward(self, x):\r\n        n, b, _ = x.size()\r\n        x = x * self.scaling\r\n        x = x.contiguous().view(n, b * self.num_heads, self.head_dim).transpose(0, 1)\r\n        return x\r\n\r\n\r\nclass AttnOutputTransform(nn.Module):\r\n    def __init__(self, num_heads, dim):\r\n        super(AttnOutputTransform, self).__init__()\r\n        self.num_heads = num_heads\r\n        self.dim = dim\r\n\r\n    def forward(self, x):\r\n        n = x.size()[1]\r\n        b = torch.div(x.size()[0], self.num_heads, rounding_mode=\"floor\")\r\n        x = x.transpose(0, 1).contiguous().view(n, b, self.dim)\r\n        return x\r\n\r\n\r\nclass SelfAttentionFullModule(nn.Module):\r\n    def __init__(self, dim, heads=8, qkv_bias=False, dropout_p=0.1):\r\n        super(SelfAttentionFullModule, self).__init__()\r\n        self.num_heads = heads\r\n        self.head_dim = dim // heads\r\n        self.scaling = float(self.head_dim) ** 0.5\r\n\r\n        self.to_q = nn.Linear(dim, dim, bias=qkv_bias)\r\n        self.to_k = nn.Linear(dim, dim, bias=qkv_bias)\r\n        self.to_v = nn.Linear(dim, dim, bias=qkv_bias)\r\n        self.attn_dropout = nn.Dropout(dropout_p)\r\n        self.to_out = nn.Linear(dim, dim)\r\n\r\n        self.softmax = nn.Softmax(2)\r\n\r\n        self.q_pre_transform = QTransform(self.num_heads, self.head_dim, self.scaling)\r\n        self.kv_pre_transform = KVTransform(self.num_heads, self.head_dim)\r\n        self.post_transform = AttnOutputTransform(self.num_heads, dim)\r\n\r\n    def forward(self, x):\r\n        q = self.to_q(x)\r\n        k = self.to_k(x)\r\n        v = self.to_v(x)\r\n\r\n        q = self.q_pre_transform(q)\r\n        k = self.kv_pre_transform(k)\r\n        v = self.kv_pre_transform(v)\r\n\r\n        attn_weights = torch.bmm(q, k.transpose(1, 2))\r\n        attn_weights = self.softmax(attn_weights)\r\n        attn_weights = self.attn_dropout(attn_weights)\r\n\r\n        attn_output = torch.bmm(attn_weights, v)\r\n        attn_output = self.post_transform(attn_output)\r\n\r\n        attn_output = self.to_out(attn_output)\r\n        return attn_output\r\n\r\n\r\nclass TransformerModelLayer(nn.Module):\r\n    def __init__(self, dim, heads, dim_feedforward, dropout_p=0.1):\r\n        super(TransformerModelLayer, self).__init__()\r\n        self.self_attn = SelfAttentionFullModule(dim, heads=heads, dropout_p=dropout_p)\r\n        self.norm1 = nn.LayerNorm(dim)\r\n        self.norm2 = nn.LayerNorm(dim)\r\n        self.dropout1 = nn.Dropout(dropout_p)\r\n        self.dropout2 = nn.Dropout(dropout_p)\r\n\r\n        self.feedforward = nn.Sequential(\r\n            nn.Linear(dim, dim_feedforward),\r\n            nn.GELU(),\r\n            nn.Dropout(dropout_p),\r\n            nn.Linear(dim_feedforward, dim),\r\n        )\r\n\r\n    def forward(self, x):\r\n        x2 = self.self_attn(x)\r\n        x = x + self.dropout1(x2)\r\n        x = self.norm1(x)\r\n\r\n        x2 = self.feedforward(x)\r\n        x = x + self.dropout2(x2)\r\n        x = self.norm2(x)\r\n        return x\r\n\r\n\r\nclass Transformer(nn.Module):\r\n    def __init__(self, dim, heads, dim_feedforward, depth=8):\r\n        super(Transformer, self).__init__()\r\n        layers = []\r\n        for _ in range(depth):\r\n            layers.append(TransformerModelLayer(dim, heads, dim_feedforward))\r\n        self.net = nn.Sequential(*layers)\r\n\r\n    def forward(self, x):\r\n        x = self.net(x)\r\n        return x\r\n\r\n\r\nm = Transformer(128, 1, 256, depth=2).to(0)\r\nx = torch.randn(65, 32, 128).to(0)\r\nargs = (x,)\r\n\r\nwith torch.onnx.select_model_mode_for_export(m, torch.onnx.TrainingMode.EVAL):\r\n    try:\r\n        trace = torch.jit.trace(m, args, strict=True)\r\n        graph = trace.graph\r\n        torch._C._jit_pass_inline(graph)\r\n    except RuntimeError as e:\r\n        print(e)\r\n        print(\"Error occurs, No computational graph saved.\")\r\n        raise e\r\n\r\nlist_of_nodes = parse(graph, trace, args)\r\nfor i, node in enumerate(list_of_nodes):\r\n    print(i, node.name)\r\n```\r\nOutputs:\r\n```\r\n0 input/x.1\r\n1 output/output.1\r\n2 Transformer/Sequential[net]/TransformerModelLayer[0]/SelfAttentionFullModule[self_attn]/AttnOutputTransform[post_transform]/587\r\n3 Transformer/Sequential[net]/TransformerModelLayer[0]/SelfAttentionFullModule[self_attn]/Dropout[attn_dropout]/588\r\n4 Transformer/Sequential[net]/TransformerModelLayer[0]/SelfAttentionFullModule[self_attn]/Dropout[attn_dropout]/589\r\n5 Transformer/Sequential[net]/TransformerModelLayer[0]/SelfAttentionFullModule[self_attn]/590\r\n6 Transformer/Sequential[net]/TransformerModelLayer[0]/SelfAttentionFullModule[self_attn]/QTransform[q_pre_transform]/591\r\n7 Transformer/Sequential[net]/TransformerModelLayer[0]/SelfAttentionFullModule[self_attn]/QTransform[q_pre_transform]/592\r\n8 Transformer/Sequential[net]/TransformerModelLayer[0]/SelfAttentionFullModule[self_attn]/QTransform[q_pre_transform]/593\r\n9 Transformer/Sequential[net]/TransformerModelLayer[0]/SelfAttentionFullModule[self_attn]/QTransform[q_pre_transform]/594\r\n10 Transformer/Sequential[net]/TransformerModelLayer[0]/SelfAttentionFullModule[self_attn]/QTransform[q_pre_transform]/595\r\n11 Transformer/Sequential[net]/TransformerModelLayer[0]/SelfAttentionFullModule[self_attn]/Linear[to_q]/596\r\n12 Transformer/Sequential[net]/TransformerModelLayer[0]/LayerNorm[norm1]/597\r\n13 Transformer/Sequential[net]/TransformerModelLayer[0]/LayerNorm[norm1]/598\r\n14 Transformer/Sequential[net]/TransformerModelLayer[0]/SelfAttentionFullModule[self_attn]/Linear[to_q]/weight/616\r\n15 Transformer/Sequential[net]/TransformerModelLayer[0]/SelfAttentionFullModule[self_attn]/Linear[to_q]/x.3\r\n16 Transformer/Sequential[net]/TransformerModelLayer[0]/SelfAttentionFullModule[self_attn]/Linear[to_k]/weight/618\r\n17 Transformer/Sequential[net]/TransformerModelLayer[0]/SelfAttentionFullModule[self_attn]/Linear[to_k]/x.9\r\n18 Transformer/Sequential[net]/TransformerModelLayer[0]/SelfAttentionFullModule[self_attn]/Linear[to_v]/weight/620\r\n19 Transformer/Sequential[net]/TransformerModelLayer[0]/SelfAttentionFullModule[self_attn]/Linear[to_v]/x.13\r\n20 Transformer/Sequential[net]/TransformerModelLayer[0]/SelfAttentionFullModule[self_attn]/QTransform[q_pre_transform]/622\r\n21 Transformer/Sequential[net]/TransformerModelLayer[0]/SelfAttentionFullModule[self_attn]/QTransform[q_pre_transform]/623\r\n22 Transformer/Sequential[net]/TransformerModelLayer[0]/SelfAttentionFullModule[self_attn]/QTransform[q_pre_transform]/b.1\r\n23 Transformer/Sequential[net]/TransformerModelLayer[0]/SelfAttentionFullModule[self_attn]/QTransform[q_pre_transform]/x.5\r\n24 Transformer/Sequential[net]/TransformerModelLayer[0]/SelfAttentionFullModule[self_attn]/QTransform[q_pre_transform]/x.7\r\n25 Transformer/Sequential[net]/TransformerModelLayer[0]/SelfAttentionFullModule[self_attn]/QTransform[q_pre_transform]/627\r\n26 Transformer/Sequential[net]/TransformerModelLayer[0]/SelfAttentionFullModule[self_attn]/QTransform[q_pre_transform]/628\r\n27 Transformer/Sequential[net]/TransformerModelLayer[0]/SelfAttentionFullModule[self_attn]/QTransform[q_pre_transform]/629\r\n28 Transformer/Sequential[net]/TransformerModelLayer[0]/SelfAttentionFullModule[self_attn]/QTransform[q_pre_transform]/630\r\n29 Transformer/Sequential[net]/TransformerModelLayer[0]/SelfAttentionFullModule[self_attn]/QTransform[q_pre_transform]/q.1\r\n30 Transformer/Sequential[net]/TransformerModelLayer[0]/SelfAttentionFullModule[self_attn]/KVTransform[kv_pre_transform]/632\r\n31 Transformer/Sequential[net]/TransformerModelLayer[0]/SelfAttentionFullModule[self_attn]/KVTransform[kv_pre_transform]/633\r\n32 Transformer/Sequential[net]/TransformerModelLayer[0]/SelfAttentionFullModule[self_attn]/KVTransform[kv_pre_transform]/b.3\r\n33 Transformer/Sequential[net]/TransformerModelLayer[0]/SelfAttentionFullModule[self_attn]/KVTransform[kv_pre_transform]/x.11\r\n34 Transformer/Sequential[net]/TransformerModelLayer[0]/SelfAttentionFullModule[self_attn]/KVTransform[kv_pre_transform]/636\r\n35 Transformer/Sequential[net]/TransformerModelLayer[0]/SelfAttentionFullModule[self_attn]/KVTransform[kv_pre_transform]/637\r\n36 Transformer/Sequential[net]/TransformerModelLayer[0]/SelfAttentionFullModule[self_attn]/KVTransform[kv_pre_transform]/638\r\n37 Transformer/Sequential[net]/TransformerModelLayer[0]/SelfAttentionFullModule[self_attn]/KVTransform[kv_pre_transform]/639\r\n38 Transformer/Sequential[net]/TransformerModelLayer[0]/SelfAttentionFullModule[self_attn]/KVTransform[kv_pre_transform]/k.1\r\n39 Transformer/Sequential[net]/TransformerModelLayer[0]/SelfAttentionFullModule[self_attn]/KVTransform[kv_pre_transform]/641\r\n40 Transformer/Sequential[net]/TransformerModelLayer[0]/SelfAttentionFullModule[self_attn]/KVTransform[kv_pre_transform]/642\r\n41 Transformer/Sequential[net]/TransformerModelLayer[0]/SelfAttentionFullModule[self_attn]/KVTransform[kv_pre_transform]/b.5\r\n42 Transformer/Sequential[net]/TransformerModelLayer[0]/SelfAttentionFullModule[self_attn]/KVTransform[kv_pre_transform]/x.15\r\n43 Transformer/Sequential[net]/TransformerModelLayer[0]/SelfAttentionFullModule[self_attn]/KVTransform[kv_pre_transform]/645\r\n44 Transformer/Sequential[net]/TransformerModelLayer[0]/SelfAttentionFullModule[self_attn]/KVTransform[kv_pre_transform]/646\r\n45 Transformer/Sequential[net]/TransformerModelLayer[0]/SelfAttentionFullModule[self_attn]/KVTransform[kv_pre_transform]/647\r\n46 Transformer/Sequential[net]/TransformerModelLayer[0]/SelfAttentionFullModule[self_attn]/KVTransform[kv_pre_transform]/648\r\n47 Transformer/Sequential[net]/TransformerModelLayer[0]/SelfAttentionFullModule[self_attn]/KVTransform[kv_pre_transform]/v.1\r\n48 Transformer/Sequential[net]/TransformerModelLayer[0]/SelfAttentionFullModule[self_attn]/650\r\n49 Transformer/Sequential[net]/TransformerModelLayer[0]/SelfAttentionFullModule[self_attn]/input.1\r\n50 Transformer/Sequential[net]/TransformerModelLayer[0]/SelfAttentionFullModule[self_attn]/Softmax[softmax]/input.3\r\n51 Transformer/Sequential[net]/TransformerModelLayer[0]/SelfAttentionFullModule[self_attn]/Dropout[attn_dropout]/attn_weights.1\r\n52 Transformer/Sequential[net]/TransformerModelLayer[0]/SelfAttentionFullModule[self_attn]/x.17\r\n53 Transformer/Sequential[net]/TransformerModelLayer[0]/SelfAttentionFullModule[self_attn]/AttnOutputTransform[post_transform]/655\r\n54 Transformer/Sequential[net]/TransformerModelLayer[0]/SelfAttentionFullModule[self_attn]/AttnOutputTransform[post_transform]/656\r\n55 Transformer/Sequential[net]/TransformerModelLayer[0]/SelfAttentionFullModule[self_attn]/AttnOutputTransform[post_transform]/657\r\n56 Transformer/Sequential[net]/TransformerModelLayer[0]/SelfAttentionFullModule[self_attn]/AttnOutputTransform[post_transform]/b.7\r\n57 Transformer/Sequential[net]/TransformerModelLayer[0]/SelfAttentionFullModule[self_attn]/AttnOutputTransform[post_transform]/659\r\n58 Transformer/Sequential[net]/TransformerModelLayer[0]/SelfAttentionFullModule[self_attn]/AttnOutputTransform[post_transform]/660\r\n59 Transformer/Sequential[net]/TransformerModelLayer[0]/SelfAttentionFullModule[self_attn]/AttnOutputTransform[post_transform]/661\r\n60 Transformer/Sequential[net]/TransformerModelLayer[0]/SelfAttentionFullModule[self_attn]/AttnOutputTransform[post_transform]/662\r\n61 Transformer/Sequential[net]/TransformerModelLayer[0]/SelfAttentionFullModule[self_attn]/AttnOutputTransform[post_transform]/input.5\r\n62 Transformer/Sequential[net]/TransformerModelLayer[0]/SelfAttentionFullModule[self_attn]/Linear[to_out]/bias/664\r\n63 Transformer/Sequential[net]/TransformerModelLayer[0]/SelfAttentionFullModule[self_attn]/Linear[to_out]/weight/665\r\n64 Transformer/Sequential[net]/TransformerModelLayer[0]/SelfAttentionFullModule[self_attn]/Linear[to_out]/input.7\r\n65 Transformer/Sequential[net]/TransformerModelLayer[0]/Dropout[dropout1]/x2.1\r\n66 Transformer/Sequential[net]/TransformerModelLayer[0]/input.9\r\n67 Transformer/Sequential[net]/TransformerModelLayer[0]/LayerNorm[norm1]/bias/669\r\n68 Transformer/Sequential[net]/TransformerModelLayer[0]/LayerNorm[norm1]/weight/670\r\n69 Transformer/Sequential[net]/TransformerModelLayer[0]/LayerNorm[norm1]/671\r\n70 Transformer/Sequential[net]/TransformerModelLayer[0]/LayerNorm[norm1]/input.11\r\n71 Transformer/Sequential[net]/TransformerModelLayer[0]/Sequential[feedforward]/Linear[0]/bias/677\r\n72 Transformer/Sequential[net]/TransformerModelLayer[0]/Sequential[feedforward]/Linear[0]/weight/678\r\n73 Transformer/Sequential[net]/TransformerModelLayer[0]/Sequential[feedforward]/Linear[0]/input.13\r\n74 Transformer/Sequential[net]/TransformerModelLayer[0]/Sequential[feedforward]/GELU[1]/input.15\r\n75 Transformer/Sequential[net]/TransformerModelLayer[0]/Sequential[feedforward]/Dropout[2]/input.17\r\n76 Transformer/Sequential[net]/TransformerModelLayer[0]/Sequential[feedforward]/Linear[3]/bias/682\r\n77 Transformer/Sequential[net]/TransformerModelLayer[0]/Sequential[feedforward]/Linear[3]/weight/683\r\n78 Transformer/Sequential[net]/TransformerModelLayer[0]/Sequential[feedforward]/Linear[3]/input.19\r\n79 Transformer/Sequential[net]/TransformerModelLayer[0]/Dropout[dropout2]/x2.3\r\n80 Transformer/Sequential[net]/TransformerModelLayer[0]/input.21\r\n81 Transformer/Sequential[net]/TransformerModelLayer[0]/LayerNorm[norm2]/bias/687\r\n82 Transformer/Sequential[net]/TransformerModelLayer[0]/LayerNorm[norm2]/weight/688\r\n83 Transformer/Sequential[net]/TransformerModelLayer[0]/LayerNorm[norm2]/689\r\n84 Transformer/Sequential[net]/TransformerModelLayer[0]/LayerNorm[norm2]/input.23\r\n85 Transformer/Sequential[net]/TransformerModelLayer[0]/Sequential[feedforward]/GELU[1]/self_attn/to_q/weight/706\r\n86 Transformer/Sequential[net]/TransformerModelLayer[1]/SelfAttentionFullModule[self_attn]/Linear[to_q]/x.19\r\n87 Transformer/Sequential[net]/TransformerModelLayer[0]/Sequential[feedforward]/GELU[1]/self_attn/to_k/weight/708\r\n88 Transformer/Sequential[net]/TransformerModelLayer[1]/SelfAttentionFullModule[self_attn]/Linear[to_k]/x.25\r\n89 Transformer/Sequential[net]/TransformerModelLayer[0]/Sequential[feedforward]/GELU[1]/self_attn/to_v/weight/710\r\n90 Transformer/Sequential[net]/TransformerModelLayer[1]/SelfAttentionFullModule[self_attn]/Linear[to_v]/x.29\r\n91 Transformer/Sequential[net]/TransformerModelLayer[1]/SelfAttentionFullModule[self_attn]/QTransform[q_pre_transform]/712\r\n92 Transformer/Sequential[net]/TransformerModelLayer[1]/SelfAttentionFullModule[self_attn]/QTransform[q_pre_transform]/713\r\n93 Transformer/Sequential[net]/TransformerModelLayer[1]/SelfAttentionFullModule[self_attn]/QTransform[q_pre_transform]/b.9\r\n94 Transformer/Sequential[net]/TransformerModelLayer[1]/SelfAttentionFullModule[self_attn]/QTransform[q_pre_transform]/x.21\r\n95 Transformer/Sequential[net]/TransformerModelLayer[1]/SelfAttentionFullModule[self_attn]/QTransform[q_pre_transform]/x.23\r\n96 Transformer/Sequential[net]/TransformerModelLayer[1]/SelfAttentionFullModule[self_attn]/QTransform[q_pre_transform]/717\r\n97 Transformer/Sequential[net]/TransformerModelLayer[1]/SelfAttentionFullModule[self_attn]/QTransform[q_pre_transform]/718\r\n98 Transformer/Sequential[net]/TransformerModelLayer[1]/SelfAttentionFullModule[self_attn]/QTransform[q_pre_transform]/719\r\n99 Transformer/Sequential[net]/TransformerModelLayer[1]/SelfAttentionFullModule[self_attn]/QTransform[q_pre_transform]/720\r\n100 Transformer/Sequential[net]/TransformerModelLayer[1]/SelfAttentionFullModule[self_attn]/QTransform[q_pre_transform]/q\r\n101 Transformer/Sequential[net]/TransformerModelLayer[1]/SelfAttentionFullModule[self_attn]/KVTransform[kv_pre_transform]/722\r\n102 Transformer/Sequential[net]/TransformerModelLayer[1]/SelfAttentionFullModule[self_attn]/KVTransform[kv_pre_transform]/723\r\n103 Transformer/Sequential[net]/TransformerModelLayer[1]/SelfAttentionFullModule[self_attn]/KVTransform[kv_pre_transform]/b.11\r\n104 Transformer/Sequential[net]/TransformerModelLayer[1]/SelfAttentionFullModule[self_attn]/KVTransform[kv_pre_transform]/x.27\r\n105 Transformer/Sequential[net]/TransformerModelLayer[1]/SelfAttentionFullModule[self_attn]/KVTransform[kv_pre_transform]/726\r\n106 Transformer/Sequential[net]/TransformerModelLayer[1]/SelfAttentionFullModule[self_attn]/KVTransform[kv_pre_transform]/727\r\n107 Transformer/Sequential[net]/TransformerModelLayer[1]/SelfAttentionFullModule[self_attn]/KVTransform[kv_pre_transform]/728\r\n108 Transformer/Sequential[net]/TransformerModelLayer[1]/SelfAttentionFullModule[self_attn]/KVTransform[kv_pre_transform]/729\r\n109 Transformer/Sequential[net]/TransformerModelLayer[1]/SelfAttentionFullModule[self_attn]/KVTransform[kv_pre_transform]/k\r\n110 Transformer/Sequential[net]/TransformerModelLayer[1]/SelfAttentionFullModule[self_attn]/KVTransform[kv_pre_transform]/731\r\n111 Transformer/Sequential[net]/TransformerModelLayer[1]/SelfAttentionFullModule[self_attn]/KVTransform[kv_pre_transform]/732\r\n112 Transformer/Sequential[net]/TransformerModelLayer[1]/SelfAttentionFullModule[self_attn]/KVTransform[kv_pre_transform]/b.13\r\n113 Transformer/Sequential[net]/TransformerModelLayer[1]/SelfAttentionFullModule[self_attn]/KVTransform[kv_pre_transform]/x.31\r\n114 Transformer/Sequential[net]/TransformerModelLayer[1]/SelfAttentionFullModule[self_attn]/KVTransform[kv_pre_transform]/735\r\n115 Transformer/Sequential[net]/TransformerModelLayer[1]/SelfAttentionFullModule[self_attn]/KVTransform[kv_pre_transform]/736\r\n116 Transformer/Sequential[net]/TransformerModelLayer[1]/SelfAttentionFullModule[self_attn]/KVTransform[kv_pre_transform]/737\r\n117 Transformer/Sequential[net]/TransformerModelLayer[1]/SelfAttentionFullModule[self_attn]/KVTransform[kv_pre_transform]/738\r\n118 Transformer/Sequential[net]/TransformerModelLayer[1]/SelfAttentionFullModule[self_attn]/KVTransform[kv_pre_transform]/v\r\n119 Transformer/Sequential[net]/TransformerModelLayer[1]/SelfAttentionFullModule[self_attn]/740\r\n120 Transformer/Sequential[net]/TransformerModelLayer[1]/SelfAttentionFullModule[self_attn]/input.25\r\n121 Transformer/Sequential[net]/TransformerModelLayer[1]/SelfAttentionFullModule[self_attn]/Softmax[softmax]/input.27\r\n122 Transformer/Sequential[net]/TransformerModelLayer[1]/SelfAttentionFullModule[self_attn]/Dropout[attn_dropout]/attn_weights\r\n123 Transformer/Sequential[net]/TransformerModelLayer[1]/SelfAttentionFullModule[self_attn]/x\r\n124 Transformer/Sequential[net]/TransformerModelLayer[1]/SelfAttentionFullModule[self_attn]/AttnOutputTransform[post_transform]/745\r\n125 Transformer/Sequential[net]/TransformerModelLayer[1]/SelfAttentionFullModule[self_attn]/AttnOutputTransform[post_transform]/746\r\n126 Transformer/Sequential[net]/TransformerModelLayer[1]/SelfAttentionFullModule[self_attn]/AttnOutputTransform[post_transform]/747\r\n127 Transformer/Sequential[net]/TransformerModelLayer[1]/SelfAttentionFullModule[self_attn]/AttnOutputTransform[post_transform]/b\r\n128 Transformer/Sequential[net]/TransformerModelLayer[1]/SelfAttentionFullModule[self_attn]/AttnOutputTransform[post_transform]/749\r\n129 Transformer/Sequential[net]/TransformerModelLayer[1]/SelfAttentionFullModule[self_attn]/AttnOutputTransform[post_transform]/750\r\n130 Transformer/Sequential[net]/TransformerModelLayer[1]/SelfAttentionFullModule[self_attn]/AttnOutputTransform[post_transform]/751\r\n131 Transformer/Sequential[net]/TransformerModelLayer[1]/SelfAttentionFullModule[self_attn]/AttnOutputTransform[post_transform]/752\r\n132 Transformer/Sequential[net]/TransformerModelLayer[1]/SelfAttentionFullModule[self_attn]/AttnOutputTransform[post_transform]/input.29\r\n133 Transformer/Sequential[net]/TransformerModelLayer[0]/Sequential[feedforward]/GELU[1]/self_attn/to_out/bias/754\r\n134 Transformer/Sequential[net]/TransformerModelLayer[0]/Sequential[feedforward]/GELU[1]/self_attn/to_out/weight/755\r\n135 Transformer/Sequential[net]/TransformerModelLayer[1]/SelfAttentionFullModule[self_attn]/Linear[to_out]/input.31\r\n136 Transformer/Sequential[net]/TransformerModelLayer[1]/Dropout[dropout1]/x2.5\r\n137 Transformer/Sequential[net]/TransformerModelLayer[1]/input.33\r\n138 Transformer/Sequential[net]/TransformerModelLayer[0]/Sequential[feedforward]/GELU[1]/norm1/bias/759\r\n139 Transformer/Sequential[net]/TransformerModelLayer[0]/Sequential[feedforward]/GELU[1]/norm1/weight/760\r\n140 Transformer/Sequential[net]/TransformerModelLayer[1]/LayerNorm[norm1]/761\r\n141 Transformer/Sequential[net]/TransformerModelLayer[1]/LayerNorm[norm1]/input.35\r\n142 Transformer/Sequential[net]/TransformerModelLayer[0]/Sequential[feedforward]/GELU[1]/feedforward/0/bias/767\r\n143 Transformer/Sequential[net]/TransformerModelLayer[0]/Sequential[feedforward]/GELU[1]/feedforward/0/weight/768\r\n144 Transformer/Sequential[net]/TransformerModelLayer[1]/Sequential[feedforward]/Linear[0]/input.37\r\n145 Transformer/Sequential[net]/TransformerModelLayer[1]/Sequential[feedforward]/GELU[1]/input.39\r\n146 Transformer/Sequential[net]/TransformerModelLayer[1]/Sequential[feedforward]/Dropout[2]/input.41\r\n147 Transformer/Sequential[net]/TransformerModelLayer[0]/Sequential[feedforward]/GELU[1]/feedforward/3/bias/772\r\n148 Transformer/Sequential[net]/TransformerModelLayer[0]/Sequential[feedforward]/GELU[1]/feedforward/3/weight/773\r\n149 Transformer/Sequential[net]/TransformerModelLayer[1]/Sequential[feedforward]/Linear[3]/input.43\r\n150 Transformer/Sequential[net]/TransformerModelLayer[1]/Dropout[dropout2]/x2\r\n151 Transformer/Sequential[net]/TransformerModelLayer[1]/input\r\n152 Transformer/Sequential[net]/TransformerModelLayer[0]/Sequential[feedforward]/GELU[1]/norm2/bias/777\r\n153 Transformer/Sequential[net]/TransformerModelLayer[0]/Sequential[feedforward]/GELU[1]/norm2/weight/778\r\n154 Transformer/Sequential[net]/TransformerModelLayer[1]/LayerNorm[norm2]/779\r\n155 Transformer/Sequential[net]/TransformerModelLayer[1]/LayerNorm[norm2]/780\r\n```\r\n\r\n<!-- If you have a code sample, error messages, stack traces, please provide it here as well -->\r\n\r\n## Expected behavior\r\n\r\n```\r\n141 Transformer/Sequential[net]/TransformerModelLayer[1]/LayerNorm[norm1]/input.35\r\n142 Transformer/Sequential[net]/TransformerModelLayer[0]/Sequential[feedforward]/GELU[1]/feedforward/0/bias/767\r\n143 Transformer/Sequential[net]/TransformerModelLayer[0]/Sequential[feedforward]/GELU[1]/feedforward/0/weight/768\r\n144 Transformer/Sequential[net]/TransformerModelLayer[1]/Sequential[feedforward]/Linear[0]/input.37\r\n```\r\nThe params `bias` and `weight` should belong to `Linear` layer in TransformerModelLayer[1] but wrongly assign to a `GELU` layer in TransformerModelLayer[0]\r\nExpected behavior:\r\n\r\n```\r\n141 Transformer/Sequential[net]/TransformerModelLayer[1]/LayerNorm[norm1]/input.35\r\n142 Transformer/Sequential[net]/TransformerModelLayer[1]/Sequential[feedforward]/Linear[0]/bias/767\r\n143 Transformer/Sequential[net]/TransformerModelLayer[1]/Sequential[feedforward]/Linear[0]/weight/768\r\n144 Transformer/Sequential[net]/TransformerModelLayer[1]/Sequential[feedforward]/Linear[0]/input.37\r\n```\r\nLine133,134,147, 148,152,153, and ... have similar errors\r\n_Note that line 76-78 is the correct output._\r\n\r\n<!-- A clear and concise description of what you expected to happen. -->\r\n\r\n## Environment\r\n\r\nCollecting environment information...\r\nPyTorch version: 1.9.1\r\nIs debug build: False\r\nCUDA used to build PyTorch: 11.1\r\nROCM used to build PyTorch: N/A\r\n\r\nOS: Ubuntu 16.04.7 LTS (x86_64)\r\nGCC version: (Ubuntu 5.5.0-12ubuntu1~16.04) 5.5.0 20171010\r\nClang version: 3.8.0-2ubuntu4 (tags/RELEASE_380/final)\r\nCMake version: version 3.17.3\r\nLibc version: glibc-2.23\r\n\r\nPython version: 3.8.11 (default, Aug  3 2021, 15:09:35)  [GCC 7.5.0] (64-bit runtime)\r\nPython platform: Linux-4.4.0-210-generic-x86_64-with-glibc2.17\r\nIs CUDA available: True\r\nCUDA runtime version: 11.1.105\r\nGPU models and configuration: \r\nGPU 0: GeForce RTX 3090\r\nGPU 1: GeForce RTX 3090\r\nGPU 2: TITAN V\r\nGPU 3: TITAN V\r\n\r\nNvidia driver version: 455.45.01\r\ncuDNN version: Probably one of the following:\r\n/usr/lib/x86_64-linux-gnu/libcudnn.so.7.6.2\r\n/usr/local/cuda-10.0/targets/x86_64-linux/lib/libcudnn.so.7.6.5\r\n/usr/local/cuda-10.1/targets/x86_64-linux/lib/libcudnn.so.7.5.0\r\n/usr/local/cuda-9.0/targets/x86_64-linux/lib/libcudnn.so.7\r\n/usr/local/cuda-9.2/targets/x86_64-linux/lib/libcudnn.so.7\r\nHIP runtime version: N/A\r\nMIOpen runtime version: N/A\r\n\r\nVersions of relevant libraries:\r\n[pip3] numpy==1.20.3\r\n[pip3] torch==1.9.1\r\n[pip3] torchaudio==0.9.0a0+a85b239\r\n[pip3] torchvision==0.10.1\r\n[conda] blas                      1.0                         mkl  \r\n[conda] cudatoolkit               11.1.74              h6bb024c_0    nvidia\r\n[conda] ffmpeg                    4.3                  hf484d3e_0    pytorch\r\n[conda] mkl                       2021.3.0           h06a4308_520  \r\n[conda] mkl-service               2.4.0            py38h7f8727e_0  \r\n[conda] mkl_fft                   1.3.0            py38h42c9631_2  \r\n[conda] mkl_random                1.2.2            py38h51133e4_0  \r\n[conda] numpy                     1.20.3           py38hf144106_0  \r\n[conda] numpy-base                1.20.3           py38h74d4b33_0  \r\n[conda] pytorch                   1.9.1           py3.8_cuda11.1_cudnn8.0.5_0    pytorch\r\n[conda] torchaudio                0.9.1                      py38    pytorch\r\n[conda] torchvision               0.10.1               py38_cu111    pytorch\r\n\r\n## Additional context\r\n\r\n<!-- Add any other context about the problem here. -->\r\n",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/65652/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/65652/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/65563",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/65563/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/65563/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/65563/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/65563",
        "id": 1005759209,
        "node_id": "I_kwDOA-j9z8478qrp",
        "number": 65563,
        "title": "[JIT] Fix batchnorm / instance norm alias annotations",
        "user": {
            "login": "eellison",
            "id": 11477974,
            "node_id": "MDQ6VXNlcjExNDc3OTc0",
            "avatar_url": "https://avatars.githubusercontent.com/u/11477974?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eellison",
            "html_url": "https://github.com/eellison",
            "followers_url": "https://api.github.com/users/eellison/followers",
            "following_url": "https://api.github.com/users/eellison/following{/other_user}",
            "gists_url": "https://api.github.com/users/eellison/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eellison/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eellison/subscriptions",
            "organizations_url": "https://api.github.com/users/eellison/orgs",
            "repos_url": "https://api.github.com/users/eellison/repos",
            "events_url": "https://api.github.com/users/eellison/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eellison/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "davidberard98",
            "id": 5067123,
            "node_id": "MDQ6VXNlcjUwNjcxMjM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5067123?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidberard98",
            "html_url": "https://github.com/davidberard98",
            "followers_url": "https://api.github.com/users/davidberard98/followers",
            "following_url": "https://api.github.com/users/davidberard98/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidberard98/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidberard98/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidberard98/subscriptions",
            "organizations_url": "https://api.github.com/users/davidberard98/orgs",
            "repos_url": "https://api.github.com/users/davidberard98/repos",
            "events_url": "https://api.github.com/users/davidberard98/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidberard98/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "davidberard98",
                "id": 5067123,
                "node_id": "MDQ6VXNlcjUwNjcxMjM=",
                "avatar_url": "https://avatars.githubusercontent.com/u/5067123?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidberard98",
                "html_url": "https://github.com/davidberard98",
                "followers_url": "https://api.github.com/users/davidberard98/followers",
                "following_url": "https://api.github.com/users/davidberard98/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidberard98/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidberard98/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidberard98/subscriptions",
                "organizations_url": "https://api.github.com/users/davidberard98/orgs",
                "repos_url": "https://api.github.com/users/davidberard98/repos",
                "events_url": "https://api.github.com/users/davidberard98/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidberard98/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2021-09-23T19:09:53Z",
        "updated_at": "2021-10-20T18:23:01Z",
        "closed_at": "2021-10-20T18:23:01Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug: mutation to batchnorm weights not reflect in alias analysis\r\n\r\nAs evidence by the Failing Test [here](https://github.com/pytorch/pytorch/blob/master/torch/testing/_internal/common_methods_invocations.py#L7947), the alias annotations for batch norm and instance norm are incorrect, because the weight and bias are written to in the operator if `train=True`. We should fix the failing test and improve aliasing handling of the mutation behavior. I would start by updating the [schema](https://github.com/pytorch/pytorch/blob/master/aten/src/ATen/native/native_functions.yaml#L749) to reflect the writes. However, we want to preserve the fact that the weights are not written to in inference. I would add special handling of `aten::batchnorm` and `aten::instancenorm` so that we do not register writes either when `train` is False or `is_frozen` is true. Alias Analysis is instantiated with `is_frozen` when we apply optimizations for freezing, and we want to reflect that we'll be in inference mode there even before the `train` parameter is made to be constant. \r\n\r\nYou can add special handling [here](https://github.com/pytorch/pytorch/blob/master/torch/csrc/jit/ir/alias_analysis.cpp#L605) and read about the aliasing schema language [here](https://github.com/pytorch/pytorch/blob/master/torch/csrc/jit/OVERVIEW.md#handling-mutability).  \r\n\r\nYou can run the test with `python test/test_ops.py -k test_variant_consistency_jit_nn_functional_batchnorm`. \r\n",
        "closed_by": {
            "login": "davidberard98",
            "id": 5067123,
            "node_id": "MDQ6VXNlcjUwNjcxMjM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5067123?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidberard98",
            "html_url": "https://github.com/davidberard98",
            "followers_url": "https://api.github.com/users/davidberard98/followers",
            "following_url": "https://api.github.com/users/davidberard98/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidberard98/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidberard98/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidberard98/subscriptions",
            "organizations_url": "https://api.github.com/users/davidberard98/orgs",
            "repos_url": "https://api.github.com/users/davidberard98/repos",
            "events_url": "https://api.github.com/users/davidberard98/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidberard98/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/65563/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/65563/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/65480",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/65480/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/65480/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/65480/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/65480",
        "id": 1004545820,
        "node_id": "I_kwDOA-j9z8474Ccc",
        "number": 65480,
        "title": "[complex_autograd] [TorchScript] Autograd graph is lost on 2nd run when using complex tensors with @torch.jit.script",
        "user": {
            "login": "BouazzaSE",
            "id": 8886776,
            "node_id": "MDQ6VXNlcjg4ODY3NzY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8886776?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/BouazzaSE",
            "html_url": "https://github.com/BouazzaSE",
            "followers_url": "https://api.github.com/users/BouazzaSE/followers",
            "following_url": "https://api.github.com/users/BouazzaSE/following{/other_user}",
            "gists_url": "https://api.github.com/users/BouazzaSE/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/BouazzaSE/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/BouazzaSE/subscriptions",
            "organizations_url": "https://api.github.com/users/BouazzaSE/orgs",
            "repos_url": "https://api.github.com/users/BouazzaSE/repos",
            "events_url": "https://api.github.com/users/BouazzaSE/events{/privacy}",
            "received_events_url": "https://api.github.com/users/BouazzaSE/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1301421658,
                "node_id": "MDU6TGFiZWwxMzAxNDIxNjU4",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20complex",
                "name": "module: complex",
                "color": "f7e101",
                "default": false,
                "description": "Related to complex number support in PyTorch"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2021-09-22T17:29:06Z",
        "updated_at": "2022-03-21T21:32:29Z",
        "closed_at": "2022-03-21T21:32:29Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\nWhen running **for a second time** a TorchScript function which works on complex tensors (among them is an input float Tensor which we turn into a complex tensor with .cfloat inside the function), the autograd graph is lost, ie the result has no `grad_fn`.  It looks like somehow torch.jit's graph optimizer thinks it's a good idea to disable gradients after the second pass. Removing the `@torch.jit.script` decorator, everything works as expected.\r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior:\r\n\r\n1. Run the code below:\r\n```python\r\nimport torch\r\n\r\ndef foo(x: torch.Tensor, y: torch.Tensor, W: torch.Tensor):\r\n    return torch.exp(torch.mm(torch.complex(x, y), W.cfloat()))\r\n\r\n@torch.jit.script\r\ndef jitted_foo(x: torch.Tensor, y: torch.Tensor, W: torch.Tensor):\r\n    return torch.exp(torch.mm(torch.complex(x, y), W.cfloat()))\r\n\r\nx = torch.randn(128, 16, dtype=torch.float32, device='cuda:0')\r\ny = torch.randn(128, 16, dtype=torch.float32, device='cuda:0')\r\nW = torch.randn(16, 1, dtype=torch.float32, device='cuda:0', requires_grad=True)\r\nW.data /= 4\r\nprint('1st launch - foo(...).grad_fn is None = {}'.format(foo(x, y, W).grad_fn is None)) # outputs False, which is what's expected\r\nprint('2nd launch - foo(...).grad_fn is None = {}'.format(foo(x, y, W).grad_fn is None)) # outputs False, again as expected\r\nprint('1st launch - jitted_foo(...).grad_fn is None = {}'.format(jitted_foo(x, y, W).grad_fn is None)) # outputs False, again as expected\r\nprint('2nd launch - jitted_foo(...).grad_fn is None = {}'.format(jitted_foo(x, y, W).grad_fn is None)) # outputs True, meaning the graph is lost\r\n```\r\n\r\n## Expected behavior\r\nAll of the prints should show \"False\", ie `jitted_foo(x, y, W).grad_fn` should NOT be None.\r\n\r\n## Environment\r\nOutput of the [environment collection script](https://raw.githubusercontent.com/pytorch/pytorch/master/torch/utils/collect_env.py):\r\n```\r\nPyTorch version: 1.9.0a0+gitd69c22d\r\nIs debug build: False\r\nCUDA used to build PyTorch: 11.0\r\nROCM used to build PyTorch: N/A\r\n\r\nOS: Debian GNU/Linux 10 (buster) (x86_64)\r\nGCC version: (Debian 8.3.0-6) 8.3.0\r\nClang version: Could not collect\r\nCMake version: version 3.19.6\r\nLibc version: glibc-2.28\r\n\r\nPython version: 3.8.11 (default, Aug  3 2021, 15:09:35)  [GCC 7.5.0] (64-bit runtime)\r\nPython platform: Linux-4.19.0-9-amd64-x86_64-with-glibc2.17\r\nIs CUDA available: True\r\nCUDA runtime version: 11.0.221\r\nGPU models and configuration:\r\nGPU 0: Tesla V100-SXM2-32GB\r\nGPU 1: Tesla V100-SXM2-32GB\r\nGPU 2: Tesla V100-SXM2-32GB\r\nGPU 3: Tesla V100-SXM2-32GB\r\n\r\nNvidia driver version: 450.51.06\r\ncuDNN version: Could not collect\r\nHIP runtime version: N/A\r\nMIOpen runtime version: N/A\r\n\r\nVersions of relevant libraries:\r\n[pip3] numpy==1.20.3\r\n[pip3] torch==1.10.0a0+gitf69cf3c\r\n[conda] blas                      1.0                         mkl\r\n[conda] cudatoolkit               11.0.221             h6bb024c_0\r\n[conda] magma-cuda110             2.5.2                         1    pytorch\r\n[conda] mkl                       2021.3.0           h06a4308_520\r\n[conda] mkl-include               2021.3.0           h06a4308_520\r\n[conda] mkl-service               2.4.0            py38h7f8727e_0\r\n[conda] mkl_fft                   1.3.0            py38h42c9631_2\r\n[conda] mkl_random                1.2.2            py38h51133e4_0\r\n[conda] numpy                     1.20.3           py38hf144106_0\r\n[conda] numpy-base                1.20.3           py38h74d4b33_0\r\n[conda] torch                     1.9.0a0+gitd69c22d          pypi_0    pypi\r\n```\n\ncc @ezyang @anjali411 @dylanbespalko @mruberry @Lezcano @nikitaved",
        "closed_by": {
            "login": "pytorchmergebot",
            "id": 97764156,
            "node_id": "U_kgDOBdPDPA",
            "avatar_url": "https://avatars.githubusercontent.com/u/97764156?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pytorchmergebot",
            "html_url": "https://github.com/pytorchmergebot",
            "followers_url": "https://api.github.com/users/pytorchmergebot/followers",
            "following_url": "https://api.github.com/users/pytorchmergebot/following{/other_user}",
            "gists_url": "https://api.github.com/users/pytorchmergebot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pytorchmergebot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pytorchmergebot/subscriptions",
            "organizations_url": "https://api.github.com/users/pytorchmergebot/orgs",
            "repos_url": "https://api.github.com/users/pytorchmergebot/repos",
            "events_url": "https://api.github.com/users/pytorchmergebot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pytorchmergebot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/65480/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/65480/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/64608",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/64608/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/64608/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/64608/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/64608",
        "id": 990413133,
        "node_id": "MDU6SXNzdWU5OTA0MTMxMzM=",
        "number": 64608,
        "title": "[JIT] Improve BatchMM's handling of Mutability  ",
        "user": {
            "login": "eellison",
            "id": 11477974,
            "node_id": "MDQ6VXNlcjExNDc3OTc0",
            "avatar_url": "https://avatars.githubusercontent.com/u/11477974?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eellison",
            "html_url": "https://github.com/eellison",
            "followers_url": "https://api.github.com/users/eellison/followers",
            "following_url": "https://api.github.com/users/eellison/following{/other_user}",
            "gists_url": "https://api.github.com/users/eellison/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eellison/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eellison/subscriptions",
            "organizations_url": "https://api.github.com/users/eellison/orgs",
            "repos_url": "https://api.github.com/users/eellison/repos",
            "events_url": "https://api.github.com/users/eellison/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eellison/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1027606656,
                "node_id": "MDU6TGFiZWwxMDI3NjA2NjU2",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20bootcamp",
                "name": "module: bootcamp",
                "color": "f7e101",
                "default": false,
                "description": "We plan to do a full writeup on the issue, and then get someone to do it for onboarding"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "davidberard98",
            "id": 5067123,
            "node_id": "MDQ6VXNlcjUwNjcxMjM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5067123?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidberard98",
            "html_url": "https://github.com/davidberard98",
            "followers_url": "https://api.github.com/users/davidberard98/followers",
            "following_url": "https://api.github.com/users/davidberard98/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidberard98/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidberard98/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidberard98/subscriptions",
            "organizations_url": "https://api.github.com/users/davidberard98/orgs",
            "repos_url": "https://api.github.com/users/davidberard98/repos",
            "events_url": "https://api.github.com/users/davidberard98/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidberard98/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "davidberard98",
                "id": 5067123,
                "node_id": "MDQ6VXNlcjUwNjcxMjM=",
                "avatar_url": "https://avatars.githubusercontent.com/u/5067123?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidberard98",
                "html_url": "https://github.com/davidberard98",
                "followers_url": "https://api.github.com/users/davidberard98/followers",
                "following_url": "https://api.github.com/users/davidberard98/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidberard98/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidberard98/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidberard98/subscriptions",
                "organizations_url": "https://api.github.com/users/davidberard98/orgs",
                "repos_url": "https://api.github.com/users/davidberard98/repos",
                "events_url": "https://api.github.com/users/davidberard98/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidberard98/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2021-09-07T22:56:58Z",
        "updated_at": "2021-09-16T17:51:41Z",
        "closed_at": "2021-09-16T17:51:41Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "## \ud83d\ude80 Feature\r\n\r\nWe have pass in JIT execution which attempts to [batch matrix multiplication in order to improve performance](https://github.com/pytorch/pytorch/blob/master/torch/csrc/jit/passes/batch_mm.cpp#L26). It was written before JIT IR supported mutability, and so currently it [bails for any block with a mutable operator](https://github.com/pytorch/pytorch/blob/master/torch/csrc/jit/passes/batch_mm.cpp#L470). A write to a dictionary obviously  does not invalidate matrix multiplication batching. We can improve our handling here by just checking that none of the inputs to a matrix multiplication are written to with the [Alias Db hasWriters API](https://github.com/pytorch/pytorch/blob/master/torch/csrc/jit/ir/alias_analysis.h#L88). We probably want to lazily initialize the aliasdb when we first see `aten::mm` because not all models have matrix multiplications in them. \r\n\r\nTesting: this was added a long time ago and we test a little bit more now lol but I would recommend writing functions in python, [binding the pass](https://github.com/pytorch/pytorch/blob/75b9e4a128496e9b2563078f62a2903f65a6d145/torch/csrc/jit/python/init.cpp#L181), and then invoking it and see if mutation is correctly handled on the resulting IR. [Test peephole](https://github.com/pytorch/pytorch/blob/master/test/jit/test_peephole.py) has examples of similar tests.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
        "closed_by": {
            "login": "davidberard98",
            "id": 5067123,
            "node_id": "MDQ6VXNlcjUwNjcxMjM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5067123?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidberard98",
            "html_url": "https://github.com/davidberard98",
            "followers_url": "https://api.github.com/users/davidberard98/followers",
            "following_url": "https://api.github.com/users/davidberard98/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidberard98/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidberard98/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidberard98/subscriptions",
            "organizations_url": "https://api.github.com/users/davidberard98/orgs",
            "repos_url": "https://api.github.com/users/davidberard98/repos",
            "events_url": "https://api.github.com/users/davidberard98/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidberard98/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/64608/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/64608/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/63987",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/63987/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/63987/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/63987/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/63987",
        "id": 979648253,
        "node_id": "MDU6SXNzdWU5Nzk2NDgyNTM=",
        "number": 63987,
        "title": "[JIT] Serialization of Sparse Tensors doesnt work",
        "user": {
            "login": "eellison",
            "id": 11477974,
            "node_id": "MDQ6VXNlcjExNDc3OTc0",
            "avatar_url": "https://avatars.githubusercontent.com/u/11477974?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eellison",
            "html_url": "https://github.com/eellison",
            "followers_url": "https://api.github.com/users/eellison/followers",
            "following_url": "https://api.github.com/users/eellison/following{/other_user}",
            "gists_url": "https://api.github.com/users/eellison/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eellison/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eellison/subscriptions",
            "organizations_url": "https://api.github.com/users/eellison/orgs",
            "repos_url": "https://api.github.com/users/eellison/repos",
            "events_url": "https://api.github.com/users/eellison/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eellison/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 679954154,
                "node_id": "MDU6TGFiZWw2Nzk5NTQxNTQ=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20sparse",
                "name": "module: sparse",
                "color": "f7e101",
                "default": false,
                "description": "Related to torch.sparse"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "davidberard98",
            "id": 5067123,
            "node_id": "MDQ6VXNlcjUwNjcxMjM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5067123?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidberard98",
            "html_url": "https://github.com/davidberard98",
            "followers_url": "https://api.github.com/users/davidberard98/followers",
            "following_url": "https://api.github.com/users/davidberard98/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidberard98/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidberard98/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidberard98/subscriptions",
            "organizations_url": "https://api.github.com/users/davidberard98/orgs",
            "repos_url": "https://api.github.com/users/davidberard98/repos",
            "events_url": "https://api.github.com/users/davidberard98/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidberard98/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "davidberard98",
                "id": 5067123,
                "node_id": "MDQ6VXNlcjUwNjcxMjM=",
                "avatar_url": "https://avatars.githubusercontent.com/u/5067123?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidberard98",
                "html_url": "https://github.com/davidberard98",
                "followers_url": "https://api.github.com/users/davidberard98/followers",
                "following_url": "https://api.github.com/users/davidberard98/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidberard98/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidberard98/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidberard98/subscriptions",
                "organizations_url": "https://api.github.com/users/davidberard98/orgs",
                "repos_url": "https://api.github.com/users/davidberard98/repos",
                "events_url": "https://api.github.com/users/davidberard98/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidberard98/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 11,
        "created_at": "2021-08-25T21:52:37Z",
        "updated_at": "2022-01-21T20:59:54Z",
        "closed_at": "2021-12-20T20:00:18Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n```\r\nimport torch\r\nimport io\r\n\r\nclass SparseTensorModule(torch.nn.Module):\r\n\tdef __init__(self):\r\n\t\tsuper().__init__()\r\n\t\tself.a = torch.sparse.FloatTensor()\r\n\r\n\tdef forward(self):\r\n\t\tpass\r\n\r\ntorch.jit.save(torch.jit.script(SparseTensorModule()), io.BytesIO())\r\n```\r\n\r\n> NotImplementedError: Cannot access storage of SparseTensorImpl\r\n\r\n## Additional context\r\n\r\nRan into this when fixing a freezing / sparsity bug which was requested internally.\r\n\n\ncc @nikitaved @pearu @cpuhrsch @IvanYashchuk",
        "closed_by": {
            "login": "eellison",
            "id": 11477974,
            "node_id": "MDQ6VXNlcjExNDc3OTc0",
            "avatar_url": "https://avatars.githubusercontent.com/u/11477974?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eellison",
            "html_url": "https://github.com/eellison",
            "followers_url": "https://api.github.com/users/eellison/followers",
            "following_url": "https://api.github.com/users/eellison/following{/other_user}",
            "gists_url": "https://api.github.com/users/eellison/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eellison/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eellison/subscriptions",
            "organizations_url": "https://api.github.com/users/eellison/orgs",
            "repos_url": "https://api.github.com/users/eellison/repos",
            "events_url": "https://api.github.com/users/eellison/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eellison/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/63987/reactions",
            "total_count": 3,
            "+1": 3,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/63987/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/63923",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/63923/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/63923/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/63923/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/63923",
        "id": 978673384,
        "node_id": "MDU6SXNzdWU5Nzg2NzMzODQ=",
        "number": 63923,
        "title": "[TensorExpr] torch.jit.freeze causes CUDA compilation error",
        "user": {
            "login": "robieta",
            "id": 13089297,
            "node_id": "MDQ6VXNlcjEzMDg5Mjk3",
            "avatar_url": "https://avatars.githubusercontent.com/u/13089297?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/robieta",
            "html_url": "https://github.com/robieta",
            "followers_url": "https://api.github.com/users/robieta/followers",
            "following_url": "https://api.github.com/users/robieta/following{/other_user}",
            "gists_url": "https://api.github.com/users/robieta/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/robieta/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/robieta/subscriptions",
            "organizations_url": "https://api.github.com/users/robieta/orgs",
            "repos_url": "https://api.github.com/users/robieta/repos",
            "events_url": "https://api.github.com/users/robieta/events{/privacy}",
            "received_events_url": "https://api.github.com/users/robieta/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "navahgar",
            "id": 2213641,
            "node_id": "MDQ6VXNlcjIyMTM2NDE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2213641?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/navahgar",
            "html_url": "https://github.com/navahgar",
            "followers_url": "https://api.github.com/users/navahgar/followers",
            "following_url": "https://api.github.com/users/navahgar/following{/other_user}",
            "gists_url": "https://api.github.com/users/navahgar/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/navahgar/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/navahgar/subscriptions",
            "organizations_url": "https://api.github.com/users/navahgar/orgs",
            "repos_url": "https://api.github.com/users/navahgar/repos",
            "events_url": "https://api.github.com/users/navahgar/events{/privacy}",
            "received_events_url": "https://api.github.com/users/navahgar/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "navahgar",
                "id": 2213641,
                "node_id": "MDQ6VXNlcjIyMTM2NDE=",
                "avatar_url": "https://avatars.githubusercontent.com/u/2213641?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/navahgar",
                "html_url": "https://github.com/navahgar",
                "followers_url": "https://api.github.com/users/navahgar/followers",
                "following_url": "https://api.github.com/users/navahgar/following{/other_user}",
                "gists_url": "https://api.github.com/users/navahgar/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/navahgar/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/navahgar/subscriptions",
                "organizations_url": "https://api.github.com/users/navahgar/orgs",
                "repos_url": "https://api.github.com/users/navahgar/repos",
                "events_url": "https://api.github.com/users/navahgar/events{/privacy}",
                "received_events_url": "https://api.github.com/users/navahgar/received_events",
                "type": "User",
                "site_admin": false
            },
            {
                "login": "ZolotukhinM",
                "id": 4588111,
                "node_id": "MDQ6VXNlcjQ1ODgxMTE=",
                "avatar_url": "https://avatars.githubusercontent.com/u/4588111?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ZolotukhinM",
                "html_url": "https://github.com/ZolotukhinM",
                "followers_url": "https://api.github.com/users/ZolotukhinM/followers",
                "following_url": "https://api.github.com/users/ZolotukhinM/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZolotukhinM/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ZolotukhinM/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZolotukhinM/subscriptions",
                "organizations_url": "https://api.github.com/users/ZolotukhinM/orgs",
                "repos_url": "https://api.github.com/users/ZolotukhinM/repos",
                "events_url": "https://api.github.com/users/ZolotukhinM/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ZolotukhinM/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 6,
        "created_at": "2021-08-25T03:36:31Z",
        "updated_at": "2021-08-26T16:54:16Z",
        "closed_at": "2021-08-26T16:54:15Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\nThis failure was detected in TorchBench: https://github.com/pytorch/benchmark/tree/master/torchbenchmark/models/timm_efficientnet\r\n\r\nI've distilled the failure into a pretty minimal repro (apologies for using a third party lib, but hopefully timm is established enough that you'll forgive it.) This is almost certainly from https://github.com/pytorch/pytorch/blob/master/torch/csrc/jit/tensorexpr/codegen.cpp\r\n\r\nCC @ZolotukhinM @navahgar\r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior:\r\n\r\n```\r\nimport torch\r\nimport timm.models.efficientnet\r\nmodel = timm.create_model('mixnet_m', pretrained=False, scriptable=True)\r\nmodel.to(device=\"cuda\", dtype=torch.float32)\r\njit_model = torch.jit.script(model).eval()\r\n\r\n# This line causes the failure.\r\njit_model = torch.jit.freeze(jit_model)\r\n\r\nx = torch.rand((1, 3, 224, 224), device=\"cuda\")\r\nfor i in range(10):\r\n    print(f\"Begin {i}\")\r\n    jit_model(x)\r\n```\r\n\r\n```\r\nBegin 0\r\nBegin 1\r\nTraceback (most recent call last):\r\n  File \"debug.py\", line 13, in <module>\r\n    jit_model(x)\r\n  File \"/home/ec2-user/anaconda3/envs/robieta_debug_env/lib/python3.7/site-packages/torch/nn/modules/module.py\", line 1065, in _call_impl\r\n    return forward_call(*input, **kwargs)\r\nRuntimeError: default_program(18): error: expected a \")\"\r\n\r\ndefault_program(18): error: extra text after expected end of number\r\n\r\ndefault_program(18): error: extra text after expected end of number\r\n\r\ndefault_program(21): error: expected a \";\"\r\n\r\ndefault_program(21): error: extra text after expected end of number\r\n\r\ndefault_program(21): error: extra text after expected end of number\r\n\r\ndefault_program(22): error: \"const_self\" has already been declared in the current scope\r\n\r\ndefault_program(22): error: expected a \";\"\r\n\r\ndefault_program(22): error: extra text after expected end of number\r\n\r\ndefault_program(22): error: extra text after expected end of number\r\n\r\ndefault_program(23): error: extra text after expected end of number\r\n\r\ndefault_program(23): error: expression must have class type\r\n\r\ndefault_program(23): error: expected a \")\"\r\n\r\ndefault_program(23): error: extra text after expected end of number\r\n\r\ndefault_program(23): error: expression must have class type\r\n\r\ndefault_program(23): error: expected a \")\"\r\n\r\ndefault_program(23): error: extra text after expected end of number\r\n\r\ndefault_program(23): error: expression must have class type\r\n\r\ndefault_program(23): error: expected a \")\"\r\n\r\ndefault_program(23): error: extra text after expected end of number\r\n\r\ndefault_program(23): error: expression must have class type\r\n\r\ndefault_program(23): error: expected a \")\"\r\n\r\ndefault_program(23): error: extra text after expected end of number\r\n\r\ndefault_program(23): error: expression must have class type\r\n\r\ndefault_program(23): error: expected a \")\"\r\n\r\ndefault_program(23): error: extra text after expected end of number\r\n\r\ndefault_program(23): error: expression must have class type\r\n\r\ndefault_program(23): error: expected a \")\"\r\n\r\ndefault_program(21): warning: variable \"const_self\" was declared but never referenced\r\n\r\n28 errors detected in the compilation of \"default_program\".\r\n\r\nnvrtc compilation failed:\r\n\r\n#define NAN __int_as_float(0x7fffffff)\r\n#define POS_INFINITY __int_as_float(0x7f800000)\r\n#define NEG_INFINITY __int_as_float(0xff800000)\r\n\r\n\r\ntemplate<typename T>\r\n__device__ T maximum(T a, T b) {\r\n  return isnan(a) ? a : (a > b ? a : b);\r\n}\r\n\r\ntemplate<typename T>\r\n__device__ T minimum(T a, T b) {\r\n  return isnan(a) ? a : (a < b ? a : b);\r\n}\r\n\r\nextern \"C\" __global__\r\nvoid fused_cat_batch_norm(float* t_, float* t__, float* aten_batch_norm, float* aten_cat, float* const_self.blocks.1.0.bn1.running_mean, float* const_self.blocks.1.0.bn1.running_var) {\r\n{\r\n  aten_cat[threadIdx.x + 512 * blockIdx.x] = ((((threadIdx.x + 512 * blockIdx.x) / 12544) % 144<72 ? 1 : 0) ? __ldg(t_ + (threadIdx.x + 512 * blockIdx.x) % 1806336) : __ldg(t__ + (threadIdx.x + 512 * blockIdx.x) % 1806336 - 903168));\r\n  float const_self.blocks.1.0.bn1.running_var_1 = __ldg(const_self.blocks.1.0.bn1.running_var + ((threadIdx.x + 512 * blockIdx.x) / 12544) % 144);\r\n  float const_self.blocks.1.0.bn1.running_mean_1 = __ldg(const_self.blocks.1.0.bn1.running_mean + ((threadIdx.x + 512 * blockIdx.x) / 12544) % 144);\r\n  aten_batch_norm[threadIdx.x + 512 * blockIdx.x] = (float)((double)(((((threadIdx.x + 512 * blockIdx.x) / 12544) % 144<72 ? 1 : 0) ? __ldg(t_ + (threadIdx.x + 512 * blockIdx.x) % 1806336) : __ldg(t__ + (threadIdx.x + 512 * blockIdx.x) % 1806336 - 903168\r\n))) * ((rsqrt((double)(const_self.blocks.1.0.bn1.running_var_1) + 1e-05)) * (double)(const_self.blocks.1.0.bn1.running_var_1)) + ((double)(const_self.blocks.1.0.bn1.running_mean_1) - (double)(const_self.blocks.1.0.bn1.running_mean_1) * ((rsqrt((double)(c\r\nonst_self.blocks.1.0.bn1.running_var_1) + 1e-05)) * (double)(const_self.blocks.1.0.bn1.running_var_1))));\r\n}\r\n}\r\n```\r\n\r\n## Expected behavior\r\n\r\nWe should emit legal code. (Or abort / fallback if compilation fails.)\r\n\r\n## Environment\r\n\r\nTorchBench CI machine. If you can't repro, talk to me and I can get you access. Install is PyTorch nightly as of 08/24, `timm` version 0.4.5, GPU is an Nvidia T4.\r\n\r\n```\r\nPyTorch built with:\r\n  - GCC 7.3\r\n  - C++ Version: 201402\r\n  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications\r\n  - Intel(R) MKL-DNN v2.2.3 (Git Hash 7336ca9f055cf1bfa13efb658fe15dc9b41f0740)\r\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\r\n  - LAPACK is enabled (usually provided by MKL)\r\n  - NNPACK is enabled\r\n  - CPU capability usage: AVX512\r\n  - CUDA Runtime 10.2\r\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70\r\n  - CuDNN 7.6.5\r\n  - Magma 2.5.2\r\n  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=10.2, CUDNN_VERSION=7.6.5, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.10.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON,\r\n```\r\n\r\n## Additional context\r\n\r\n<!-- Add any other context about the problem here. -->\r\n\n\ncc @gmagogsfm",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/63923/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/63923/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/62820",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/62820/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/62820/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/62820/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/62820",
        "id": 961947436,
        "node_id": "MDU6SXNzdWU5NjE5NDc0MzY=",
        "number": 62820,
        "title": "TestJit.test_profiler intermittently crashes on Windows",
        "user": {
            "login": "malfet",
            "id": 2453524,
            "node_id": "MDQ6VXNlcjI0NTM1MjQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2453524?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/malfet",
            "html_url": "https://github.com/malfet",
            "followers_url": "https://api.github.com/users/malfet/followers",
            "following_url": "https://api.github.com/users/malfet/following{/other_user}",
            "gists_url": "https://api.github.com/users/malfet/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/malfet/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/malfet/subscriptions",
            "organizations_url": "https://api.github.com/users/malfet/orgs",
            "repos_url": "https://api.github.com/users/malfet/repos",
            "events_url": "https://api.github.com/users/malfet/events{/privacy}",
            "received_events_url": "https://api.github.com/users/malfet/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 790080431,
                "node_id": "MDU6TGFiZWw3OTAwODA0MzE=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20windows",
                "name": "module: windows",
                "color": "f7e101",
                "default": false,
                "description": "Windows support for PyTorch"
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            },
            {
                "id": 1301397902,
                "node_id": "MDU6TGFiZWwxMzAxMzk3OTAy",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20flaky-tests",
                "name": "module: flaky-tests",
                "color": "f7e101",
                "default": false,
                "description": "Problem is a flaky test in CI"
            },
            {
                "id": 1883229970,
                "node_id": "MDU6TGFiZWwxODgzMjI5OTcw",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20profiler",
                "name": "oncall: profiler",
                "color": "79C48B",
                "default": false,
                "description": "profiler-related issues (cpu, gpu, kineto)"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [
            {
                "login": "mantaionut",
                "id": 109968009,
                "node_id": "U_kgDOBo36iQ",
                "avatar_url": "https://avatars.githubusercontent.com/u/109968009?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/mantaionut",
                "html_url": "https://github.com/mantaionut",
                "followers_url": "https://api.github.com/users/mantaionut/followers",
                "following_url": "https://api.github.com/users/mantaionut/following{/other_user}",
                "gists_url": "https://api.github.com/users/mantaionut/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/mantaionut/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mantaionut/subscriptions",
                "organizations_url": "https://api.github.com/users/mantaionut/orgs",
                "repos_url": "https://api.github.com/users/mantaionut/repos",
                "events_url": "https://api.github.com/users/mantaionut/events{/privacy}",
                "received_events_url": "https://api.github.com/users/mantaionut/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 3,
        "created_at": "2021-08-05T15:31:29Z",
        "updated_at": "2023-03-21T13:52:35Z",
        "closed_at": "2023-03-21T13:52:35Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "After https://github.com/pytorch/pytorch/commit/5a1017be97809c84baf5ab56fe16fe0ac66a51b2 were committed tests started to intermittently fail on Windows:\r\n![image](https://user-images.githubusercontent.com/2453524/128377486-4ad9e49e-7a6b-43e3-bdf1-131a448db64f.png)\r\n\r\n\r\nHere is the example of failed tests:\r\nhttps://github.com/pytorch/pytorch/runs/3246777715\r\nhttps://github.com/pytorch/pytorch/runs/3246867155\r\nhttps://github.com/pytorch/pytorch/runs/3246247223\n\ncc @gmagogsfm @peterjc123 @mszhanyi @skyline75489 @nbcsm @ilia-cher @gdankel @bitfort @ngimel @orionr @guotuofeng @guyang3532 @gaoteng-git",
        "closed_by": {
            "login": "pytorchmergebot",
            "id": 97764156,
            "node_id": "U_kgDOBdPDPA",
            "avatar_url": "https://avatars.githubusercontent.com/u/97764156?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pytorchmergebot",
            "html_url": "https://github.com/pytorchmergebot",
            "followers_url": "https://api.github.com/users/pytorchmergebot/followers",
            "following_url": "https://api.github.com/users/pytorchmergebot/following{/other_user}",
            "gists_url": "https://api.github.com/users/pytorchmergebot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pytorchmergebot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pytorchmergebot/subscriptions",
            "organizations_url": "https://api.github.com/users/pytorchmergebot/orgs",
            "repos_url": "https://api.github.com/users/pytorchmergebot/repos",
            "events_url": "https://api.github.com/users/pytorchmergebot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pytorchmergebot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/62820/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/62820/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/62220",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/62220/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/62220/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/62220/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/62220",
        "id": 953294488,
        "node_id": "MDU6SXNzdWU5NTMyOTQ0ODg=",
        "number": 62220,
        "title": "[JIT] Add Optimize For List Slicing",
        "user": {
            "login": "eellison",
            "id": 11477974,
            "node_id": "MDQ6VXNlcjExNDc3OTc0",
            "avatar_url": "https://avatars.githubusercontent.com/u/11477974?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eellison",
            "html_url": "https://github.com/eellison",
            "followers_url": "https://api.github.com/users/eellison/followers",
            "following_url": "https://api.github.com/users/eellison/following{/other_user}",
            "gists_url": "https://api.github.com/users/eellison/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eellison/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eellison/subscriptions",
            "organizations_url": "https://api.github.com/users/eellison/orgs",
            "repos_url": "https://api.github.com/users/eellison/repos",
            "events_url": "https://api.github.com/users/eellison/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eellison/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1027606656,
                "node_id": "MDU6TGFiZWwxMDI3NjA2NjU2",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20bootcamp",
                "name": "module: bootcamp",
                "color": "f7e101",
                "default": false,
                "description": "We plan to do a full writeup on the issue, and then get someone to do it for onboarding"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2021-07-26T21:14:51Z",
        "updated_at": "2021-09-21T18:22:17Z",
        "closed_at": "2021-09-21T18:22:17Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "## \ud83d\ude80 Feature\r\n\r\nWe have an [existing optimization pass](https://github.com/pytorch/pytorch/blob/master/torch/csrc/jit/passes/peephole_list_idioms.cpp#L156) which optimizes patterns like `li = [x, y]; z = li[0]` to be `z = x`. Right now it does not handle list slicing. We saw a case internally in static runtime (cc @hlu1) where the list slice could have been optimized away but was not. \r\n\r\nWe can extend the [logic](https://github.com/pytorch/pytorch/blob/master/torch/csrc/jit/passes/peephole_list_idioms.cpp#L245) to handle slice nodes. \r\n\r\n```\r\n@torch.jit.script\r\ndef foo(x):\r\n     return [x, 1, 2, 3][0:2]\r\n```\r\nAfter running `torch._C._jit_pass_peephole(foo.graph)` should remove the slice node. \r\n\r\nThe slice schema is given [here](https://github.com/pytorch/pytorch/blob/master/torch/csrc/jit/runtime/register_prim_ops.cpp#L672). I would suggest looking at [Core Program Optimization](https://github.com/pytorch/pytorch/blob/master/torch/csrc/jit/OVERVIEW.md#core-program-representation) here. \r\n\r\n\r\n\r\n\r\n",
        "closed_by": {
            "login": "eellison",
            "id": 11477974,
            "node_id": "MDQ6VXNlcjExNDc3OTc0",
            "avatar_url": "https://avatars.githubusercontent.com/u/11477974?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eellison",
            "html_url": "https://github.com/eellison",
            "followers_url": "https://api.github.com/users/eellison/followers",
            "following_url": "https://api.github.com/users/eellison/following{/other_user}",
            "gists_url": "https://api.github.com/users/eellison/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eellison/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eellison/subscriptions",
            "organizations_url": "https://api.github.com/users/eellison/orgs",
            "repos_url": "https://api.github.com/users/eellison/repos",
            "events_url": "https://api.github.com/users/eellison/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eellison/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/62220/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/62220/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/61176",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/61176/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/61176/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/61176/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/61176",
        "id": 935897020,
        "node_id": "MDU6SXNzdWU5MzU4OTcwMjA=",
        "number": 61176,
        "title": "Make ParameterList subscriptable in TorchScript",
        "user": {
            "login": "alexander-soare",
            "id": 16543381,
            "node_id": "MDQ6VXNlcjE2NTQzMzgx",
            "avatar_url": "https://avatars.githubusercontent.com/u/16543381?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alexander-soare",
            "html_url": "https://github.com/alexander-soare",
            "followers_url": "https://api.github.com/users/alexander-soare/followers",
            "following_url": "https://api.github.com/users/alexander-soare/following{/other_user}",
            "gists_url": "https://api.github.com/users/alexander-soare/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alexander-soare/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alexander-soare/subscriptions",
            "organizations_url": "https://api.github.com/users/alexander-soare/orgs",
            "repos_url": "https://api.github.com/users/alexander-soare/repos",
            "events_url": "https://api.github.com/users/alexander-soare/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alexander-soare/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "tugsbayasgalan",
            "id": 16603271,
            "node_id": "MDQ6VXNlcjE2NjAzMjcx",
            "avatar_url": "https://avatars.githubusercontent.com/u/16603271?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tugsbayasgalan",
            "html_url": "https://github.com/tugsbayasgalan",
            "followers_url": "https://api.github.com/users/tugsbayasgalan/followers",
            "following_url": "https://api.github.com/users/tugsbayasgalan/following{/other_user}",
            "gists_url": "https://api.github.com/users/tugsbayasgalan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tugsbayasgalan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tugsbayasgalan/subscriptions",
            "organizations_url": "https://api.github.com/users/tugsbayasgalan/orgs",
            "repos_url": "https://api.github.com/users/tugsbayasgalan/repos",
            "events_url": "https://api.github.com/users/tugsbayasgalan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tugsbayasgalan/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "tugsbayasgalan",
                "id": 16603271,
                "node_id": "MDQ6VXNlcjE2NjAzMjcx",
                "avatar_url": "https://avatars.githubusercontent.com/u/16603271?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/tugsbayasgalan",
                "html_url": "https://github.com/tugsbayasgalan",
                "followers_url": "https://api.github.com/users/tugsbayasgalan/followers",
                "following_url": "https://api.github.com/users/tugsbayasgalan/following{/other_user}",
                "gists_url": "https://api.github.com/users/tugsbayasgalan/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/tugsbayasgalan/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tugsbayasgalan/subscriptions",
                "organizations_url": "https://api.github.com/users/tugsbayasgalan/orgs",
                "repos_url": "https://api.github.com/users/tugsbayasgalan/repos",
                "events_url": "https://api.github.com/users/tugsbayasgalan/events{/privacy}",
                "received_events_url": "https://api.github.com/users/tugsbayasgalan/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 3,
        "created_at": "2021-07-02T16:03:06Z",
        "updated_at": "2022-04-20T20:53:13Z",
        "closed_at": "2022-04-20T20:53:13Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "Here is some code you may try:\r\n\r\n```python\r\nimport torch\r\nfrom torch import nn\r\n\r\nclass MyModule(nn.Module):\r\n    def __init__(self):\r\n        super().__init__()\r\n        self.module_list = nn.ModuleList([nn.Linear(1,1) for _ in range(10)])\r\n        self.parameter_list = nn.ParameterList([nn.Parameter(torch.zeros(1)) for _ in range(10)])\r\n\r\n    def forward(self, x):\r\n        self.module_list[0]\r\n        self.parameter_list[0]\r\n        return x\r\n\r\n\r\nif __name__ == '__main__':\r\n    model = MyModule()\r\n    torch.jit.script(model)\r\n```\r\n\r\nThis raises\r\n\r\n```\r\nRuntimeError: \r\nOnly ModuleList, Sequential, and ModuleDict modules are subscriptable:\r\n  File \"test.py\", line 12\r\n    def forward(self, x):\r\n        self.module_list[0]\r\n        self.parameter_list[0]\r\n        ~~~~~~~~~~~~~~~~~~~~~~ <--- HERE\r\n        return x\r\n```\r\n\r\nAre there any plans to make this work? If not, does anyone know of a good workaround?\r\n",
        "closed_by": {
            "login": "pytorchmergebot",
            "id": 97764156,
            "node_id": "U_kgDOBdPDPA",
            "avatar_url": "https://avatars.githubusercontent.com/u/97764156?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pytorchmergebot",
            "html_url": "https://github.com/pytorchmergebot",
            "followers_url": "https://api.github.com/users/pytorchmergebot/followers",
            "following_url": "https://api.github.com/users/pytorchmergebot/following{/other_user}",
            "gists_url": "https://api.github.com/users/pytorchmergebot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pytorchmergebot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pytorchmergebot/subscriptions",
            "organizations_url": "https://api.github.com/users/pytorchmergebot/orgs",
            "repos_url": "https://api.github.com/users/pytorchmergebot/repos",
            "events_url": "https://api.github.com/users/pytorchmergebot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pytorchmergebot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/61176/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/61176/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/61096",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/61096/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/61096/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/61096/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/61096",
        "id": 934316488,
        "node_id": "MDU6SXNzdWU5MzQzMTY0ODg=",
        "number": 61096,
        "title": "torch.tensordot(-,-,0) no longer works",
        "user": {
            "login": "fritzo",
            "id": 648532,
            "node_id": "MDQ6VXNlcjY0ODUzMg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/648532?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fritzo",
            "html_url": "https://github.com/fritzo",
            "followers_url": "https://api.github.com/users/fritzo/followers",
            "following_url": "https://api.github.com/users/fritzo/following{/other_user}",
            "gists_url": "https://api.github.com/users/fritzo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fritzo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fritzo/subscriptions",
            "organizations_url": "https://api.github.com/users/fritzo/orgs",
            "repos_url": "https://api.github.com/users/fritzo/repos",
            "events_url": "https://api.github.com/users/fritzo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fritzo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 443484135,
                "node_id": "MDU6TGFiZWw0NDM0ODQxMzU=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/high%20priority",
                "name": "high priority",
                "color": "F22613",
                "default": false,
                "description": null
            },
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1313495464,
                "node_id": "MDU6TGFiZWwxMzEzNDk1NDY0",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20regression",
                "name": "module: regression",
                "color": "f7e101",
                "default": false,
                "description": "It used to work, and now it doesn't"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2021-07-01T03:04:04Z",
        "updated_at": "2021-07-11T17:32:33Z",
        "closed_at": "2021-07-11T00:06:42Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\nThis check \r\nhttps://github.com/pytorch/pytorch/pull/53672/files#diff-5f3d4caa0693a716fc46fd7f6339312f1b5f0bf89e3a3ff58e9dc13a9486b17aR1038-R1039\r\nintroduced in #53672 breaks the simple case `tensordot(torch.tensor(0.), torch.tensor(0.), 0)`, which worked fine in PyTorch 1.8 and works fine in NumPy\r\n```py\r\n>>> np.tensordot(np.zeros(()), np.zeros(()), 0)\r\narray(0.)\r\n```\r\nThis important edge case `dims=0` is needed by generic machinery as in [Pyro](https://github.com/pyro-ppl/pyro/blob/5ecc9c0a2b8192b99ad386cc1d946e8a44f964ae/pyro/infer/util.py#L303) and [opt_einsum](https://github.com/dgasmith/opt_einsum/blob/be2d3dcb9792016d3b7ed0afacfed70024698c9e/opt_einsum/backends/torch.py#L54).  Can we revert this check?\r\n\r\ncc @neerajprad \r\n\r\n## To Reproduce\r\n\r\n```py\r\n>>> import torch\r\n>>> torch.tensordot(torch.zeros(()), torch.zeros(()), 0)\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/Users/fobermey/opt/miniconda3/envs/pyro/lib/python3.7/site-packages/torch/functional.py\", line 929, in tensordot\r\n    raise RuntimeError(f\"unsupported input to tensordot, got dims={dims}\")\r\nRuntimeError: unsupported input to tensordot, got dims=0\r\n```\r\n\r\n## Expected behavior\r\n\r\nBehave as in NumPy and PyTorch 1.8\r\n\r\n## Environment\r\n\r\n```\r\nPyTorch version: 1.9.0\r\nIs debug build: False\r\nCUDA used to build PyTorch: None\r\nROCM used to build PyTorch: N/A\r\n\r\nOS: macOS 10.15.7 (x86_64)\r\nGCC version: Could not collect\r\nClang version: 12.0.0 (clang-1200.0.32.2)\r\nCMake version: version 3.18.4\r\nLibc version: N/A\r\n\r\nPython version: 3.7.0 (default, Jun 28 2018, 07:39:16)  [Clang 4.0.1 (tags/RELEASE_401/final)] (64-bit runtime)\r\nPython platform: Darwin-19.6.0-x86_64-i386-64bit\r\nIs CUDA available: False\r\nCUDA runtime version: No CUDA\r\nGPU models and configuration: No CUDA\r\nNvidia driver version: No CUDA\r\ncuDNN version: No CUDA\r\nHIP runtime version: N/A\r\nMIOpen runtime version: N/A\r\n\r\nVersions of relevant libraries:\r\n[pip] gpytorch==1.5.0\r\n[pip] numpy==1.19.4\r\n[pip] numpyro==0.6.0\r\n[pip] torch==1.9.0\r\n[pip] torchfile==0.1.0\r\n[pip] torchvision==0.10.0\r\n[conda] gpytorch                  1.5.0                    pypi_0    pypi\r\n[conda] numpy                     1.19.4                   pypi_0    pypi\r\n[conda] numpyro                   0.6.0                     dev_0    <develop>\r\n[conda] torch                     1.9.0                    pypi_0    pypi\r\n[conda] torchfile                 0.1.0                    pypi_0    pypi\r\n[conda] torchvision               0.10.0                   pypi_0    pypi\r\n```\r\n\r\ncc @gmagogsfm @eellison @neerajprad ",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/61096/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/61096/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/60258",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/60258/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/60258/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/60258/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/60258",
        "id": 924726810,
        "node_id": "MDU6SXNzdWU5MjQ3MjY4MTA=",
        "number": 60258,
        "title": "torch.jit.script has too strict type checks for torch.nn.LPPool2D and torch.nn.functional.lp_pool2d",
        "user": {
            "login": "mergian",
            "id": 23471913,
            "node_id": "MDQ6VXNlcjIzNDcxOTEz",
            "avatar_url": "https://avatars.githubusercontent.com/u/23471913?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mergian",
            "html_url": "https://github.com/mergian",
            "followers_url": "https://api.github.com/users/mergian/followers",
            "following_url": "https://api.github.com/users/mergian/following{/other_user}",
            "gists_url": "https://api.github.com/users/mergian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mergian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mergian/subscriptions",
            "organizations_url": "https://api.github.com/users/mergian/orgs",
            "repos_url": "https://api.github.com/users/mergian/repos",
            "events_url": "https://api.github.com/users/mergian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mergian/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2021-06-18T09:35:40Z",
        "updated_at": "2022-03-28T23:16:11Z",
        "closed_at": "2022-03-28T23:16:11Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\nWhen using ```torch.jit.script(...)``` on a model with ```torch.nn.LPPool2D``` or ```torch.nn.functional.lp_pool2d``` errors are thrown for hyper-parameters that are valid for running the model.\r\n\r\n## To Reproduce\r\n\r\n```python\r\nimport torch\r\n\r\nclass Model(torch.nn.Module):\r\n        def __init__(self):\r\n                super().__init__()\r\n                self.l = torch.nn.LPPool2d(2, 3)\r\n                self.n = torch.nn.LPPool2d(2, (7, 1)) # fails: Expected a value of type 'int' for argument 'kernel_size' but instead found type 'Tuple[int, int]'.\r\n\r\n        def forward(self, x):\r\n                o = []\r\n                o.append(self.l(x))\r\n                o.append(self.n(x)) # fails: Expected a value of type 'int' for argument 'kernel_size' but instead found type 'Tuple[int, int]'.\r\n                o.append(torch.nn.functional.lp_pool2d(x, float(2), 3))\r\n                o.append(torch.nn.functional.lp_pool2d(x, 2, 3)) # fails: Expected a value of type 'float' for argument 'norm_type' but instead found type 'int'.\r\n                o.append(torch.nn.functional.lp_pool2d(x, float(2), (7, 1))) # fails: Expected a value of type 'int' for argument 'kernel_size' but instead found type 'Tuple[int, int]'.\r\n                return o\r\n\r\nmodel = Model()\r\nx = torch.rand(1, 3, 7, 7)\r\nprint(*model(x), sep=\"\\n\") \r\ntorch.jit.script(model)\r\n```\r\n\r\nWhile ```model``` can just be executed, ```torch.jit.script``` will fail on all marked lines\r\n\r\n## Expected behavior\r\n\r\n```torch.jit.script(...)``` parses the model without throwing errors.\r\n\r\n## Environment\r\n\r\n```\r\nCollecting environment information...\r\nPyTorch version: 1.9.0+cu111\r\nIs debug build: False\r\nCUDA used to build PyTorch: 11.1\r\nROCM used to build PyTorch: N/A\r\n\r\nOS: CentOS Linux 7 (Core) (x86_64)\r\nGCC version: (GCC) 8.3.1 20190311 (Red Hat 8.3.1-3)\r\nClang version: Could not collect\r\nCMake version: Could not collect\r\nLibc version: glibc-2.3.4\r\n\r\nPython version: 3.6 (64-bit runtime)\r\nPython platform: Linux-3.10.0-1160.25.1.el7.x86_64-x86_64-with-centos-7.9.2009-Core\r\nIs CUDA available: False\r\nCUDA runtime version: 11.1.105\r\nGPU models and configuration: Could not collect\r\nNvidia driver version: Could not collect\r\ncuDNN version: Could not collect\r\nHIP runtime version: N/A\r\nMIOpen runtime version: N/A\r\n\r\nVersions of relevant libraries:\r\n[pip3] numpy==1.19.5\r\n[pip3] torch==1.9.0+cu111\r\n[pip3] torchvision==0.10.0+cu111\r\n[conda] Could not collect\r\n```\r\n\r\n## Additional context\r\nN/A\r\n\n\ncc @gmagogsfm",
        "closed_by": {
            "login": "pytorchmergebot",
            "id": 97764156,
            "node_id": "U_kgDOBdPDPA",
            "avatar_url": "https://avatars.githubusercontent.com/u/97764156?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pytorchmergebot",
            "html_url": "https://github.com/pytorchmergebot",
            "followers_url": "https://api.github.com/users/pytorchmergebot/followers",
            "following_url": "https://api.github.com/users/pytorchmergebot/following{/other_user}",
            "gists_url": "https://api.github.com/users/pytorchmergebot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pytorchmergebot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pytorchmergebot/subscriptions",
            "organizations_url": "https://api.github.com/users/pytorchmergebot/orgs",
            "repos_url": "https://api.github.com/users/pytorchmergebot/repos",
            "events_url": "https://api.github.com/users/pytorchmergebot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pytorchmergebot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/60258/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/60258/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/58863",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/58863/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/58863/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/58863/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/58863",
        "id": 899842322,
        "node_id": "MDU6SXNzdWU4OTk4NDIzMjI=",
        "number": 58863,
        "title": "PackageExporter fails on some __import__ statements.",
        "user": {
            "login": "zdevito",
            "id": 370202,
            "node_id": "MDQ6VXNlcjM3MDIwMg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/370202?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zdevito",
            "html_url": "https://github.com/zdevito",
            "followers_url": "https://api.github.com/users/zdevito/followers",
            "following_url": "https://api.github.com/users/zdevito/following{/other_user}",
            "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions",
            "organizations_url": "https://api.github.com/users/zdevito/orgs",
            "repos_url": "https://api.github.com/users/zdevito/repos",
            "events_url": "https://api.github.com/users/zdevito/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zdevito/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 2931750617,
                "node_id": "MDU6TGFiZWwyOTMxNzUwNjE3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20deploy",
                "name": "module: deploy",
                "color": "3050AB",
                "default": false,
                "description": "related to torch deploy torchdeploy"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "suo",
            "id": 1617424,
            "node_id": "MDQ6VXNlcjE2MTc0MjQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1617424?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/suo",
            "html_url": "https://github.com/suo",
            "followers_url": "https://api.github.com/users/suo/followers",
            "following_url": "https://api.github.com/users/suo/following{/other_user}",
            "gists_url": "https://api.github.com/users/suo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/suo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/suo/subscriptions",
            "organizations_url": "https://api.github.com/users/suo/orgs",
            "repos_url": "https://api.github.com/users/suo/repos",
            "events_url": "https://api.github.com/users/suo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/suo/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "suo",
                "id": 1617424,
                "node_id": "MDQ6VXNlcjE2MTc0MjQ=",
                "avatar_url": "https://avatars.githubusercontent.com/u/1617424?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/suo",
                "html_url": "https://github.com/suo",
                "followers_url": "https://api.github.com/users/suo/followers",
                "following_url": "https://api.github.com/users/suo/following{/other_user}",
                "gists_url": "https://api.github.com/users/suo/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/suo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/suo/subscriptions",
                "organizations_url": "https://api.github.com/users/suo/orgs",
                "repos_url": "https://api.github.com/users/suo/repos",
                "events_url": "https://api.github.com/users/suo/events{/privacy}",
                "received_events_url": "https://api.github.com/users/suo/received_events",
                "type": "User",
                "site_admin": false
            },
            {
                "login": "Lilyjjo",
                "id": 35852084,
                "node_id": "MDQ6VXNlcjM1ODUyMDg0",
                "avatar_url": "https://avatars.githubusercontent.com/u/35852084?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/Lilyjjo",
                "html_url": "https://github.com/Lilyjjo",
                "followers_url": "https://api.github.com/users/Lilyjjo/followers",
                "following_url": "https://api.github.com/users/Lilyjjo/following{/other_user}",
                "gists_url": "https://api.github.com/users/Lilyjjo/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/Lilyjjo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Lilyjjo/subscriptions",
                "organizations_url": "https://api.github.com/users/Lilyjjo/orgs",
                "repos_url": "https://api.github.com/users/Lilyjjo/repos",
                "events_url": "https://api.github.com/users/Lilyjjo/events{/privacy}",
                "received_events_url": "https://api.github.com/users/Lilyjjo/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 12,
        "created_at": "2021-05-24T17:03:01Z",
        "updated_at": "2021-08-12T20:18:35Z",
        "closed_at": "2021-08-12T20:18:35Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\nPackageExporter fails when it looks at code that has import statements that are not fully constant nor fully dynamic.\r\n\r\n## To Reproduce\r\n\r\n```\r\nimport torch\r\n\r\nwith torch.package.PackageExporter(\"output\") as e:\r\n    e.save_source_string('m',  '__import__(\"these\", dont, have, to, be, contants)')\r\n```\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"p.py\", line 4, in <module>\r\n    e.save_source_string('m',  '__import__(\"these\", dont, have, to, be, contants)')\r\n  File \"/raid/zdevito/pytorch/torch/package/package_exporter.py\", line 307, in save_source_string\r\n    deps = self._get_dependencies(src, module_name, is_package)\r\n  File \"/raid/zdevito/pytorch/torch/package/package_exporter.py\", line 258, in _get_dependencies\r\n    dep_pairs = find_files_source_depends_on(src, package_name)\r\n  File \"/raid/zdevito/pytorch/torch/package/find_file_dependencies.py\", line 17, in run\r\n    visitor.visit(tree)\r\n  File \"/private/home/zdevito/miniconda3/lib/python3.8/ast.py\", line 363, in visit\r\n    return visitor(node)\r\n  File \"/private/home/zdevito/miniconda3/lib/python3.8/ast.py\", line 371, in generic_visit\r\n    self.visit(item)\r\n  File \"/private/home/zdevito/miniconda3/lib/python3.8/ast.py\", line 363, in visit\r\n    return visitor(node)\r\n  File \"/private/home/zdevito/miniconda3/lib/python3.8/ast.py\", line 373, in generic_visit\r\n    self.visit(value)\r\n  File \"/private/home/zdevito/miniconda3/lib/python3.8/ast.py\", line 363, in visit\r\n    return visitor(node)\r\n  File \"/raid/zdevito/pytorch/torch/package/find_file_dependencies.py\", line 68, in visit_Call\r\n    for v in node.args[3].elts:\r\nAttributeError: 'Name' object has no attribute 'elts'\r\n```\r\n\r\n\r\n## Expected behavior\r\n\r\nPackage is exported.\r\n\r\n\n\ncc @wconstab @gmagogsfm",
        "closed_by": {
            "login": "Lilyjjo",
            "id": 35852084,
            "node_id": "MDQ6VXNlcjM1ODUyMDg0",
            "avatar_url": "https://avatars.githubusercontent.com/u/35852084?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Lilyjjo",
            "html_url": "https://github.com/Lilyjjo",
            "followers_url": "https://api.github.com/users/Lilyjjo/followers",
            "following_url": "https://api.github.com/users/Lilyjjo/following{/other_user}",
            "gists_url": "https://api.github.com/users/Lilyjjo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Lilyjjo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Lilyjjo/subscriptions",
            "organizations_url": "https://api.github.com/users/Lilyjjo/orgs",
            "repos_url": "https://api.github.com/users/Lilyjjo/repos",
            "events_url": "https://api.github.com/users/Lilyjjo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Lilyjjo/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/58863/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/58863/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/58446",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/58446/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/58446/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/58446/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/58446",
        "id": 893816555,
        "node_id": "MDU6SXNzdWU4OTM4MTY1NTU=",
        "number": 58446,
        "title": "TSAN issues in jit:ProfilingRecord",
        "user": {
            "login": "pritamdamania87",
            "id": 9958665,
            "node_id": "MDQ6VXNlcjk5NTg2NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9958665?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pritamdamania87",
            "html_url": "https://github.com/pritamdamania87",
            "followers_url": "https://api.github.com/users/pritamdamania87/followers",
            "following_url": "https://api.github.com/users/pritamdamania87/following{/other_user}",
            "gists_url": "https://api.github.com/users/pritamdamania87/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pritamdamania87/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pritamdamania87/subscriptions",
            "organizations_url": "https://api.github.com/users/pritamdamania87/orgs",
            "repos_url": "https://api.github.com/users/pritamdamania87/repos",
            "events_url": "https://api.github.com/users/pritamdamania87/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pritamdamania87/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2021-05-18T00:21:03Z",
        "updated_at": "2021-05-26T20:55:13Z",
        "closed_at": "2021-05-26T20:55:13Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\n```\r\nWARNING: ThreadSanitizer: data race (pid=3634939)\r\n  Write of size 8 at 0x7b1c001a8398 by thread T104 (mutexes: write M150199):\r\n    #0 torch::jit::ProfilingRecord::instrumentGraph(std::shared_ptr<torch::jit::Graph> const&)::$_1::operator()(std::vector<c10::IValue, std::allocator<c10::IValue> >&) const caffe2/torch/csrc/jit/runtime/profiling_record.cpp:320 (libcaffe2_libtorch.so+0x35c0d08)\r\n    #1 std::_Function_handler<void (std::vector<c10::IValue, std::allocator<c10::IValue> >&), torch::jit::ProfilingRecord::instrumentGraph(std::shared_ptr<torch::jit::Graph> const&)::$_1>::_M_invoke(std::_Any_data const&, std::vector<c10::IValue, std::allocator<c10::IValue> >&) \r\n    #2 std::function<void (std::vector<c10::IValue, std::allocator<c10::IValue> >&)>::operator()(std::vector<c10::IValue, std::allocator<c10::IValue> >&) const \r\n    #3 torch::jit::InterpreterStateImpl::runImpl(std::vector<c10::IValue, std::allocator<c10::IValue> >&) caffe2/torch/csrc/jit/runtime/interpreter.cpp:440 (libcaffe2_libtorch.so+0x30efc55)\r\n    #4 torch::jit::InterpreterStateImpl::runAsync(std::vector<c10::IValue, std::allocator<c10::IValue> >&) caffe2/torch/csrc/jit/runtime/interpreter.cpp:723 (libcaffe2_libtorch.so+0x30d1c9a)\r\n    #5 torch::jit::InterpreterState::runAsync(std::vector<c10::IValue, std::allocator<c10::IValue> >&) caffe2/torch/csrc/jit/runtime/interpreter.cpp:844 (libcaffe2_libtorch.so+0x30d1bf7)\r\n    #6 torch::jit::GraphExecutorImplBase::runAsync(std::vector<c10::IValue, std::allocator<c10::IValue> >&, std::function<void (std::function<void ()>)>) caffe2/torch/csrc/jit/runtime/graph_executor.cpp:571 (libcaffe2_libtorch.so+0x2ef4d4b)\r\n    #7 torch::jit::GraphExecutor::runAsync(std::vector<c10::IValue, std::allocator<c10::IValue> >&, std::function<void (std::function<void ()>)>) caffe2/torch/csrc/jit/runtime/graph_executor.cpp:772 (libcaffe2_libtorch.so+0x2ef5951)\r\n    #8 torch::jit::GraphFunction::runAsync(std::vector<c10::IValue, std::allocator<c10::IValue> >&, std::function<void (std::function<void ()>)>) caffe2/torch/csrc/jit/api/function_impl.cpp:45 (libcaffe2_libtorch.so+0x2ed78f3)\r\n\r\n  Previous read of size 8 at 0x7b1c001a8398 by thread T102 (mutexes: write M150190):\r\n    #0 torch::jit::ProfilingRecord::ready() const caffe2/torch/csrc/jit/runtime/profiling_record.h:201 (libcaffe2_libtorch.so+0x35a4d99)\r\n    #1 torch::jit::ProfilingGraphExecutorImpl::getOptimizedPlanFor(std::vector<c10::IValue, std::allocator<c10::IValue> >&, unsigned long) caffe2/torch/csrc/jit/runtime/profiling_graph_executor_impl.cpp:613 (libcaffe2_libtorch.so+0x35a4239)\r\n    #2 torch::jit::ProfilingGraphExecutorImpl::getPlanFor(std::vector<c10::IValue, std::allocator<c10::IValue> >&, unsigned long) caffe2/torch/csrc/jit/runtime/profiling_graph_executor_impl.cpp:640 (libcaffe2_libtorch.so+0x35a4ea9)\r\n    #3 torch::jit::GraphExecutor::getPlanFor(std::vector<c10::IValue, std::allocator<c10::IValue> >&, unsigned long) caffe2/torch/csrc/jit/runtime/graph_executor.cpp:782 (libcaffe2_libtorch.so+0x2ef5a13)\r\n    #4 torch::jit::InterpreterStateImpl::runGraphFunction(std::vector<c10::IValue, std::allocator<c10::IValue> >&, torch::jit::Function*) caffe2/torch/csrc/jit/runtime/interpreter.cpp:202 (libcaffe2_libtorch.so+0x30f31cf)\r\n    #5 torch::jit::InterpreterStateImpl::runImpl(std::vector<c10::IValue, std::allocator<c10::IValue> >&) caffe2/torch/csrc/jit/runtime/interpreter.cpp:330 (libcaffe2_libtorch.so+0x30eee38)\r\n    #6 torch::jit::InterpreterStateImpl::runAsync(std::vector<c10::IValue, std::allocator<c10::IValue> >&) caffe2/torch/csrc/jit/runtime/interpreter.cpp:723 (libcaffe2_libtorch.so+0x30d1c9a)\r\n    #7 torch::jit::InterpreterState::runAsync(std::vector<c10::IValue, std::allocator<c10::IValue> >&) caffe2/torch/csrc/jit/runtime/interpreter.cpp:844 (libcaffe2_libtorch.so+0x30d1bf7)\r\n    #8 torch::jit::GraphExecutorImplBase::runAsync(std::vector<c10::IValue, std::allocator<c10::IValue> >&, std::function<void (std::function<void ()>)>) caffe2/torch/csrc/jit/runtime/graph_executor.cpp:571 (libcaffe2_libtorch.so+0x2ef4d4b)\r\n    #9 torch::jit::GraphExecutor::runAsync(std::vector<c10::IValue, std::allocator<c10::IValue> >&, std::function<void (std::function<void ()>)>) caffe2/torch/csrc/jit/runtime/graph_executor.cpp:772 (libcaffe2_libtorch.so+0x2ef5951)\r\n    #10 torch::jit::GraphFunction::runAsync(std::vector<c10::IValue, std::allocator<c10::IValue> >&, std::function<void (std::function<void ()>)>) caffe2/torch/csrc/jit/api/function_impl.cpp:45 (libcaffe2_libtorch.so+0x2ed78f3)\r\n```\r\n## To Reproduce\r\n\r\nRun `test_dist_optim` with @mode/dev-tsan.\n\ncc @gmagogsfm",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/58446/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/58446/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/57698",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/57698/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/57698/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/57698/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/57698",
        "id": 876964248,
        "node_id": "MDU6SXNzdWU4NzY5NjQyNDg=",
        "number": 57698,
        "title": "Freezing doesn't remove tuple operations",
        "user": {
            "login": "dreiss",
            "id": 4121,
            "node_id": "MDQ6VXNlcjQxMjE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4121?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dreiss",
            "html_url": "https://github.com/dreiss",
            "followers_url": "https://api.github.com/users/dreiss/followers",
            "following_url": "https://api.github.com/users/dreiss/following{/other_user}",
            "gists_url": "https://api.github.com/users/dreiss/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dreiss/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dreiss/subscriptions",
            "organizations_url": "https://api.github.com/users/dreiss/orgs",
            "repos_url": "https://api.github.com/users/dreiss/repos",
            "events_url": "https://api.github.com/users/dreiss/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dreiss/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1027606656,
                "node_id": "MDU6TGFiZWwxMDI3NjA2NjU2",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20bootcamp",
                "name": "module: bootcamp",
                "color": "f7e101",
                "default": false,
                "description": "We plan to do a full writeup on the issue, and then get someone to do it for onboarding"
            },
            {
                "id": 1150417147,
                "node_id": "MDU6TGFiZWwxMTUwNDE3MTQ3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/good%20first%20issue",
                "name": "good first issue",
                "color": "34c182",
                "default": true,
                "description": ""
            },
            {
                "id": 1622453609,
                "node_id": "MDU6TGFiZWwxNjIyNDUzNjA5",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/OSS%20contribution%20wanted",
                "name": "OSS contribution wanted",
                "color": "0e8a16",
                "default": false,
                "description": "PR from open source contributors welcome to solve this issue."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "FloydHsiu",
            "id": 8503620,
            "node_id": "MDQ6VXNlcjg1MDM2MjA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8503620?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/FloydHsiu",
            "html_url": "https://github.com/FloydHsiu",
            "followers_url": "https://api.github.com/users/FloydHsiu/followers",
            "following_url": "https://api.github.com/users/FloydHsiu/following{/other_user}",
            "gists_url": "https://api.github.com/users/FloydHsiu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/FloydHsiu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/FloydHsiu/subscriptions",
            "organizations_url": "https://api.github.com/users/FloydHsiu/orgs",
            "repos_url": "https://api.github.com/users/FloydHsiu/repos",
            "events_url": "https://api.github.com/users/FloydHsiu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/FloydHsiu/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "FloydHsiu",
                "id": 8503620,
                "node_id": "MDQ6VXNlcjg1MDM2MjA=",
                "avatar_url": "https://avatars.githubusercontent.com/u/8503620?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/FloydHsiu",
                "html_url": "https://github.com/FloydHsiu",
                "followers_url": "https://api.github.com/users/FloydHsiu/followers",
                "following_url": "https://api.github.com/users/FloydHsiu/following{/other_user}",
                "gists_url": "https://api.github.com/users/FloydHsiu/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/FloydHsiu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/FloydHsiu/subscriptions",
                "organizations_url": "https://api.github.com/users/FloydHsiu/orgs",
                "repos_url": "https://api.github.com/users/FloydHsiu/repos",
                "events_url": "https://api.github.com/users/FloydHsiu/events{/privacy}",
                "received_events_url": "https://api.github.com/users/FloydHsiu/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 6,
        "created_at": "2021-05-06T00:25:56Z",
        "updated_at": "2021-05-13T02:08:35Z",
        "closed_at": "2021-05-13T02:08:35Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\nAfter freezing a traced model, I expect all unnecessary tuple operations to be removed, but some remain.\r\n\r\n## To Reproduce\r\n\r\nhttps://colab.research.google.com/gist/dreiss/0414c8e294e482e8a07f98990e7130fc/freezetuple.ipynb\r\n\r\n## Expected behavior\r\n\r\nNo TupleConstruct and TupleUnpack nodes.\r\n\r\n## Environment\r\n\r\nSee notebook.  It reproduces on nightly as well.\r\n\r\n## Additional context\r\n\r\nFreezing is an awesome feature of TorchScript!\n\ncc @gmagogsfm",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/57698/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/57698/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/57387",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/57387/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/57387/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/57387/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/57387",
        "id": 873308600,
        "node_id": "MDU6SXNzdWU4NzMzMDg2MDA=",
        "number": 57387,
        "title": "[JIT] Canonicalize `aten::__is__` and `aten::__isnot__` among boolean inputs",
        "user": {
            "login": "eellison",
            "id": 11477974,
            "node_id": "MDQ6VXNlcjExNDc3OTc0",
            "avatar_url": "https://avatars.githubusercontent.com/u/11477974?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eellison",
            "html_url": "https://github.com/eellison",
            "followers_url": "https://api.github.com/users/eellison/followers",
            "following_url": "https://api.github.com/users/eellison/following{/other_user}",
            "gists_url": "https://api.github.com/users/eellison/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eellison/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eellison/subscriptions",
            "organizations_url": "https://api.github.com/users/eellison/orgs",
            "repos_url": "https://api.github.com/users/eellison/repos",
            "events_url": "https://api.github.com/users/eellison/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eellison/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1027606656,
                "node_id": "MDU6TGFiZWwxMDI3NjA2NjU2",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20bootcamp",
                "name": "module: bootcamp",
                "color": "f7e101",
                "default": false,
                "description": "We plan to do a full writeup on the issue, and then get someone to do it for onboarding"
            },
            {
                "id": 1150417147,
                "node_id": "MDU6TGFiZWwxMTUwNDE3MTQ3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/good%20first%20issue",
                "name": "good first issue",
                "color": "34c182",
                "default": true,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "eellison",
            "id": 11477974,
            "node_id": "MDQ6VXNlcjExNDc3OTc0",
            "avatar_url": "https://avatars.githubusercontent.com/u/11477974?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eellison",
            "html_url": "https://github.com/eellison",
            "followers_url": "https://api.github.com/users/eellison/followers",
            "following_url": "https://api.github.com/users/eellison/following{/other_user}",
            "gists_url": "https://api.github.com/users/eellison/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eellison/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eellison/subscriptions",
            "organizations_url": "https://api.github.com/users/eellison/orgs",
            "repos_url": "https://api.github.com/users/eellison/repos",
            "events_url": "https://api.github.com/users/eellison/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eellison/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "eellison",
                "id": 11477974,
                "node_id": "MDQ6VXNlcjExNDc3OTc0",
                "avatar_url": "https://avatars.githubusercontent.com/u/11477974?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/eellison",
                "html_url": "https://github.com/eellison",
                "followers_url": "https://api.github.com/users/eellison/followers",
                "following_url": "https://api.github.com/users/eellison/following{/other_user}",
                "gists_url": "https://api.github.com/users/eellison/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/eellison/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eellison/subscriptions",
                "organizations_url": "https://api.github.com/users/eellison/orgs",
                "repos_url": "https://api.github.com/users/eellison/repos",
                "events_url": "https://api.github.com/users/eellison/events{/privacy}",
                "received_events_url": "https://api.github.com/users/eellison/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 3,
        "created_at": "2021-04-30T20:57:15Z",
        "updated_at": "2021-05-11T19:21:56Z",
        "closed_at": "2021-05-11T19:21:56Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "## \ud83d\ude80 Feature\r\n\r\nIn python `x is True` and `x == True` have exactly the same semantics, because True and False are global singletons. Generally, having two different operators that do the same thing in the your IR is not desirable because it means passes have to reason about both cases if they want to optimize the pattern. Additionally, optimizations like Common Subexpression Elimination will no trigger.\r\n\r\n```\r\n@torch.jit.script\r\ndef foo(x: bool):\r\n    return x == True, x == True\r\n\r\ntorch._C._jit_pass_cse(foo.graph)\r\ntorch._C._jit_pass_dce(foo.graph)\r\nprint(foo.graph)\r\n```\r\nWill give a graph with a single `aten::eq` node, where as the semantically equivalent \r\n\r\n```\r\n@torch.jit.script\r\ndef foo(x: bool):\r\n    return x  is True, x == True\r\n\r\ntorch._C._jit_pass_cse(foo.graph)\r\ntorch._C._jit_pass_dce(foo.graph)\r\nprint(foo.graph)\r\n```\r\n\r\nWill have two different comparison nodes. This is of particular interest because we have optimizations that optimize through `aten::eq` nodes like: https://github.com/pytorch/pytorch/pull/55926 and https://github.com/pytorch/pytorch/pull/55978, which are being used in [Symbolic Shape Analysis](https://github.com/pytorch/pytorch/issues/54982). \r\n\r\nWe already have an existing pass that runs whenever we emit IR to do similar normalization, we could add this pattern there. https://github.com/pytorch/pytorch/blob/master/torch/csrc/jit/passes/normalize_ops.cpp\r\n\r\n\r\ncc @gmagogsfm",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/57387/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/57387/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/57119",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/57119/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/57119/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/57119/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/57119",
        "id": 869861803,
        "node_id": "MDU6SXNzdWU4Njk4NjE4MDM=",
        "number": 57119,
        "title": "`test_ops.py::TestCommon::test_jit_alias_remapping` is broken for `str` kwargs",
        "user": {
            "login": "pmeier",
            "id": 6849766,
            "node_id": "MDQ6VXNlcjY4NDk3NjY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6849766?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pmeier",
            "html_url": "https://github.com/pmeier",
            "followers_url": "https://api.github.com/users/pmeier/followers",
            "following_url": "https://api.github.com/users/pmeier/following{/other_user}",
            "gists_url": "https://api.github.com/users/pmeier/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pmeier/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pmeier/subscriptions",
            "organizations_url": "https://api.github.com/users/pmeier/orgs",
            "repos_url": "https://api.github.com/users/pmeier/repos",
            "events_url": "https://api.github.com/users/pmeier/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pmeier/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2021-04-28T11:53:40Z",
        "updated_at": "2021-04-30T11:30:44Z",
        "closed_at": "2021-04-30T11:30:44Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\n`test_ops.py::TestCommon::test_jit_alias_remapping` is broken for `str` kwargs:\r\n\r\nhttps://github.com/pytorch/pytorch/blob/77721ee318d6785010144aa4569efb98199e7162/test/test_ops.py#L462-L467\r\n\r\nIn both cases the values are substituted in without modification. `str` values need to be quoted.\r\n\r\n\r\n\n\ncc @gmagogsfm",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/57119/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/57119/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/56676",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/56676/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/56676/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/56676/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/56676",
        "id": 864613860,
        "node_id": "MDU6SXNzdWU4NjQ2MTM4NjA=",
        "number": 56676,
        "title": "`torch.randperm` default dtype is different between eager and TorchScript",
        "user": {
            "login": "gmagogsfm",
            "id": 1817752,
            "node_id": "MDQ6VXNlcjE4MTc3NTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1817752?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gmagogsfm",
            "html_url": "https://github.com/gmagogsfm",
            "followers_url": "https://api.github.com/users/gmagogsfm/followers",
            "following_url": "https://api.github.com/users/gmagogsfm/following{/other_user}",
            "gists_url": "https://api.github.com/users/gmagogsfm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gmagogsfm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gmagogsfm/subscriptions",
            "organizations_url": "https://api.github.com/users/gmagogsfm/orgs",
            "repos_url": "https://api.github.com/users/gmagogsfm/repos",
            "events_url": "https://api.github.com/users/gmagogsfm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gmagogsfm/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 912691507,
                "node_id": "MDU6TGFiZWw5MTI2OTE1MDc=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20internals",
                "name": "module: internals",
                "color": "f7e101",
                "default": false,
                "description": "Related to internal abstractions in c10 and ATen"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "gmagogsfm",
            "id": 1817752,
            "node_id": "MDQ6VXNlcjE4MTc3NTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1817752?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gmagogsfm",
            "html_url": "https://github.com/gmagogsfm",
            "followers_url": "https://api.github.com/users/gmagogsfm/followers",
            "following_url": "https://api.github.com/users/gmagogsfm/following{/other_user}",
            "gists_url": "https://api.github.com/users/gmagogsfm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gmagogsfm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gmagogsfm/subscriptions",
            "organizations_url": "https://api.github.com/users/gmagogsfm/orgs",
            "repos_url": "https://api.github.com/users/gmagogsfm/repos",
            "events_url": "https://api.github.com/users/gmagogsfm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gmagogsfm/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "gmagogsfm",
                "id": 1817752,
                "node_id": "MDQ6VXNlcjE4MTc3NTI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/1817752?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/gmagogsfm",
                "html_url": "https://github.com/gmagogsfm",
                "followers_url": "https://api.github.com/users/gmagogsfm/followers",
                "following_url": "https://api.github.com/users/gmagogsfm/following{/other_user}",
                "gists_url": "https://api.github.com/users/gmagogsfm/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/gmagogsfm/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gmagogsfm/subscriptions",
                "organizations_url": "https://api.github.com/users/gmagogsfm/orgs",
                "repos_url": "https://api.github.com/users/gmagogsfm/repos",
                "events_url": "https://api.github.com/users/gmagogsfm/events{/privacy}",
                "received_events_url": "https://api.github.com/users/gmagogsfm/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 8,
        "created_at": "2021-04-22T07:02:44Z",
        "updated_at": "2021-04-29T00:48:40Z",
        "closed_at": "2021-04-28T23:20:24Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\n`torch.randperm` document claims that when `dtype` arg is not specified, default dtype is set to `torch.int64`. However, this is only true in eager but not in TorchScript.\r\n\r\nIn eager, dtype is set correctly relying on a hack:\r\nhttps://github.com/pytorch/pytorch/blob/57cba8e60116bfff37d10bc2b4596d8c478ffd0a/tools/codegen/api/python.py#L740\r\n\r\nTorchScript didn't replicate this hack, instead it relies on `aten::randperm` kernel to figure out the dtype, causing inconsistency.\r\n\r\n`aten::randperm` kernel uses `TensorOptions` which defaults to `float` when `dtype` is not set:\r\nhttps://github.com/pytorch/pytorch/blob/57cba8e60116bfff37d10bc2b4596d8c478ffd0a/aten/src/ATen/native/TensorFactories.cpp#L883\r\n\r\nI think we should update `aten::randperm` kernel to correctly set dtype when `dtype` arg is not set. \r\n\r\n## To Reproduce\r\n\r\n```\r\nimport torch\r\n\r\n@torch.jit.script\r\ndef fn():\r\n    perm = torch.randperm(2)\r\n    print(\"inferred dtype: %d\" % perm.dtype)\r\n    perm = torch.randperm(2, dtype=torch.int64)\r\n    print(\"dtype with int64 is set: %d\" % perm.dtype)\r\n\r\nfn()\r\n```\r\n\r\n## Expected behavior\r\n\r\nTorchScript would not need a hack and it still produces int64 tensor.\r\n\r\n\r\n\r\ncc @ezyang @bhosmer @smessmer @ljk53 @bdhirsh @ailzhang @gmagogsfm",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/56676/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/56676/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/56162",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/56162/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/56162/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/56162/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/56162",
        "id": 859119083,
        "node_id": "MDU6SXNzdWU4NTkxMTkwODM=",
        "number": 56162,
        "title": "Tracer vs eager mode difference on tensor.shape",
        "user": {
            "login": "shubhambhokare1",
            "id": 32080845,
            "node_id": "MDQ6VXNlcjMyMDgwODQ1",
            "avatar_url": "https://avatars.githubusercontent.com/u/32080845?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shubhambhokare1",
            "html_url": "https://github.com/shubhambhokare1",
            "followers_url": "https://api.github.com/users/shubhambhokare1/followers",
            "following_url": "https://api.github.com/users/shubhambhokare1/following{/other_user}",
            "gists_url": "https://api.github.com/users/shubhambhokare1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shubhambhokare1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shubhambhokare1/subscriptions",
            "organizations_url": "https://api.github.com/users/shubhambhokare1/orgs",
            "repos_url": "https://api.github.com/users/shubhambhokare1/repos",
            "events_url": "https://api.github.com/users/shubhambhokare1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shubhambhokare1/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2021-04-15T17:58:00Z",
        "updated_at": "2021-09-28T17:12:02Z",
        "closed_at": "2021-09-28T17:12:02Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\nIn eager mode, shape values obtained from tensor.shape are python int, so there are treated as different values. However in tracing both are traced as tensors, and then they share same memory. This causes mismatch in final outputs\r\n\r\n## To Reproduce\r\n\r\n```\r\n# Tracer vs Eager mode difference in tensor.shape\r\nimport torch\r\nimport onnxruntime\r\n\r\nclass Model(torch.nn.Module):\r\n    def forward(self, hidden_states):\r\n        batch_size, seq_length = hidden_states.shape[:2]\r\n        real_seq_length = seq_length\r\n        real_seq_length += 2                                            => real_seq_length and seq_legth should have different values\r\n        return real_seq_length + seq_length\r\n\r\n\r\n# Call export\r\n\r\n# hidden_states is tensor of rank 2\r\nhidden_states = torch.randn(2, 3, 5)\r\nmodel = Model()\r\n\r\nimport io\r\nonnx_io = io.BytesIO()\r\ntracemodel = torch.jit.trace(model, (hidden_states, ))\r\ntorch.onnx.export(model, (hidden_states, ), onnx_io, verbose=True)\r\n\r\n# Call onnxruntime runtime and compare outputs on dynamic inputs\r\nort_session = onnxruntime.InferenceSession(onnx_io.getvalue())\r\n\r\nprint(model(hidden_states))\r\nprint(tracemodel(hidden_states))\r\nprint(ort_session.run(None, {\r\n                                ort_session.get_inputs()[0].name: hidden_states.numpy()\r\n                            }))\r\n```\r\n\r\n\r\n## Expected behavior\r\n\r\n**Output in eager mode**\r\n8 (real_seq_length(=3) + seq_length(=5))\r\n\r\n**Output in tracing mode**\r\nShould be 8 but is 10 (real_seq_length(=5) + seq_length(=5)) as tensors share same memory\r\n\r\n**Graph output on exporting ONNX graph**\r\n```\r\ngraph(%0 : Float(2, 3, 5, strides=[15, 5, 1], requires_grad=0, device=cpu)):\r\n  %1 : Long(3, strides=[1], device=cpu) = onnx::Shape(%0)\r\n  %2 : Long(device=cpu) = onnx::Constant[value={1}]()\r\n  %3 : Long(device=cpu) = onnx::Gather[axis=0](%1, %2) # test/onnx/test_m.py:38:0\r\n  %4 : Long(requires_grad=0, device=cpu) = onnx::Constant[value={2}]()\r\n  %5 : Long(requires_grad=0, device=cpu) = onnx::Add(%3, %4) # test/onnx/test_m.py:40:0\r\n  %6 : Long(requires_grad=0, device=cpu) = onnx::Add(%5, %5) # test/onnx/test_m.py:41:0   ===> %5 proves that both seq_length and real_seq_length have same values/memory\r\n  return (%6)\r\n```\r\n\r\ncc @gmagogsfm @houseroad @spandantiwari @lara-hdr @BowenBao @neginraoof @SplitInfinity ",
        "closed_by": {
            "login": "shubhambhokare1",
            "id": 32080845,
            "node_id": "MDQ6VXNlcjMyMDgwODQ1",
            "avatar_url": "https://avatars.githubusercontent.com/u/32080845?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shubhambhokare1",
            "html_url": "https://github.com/shubhambhokare1",
            "followers_url": "https://api.github.com/users/shubhambhokare1/followers",
            "following_url": "https://api.github.com/users/shubhambhokare1/following{/other_user}",
            "gists_url": "https://api.github.com/users/shubhambhokare1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shubhambhokare1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shubhambhokare1/subscriptions",
            "organizations_url": "https://api.github.com/users/shubhambhokare1/orgs",
            "repos_url": "https://api.github.com/users/shubhambhokare1/repos",
            "events_url": "https://api.github.com/users/shubhambhokare1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shubhambhokare1/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/56162/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/56162/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/54873",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/54873/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/54873/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/54873/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/54873",
        "id": 843382944,
        "node_id": "MDU6SXNzdWU4NDMzODI5NDQ=",
        "number": 54873,
        "title": "`torch.jit.isinstance` is overly admissive when comparing container types in eager mode",
        "user": {
            "login": "ansley",
            "id": 59447410,
            "node_id": "MDQ6VXNlcjU5NDQ3NDEw",
            "avatar_url": "https://avatars.githubusercontent.com/u/59447410?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ansley",
            "html_url": "https://github.com/ansley",
            "followers_url": "https://api.github.com/users/ansley/followers",
            "following_url": "https://api.github.com/users/ansley/following{/other_user}",
            "gists_url": "https://api.github.com/users/ansley/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ansley/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ansley/subscriptions",
            "organizations_url": "https://api.github.com/users/ansley/orgs",
            "repos_url": "https://api.github.com/users/ansley/repos",
            "events_url": "https://api.github.com/users/ansley/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ansley/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 2677225186,
                "node_id": "MDU6TGFiZWwyNjc3MjI1MTg2",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/TSRootCause:Unclassified",
                "name": "TSRootCause:Unclassified",
                "color": "A2A3EC",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "ansley",
            "id": 59447410,
            "node_id": "MDQ6VXNlcjU5NDQ3NDEw",
            "avatar_url": "https://avatars.githubusercontent.com/u/59447410?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ansley",
            "html_url": "https://github.com/ansley",
            "followers_url": "https://api.github.com/users/ansley/followers",
            "following_url": "https://api.github.com/users/ansley/following{/other_user}",
            "gists_url": "https://api.github.com/users/ansley/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ansley/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ansley/subscriptions",
            "organizations_url": "https://api.github.com/users/ansley/orgs",
            "repos_url": "https://api.github.com/users/ansley/repos",
            "events_url": "https://api.github.com/users/ansley/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ansley/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "ansley",
                "id": 59447410,
                "node_id": "MDQ6VXNlcjU5NDQ3NDEw",
                "avatar_url": "https://avatars.githubusercontent.com/u/59447410?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ansley",
                "html_url": "https://github.com/ansley",
                "followers_url": "https://api.github.com/users/ansley/followers",
                "following_url": "https://api.github.com/users/ansley/following{/other_user}",
                "gists_url": "https://api.github.com/users/ansley/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ansley/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ansley/subscriptions",
                "organizations_url": "https://api.github.com/users/ansley/orgs",
                "repos_url": "https://api.github.com/users/ansley/repos",
                "events_url": "https://api.github.com/users/ansley/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ansley/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 2,
        "created_at": "2021-03-29T13:41:37Z",
        "updated_at": "2021-08-12T23:12:54Z",
        "closed_at": "2021-08-12T23:12:54Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\n`torch.jit.isinstance` will falsely return `True` in eager when comparing any two container types that are the same, even if those types don't have the same subscript. My guess is that we silently transform `List[T]` into `list` for the eager mode check, which is not correct. The example below demonstrates that `torch.jit.isinstance` recognizes `List[T1]` as an instance of `List[T2]` since both types are `List`s, even if `T1` and `T2` are invariant.\r\n\r\nThis is not a problem in script mode.\r\n\r\n## Example\r\n\r\n```python\r\nimport torch\r\nfrom typing import List\r\n\r\ndef fn():\r\n    x: List[torch.Tensor] = []\r\n    if torch.jit.isinstance(x, List[int]):\r\n        print(\"Wrong!\")\r\n    else:\r\n        print(\"Right\")\r\n    return x\r\n\r\nscripted = torch.jit.script(fn)\r\nscripted()                 # prints \"Right\"\r\nfn()                       # prints \"Wrong!\"\r\n```\n\ncc @gmagogsfm",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/54873/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/54873/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/54783",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/54783/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/54783/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/54783/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/54783",
        "id": 842173797,
        "node_id": "MDU6SXNzdWU4NDIxNzM3OTc=",
        "number": 54783,
        "title": "RuntimeError: kind_.is_prim()INTERNAL ASSERT FAILED at \"../torch/csrc/jit/ir/ir.cpp\":1110 from autodiff",
        "user": {
            "login": "Krovatkin",
            "id": 5086322,
            "node_id": "MDQ6VXNlcjUwODYzMjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5086322?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Krovatkin",
            "html_url": "https://github.com/Krovatkin",
            "followers_url": "https://api.github.com/users/Krovatkin/followers",
            "following_url": "https://api.github.com/users/Krovatkin/following{/other_user}",
            "gists_url": "https://api.github.com/users/Krovatkin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Krovatkin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Krovatkin/subscriptions",
            "organizations_url": "https://api.github.com/users/Krovatkin/orgs",
            "repos_url": "https://api.github.com/users/Krovatkin/repos",
            "events_url": "https://api.github.com/users/Krovatkin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Krovatkin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "Krovatkin",
            "id": 5086322,
            "node_id": "MDQ6VXNlcjUwODYzMjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5086322?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Krovatkin",
            "html_url": "https://github.com/Krovatkin",
            "followers_url": "https://api.github.com/users/Krovatkin/followers",
            "following_url": "https://api.github.com/users/Krovatkin/following{/other_user}",
            "gists_url": "https://api.github.com/users/Krovatkin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Krovatkin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Krovatkin/subscriptions",
            "organizations_url": "https://api.github.com/users/Krovatkin/orgs",
            "repos_url": "https://api.github.com/users/Krovatkin/repos",
            "events_url": "https://api.github.com/users/Krovatkin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Krovatkin/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "Krovatkin",
                "id": 5086322,
                "node_id": "MDQ6VXNlcjUwODYzMjI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/5086322?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/Krovatkin",
                "html_url": "https://github.com/Krovatkin",
                "followers_url": "https://api.github.com/users/Krovatkin/followers",
                "following_url": "https://api.github.com/users/Krovatkin/following{/other_user}",
                "gists_url": "https://api.github.com/users/Krovatkin/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/Krovatkin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Krovatkin/subscriptions",
                "organizations_url": "https://api.github.com/users/Krovatkin/orgs",
                "repos_url": "https://api.github.com/users/Krovatkin/repos",
                "events_url": "https://api.github.com/users/Krovatkin/events{/privacy}",
                "received_events_url": "https://api.github.com/users/Krovatkin/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 3,
        "created_at": "2021-03-26T17:37:54Z",
        "updated_at": "2021-04-16T21:08:00Z",
        "closed_at": "2021-04-16T21:08:00Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\n```cpp\r\nimport torch\r\n\r\n@torch.jit.script\r\ndef method1(x, weight, b1, b2):\r\n    bias = b1 * b2\r\n    return torch.nn.functional.linear(x, weight, bias)\r\n\r\nM = 10\r\nK = 10\r\nN = 10\r\n\r\nx = torch.rand(M, K, requires_grad=True)\r\nweight = torch.rand(K, N, requires_grad=True)\r\nb1 = torch.rand(M, N, requires_grad=True)\r\nb2 = torch.rand(M, N, requires_grad=True)\r\n\r\nmethod1(x, weight, b1, b2)\r\nmethod1(x, weight, b1, b2)\r\n```\r\n\r\nproduces an error: `RuntimeError: kind_.is_prim()INTERNAL ASSERT FAILED at \"../torch/csrc/jit/ir/ir.cpp\":1110, please report a bug to PyTorch. Only prim ops are allowed to not have a registered operator but aten::mul doesn't have one either. We don't know if this op has side effects.`\r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior:\r\n\r\n1. Run the test case above\r\n\r\n\r\n\r\n## Expected behavior\r\n\r\nCode runs and produces no errors\r\n\r\n## Environment\r\n\r\n - PyTorch Version: 1.8+\r\n\r\n## Additional context\r\n\r\n\r\ncc @gmagogsfm",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/54783/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/54783/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/54448",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/54448/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/54448/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/54448/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/54448",
        "id": 838095280,
        "node_id": "MDU6SXNzdWU4MzgwOTUyODA=",
        "number": 54448,
        "title": "Export torch::jit::toIValue",
        "user": {
            "login": "cpuhrsch",
            "id": 1716488,
            "node_id": "MDQ6VXNlcjE3MTY0ODg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1716488?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cpuhrsch",
            "html_url": "https://github.com/cpuhrsch",
            "followers_url": "https://api.github.com/users/cpuhrsch/followers",
            "following_url": "https://api.github.com/users/cpuhrsch/following{/other_user}",
            "gists_url": "https://api.github.com/users/cpuhrsch/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cpuhrsch/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cpuhrsch/subscriptions",
            "organizations_url": "https://api.github.com/users/cpuhrsch/orgs",
            "repos_url": "https://api.github.com/users/cpuhrsch/repos",
            "events_url": "https://api.github.com/users/cpuhrsch/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cpuhrsch/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2021-03-22T20:46:00Z",
        "updated_at": "2021-03-23T00:18:53Z",
        "closed_at": "2021-03-23T00:18:53Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "## \ud83d\ude80 Feature\r\nI found ```torch::jit::toIValue(pybind11::handle, std::shared_ptr<c10::Type> const&, c10::optional<int>)``` exceedingly useful in [converting a Python object to an IValue](https://github.com/pytorch/nestedtensor/blob/807ad4d72332355fd1670003b180865e8d0fcc0d/nestedtensor/csrc/py_utils.h), but [recent changes](https://github.com/pytorch/pytorch/pull/48840) moved the definition from the header into a cpp file and didn't mark the symbol as exported.\r\n\r\n## Motivation\r\n\r\nDetermining wether a Python object is an IValue and converting it to such is a nice utility function to have even outside of core PyTorch. \r\n\r\n## Pitch\r\n\r\nLet's export the symbol.\r\n\r\n## Alternatives\r\n\r\nAlternatively, I could also copy-paste all code and all dependents, if there are concerns around binary size or others.\r\n\r\n## Additional context\r\n\r\n- [Pull request that implements this feature](https://github.com/pytorch/pytorch/pull/54449)\r\n- Other [functions within the public header pybind_utils.h](https://github.com/pytorch/pytorch/blob/master/torch/csrc/jit/python/pybind_utils.h#L503) are also dependent on this hidden symbol.\r\n\r\ncc @malfet \r\n\r\ncc @gmagogsfm",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/54448/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/54448/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/54420",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/54420/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/54420/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/54420/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/54420",
        "id": 837796968,
        "node_id": "MDU6SXNzdWU4Mzc3OTY5Njg=",
        "number": 54420,
        "title": "Unable to print gc.get_objects() with pytorch",
        "user": {
            "login": "NickAJScott",
            "id": 38157820,
            "node_id": "MDQ6VXNlcjM4MTU3ODIw",
            "avatar_url": "https://avatars.githubusercontent.com/u/38157820?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/NickAJScott",
            "html_url": "https://github.com/NickAJScott",
            "followers_url": "https://api.github.com/users/NickAJScott/followers",
            "following_url": "https://api.github.com/users/NickAJScott/following{/other_user}",
            "gists_url": "https://api.github.com/users/NickAJScott/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/NickAJScott/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/NickAJScott/subscriptions",
            "organizations_url": "https://api.github.com/users/NickAJScott/orgs",
            "repos_url": "https://api.github.com/users/NickAJScott/repos",
            "events_url": "https://api.github.com/users/NickAJScott/events{/privacy}",
            "received_events_url": "https://api.github.com/users/NickAJScott/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 914046705,
                "node_id": "MDU6TGFiZWw5MTQwNDY3MDU=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20printing",
                "name": "module: printing",
                "color": "f7e101",
                "default": false,
                "description": "Issues related to the printing format of tensors"
            },
            {
                "id": 1027606656,
                "node_id": "MDU6TGFiZWwxMDI3NjA2NjU2",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20bootcamp",
                "name": "module: bootcamp",
                "color": "f7e101",
                "default": false,
                "description": "We plan to do a full writeup on the issue, and then get someone to do it for onboarding"
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            },
            {
                "id": 2203967172,
                "node_id": "MDU6TGFiZWwyMjAzOTY3MTcy",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/days",
                "name": "days",
                "color": "77f497",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "gmagogsfm",
            "id": 1817752,
            "node_id": "MDQ6VXNlcjE4MTc3NTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1817752?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gmagogsfm",
            "html_url": "https://github.com/gmagogsfm",
            "followers_url": "https://api.github.com/users/gmagogsfm/followers",
            "following_url": "https://api.github.com/users/gmagogsfm/following{/other_user}",
            "gists_url": "https://api.github.com/users/gmagogsfm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gmagogsfm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gmagogsfm/subscriptions",
            "organizations_url": "https://api.github.com/users/gmagogsfm/orgs",
            "repos_url": "https://api.github.com/users/gmagogsfm/repos",
            "events_url": "https://api.github.com/users/gmagogsfm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gmagogsfm/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "gmagogsfm",
                "id": 1817752,
                "node_id": "MDQ6VXNlcjE4MTc3NTI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/1817752?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/gmagogsfm",
                "html_url": "https://github.com/gmagogsfm",
                "followers_url": "https://api.github.com/users/gmagogsfm/followers",
                "following_url": "https://api.github.com/users/gmagogsfm/following{/other_user}",
                "gists_url": "https://api.github.com/users/gmagogsfm/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/gmagogsfm/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gmagogsfm/subscriptions",
                "organizations_url": "https://api.github.com/users/gmagogsfm/orgs",
                "repos_url": "https://api.github.com/users/gmagogsfm/repos",
                "events_url": "https://api.github.com/users/gmagogsfm/events{/privacy}",
                "received_events_url": "https://api.github.com/users/gmagogsfm/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 7,
        "created_at": "2021-03-22T14:52:48Z",
        "updated_at": "2021-08-11T16:42:06Z",
        "closed_at": "2021-08-11T16:42:06Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Seems to be a similar issue to [https://github.com/pytorch/pytorch/issues/19351](this) which was fixed by adding \\_\\_file\\_\\_ to the ops class: https://github.com/pytorch/pytorch/pull/21888\r\n\r\ngc.get_objects()\r\n```\r\nTraceback (most recent call last):\r\n  File \"/venv/lib/python3.8/site-packages/_pydevd_bundle/pydevd_exec2.py\", line 3, in Exec\r\n    exec(exp, global_vars, local_vars)\r\n  File \"<input>\", line 1, in <module>\r\n  File \"<frozen importlib._bootstrap>\", line 302, in _module_repr\r\n  File \"<frozen importlib._bootstrap>\", line 295, in _module_repr\r\n  File \"/venv/lib/python3.8/site-packages/torch/_classes.py\", line 10, in __getattr__\r\n    proxy = torch._C._get_custom_class_python_wrapper(self.name, attr)\r\nRuntimeError: Tried to instantiate class '__file__.__file__', but it does not exist! Ensure that it is registered via torch::class_\r\n\r\n```\n\ncc @gmagogsfm",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/54420/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/54420/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/54381",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/54381/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/54381/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/54381/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/54381",
        "id": 836965281,
        "node_id": "MDU6SXNzdWU4MzY5NjUyODE=",
        "number": 54381,
        "title": "JIT CUDA linalg.pinv and torch.pinverse tests are failing on pytorch_linux_xenial_cuda9_2_cudnn7_py3_gcc7_test",
        "user": {
            "login": "mruberry",
            "id": 38511765,
            "node_id": "MDQ6VXNlcjM4NTExNzY1",
            "avatar_url": "https://avatars.githubusercontent.com/u/38511765?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mruberry",
            "html_url": "https://github.com/mruberry",
            "followers_url": "https://api.github.com/users/mruberry/followers",
            "following_url": "https://api.github.com/users/mruberry/following{/other_user}",
            "gists_url": "https://api.github.com/users/mruberry/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mruberry/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mruberry/subscriptions",
            "organizations_url": "https://api.github.com/users/mruberry/orgs",
            "repos_url": "https://api.github.com/users/mruberry/repos",
            "events_url": "https://api.github.com/users/mruberry/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mruberry/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 443484135,
                "node_id": "MDU6TGFiZWw0NDM0ODQxMzU=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/high%20priority",
                "name": "high priority",
                "color": "F22613",
                "default": false,
                "description": null
            },
            {
                "id": 466131885,
                "node_id": "MDU6TGFiZWw0NjYxMzE4ODU=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triage%20review",
                "name": "triage review",
                "color": "cc317c",
                "default": false,
                "description": ""
            },
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1504141947,
                "node_id": "MDU6TGFiZWwxNTA0MTQxOTQ3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20linear%20algebra",
                "name": "module: linear algebra",
                "color": "f7e101",
                "default": false,
                "description": "Issues related to specialized linear algebra operations in PyTorch; includes matrix multiply matmul"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "IvanYashchuk",
            "id": 19621411,
            "node_id": "MDQ6VXNlcjE5NjIxNDEx",
            "avatar_url": "https://avatars.githubusercontent.com/u/19621411?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/IvanYashchuk",
            "html_url": "https://github.com/IvanYashchuk",
            "followers_url": "https://api.github.com/users/IvanYashchuk/followers",
            "following_url": "https://api.github.com/users/IvanYashchuk/following{/other_user}",
            "gists_url": "https://api.github.com/users/IvanYashchuk/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/IvanYashchuk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/IvanYashchuk/subscriptions",
            "organizations_url": "https://api.github.com/users/IvanYashchuk/orgs",
            "repos_url": "https://api.github.com/users/IvanYashchuk/repos",
            "events_url": "https://api.github.com/users/IvanYashchuk/events{/privacy}",
            "received_events_url": "https://api.github.com/users/IvanYashchuk/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "IvanYashchuk",
                "id": 19621411,
                "node_id": "MDQ6VXNlcjE5NjIxNDEx",
                "avatar_url": "https://avatars.githubusercontent.com/u/19621411?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/IvanYashchuk",
                "html_url": "https://github.com/IvanYashchuk",
                "followers_url": "https://api.github.com/users/IvanYashchuk/followers",
                "following_url": "https://api.github.com/users/IvanYashchuk/following{/other_user}",
                "gists_url": "https://api.github.com/users/IvanYashchuk/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/IvanYashchuk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/IvanYashchuk/subscriptions",
                "organizations_url": "https://api.github.com/users/IvanYashchuk/orgs",
                "repos_url": "https://api.github.com/users/IvanYashchuk/repos",
                "events_url": "https://api.github.com/users/IvanYashchuk/events{/privacy}",
                "received_events_url": "https://api.github.com/users/IvanYashchuk/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 4,
        "created_at": "2021-03-21T02:15:48Z",
        "updated_at": "2021-03-31T02:30:02Z",
        "closed_at": "2021-03-31T02:30:02Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "See https://app.circleci.com/pipelines/github/pytorch/pytorch/287971/workflows/3566b7af-c730-40f3-bbe9-81062df4eb35/jobs/11696712 for an example. Relevant snippets:\r\n\r\n```\r\ntest_variant_consistency_jit_linalg_pinv_cuda_float64 - TestCommonCUDA\r\ntest_ops.py\r\nTraceback (most recent call last):\r\n  File \"/opt/conda/lib/python3.6/site-packages/torch/testing/_internal/common_utils.py\", line 955, in wrapper\r\n    method(*args, **kwargs)\r\n  File \"/opt/conda/lib/python3.6/site-packages/torch/testing/_internal/common_device_type.py\", line 292, in instantiated_test\r\n    raise rte\r\n  File \"/opt/conda/lib/python3.6/site-packages/torch/testing/_internal/common_device_type.py\", line 287, in instantiated_test\r\n    result = test_fn(self, *args)\r\n  File \"/opt/conda/lib/python3.6/site-packages/torch/testing/_internal/common_device_type.py\", line 584, in dep_fn\r\n    return fn(slf, device, *args, **kwargs)\r\n  File \"/opt/conda/lib/python3.6/site-packages/torch/testing/_internal/common_device_type.py\", line 584, in dep_fn\r\n    return fn(slf, device, *args, **kwargs)\r\n  File \"/opt/conda/lib/python3.6/site-packages/torch/testing/_internal/common_device_type.py\", line 584, in dep_fn\r\n    return fn(slf, device, *args, **kwargs)\r\n  File \"/opt/conda/lib/python3.6/site-packages/torch/testing/_internal/common_device_type.py\", line 265, in test_wrapper\r\n    return test(*args, **kwargs)\r\n  File \"test_ops.py\", line 317, in test_variant_consistency_jit\r\n    no_grad=not test_backward)\r\n  File \"/opt/conda/lib/python3.6/site-packages/torch/testing/_internal/common_jit.py\", line 78, in check_against_reference\r\n    outputs_test = output_func(self.runAndSaveRNG(func, recording_inputs, kwargs))\r\n  File \"/opt/conda/lib/python3.6/site-packages/torch/testing/_internal/common_jit.py\", line 130, in runAndSaveRNG\r\n    results = func(*inputs, **kwargs)\r\n  File \"/opt/conda/lib/python3.6/site-packages/torch/testing/_internal/jit_metaprogramming_utils.py\", line 302, in script_fn\r\n    self.assertExportImport(fn.graph, tensors)\r\n  File \"/opt/conda/lib/python3.6/site-packages/torch/testing/_internal/common_jit.py\", line 118, in assertExportImport\r\n    self.assertExportImportModule(m, inputs)\r\n  File \"/opt/conda/lib/python3.6/site-packages/torch/testing/_internal/common_jit.py\", line 123, in assertExportImportModule\r\n    b = self.runAndSaveRNG(m_import, inputs)\r\n  File \"/opt/conda/lib/python3.6/site-packages/torch/testing/_internal/common_jit.py\", line 130, in runAndSaveRNG\r\n    results = func(*inputs, **kwargs)\r\n  File \"/opt/conda/lib/python3.6/site-packages/torch/nn/modules/module.py\", line 1015, in _call_impl\r\n    return forward_call(*input, **kwargs)\r\n  File \"/opt/conda/lib/python3.6/site-packages/torch/testing/_internal/common_utils.py\", line 134, in prof_meth_call\r\n    return prof_callable(meth_call, *args, **kwargs)\r\n  File \"/opt/conda/lib/python3.6/site-packages/torch/testing/_internal/common_utils.py\", line 128, in prof_callable\r\n    return callable(*args, **kwargs)\r\nRuntimeError: The following operation failed in the TorchScript interpreter.\r\nTraceback of TorchScript, serialized code (most recent call last):\r\n  File \"code/__torch__.py\", line 7, in forward\r\n  def forward(self: __torch__.PlaceholderModule,\r\n    i0: Tensor) -> Tensor:\r\n    _0 = torch.linalg_pinv(i0, 1.0000000000000001e-15, False)\r\n         ~~~~~~~~~~~~~~~~~ <--- HERE\r\n    return _0\r\n\r\nTraceback of TorchScript, original code (most recent call last):\r\n  File \"<string>\", line 3, in forward\r\n\r\ndef the_method(i0):\r\n    return torch.linalg.pinv(i0)\r\n           ~~~~~~~~~~~~~~~~~ <--- HERE\r\nRuntimeError: magma: The value of work_size(-9223372036854775808) is too large to fit into a magma_int_t (4 bytes)\r\n```\r\n\r\n```\r\ntest_variant_consistency_jit_pinverse_cuda_float64 - TestCommonCUDA\r\ntest_ops.py\r\nTraceback (most recent call last):\r\n  File \"/opt/conda/lib/python3.6/site-packages/torch/testing/_internal/common_utils.py\", line 955, in wrapper\r\n    method(*args, **kwargs)\r\n  File \"/opt/conda/lib/python3.6/site-packages/torch/testing/_internal/common_device_type.py\", line 292, in instantiated_test\r\n    raise rte\r\n  File \"/opt/conda/lib/python3.6/site-packages/torch/testing/_internal/common_device_type.py\", line 287, in instantiated_test\r\n    result = test_fn(self, *args)\r\n  File \"/opt/conda/lib/python3.6/site-packages/torch/testing/_internal/common_device_type.py\", line 584, in dep_fn\r\n    return fn(slf, device, *args, **kwargs)\r\n  File \"/opt/conda/lib/python3.6/site-packages/torch/testing/_internal/common_device_type.py\", line 584, in dep_fn\r\n    return fn(slf, device, *args, **kwargs)\r\n  File \"/opt/conda/lib/python3.6/site-packages/torch/testing/_internal/common_device_type.py\", line 584, in dep_fn\r\n    return fn(slf, device, *args, **kwargs)\r\n  File \"/opt/conda/lib/python3.6/site-packages/torch/testing/_internal/common_device_type.py\", line 265, in test_wrapper\r\n    return test(*args, **kwargs)\r\n  File \"test_ops.py\", line 317, in test_variant_consistency_jit\r\n    no_grad=not test_backward)\r\n  File \"/opt/conda/lib/python3.6/site-packages/torch/testing/_internal/common_jit.py\", line 78, in check_against_reference\r\n    outputs_test = output_func(self.runAndSaveRNG(func, recording_inputs, kwargs))\r\n  File \"/opt/conda/lib/python3.6/site-packages/torch/testing/_internal/common_jit.py\", line 130, in runAndSaveRNG\r\n    results = func(*inputs, **kwargs)\r\n  File \"/opt/conda/lib/python3.6/site-packages/torch/testing/_internal/jit_metaprogramming_utils.py\", line 302, in script_fn\r\n    self.assertExportImport(fn.graph, tensors)\r\n  File \"/opt/conda/lib/python3.6/site-packages/torch/testing/_internal/common_jit.py\", line 118, in assertExportImport\r\n    self.assertExportImportModule(m, inputs)\r\n  File \"/opt/conda/lib/python3.6/site-packages/torch/testing/_internal/common_jit.py\", line 122, in assertExportImportModule\r\n    a = self.runAndSaveRNG(m, inputs)\r\n  File \"/opt/conda/lib/python3.6/site-packages/torch/testing/_internal/common_jit.py\", line 130, in runAndSaveRNG\r\n    results = func(*inputs, **kwargs)\r\n  File \"/opt/conda/lib/python3.6/site-packages/torch/testing/_internal/common_utils.py\", line 131, in prof_func_call\r\n    return prof_callable(func_call, *args, **kwargs)\r\n  File \"/opt/conda/lib/python3.6/site-packages/torch/testing/_internal/common_utils.py\", line 128, in prof_callable\r\n    return callable(*args, **kwargs)\r\nRuntimeError: The following operation failed in the TorchScript interpreter.\r\nTraceback of TorchScript (most recent call last):\r\n  File \"<string>\", line 3, in forward\r\n\r\ndef the_method(i0):\r\n    return torch.pinverse(i0)\r\n           ~~~~~~~~~~~~~~ <--- HERE\r\nRuntimeError: magma: The value of work_size(-9223372036854775808) is too large to fit into a magma_int_t (4 bytes)\r\n```\n\ncc @ezyang @gchanan @zou3519 @bdhirsh @jbschlosser @anjali411 @jianyuh @nikitaved @pearu @mruberry @heitorschueroff @walterddr @IvanYashchuk @gmagogsfm",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/54381/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/54381/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/54188",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/54188/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/54188/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/54188/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/54188",
        "id": 834012875,
        "node_id": "MDU6SXNzdWU4MzQwMTI4NzU=",
        "number": 54188,
        "title": "[JIT] Provide an API to turn on and off JIT logging",
        "user": {
            "login": "ZolotukhinM",
            "id": 4588111,
            "node_id": "MDQ6VXNlcjQ1ODgxMTE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4588111?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ZolotukhinM",
            "html_url": "https://github.com/ZolotukhinM",
            "followers_url": "https://api.github.com/users/ZolotukhinM/followers",
            "following_url": "https://api.github.com/users/ZolotukhinM/following{/other_user}",
            "gists_url": "https://api.github.com/users/ZolotukhinM/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ZolotukhinM/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ZolotukhinM/subscriptions",
            "organizations_url": "https://api.github.com/users/ZolotukhinM/orgs",
            "repos_url": "https://api.github.com/users/ZolotukhinM/repos",
            "events_url": "https://api.github.com/users/ZolotukhinM/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ZolotukhinM/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1027606656,
                "node_id": "MDU6TGFiZWwxMDI3NjA2NjU2",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20bootcamp",
                "name": "module: bootcamp",
                "color": "f7e101",
                "default": false,
                "description": "We plan to do a full writeup on the issue, and then get someone to do it for onboarding"
            },
            {
                "id": 1150417147,
                "node_id": "MDU6TGFiZWwxMTUwNDE3MTQ3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/good%20first%20issue",
                "name": "good first issue",
                "color": "34c182",
                "default": true,
                "description": ""
            },
            {
                "id": 1622453609,
                "node_id": "MDU6TGFiZWwxNjIyNDUzNjA5",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/OSS%20contribution%20wanted",
                "name": "OSS contribution wanted",
                "color": "0e8a16",
                "default": false,
                "description": "PR from open source contributors welcome to solve this issue."
            },
            {
                "id": 2203967172,
                "node_id": "MDU6TGFiZWwyMjAzOTY3MTcy",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/days",
                "name": "days",
                "color": "77f497",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2021-03-17T17:19:42Z",
        "updated_at": "2021-06-21T23:12:46Z",
        "closed_at": "2021-06-21T23:12:46Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## \ud83d\ude80 Feature\r\nProvide an API to turn on and off JIT logging, which is currently controlled by the env variable `PYTORCH_JIT_LOG_LEVEL`.\r\n\r\n## Motivation\r\nCurrently turning logging on and off is done via the env variable and we only check it once and then cache the result - that makes it impossible to change the logging setting afterwards. It would be handy to be able to turn it on and off as many time as we'd like to pinpoint places where we need logs.\r\n\r\n## Code Pointers\r\n\r\nThe relevant code is located in two files:\r\n * [torch/csrc/jit/jit_log.h](https://github.com/pytorch/pytorch/blob/master/torch/csrc/jit/jit_log.h)\r\n * [torch/csrc/jit/jit_log.cpp](https://github.com/pytorch/pytorch/blob/master/torch/csrc/jit/jit_log.cpp)\r\n\r\ncc @gmagogsfm @Krovatkin ",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/54188/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/54188/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/54182",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/54182/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/54182/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/54182/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/54182",
        "id": 834004484,
        "node_id": "MDU6SXNzdWU4MzQwMDQ0ODQ=",
        "number": 54182,
        "title": "[JIT] Provide an API to choose a different output stream for `PYTORCH_JIT_LOG_LEVEL`",
        "user": {
            "login": "ZolotukhinM",
            "id": 4588111,
            "node_id": "MDQ6VXNlcjQ1ODgxMTE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4588111?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ZolotukhinM",
            "html_url": "https://github.com/ZolotukhinM",
            "followers_url": "https://api.github.com/users/ZolotukhinM/followers",
            "following_url": "https://api.github.com/users/ZolotukhinM/following{/other_user}",
            "gists_url": "https://api.github.com/users/ZolotukhinM/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ZolotukhinM/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ZolotukhinM/subscriptions",
            "organizations_url": "https://api.github.com/users/ZolotukhinM/orgs",
            "repos_url": "https://api.github.com/users/ZolotukhinM/repos",
            "events_url": "https://api.github.com/users/ZolotukhinM/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ZolotukhinM/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1027606656,
                "node_id": "MDU6TGFiZWwxMDI3NjA2NjU2",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20bootcamp",
                "name": "module: bootcamp",
                "color": "f7e101",
                "default": false,
                "description": "We plan to do a full writeup on the issue, and then get someone to do it for onboarding"
            },
            {
                "id": 1150417147,
                "node_id": "MDU6TGFiZWwxMTUwNDE3MTQ3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/good%20first%20issue",
                "name": "good first issue",
                "color": "34c182",
                "default": true,
                "description": ""
            },
            {
                "id": 1622453609,
                "node_id": "MDU6TGFiZWwxNjIyNDUzNjA5",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/OSS%20contribution%20wanted",
                "name": "OSS contribution wanted",
                "color": "0e8a16",
                "default": false,
                "description": "PR from open source contributors welcome to solve this issue."
            },
            {
                "id": 2203967172,
                "node_id": "MDU6TGFiZWwyMjAzOTY3MTcy",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/days",
                "name": "days",
                "color": "77f497",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 12,
        "created_at": "2021-03-17T17:09:42Z",
        "updated_at": "2021-10-01T06:26:35Z",
        "closed_at": "2021-10-01T06:26:35Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## \ud83d\ude80 Feature\r\nProvide an API to choose a different output stream for `PYTORCH_JIT_LOG_LEVEL`, which by default is stderr.\r\n\r\n## Motivation\r\n\r\nThe current default (stderr) makes it cumbersome to turn on logging in python notebooks. An ability to use stdout or another output stream should help with this issue.\r\n\r\n## Code Pointers\r\n\r\nThe relevant code is located in two files:\r\n * [torch/csrc/jit/jit_log.h](https://github.com/pytorch/pytorch/blob/master/torch/csrc/jit/jit_log.h)\r\n * [torch/csrc/jit/jit_log.cpp](https://github.com/pytorch/pytorch/blob/master/torch/csrc/jit/jit_log.cpp)\r\n\r\ncc @gmagogsfm, @Krovatkin",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/54182/reactions",
            "total_count": 2,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 2,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/54182/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/54040",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/54040/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/54040/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/54040/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/54040",
        "id": 832327308,
        "node_id": "MDU6SXNzdWU4MzIzMjczMDg=",
        "number": 54040,
        "title": "autodiff should NOT output grad_inputs for inputs which doesn't require_grad",
        "user": {
            "login": "jjsjann123",
            "id": 3709243,
            "node_id": "MDQ6VXNlcjM3MDkyNDM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3709243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jjsjann123",
            "html_url": "https://github.com/jjsjann123",
            "followers_url": "https://api.github.com/users/jjsjann123/followers",
            "following_url": "https://api.github.com/users/jjsjann123/following{/other_user}",
            "gists_url": "https://api.github.com/users/jjsjann123/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jjsjann123/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jjsjann123/subscriptions",
            "organizations_url": "https://api.github.com/users/jjsjann123/orgs",
            "repos_url": "https://api.github.com/users/jjsjann123/repos",
            "events_url": "https://api.github.com/users/jjsjann123/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jjsjann123/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "Krovatkin",
            "id": 5086322,
            "node_id": "MDQ6VXNlcjUwODYzMjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5086322?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Krovatkin",
            "html_url": "https://github.com/Krovatkin",
            "followers_url": "https://api.github.com/users/Krovatkin/followers",
            "following_url": "https://api.github.com/users/Krovatkin/following{/other_user}",
            "gists_url": "https://api.github.com/users/Krovatkin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Krovatkin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Krovatkin/subscriptions",
            "organizations_url": "https://api.github.com/users/Krovatkin/orgs",
            "repos_url": "https://api.github.com/users/Krovatkin/repos",
            "events_url": "https://api.github.com/users/Krovatkin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Krovatkin/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "Krovatkin",
                "id": 5086322,
                "node_id": "MDQ6VXNlcjUwODYzMjI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/5086322?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/Krovatkin",
                "html_url": "https://github.com/Krovatkin",
                "followers_url": "https://api.github.com/users/Krovatkin/followers",
                "following_url": "https://api.github.com/users/Krovatkin/following{/other_user}",
                "gists_url": "https://api.github.com/users/Krovatkin/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/Krovatkin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Krovatkin/subscriptions",
                "organizations_url": "https://api.github.com/users/Krovatkin/orgs",
                "repos_url": "https://api.github.com/users/Krovatkin/repos",
                "events_url": "https://api.github.com/users/Krovatkin/events{/privacy}",
                "received_events_url": "https://api.github.com/users/Krovatkin/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2021-03-16T01:27:51Z",
        "updated_at": "2021-04-08T10:17:06Z",
        "closed_at": "2021-04-08T10:17:06Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "## \ud83d\ude80 Feature\r\n\r\nautodiff in PyTorch JIT construct backward graph for DifferentiableGraph without considering requires_grad on inputs. This ended up with wasting computation to produce extra grad_inputs that is not used.\r\n\r\n## Motivation\r\n\r\nExtra computation is not idea. We observe the problem in mask used in attention used by NLP networks, where the extra grad_inputs computed ended up as reductions.\r\n\r\n## Pitch\r\n\r\nWe should construct/optimize backward graph based on requires_grad flag on inputs. With @t-vi's PR: #49299, we are guarding requires_grad already and we should be able to use the mask to trim dummy grad_input that is not needed.\r\n\r\n## Additional context\r\n\r\nscript as below:\r\n```\r\nimport torch\r\n@torch.jit.script\r\ndef t(input, bias):\r\n  return torch.nn.functional.relu(input + bias)\r\ninput = torch.randn(2, 8, requires_grad=True)\r\nbias = torch.randn(8, requires_grad=False)    # bias does NOT require grad\r\no = t(input, bias)\r\no.sum().backward()\r\no = t(input, bias)\r\no.sum().backward()\r\no = t(input, bias)\r\no.sum().backward()\r\n\r\nprint(t.graph_for(input, bias))\r\nbwd_graph = list(list(t.get_debug_state().execution_plans.values())[0].code.grad_executor_states()[0].execution_plans.values())[0].graph\r\nprint(bwd_graph)\r\n```\r\n\r\nForward graph:\r\n```\r\ngraph(%input.1 : Float(2, 8, strides=[8, 1], requires_grad=1, device=cpu),\r\n      %bias.1 : Float(8, strides=[1], requires_grad=0, device=cpu)):\r\n  %2 : Float(8, strides=[1], requires_grad=0, device=cpu), %3 : Float(2, 8, strides=[8, 1], requires_grad=1, device=cpu), %4 : bool = prim::RequiresGradCheck[types=[Tensor(re\r\nquires_grad=0), Tensor(requires_grad=1)]](%bias.1, %input.1)\r\n  %5 : Tensor = prim::If(%4)\r\n    block0():\r\n      %6 : Tensor = prim::DifferentiableGraph_0(%2, %3)\r\n      -> (%6)\r\n    block1():\r\n      %7 : Function = prim::Constant[name=\"fallback_function\", fallback=1]()\r\n      %8 : (Tensor) = prim::CallFunction(%7, %bias.1, %input.1)\r\n      %9 : Tensor = prim::TupleUnpack(%8)\r\n      -> (%9)\r\n  return (%5)\r\nwith prim::DifferentiableGraph_0 = graph(%0 : Tensor,\r\n      %1 : Tensor):\r\n  %2 : int = prim::Constant[value=1]()\r\n  %5 : Tensor = aten::add(%1, %0, %2) # t.py:5:34\r\n  %7 : int[] = aten::size(%1) # <string>:3:44\r\n  %9 : int[] = aten::size(%5) # <string>:3:55\r\n  %10 : int[]? = aten::_size_if_not_equal(%7, %9) # <string>:3:19\r\n  %12 : int[] = aten::size(%0) # <string>:3:93\r\n  %13 : int[]? = aten::_size_if_not_equal(%12, %9) # <string>:3:68\r\n  %result.7 : Tensor = aten::relu(%5) # /opt/conda/lib/python3.6/site-packages/torch/nn/functional.py:1206:17\r\n  return (%result.7, %10, %13, %result.7)\r\n```\r\n\r\nWhere backward graph for DifferentiableGraph is as below. Note that it produces two grad_inputs, where `%grad_other.7` is produced for `bias` which doesn't require grad.\r\n```\r\ngraph(%0 : Tensor,\r\n      %1 : Tensor,\r\n      %self_size.5 : int[]?,\r\n      %other_size.5 : int[]?,\r\n      %result.7 : Tensor):\r\n  %71 : int = prim::Constant[value=0]() # <string>:98:47\r\n  %191 : None = prim::Constant()\r\n  %192 : bool = aten::__is__(%self_size.5, %191)\r\n  %193 : bool = prim::AutogradAllNonZero(%1, %result.7)\r\n  %194 : bool = prim::AutogradAllZero(%0)\r\n  %195 : bool[] = prim::ListConstruct(%192, %193, %194)\r\n  %196 : bool = aten::all(%195)\r\n  %63 : (Tensor, Tensor) = prim::If(%196)\r\n    block0():\r\n      %85 : Tensor = aten::gt(%result.7, %71) # <string>:98:38\r\n      %88 : Tensor = aten::type_as(%85, %result.7) # <string>:98:38\r\n      %91 : Tensor = aten::mul(%1, %88) # <string>:98:23\r\n      %grad_other.7 : Tensor = aten::_grad_sum_to_size(%91, %other_size.5) # <string>:17:30\r\n      %126 : (Tensor, Tensor) = prim::TupleConstruct(%grad_other.7, %91)\r\n      -> (%126)\r\n    block1():\r\n      %198 : Function = prim::Constant[name=\"fallback_function\", fallback=1]()\r\n      %199 : ((Tensor, Tensor)) = prim::CallFunction(%198, %0, %1, %self_size.5, %other_size.5, %result.7)\r\n      %200 : (Tensor, Tensor) = prim::TupleUnpack(%199)\r\n      -> (%200)\r\n  return (%63)\r\n```\n\ncc @VitalyFedyunin @ngimel @gmagogsfm",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/54040/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/54040/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/53906",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/53906/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/53906/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/53906/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/53906",
        "id": 830308591,
        "node_id": "MDU6SXNzdWU4MzAzMDg1OTE=",
        "number": 53906,
        "title": "[OpInfo] test_variant_consistency_jit is failing for ops with TensorList inputs.",
        "user": {
            "login": "heitorschueroff",
            "id": 10880924,
            "node_id": "MDQ6VXNlcjEwODgwOTI0",
            "avatar_url": "https://avatars.githubusercontent.com/u/10880924?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/heitorschueroff",
            "html_url": "https://github.com/heitorschueroff",
            "followers_url": "https://api.github.com/users/heitorschueroff/followers",
            "following_url": "https://api.github.com/users/heitorschueroff/following{/other_user}",
            "gists_url": "https://api.github.com/users/heitorschueroff/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/heitorschueroff/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/heitorschueroff/subscriptions",
            "organizations_url": "https://api.github.com/users/heitorschueroff/orgs",
            "repos_url": "https://api.github.com/users/heitorschueroff/repos",
            "events_url": "https://api.github.com/users/heitorschueroff/events{/privacy}",
            "received_events_url": "https://api.github.com/users/heitorschueroff/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1300933336,
                "node_id": "MDU6TGFiZWwxMzAwOTMzMzM2",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20tests",
                "name": "module: tests",
                "color": "f7e101",
                "default": false,
                "description": "Issues related to tests (not the torch.testing module)"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "Lilyjjo",
            "id": 35852084,
            "node_id": "MDQ6VXNlcjM1ODUyMDg0",
            "avatar_url": "https://avatars.githubusercontent.com/u/35852084?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Lilyjjo",
            "html_url": "https://github.com/Lilyjjo",
            "followers_url": "https://api.github.com/users/Lilyjjo/followers",
            "following_url": "https://api.github.com/users/Lilyjjo/following{/other_user}",
            "gists_url": "https://api.github.com/users/Lilyjjo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Lilyjjo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Lilyjjo/subscriptions",
            "organizations_url": "https://api.github.com/users/Lilyjjo/orgs",
            "repos_url": "https://api.github.com/users/Lilyjjo/repos",
            "events_url": "https://api.github.com/users/Lilyjjo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Lilyjjo/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "Lilyjjo",
                "id": 35852084,
                "node_id": "MDQ6VXNlcjM1ODUyMDg0",
                "avatar_url": "https://avatars.githubusercontent.com/u/35852084?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/Lilyjjo",
                "html_url": "https://github.com/Lilyjjo",
                "followers_url": "https://api.github.com/users/Lilyjjo/followers",
                "following_url": "https://api.github.com/users/Lilyjjo/following{/other_user}",
                "gists_url": "https://api.github.com/users/Lilyjjo/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/Lilyjjo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Lilyjjo/subscriptions",
                "organizations_url": "https://api.github.com/users/Lilyjjo/orgs",
                "repos_url": "https://api.github.com/users/Lilyjjo/repos",
                "events_url": "https://api.github.com/users/Lilyjjo/events{/privacy}",
                "received_events_url": "https://api.github.com/users/Lilyjjo/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2021-03-12T17:16:13Z",
        "updated_at": "2021-04-01T14:11:18Z",
        "closed_at": "2021-04-01T14:11:18Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\nHere's a stacktrace of the failure for torch.stack op.\r\n```\r\n_________________________________________________________________________________ TestCommonCPU.test_variant_consistency_jit_stack_cpu_float64 __________________________________________________________________________________\r\n\r\nself = <test_ops.TestCommonCPU testMethod=test_variant_consistency_jit_stack_cpu_float64>, device = 'cpu', dtype = torch.float64, op = <torch.testing._internal.common_methods_invocations.OpInfo object at 0x7f7b6e345460>\r\n\r\n    @ops(op_db)\r\n    def test_variant_consistency_jit(self, device, dtype, op):\r\n        test_backward = op.supports_autograd and (\r\n            (dtype.is_complex and op.test_complex_grad) or\r\n            (dtype.is_floating_point and (not op.skip_bfloat16_grad or dtype != torch.bfloat16)))\r\n    \r\n        samples = op.sample_inputs(device, dtype, requires_grad=test_backward)\r\n        if len(samples) == 0:\r\n            self.skipTest(\"Skipped! No sample inputs!\")\r\n    \r\n        for sample in samples:\r\n    \r\n            # Acquires variants to test\r\n            func = op.get_op()\r\n            method = op.get_method()\r\n            inplace = op.get_inplace()\r\n            variants = {\r\n                'function': func, 'method': method,\r\n                # TODO: inplace tests currently fail\r\n                # 'inplace': inplace,\r\n            }\r\n    \r\n            # Test traced and scripted consistency\r\n            for func_type, variant in variants.items():\r\n                if variant is None:\r\n                    continue\r\n    \r\n                # Create accessor for script function variant\r\n                name = op.name + '_' if func_type == 'inplace' else op.name\r\n    \r\n                # run with disable_autodiff_subgraph_inlining(True) to test\r\n                #   autodiff support. Context manager forces the graph to contain\r\n                #   DifferentiableGraph nodes if they are present\r\n                with disable_autodiff_subgraph_inlining():\r\n    \r\n                    # Check scripted forward, grad, and grad grad\r\n                    script_fn = create_script_fn(self, name, func_type)\r\n>                   check_against_reference(self,\r\n                                            script_fn,\r\n                                            func,\r\n                                            lambda x: x,\r\n                                            (*sample.input,) + sample.args,\r\n                                            sample.kwargs,\r\n                                            no_grad=not test_backward)\r\n\r\ntest/test_ops.py:299: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\ntorch/testing/_internal/common_jit.py:63: in check_against_reference\r\n    outputs_test = self.runAndSaveRNG(func, nograd_inputs, kwargs)\r\ntorch/testing/_internal/common_jit.py:130: in runAndSaveRNG\r\n    results = func(*inputs, **kwargs)\r\ntorch/testing/_internal/jit_metaprogramming_utils.py:301: in script_fn\r\n    fn, tensors = gen_script_fn_and_args(method_name, func_type, *args, **kwargs)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nmethod_name = 'stack', func_type = 'function'\r\nargs = ((tensor([[-4.8270, -7.5824, -0.6047, -1.5412, -1.9719],\r\n        [-4.1460, -5.4215, -4.7842, -4.1508,  7.3808],\r\n      ...,  8.5671, -6.3773,  6.0237, -0.1426],\r\n        [-0.0862,  5.3611,  7.2619, -1.8770, -1.0867]], requires_grad=True)), 0)\r\nkwargs = {}, formals = [], tensors = []\r\nactuals = ['(tensor([[-4.8270, -7.5824, -0.6047, -1.5412, -1.9719],\\n        [-4.1460, -5.4215, -4.7842, -4.1508,  7.3808],\\n   ....5671, -6.3773,  6.0237, -0.1426],\\n        [-0.0862,  5.3611,  7.2619, -1.8770, -1.0867]], requires_grad=True))', '0']\r\ncall = 'torch.stack((tensor([[-4.8270, -7.5824, -0.6047, -1.5412, -1.9719],\\n        [-4.1460, -5.4215, -4.7842, -4.1508,  7.... 8.5671, -6.3773,  6.0237, -0.1426],\\n        [-0.0862,  5.3611,  7.2619, -1.8770, -1.0867]], requires_grad=True)), 0)'\r\nscript = '\\ndef the_method():\\n    return torch.stack((tensor([[-4.8270, -7.5824, -0.6047, -1.5412, -1.9719],\\n        [-4.1460....5671, -6.3773,  6.0237, -0.1426],\\n        [-0.0862,  5.3611,  7.2619, -1.8770, -1.0867]], requires_grad=True)), 0)\\n'\r\n\r\n    def gen_script_fn_and_args(method_name, func_type, *args, **kwargs):\r\n        formals, tensors, actuals = get_script_args(args)\r\n        call = get_call(method_name, func_type, actuals, kwargs)\r\n        script = script_template.format(', '.join(formals), call)\r\n>       CU = torch.jit.CompilationUnit(script)\r\nE       RuntimeError: \r\nE       undefined value tensor:\r\nE         File \"<string>\", line 3\r\nE       \r\nE       def the_method():\r\nE           return torch.stack((tensor([[-4.8270, -7.5824, -0.6047, -1.5412, -1.9719],\r\nE                               ~~~~~~ <--- HERE\r\nE               [-4.1460, -5.4215, -4.7842, -4.1508,  7.3808],\r\nE               [ 5.5761, -8.3157,  4.1776,  2.0474, -4.0760],\r\n\r\ntorch/testing/_internal/jit_metaprogramming_utils.py:292: RuntimeError\r\n```\r\n\r\n## To Reproduce\r\n\r\nRemove the following SkipInfo from the torch.stack OpInfo from the PR https://github.com/pytorch/pytorch/pull/53418\r\nhttps://github.com/pytorch/pytorch/blob/50a511815ceca53cd87482b27ec81bb24bfa1c96/torch/testing/_internal/common_methods_invocations.py#L2513\r\n\r\nRun the test with \r\n`pytest test/test_ops.py -k 'test_variant_consistency_jit_stack_cpu_float64'`\r\n\r\n## Expected behavior\r\n\r\nTest should support TensorList inputs and pass\n\ncc @mruberry @VitalyFedyunin @walterddr @gmagogsfm",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/53906/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/53906/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/53517",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/53517/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/53517/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/53517/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/53517",
        "id": 824763715,
        "node_id": "MDU6SXNzdWU4MjQ3NjM3MTU=",
        "number": 53517,
        "title": "[FX] torch.fx generate code that is not torch.jit able",
        "user": {
            "login": "mariogeiger",
            "id": 333780,
            "node_id": "MDQ6VXNlcjMzMzc4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/333780?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mariogeiger",
            "html_url": "https://github.com/mariogeiger",
            "followers_url": "https://api.github.com/users/mariogeiger/followers",
            "following_url": "https://api.github.com/users/mariogeiger/following{/other_user}",
            "gists_url": "https://api.github.com/users/mariogeiger/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mariogeiger/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mariogeiger/subscriptions",
            "organizations_url": "https://api.github.com/users/mariogeiger/orgs",
            "repos_url": "https://api.github.com/users/mariogeiger/repos",
            "events_url": "https://api.github.com/users/mariogeiger/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mariogeiger/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "gmagogsfm",
            "id": 1817752,
            "node_id": "MDQ6VXNlcjE4MTc3NTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1817752?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gmagogsfm",
            "html_url": "https://github.com/gmagogsfm",
            "followers_url": "https://api.github.com/users/gmagogsfm/followers",
            "following_url": "https://api.github.com/users/gmagogsfm/following{/other_user}",
            "gists_url": "https://api.github.com/users/gmagogsfm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gmagogsfm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gmagogsfm/subscriptions",
            "organizations_url": "https://api.github.com/users/gmagogsfm/orgs",
            "repos_url": "https://api.github.com/users/gmagogsfm/repos",
            "events_url": "https://api.github.com/users/gmagogsfm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gmagogsfm/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "gmagogsfm",
                "id": 1817752,
                "node_id": "MDQ6VXNlcjE4MTc3NTI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/1817752?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/gmagogsfm",
                "html_url": "https://github.com/gmagogsfm",
                "followers_url": "https://api.github.com/users/gmagogsfm/followers",
                "following_url": "https://api.github.com/users/gmagogsfm/following{/other_user}",
                "gists_url": "https://api.github.com/users/gmagogsfm/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/gmagogsfm/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gmagogsfm/subscriptions",
                "organizations_url": "https://api.github.com/users/gmagogsfm/orgs",
                "repos_url": "https://api.github.com/users/gmagogsfm/repos",
                "events_url": "https://api.github.com/users/gmagogsfm/events{/privacy}",
                "received_events_url": "https://api.github.com/users/gmagogsfm/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2021-03-08T17:08:11Z",
        "updated_at": "2021-03-09T08:07:50Z",
        "closed_at": "2021-03-09T08:07:50Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\nI expect the new `torch.fx` to be compatible with `torch.jit`.\r\nIn the sense that if a function is jitable, if I trace it with fx it will be still jitable.\r\n\r\n## To Reproduce\r\n```python\r\nimport torch\r\nfrom torch import fx\r\n\r\ndef foo(x):\r\n    return x[..., :]\r\n\r\ntorch.jit.script(foo)  # ok\r\ntorch.jit.script(fx.symbolic_trace(foo))  # not ok\r\n```\r\n\r\n**Error message:**\r\n```\r\nRuntimeError: \r\npython value of type 'ellipsis' cannot be used as a value. Perhaps it is a closed over global variable? If so, please consider passing it in as an argument or use a local varible instead.:\r\ndef forward(self, x):\r\n    getitem = x[(Ellipsis, slice(None, None, None))];  x = None\r\n                 ~~~~~~~~ <--- HERE\r\n    return getitem\r\n```\n\ncc @gmagogsfm",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/53517/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/53517/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/53487",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/53487/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/53487/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/53487/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/53487",
        "id": 824117089,
        "node_id": "MDU6SXNzdWU4MjQxMTcwODk=",
        "number": 53487,
        "title": "The signature of `torch.tensordot` in Python should be compatible with its signature in TorchScript",
        "user": {
            "login": "Linux-cpp-lisp",
            "id": 1473644,
            "node_id": "MDQ6VXNlcjE0NzM2NDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1473644?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Linux-cpp-lisp",
            "html_url": "https://github.com/Linux-cpp-lisp",
            "followers_url": "https://api.github.com/users/Linux-cpp-lisp/followers",
            "following_url": "https://api.github.com/users/Linux-cpp-lisp/following{/other_user}",
            "gists_url": "https://api.github.com/users/Linux-cpp-lisp/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Linux-cpp-lisp/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Linux-cpp-lisp/subscriptions",
            "organizations_url": "https://api.github.com/users/Linux-cpp-lisp/orgs",
            "repos_url": "https://api.github.com/users/Linux-cpp-lisp/repos",
            "events_url": "https://api.github.com/users/Linux-cpp-lisp/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Linux-cpp-lisp/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "gmagogsfm",
            "id": 1817752,
            "node_id": "MDQ6VXNlcjE4MTc3NTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1817752?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gmagogsfm",
            "html_url": "https://github.com/gmagogsfm",
            "followers_url": "https://api.github.com/users/gmagogsfm/followers",
            "following_url": "https://api.github.com/users/gmagogsfm/following{/other_user}",
            "gists_url": "https://api.github.com/users/gmagogsfm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gmagogsfm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gmagogsfm/subscriptions",
            "organizations_url": "https://api.github.com/users/gmagogsfm/orgs",
            "repos_url": "https://api.github.com/users/gmagogsfm/repos",
            "events_url": "https://api.github.com/users/gmagogsfm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gmagogsfm/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "gmagogsfm",
                "id": 1817752,
                "node_id": "MDQ6VXNlcjE4MTc3NTI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/1817752?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/gmagogsfm",
                "html_url": "https://github.com/gmagogsfm",
                "followers_url": "https://api.github.com/users/gmagogsfm/followers",
                "following_url": "https://api.github.com/users/gmagogsfm/following{/other_user}",
                "gists_url": "https://api.github.com/users/gmagogsfm/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/gmagogsfm/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gmagogsfm/subscriptions",
                "organizations_url": "https://api.github.com/users/gmagogsfm/orgs",
                "repos_url": "https://api.github.com/users/gmagogsfm/repos",
                "events_url": "https://api.github.com/users/gmagogsfm/events{/privacy}",
                "received_events_url": "https://api.github.com/users/gmagogsfm/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 4,
        "created_at": "2021-03-08T02:55:51Z",
        "updated_at": "2021-03-21T06:05:13Z",
        "closed_at": "2021-03-21T06:05:13Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\n`torch.tensordot` accepts entirely different argument formats in Python and TorchScript.\r\n\r\n## To Reproduce\r\n\r\n```\r\nIn [1]: import torch\r\n\r\nIn [2]: x, y = torch.randn(3, 4), torch.randn(4, 3)\r\n\r\nIn [3]: torch.tensordot(x, y, dims=((1,), (0,)))\r\nOut[3]: \r\ntensor([[-0.2011,  0.1324,  0.7855],\r\n        [ 0.4894, -2.1793, -0.4989],\r\n        [ 2.4699,  0.4472, -0.5411]])\r\n\r\nIn [5]: @torch.jit.script\r\n   ...: def f(x, y):\r\n   ...:     return torch.tensordot(x, y, dims=((1,), (0,)))\r\n   ...: \r\n---------------------------------------------------------------------------\r\nRuntimeError: \r\nArguments for call are not valid.\r\nThe following variants are available:\r\n  \r\n  aten::tensordot(Tensor self, Tensor other, int[] dims_self, int[] dims_other) -> (Tensor):\r\n  Argument dims_self not provided.\r\n  \r\n  aten::tensordot.out(Tensor self, Tensor other, int[] dims_self, int[] dims_other, *, Tensor(a!) out) -> (Tensor(a!)):\r\n  Argument dims_self not provided.\r\n\r\nThe original call is:\r\n  File \"<ipython-input-5-61613126bcad>\", line 3\r\n@torch.jit.script\r\ndef f(x, y):\r\n    return torch.tensordot(x, y, dims=((1,), (0,)))\r\n           ~~~~~~~~~~~~~~~ <--- HERE\r\n\r\n\r\nIn [6]: @torch.jit.script\r\n   ...: def f(x, y):\r\n   ...:     return torch.tensordot(x, y, dims_self=[1], dims_other=[0])\r\n\r\nIn [7]: torch.tensordot(x, y, dims_self=[1], dims_other=[0])\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-7-be1bfc130a4a> in <module>\r\n----> 1 torch.tensordot(x, y, dims_self=[1], dims_other=[0])\r\n\r\nTypeError: tensordot() got an unexpected keyword argument 'dims_self'\r\n```\r\n\r\n## Expected behavior\r\n\r\nIt is fine that the `TorchScript` version doesn't accept the Python call signature of `dims`, but the Python call signature should accept `dims_self` and `dims_other` as an alternative to `dims`.\r\n\r\n## Environment\r\n\r\n - PyTorch Version (e.g., 1.0): 1.8.0\r\n - OS (e.g., Linux): Linux\r\n - How you installed PyTorch (`conda`, `pip`, source): Conda\r\n - Build command you used (if compiling from source): n/a\r\n - Python version: 3.8.5\r\n - CUDA/cuDNN version: n/a\r\n - GPU models and configuration: n/a\r\n - Any other relevant information: n/a\r\n\n\ncc @gmagogsfm",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/53487/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/53487/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/53000",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/53000/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/53000/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/53000/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/53000",
        "id": 818538140,
        "node_id": "MDU6SXNzdWU4MTg1MzgxNDA=",
        "number": 53000,
        "title": "[nnc] unroll/flatten loops with non literal constant bounds",
        "user": {
            "login": "bertmaher",
            "id": 4441820,
            "node_id": "MDQ6VXNlcjQ0NDE4MjA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4441820?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bertmaher",
            "html_url": "https://github.com/bertmaher",
            "followers_url": "https://api.github.com/users/bertmaher/followers",
            "following_url": "https://api.github.com/users/bertmaher/following{/other_user}",
            "gists_url": "https://api.github.com/users/bertmaher/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bertmaher/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bertmaher/subscriptions",
            "organizations_url": "https://api.github.com/users/bertmaher/orgs",
            "repos_url": "https://api.github.com/users/bertmaher/repos",
            "events_url": "https://api.github.com/users/bertmaher/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bertmaher/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            },
            {
                "id": 2510754463,
                "node_id": "MDU6TGFiZWwyNTEwNzU0NDYz",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/NNC",
                "name": "NNC",
                "color": "e5678d",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "navahgar",
            "id": 2213641,
            "node_id": "MDQ6VXNlcjIyMTM2NDE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2213641?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/navahgar",
            "html_url": "https://github.com/navahgar",
            "followers_url": "https://api.github.com/users/navahgar/followers",
            "following_url": "https://api.github.com/users/navahgar/following{/other_user}",
            "gists_url": "https://api.github.com/users/navahgar/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/navahgar/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/navahgar/subscriptions",
            "organizations_url": "https://api.github.com/users/navahgar/orgs",
            "repos_url": "https://api.github.com/users/navahgar/repos",
            "events_url": "https://api.github.com/users/navahgar/events{/privacy}",
            "received_events_url": "https://api.github.com/users/navahgar/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "navahgar",
                "id": 2213641,
                "node_id": "MDQ6VXNlcjIyMTM2NDE=",
                "avatar_url": "https://avatars.githubusercontent.com/u/2213641?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/navahgar",
                "html_url": "https://github.com/navahgar",
                "followers_url": "https://api.github.com/users/navahgar/followers",
                "following_url": "https://api.github.com/users/navahgar/following{/other_user}",
                "gists_url": "https://api.github.com/users/navahgar/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/navahgar/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/navahgar/subscriptions",
                "organizations_url": "https://api.github.com/users/navahgar/orgs",
                "repos_url": "https://api.github.com/users/navahgar/repos",
                "events_url": "https://api.github.com/users/navahgar/events{/privacy}",
                "received_events_url": "https://api.github.com/users/navahgar/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 4,
        "created_at": "2021-03-01T06:48:31Z",
        "updated_at": "2021-03-02T08:37:47Z",
        "closed_at": "2021-03-02T08:37:47Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "Currently we require a literal constant, but fail on something like (16/4) which is trivially simplified. \n\ncc @gmagogsfm",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/53000/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/53000/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/52690",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/52690/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/52690/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/52690/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/52690",
        "id": 814772962,
        "node_id": "MDU6SXNzdWU4MTQ3NzI5NjI=",
        "number": 52690,
        "title": "[nnc] Axis reordering API should accept a vector of axes",
        "user": {
            "login": "bertmaher",
            "id": 4441820,
            "node_id": "MDQ6VXNlcjQ0NDE4MjA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4441820?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bertmaher",
            "html_url": "https://github.com/bertmaher",
            "followers_url": "https://api.github.com/users/bertmaher/followers",
            "following_url": "https://api.github.com/users/bertmaher/following{/other_user}",
            "gists_url": "https://api.github.com/users/bertmaher/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bertmaher/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bertmaher/subscriptions",
            "organizations_url": "https://api.github.com/users/bertmaher/orgs",
            "repos_url": "https://api.github.com/users/bertmaher/repos",
            "events_url": "https://api.github.com/users/bertmaher/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bertmaher/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 2510754463,
                "node_id": "MDU6TGFiZWwyNTEwNzU0NDYz",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/NNC",
                "name": "NNC",
                "color": "e5678d",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "navahgar",
            "id": 2213641,
            "node_id": "MDQ6VXNlcjIyMTM2NDE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2213641?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/navahgar",
            "html_url": "https://github.com/navahgar",
            "followers_url": "https://api.github.com/users/navahgar/followers",
            "following_url": "https://api.github.com/users/navahgar/following{/other_user}",
            "gists_url": "https://api.github.com/users/navahgar/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/navahgar/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/navahgar/subscriptions",
            "organizations_url": "https://api.github.com/users/navahgar/orgs",
            "repos_url": "https://api.github.com/users/navahgar/repos",
            "events_url": "https://api.github.com/users/navahgar/events{/privacy}",
            "received_events_url": "https://api.github.com/users/navahgar/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "navahgar",
                "id": 2213641,
                "node_id": "MDQ6VXNlcjIyMTM2NDE=",
                "avatar_url": "https://avatars.githubusercontent.com/u/2213641?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/navahgar",
                "html_url": "https://github.com/navahgar",
                "followers_url": "https://api.github.com/users/navahgar/followers",
                "following_url": "https://api.github.com/users/navahgar/following{/other_user}",
                "gists_url": "https://api.github.com/users/navahgar/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/navahgar/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/navahgar/subscriptions",
                "organizations_url": "https://api.github.com/users/navahgar/orgs",
                "repos_url": "https://api.github.com/users/navahgar/repos",
                "events_url": "https://api.github.com/users/navahgar/events{/privacy}",
                "received_events_url": "https://api.github.com/users/navahgar/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2021-02-23T19:39:36Z",
        "updated_at": "2021-04-13T01:14:04Z",
        "closed_at": "2021-04-13T01:14:04Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "NNC needs a better reorder API.  The current API allows only pairwise swaps of loops, but this is really hard to use if you want to optimize, e.g., convolutions where you can easily end up with 10+ loops in a nest.  E.g., you might want to split along both spatial and channel dimensions, giving you axes like:\r\n```\r\n{n, h, wo, wi, ko, ki, co, ci, r, s} -> {n, h, wo, ko, co, wi, r, s, ci, ki} \r\n```\r\n",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/52690/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/52690/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/52676",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/52676/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/52676/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/52676/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/52676",
        "id": 814573899,
        "node_id": "MDU6SXNzdWU4MTQ1NzM4OTk=",
        "number": 52676,
        "title": "Support default values on NamedTuple fields",
        "user": {
            "login": "ansley",
            "id": 59447410,
            "node_id": "MDQ6VXNlcjU5NDQ3NDEw",
            "avatar_url": "https://avatars.githubusercontent.com/u/59447410?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ansley",
            "html_url": "https://github.com/ansley",
            "followers_url": "https://api.github.com/users/ansley/followers",
            "following_url": "https://api.github.com/users/ansley/following{/other_user}",
            "gists_url": "https://api.github.com/users/ansley/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ansley/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ansley/subscriptions",
            "organizations_url": "https://api.github.com/users/ansley/orgs",
            "repos_url": "https://api.github.com/users/ansley/repos",
            "events_url": "https://api.github.com/users/ansley/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ansley/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "ansley",
            "id": 59447410,
            "node_id": "MDQ6VXNlcjU5NDQ3NDEw",
            "avatar_url": "https://avatars.githubusercontent.com/u/59447410?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ansley",
            "html_url": "https://github.com/ansley",
            "followers_url": "https://api.github.com/users/ansley/followers",
            "following_url": "https://api.github.com/users/ansley/following{/other_user}",
            "gists_url": "https://api.github.com/users/ansley/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ansley/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ansley/subscriptions",
            "organizations_url": "https://api.github.com/users/ansley/orgs",
            "repos_url": "https://api.github.com/users/ansley/repos",
            "events_url": "https://api.github.com/users/ansley/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ansley/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "ansley",
                "id": 59447410,
                "node_id": "MDQ6VXNlcjU5NDQ3NDEw",
                "avatar_url": "https://avatars.githubusercontent.com/u/59447410?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ansley",
                "html_url": "https://github.com/ansley",
                "followers_url": "https://api.github.com/users/ansley/followers",
                "following_url": "https://api.github.com/users/ansley/following{/other_user}",
                "gists_url": "https://api.github.com/users/ansley/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ansley/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ansley/subscriptions",
                "organizations_url": "https://api.github.com/users/ansley/orgs",
                "repos_url": "https://api.github.com/users/ansley/repos",
                "events_url": "https://api.github.com/users/ansley/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ansley/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 3,
        "created_at": "2021-02-23T15:32:22Z",
        "updated_at": "2021-08-02T05:17:13Z",
        "closed_at": "2021-08-02T05:17:13Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## Example\r\n\r\nCurrently, this code produces the following error message:\r\n\r\n```python\r\nimport torch\r\nfrom torch.fx import symbolic_trace\r\nfrom collections import namedtuple\r\nfrom typing import Dict, NamedTuple, Optional, Tuple\r\n\r\nclass Point(NamedTuple):\r\n    x: Optional[torch.Tensor] = None\r\n    y: Optional[torch.Tensor] = None\r\n\r\nclass M(torch.nn.Module):\r\n    def __init__(self):\r\n        super(M, self).__init__()\r\n\r\n    def forward(self, point: Point):\r\n        return point\r\n\r\np = Point(x=torch.rand(3), y=torch.rand(3))\r\nscripted = torch.jit.script(M())\r\n```\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"test/tinytest.py\", line 22, in <module>\r\n    scripted = torch.jit.script(M())\r\n  File \"/home/ansley/local/miniconda3/envs/pytorch/lib/python3.8/site-packages/torch/jit/_script.py\", line 947, in script\r\n    return torch.jit._recursive.create_script_module(\r\n  File \"/home/ansley/local/miniconda3/envs/pytorch/lib/python3.8/site-packages/torch/jit/_recursive.py\", line 398, in create_script_module\r\n    return create_script_module_impl(nn_module, concrete_type, stubs_fn)\r\n  File \"/home/ansley/local/miniconda3/envs/pytorch/lib/python3.8/site-packages/torch/jit/_recursive.py\", line 459, in create_script_module_impl\r\n    create_methods_and_properties_from_stubs(concrete_type, method_stubs, property_stubs)\r\n  File \"/home/ansley/local/miniconda3/envs/pytorch/lib/python3.8/site-packages/torch/jit/_recursive.py\", line 341, in create_methods_and_properties_from_stubs\r\n    concrete_type._create_methods_and_properties(property_defs, property_rcbs, method_defs, method_rcbs, method_defaults)\r\n  File \"/home/ansley/local/miniconda3/envs/pytorch/lib/python3.8/site-packages/torch/jit/annotations.py\", line 351, in try_ann_to_type\r\n    return torch._C._resolve_type_from_object(ann, loc, fake_rcb)\r\nRuntimeError: \r\nDefault values are currently not supported on NamedTuple fields in TorchScript. Fields with default values: [xy]:\r\n  File \"test/tinytest.py\", line 17\r\n    def forward(self, point: Point):\r\n                             ~~~~~ <--- HERE\r\n        return point\r\n```\r\n\r\nIt would be nice if it didn't throw. One of our internal partners ran up against this.\n\ncc @gmagogsfm",
        "closed_by": {
            "login": "gmagogsfm",
            "id": 1817752,
            "node_id": "MDQ6VXNlcjE4MTc3NTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1817752?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gmagogsfm",
            "html_url": "https://github.com/gmagogsfm",
            "followers_url": "https://api.github.com/users/gmagogsfm/followers",
            "following_url": "https://api.github.com/users/gmagogsfm/following{/other_user}",
            "gists_url": "https://api.github.com/users/gmagogsfm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gmagogsfm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gmagogsfm/subscriptions",
            "organizations_url": "https://api.github.com/users/gmagogsfm/orgs",
            "repos_url": "https://api.github.com/users/gmagogsfm/repos",
            "events_url": "https://api.github.com/users/gmagogsfm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gmagogsfm/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/52676/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/52676/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/52588",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/52588/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/52588/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/52588/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/52588",
        "id": 813108563,
        "node_id": "MDU6SXNzdWU4MTMxMDg1NjM=",
        "number": 52588,
        "title": "[JIT] nn.Sequential of nn.Module with input type List[torch.Tensor] inferred to torch.Tensor",
        "user": {
            "login": "lamhoangtung",
            "id": 26834698,
            "node_id": "MDQ6VXNlcjI2ODM0Njk4",
            "avatar_url": "https://avatars.githubusercontent.com/u/26834698?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lamhoangtung",
            "html_url": "https://github.com/lamhoangtung",
            "followers_url": "https://api.github.com/users/lamhoangtung/followers",
            "following_url": "https://api.github.com/users/lamhoangtung/following{/other_user}",
            "gists_url": "https://api.github.com/users/lamhoangtung/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lamhoangtung/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lamhoangtung/subscriptions",
            "organizations_url": "https://api.github.com/users/lamhoangtung/orgs",
            "repos_url": "https://api.github.com/users/lamhoangtung/repos",
            "events_url": "https://api.github.com/users/lamhoangtung/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lamhoangtung/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "ansley",
            "id": 59447410,
            "node_id": "MDQ6VXNlcjU5NDQ3NDEw",
            "avatar_url": "https://avatars.githubusercontent.com/u/59447410?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ansley",
            "html_url": "https://github.com/ansley",
            "followers_url": "https://api.github.com/users/ansley/followers",
            "following_url": "https://api.github.com/users/ansley/following{/other_user}",
            "gists_url": "https://api.github.com/users/ansley/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ansley/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ansley/subscriptions",
            "organizations_url": "https://api.github.com/users/ansley/orgs",
            "repos_url": "https://api.github.com/users/ansley/repos",
            "events_url": "https://api.github.com/users/ansley/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ansley/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "ansley",
                "id": 59447410,
                "node_id": "MDQ6VXNlcjU5NDQ3NDEw",
                "avatar_url": "https://avatars.githubusercontent.com/u/59447410?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ansley",
                "html_url": "https://github.com/ansley",
                "followers_url": "https://api.github.com/users/ansley/followers",
                "following_url": "https://api.github.com/users/ansley/following{/other_user}",
                "gists_url": "https://api.github.com/users/ansley/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ansley/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ansley/subscriptions",
                "organizations_url": "https://api.github.com/users/ansley/orgs",
                "repos_url": "https://api.github.com/users/ansley/repos",
                "events_url": "https://api.github.com/users/ansley/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ansley/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 4,
        "created_at": "2021-02-22T04:42:46Z",
        "updated_at": "2022-03-16T18:42:46Z",
        "closed_at": "2021-03-24T14:49:40Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\nI'm trying to convert a `nn.Sequential` model that consist of some `nn.Module` that had input type `List[torch.Tensor]` to Scripted model. But the TorchScript seems to infer the input type for those child module to `torch.Tensor` only \r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior:\r\n\r\n1. Run this block of code\r\n\r\n```python\r\nimport torch\r\nimport torch.nn as nn\r\nfrom typing import List\r\n\r\nclass ModelWithInputAsListOfTensor(nn.Module):\r\n    def __init__(self):\r\n        super(ModelWithInputAsListOfTensor, self).__init__()\r\n        self.x = 2\r\n\r\n    def forward(self, x: List[torch.Tensor]) -> List[torch.Tensor]:\r\n        # print(\"Receiving type\", type(x), len(x), type(x[0]))\r\n        # print(\"Receiving list of tensor\", len(x), type(x[0]))\r\n        for each in x:\r\n            each *= self.x\r\n        return x\r\n\r\nmodel = nn.Sequential(\r\n    ModelWithInputAsListOfTensor(),\r\n    ModelWithInputAsListOfTensor()\r\n)\r\n\r\n# Original model\r\ntest_input: List[torch.Tensor] = [torch.ones((2, 2)), torch.ones((3, 3)), torch.ones((4, 4))]\r\nres = model(test_input)\r\nprint(res)\r\n\r\n# Scripted model\r\nscripted_model = torch.jit.script(model)\r\nprint(scripted_model)\r\n\r\nprint(\"---------------------\")\r\n\r\n# Input as typing.List[torch.Tensor]\r\ntest_input: List[torch.Tensor] = [torch.ones((2, 2)), torch.ones((3, 3)), torch.ones((4, 4))]\r\nres = scripted_model(test_input)\r\nprint(res)\r\n\r\nprint(\"---------------------\")\r\n\r\n# Input as torch.jit.annotate(List[torch.Tensor])\r\ntest_input = torch.jit.annotate(List[torch.Tensor], [torch.ones((2, 2)), torch.ones((3, 3)), torch.ones((4, 4))])\r\nres = scripted_model(test_input)\r\nprint(res)\r\n```\r\n\r\n2. Then you will get this output:\r\n```console\r\n[tensor([[4., 4.],\r\n        [4., 4.]]), tensor([[4., 4., 4.],\r\n        [4., 4., 4.],\r\n        [4., 4., 4.]]), tensor([[4., 4., 4., 4.],\r\n        [4., 4., 4., 4.],\r\n        [4., 4., 4., 4.],\r\n        [4., 4., 4., 4.]])]\r\nRecursiveScriptModule(\r\n  original_name=Sequential\r\n  (0): RecursiveScriptModule(original_name=ModelWithInputAsListOfTensor)\r\n  (1): RecursiveScriptModule(original_name=ModelWithInputAsListOfTensor)\r\n)\r\n---------------------\r\nTraceback (most recent call last):\r\n  File \"tests/test_seq.py\", line 32, in <module>\r\n    res = scripted_model(test_input)\r\n  File \"/Users/linus/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py\", line 727, in _call_impl\r\n    result = self.forward(*input, **kwargs)\r\nRuntimeError: forward() Expected a value of type 'Tensor (inferred)' for argument 'input' but instead found type 'list'.\r\nInferred 'input' to be of type 'Tensor' because it was not annotated with an explicit type.\r\nPosition: 1\r\nValue: [tensor([[1., 1.],\r\n        [1., 1.]]), tensor([[1., 1., 1.],\r\n        [1., 1., 1.],\r\n        [1., 1., 1.]]), tensor([[1., 1., 1., 1.],\r\n        [1., 1., 1., 1.],\r\n        [1., 1., 1., 1.],\r\n        [1., 1., 1., 1.]])]\r\nDeclaration: forward(__torch__.torch.nn.modules.container.Sequential self, Tensor input) -> (Tensor[])\r\nCast error details: Unable to cast Python instance to C++ type (compile in debug mode for details)\r\n```\r\n\r\nWhich indicate that the normal Pytorch model work! And TorchScript seems to infer the input type for `ModelWithInputAsListOfTensor` to `torch.Tensor`, instead of `List[torch.Tensor]`.\r\n\r\nI also tried `torch.jit.annotate(List[torch.Tensor])` but it does not work as well\r\n\r\n## Expected behavior\r\n\r\nThe scripted model can be infer properly. `nn.Sequential` with `nn.Module` that had input type of `List[torch.Tensor]` should be infer as `List[torch.Tensor]`, not `torch.Tensor`\r\n\r\n## Environment\r\n\r\n```console\r\nCollecting environment information...\r\nPyTorch version: 1.7.1\r\nIs debug build: False\r\nCUDA used to build PyTorch: None\r\nROCM used to build PyTorch: N/A\r\n\r\nOS: macOS 11.1 (x86_64)\r\nGCC version: Could not collect\r\nClang version: 12.0.0 (clang-1200.0.32.29)\r\nCMake version: version 3.19.2\r\n\r\nPython version: 3.7 (64-bit runtime)\r\nIs CUDA available: False\r\nCUDA runtime version: No CUDA\r\nGPU models and configuration: No CUDA\r\nNvidia driver version: No CUDA\r\ncuDNN version: No CUDA\r\nHIP runtime version: N/A\r\nMIOpen runtime version: N/A\r\n\r\nVersions of relevant libraries:\r\n[pip3] msgpack-numpy==0.4.7.1\r\n[pip3] numpy==1.18.1\r\n[pip3] numpydoc==1.1.0\r\n[pip3] torch==1.7.1\r\n[pip3] torchaudio==0.7.0a0+a853dff\r\n[pip3] torchtext==0.6.0\r\n[pip3] torchvision==0.8.2\r\n[conda] _tflow_select             2.3.0                       mkl  \r\n[conda] blas                      1.0                         mkl  \r\n[conda] mkl                       2019.4                      233  \r\n[conda] mkl-service               2.3.0            py37hfbe908c_0  \r\n[conda] mkl_fft                   1.2.0            py37hc64f4ea_0  \r\n[conda] mkl_random                1.1.1            py37h959d312_0  \r\n[conda] msgpack-numpy             0.4.7.1                  pypi_0    pypi\r\n[conda] numpy                     1.18.1                   pypi_0    pypi\r\n[conda] numpydoc                  1.1.0              pyhd3eb1b0_1  \r\n[conda] pytorch                   1.7.1                   py3.7_0    pytorch\r\n[conda] tensorflow                1.14.0          mkl_py37h085be34_0  \r\n[conda] tensorflow-base           1.14.0          mkl_py37h5a24fda_0  \r\n[conda] torchaudio                0.7.2                      py37    pytorch\r\n[conda] torchtext                 0.6.0                    pypi_0    pypi\r\n[conda] torchvision               0.8.2                  py37_cpu    pytorch\r\n```\r\n\r\n\r\n## Additional context\r\n\r\nAm I doing something wrong ...... hmmm. Anw, thanks for checking by\n\ncc @gmagogsfm",
        "closed_by": {
            "login": "ansley",
            "id": 59447410,
            "node_id": "MDQ6VXNlcjU5NDQ3NDEw",
            "avatar_url": "https://avatars.githubusercontent.com/u/59447410?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ansley",
            "html_url": "https://github.com/ansley",
            "followers_url": "https://api.github.com/users/ansley/followers",
            "following_url": "https://api.github.com/users/ansley/following{/other_user}",
            "gists_url": "https://api.github.com/users/ansley/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ansley/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ansley/subscriptions",
            "organizations_url": "https://api.github.com/users/ansley/orgs",
            "repos_url": "https://api.github.com/users/ansley/repos",
            "events_url": "https://api.github.com/users/ansley/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ansley/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/52588/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/52588/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/52554",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/52554/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/52554/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/52554/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/52554",
        "id": 812642586,
        "node_id": "MDU6SXNzdWU4MTI2NDI1ODY=",
        "number": 52554,
        "title": "docs: Creating TorchScript Code autosummary showing signatures",
        "user": {
            "login": "ydcjeff",
            "id": 32727188,
            "node_id": "MDQ6VXNlcjMyNzI3MTg4",
            "avatar_url": "https://avatars.githubusercontent.com/u/32727188?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ydcjeff",
            "html_url": "https://github.com/ydcjeff",
            "followers_url": "https://api.github.com/users/ydcjeff/followers",
            "following_url": "https://api.github.com/users/ydcjeff/following{/other_user}",
            "gists_url": "https://api.github.com/users/ydcjeff/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ydcjeff/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ydcjeff/subscriptions",
            "organizations_url": "https://api.github.com/users/ydcjeff/orgs",
            "repos_url": "https://api.github.com/users/ydcjeff/repos",
            "events_url": "https://api.github.com/users/ydcjeff/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ydcjeff/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2021-02-20T15:31:12Z",
        "updated_at": "2021-02-23T00:21:27Z",
        "closed_at": "2021-02-23T00:21:27Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "## \ud83d\udcda Documentation\r\nhttps://pytorch.org/docs/master/jit.html#creating-torchscript-code is showing signatures while\r\nhttps://pytorch.org/docs/master/nn.html#containers is not showing signatures.\r\n\r\nTo be consistent, I will remove signatures and go ahead with a PR.\n\ncc @gmagogsfm",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/52554/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/52554/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/52456",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/52456/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/52456/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/52456/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/52456",
        "id": 811425473,
        "node_id": "MDU6SXNzdWU4MTE0MjU0NzM=",
        "number": 52456,
        "title": "[JIT] Context Manager to Ignore Source Ranges in IR Dumps",
        "user": {
            "login": "eellison",
            "id": 11477974,
            "node_id": "MDQ6VXNlcjExNDc3OTc0",
            "avatar_url": "https://avatars.githubusercontent.com/u/11477974?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eellison",
            "html_url": "https://github.com/eellison",
            "followers_url": "https://api.github.com/users/eellison/followers",
            "following_url": "https://api.github.com/users/eellison/following{/other_user}",
            "gists_url": "https://api.github.com/users/eellison/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eellison/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eellison/subscriptions",
            "organizations_url": "https://api.github.com/users/eellison/orgs",
            "repos_url": "https://api.github.com/users/eellison/repos",
            "events_url": "https://api.github.com/users/eellison/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eellison/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1027606656,
                "node_id": "MDU6TGFiZWwxMDI3NjA2NjU2",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20bootcamp",
                "name": "module: bootcamp",
                "color": "f7e101",
                "default": false,
                "description": "We plan to do a full writeup on the issue, and then get someone to do it for onboarding"
            },
            {
                "id": 2203967172,
                "node_id": "MDU6TGFiZWwyMjAzOTY3MTcy",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/days",
                "name": "days",
                "color": "77f497",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "jbschlosser",
            "id": 75754324,
            "node_id": "MDQ6VXNlcjc1NzU0MzI0",
            "avatar_url": "https://avatars.githubusercontent.com/u/75754324?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jbschlosser",
            "html_url": "https://github.com/jbschlosser",
            "followers_url": "https://api.github.com/users/jbschlosser/followers",
            "following_url": "https://api.github.com/users/jbschlosser/following{/other_user}",
            "gists_url": "https://api.github.com/users/jbschlosser/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jbschlosser/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jbschlosser/subscriptions",
            "organizations_url": "https://api.github.com/users/jbschlosser/orgs",
            "repos_url": "https://api.github.com/users/jbschlosser/repos",
            "events_url": "https://api.github.com/users/jbschlosser/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jbschlosser/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "jbschlosser",
                "id": 75754324,
                "node_id": "MDQ6VXNlcjc1NzU0MzI0",
                "avatar_url": "https://avatars.githubusercontent.com/u/75754324?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/jbschlosser",
                "html_url": "https://github.com/jbschlosser",
                "followers_url": "https://api.github.com/users/jbschlosser/followers",
                "following_url": "https://api.github.com/users/jbschlosser/following{/other_user}",
                "gists_url": "https://api.github.com/users/jbschlosser/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/jbschlosser/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jbschlosser/subscriptions",
                "organizations_url": "https://api.github.com/users/jbschlosser/orgs",
                "repos_url": "https://api.github.com/users/jbschlosser/repos",
                "events_url": "https://api.github.com/users/jbschlosser/events{/privacy}",
                "received_events_url": "https://api.github.com/users/jbschlosser/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2021-02-18T20:16:49Z",
        "updated_at": "2021-03-04T17:12:58Z",
        "closed_at": "2021-03-04T17:12:58Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "## \ud83d\ude80 Feature\r\n\r\nIt is often the case that when debugging a graph or when committing a test, the sourcerange is pure noise and we would like to ignore it. It would to nice have a global flag and a context manager that prints graph dumps without the sourcerange.\r\n```\r\nprint(graph)\r\nwith torch.jit._hide_sourceranges():\r\n     print(graph)\r\n```\r\n> `%17 : int = prim::Constant[value=576]() # /home/eellison/.conda/envs/work/lib/python3.7/site-packages/torch/nn/modules/conv.py:396:53`\r\n...\r\n> `%17 : int = prim::Constant[value=576]()`\r\n\r\nI think there was separately an issue for stripping source ranges on graphs for mobile, that might also be nice. \r\n\r\ncc @gmagogsfm",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/52456/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/52456/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/52301",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/52301/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/52301/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/52301/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/52301",
        "id": 809462767,
        "node_id": "MDU6SXNzdWU4MDk0NjI3Njc=",
        "number": 52301,
        "title": "[TorchScript Usability] Problems with `Any` type",
        "user": {
            "login": "penguinwu",
            "id": 3172245,
            "node_id": "MDQ6VXNlcjMxNzIyNDU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3172245?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/penguinwu",
            "html_url": "https://github.com/penguinwu",
            "followers_url": "https://api.github.com/users/penguinwu/followers",
            "following_url": "https://api.github.com/users/penguinwu/following{/other_user}",
            "gists_url": "https://api.github.com/users/penguinwu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/penguinwu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/penguinwu/subscriptions",
            "organizations_url": "https://api.github.com/users/penguinwu/orgs",
            "repos_url": "https://api.github.com/users/penguinwu/repos",
            "events_url": "https://api.github.com/users/penguinwu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/penguinwu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "ansley",
            "id": 59447410,
            "node_id": "MDQ6VXNlcjU5NDQ3NDEw",
            "avatar_url": "https://avatars.githubusercontent.com/u/59447410?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ansley",
            "html_url": "https://github.com/ansley",
            "followers_url": "https://api.github.com/users/ansley/followers",
            "following_url": "https://api.github.com/users/ansley/following{/other_user}",
            "gists_url": "https://api.github.com/users/ansley/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ansley/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ansley/subscriptions",
            "organizations_url": "https://api.github.com/users/ansley/orgs",
            "repos_url": "https://api.github.com/users/ansley/repos",
            "events_url": "https://api.github.com/users/ansley/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ansley/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "ansley",
                "id": 59447410,
                "node_id": "MDQ6VXNlcjU5NDQ3NDEw",
                "avatar_url": "https://avatars.githubusercontent.com/u/59447410?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ansley",
                "html_url": "https://github.com/ansley",
                "followers_url": "https://api.github.com/users/ansley/followers",
                "following_url": "https://api.github.com/users/ansley/following{/other_user}",
                "gists_url": "https://api.github.com/users/ansley/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ansley/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ansley/subscriptions",
                "organizations_url": "https://api.github.com/users/ansley/orgs",
                "repos_url": "https://api.github.com/users/ansley/repos",
                "events_url": "https://api.github.com/users/ansley/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ansley/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 2,
        "created_at": "2021-02-16T16:33:32Z",
        "updated_at": "2021-03-05T21:19:31Z",
        "closed_at": "2021-03-05T21:19:30Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\nDiscovered two problems w/ usage of `Any` type\r\n\r\n### Incorrect results when using `Any` type\r\n\r\nAnother test case: [test-local-annotation3.py](https://github.com/penguinwu/hodgepodge/blob/master/TorchScriptStudy/bad-examples/test-local-annotation3.py)\r\n\r\nI tried to use if-then-else statement instead of conditional expressions, and found out that the value produced was wrong:\r\n```\r\npython test-local-annotation3.py \r\nEager: 2\r\nTorchScript: 1.0\r\n```\r\n\r\n### Conditional expression cannot be evaluated to `Any` type\r\n\r\nTest case: [test-local-annotation2.py](https://github.com/penguinwu/hodgepodge/blob/master/TorchScriptStudy/bad-examples/test-local-annotation2.py)\r\n\r\nIn this test case, the type checker cannot infer a conditional expression into a type of `Any`, resulting in\r\n```\r\npython test-local-annotation2.py \r\nTraceback (most recent call last):\r\n  File \"test-local-annotation2.py\", line 7, in <module>\r\n    m = torch.jit.script(f)\r\n  File \"/home/pengwu/local/miniconda3/envs/pytorch/lib/python3.8/site-packages/torch/jit/_script.py\", line 939, in script\r\n    fn = torch._C._jit_script_compile(\r\nRuntimeError: \r\nif-expression's true branch has type int but false branch has type float:\r\n  File \"test-local-annotation2.py\", line 4\r\ndef f(a: int, b: float, flag: bool):\r\n    value: Any = a if flag else b\r\n                 ~~~~~~~~~~~~~~~~ <--- HERE\r\n    return value\r\n```\r\n\r\nRelated to #50444 \n\ncc @gmagogsfm",
        "closed_by": {
            "login": "ansley",
            "id": 59447410,
            "node_id": "MDQ6VXNlcjU5NDQ3NDEw",
            "avatar_url": "https://avatars.githubusercontent.com/u/59447410?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ansley",
            "html_url": "https://github.com/ansley",
            "followers_url": "https://api.github.com/users/ansley/followers",
            "following_url": "https://api.github.com/users/ansley/following{/other_user}",
            "gists_url": "https://api.github.com/users/ansley/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ansley/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ansley/subscriptions",
            "organizations_url": "https://api.github.com/users/ansley/orgs",
            "repos_url": "https://api.github.com/users/ansley/repos",
            "events_url": "https://api.github.com/users/ansley/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ansley/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/52301/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/52301/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/51833",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/51833/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/51833/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/51833/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/51833",
        "id": 802725885,
        "node_id": "MDU6SXNzdWU4MDI3MjU4ODU=",
        "number": 51833,
        "title": "Segfault printing `torch::jit::Graph` in ONNX test suite traceback",
        "user": {
            "login": "peterbell10",
            "id": 13238737,
            "node_id": "MDQ6VXNlcjEzMjM4NzM3",
            "avatar_url": "https://avatars.githubusercontent.com/u/13238737?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/peterbell10",
            "html_url": "https://github.com/peterbell10",
            "followers_url": "https://api.github.com/users/peterbell10/followers",
            "following_url": "https://api.github.com/users/peterbell10/following{/other_user}",
            "gists_url": "https://api.github.com/users/peterbell10/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/peterbell10/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/peterbell10/subscriptions",
            "organizations_url": "https://api.github.com/users/peterbell10/orgs",
            "repos_url": "https://api.github.com/users/peterbell10/repos",
            "events_url": "https://api.github.com/users/peterbell10/events{/privacy}",
            "received_events_url": "https://api.github.com/users/peterbell10/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 693805995,
                "node_id": "MDU6TGFiZWw2OTM4MDU5OTU=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20onnx",
                "name": "module: onnx",
                "color": "f7e101",
                "default": false,
                "description": "Related to torch.onnx"
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            },
            {
                "id": 3202390887,
                "node_id": "MDU6TGFiZWwzMjAyMzkwODg3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/onnx-triaged",
                "name": "onnx-triaged",
                "color": "006b75",
                "default": false,
                "description": "triaged by ONNX team"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "BowenBao",
            "id": 9376104,
            "node_id": "MDQ6VXNlcjkzNzYxMDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9376104?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/BowenBao",
            "html_url": "https://github.com/BowenBao",
            "followers_url": "https://api.github.com/users/BowenBao/followers",
            "following_url": "https://api.github.com/users/BowenBao/following{/other_user}",
            "gists_url": "https://api.github.com/users/BowenBao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/BowenBao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/BowenBao/subscriptions",
            "organizations_url": "https://api.github.com/users/BowenBao/orgs",
            "repos_url": "https://api.github.com/users/BowenBao/repos",
            "events_url": "https://api.github.com/users/BowenBao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/BowenBao/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "BowenBao",
                "id": 9376104,
                "node_id": "MDQ6VXNlcjkzNzYxMDQ=",
                "avatar_url": "https://avatars.githubusercontent.com/u/9376104?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/BowenBao",
                "html_url": "https://github.com/BowenBao",
                "followers_url": "https://api.github.com/users/BowenBao/followers",
                "following_url": "https://api.github.com/users/BowenBao/following{/other_user}",
                "gists_url": "https://api.github.com/users/BowenBao/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/BowenBao/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/BowenBao/subscriptions",
                "organizations_url": "https://api.github.com/users/BowenBao/orgs",
                "repos_url": "https://api.github.com/users/BowenBao/repos",
                "events_url": "https://api.github.com/users/BowenBao/events{/privacy}",
                "received_events_url": "https://api.github.com/users/BowenBao/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 12,
        "created_at": "2021-02-06T15:34:12Z",
        "updated_at": "2022-11-29T18:16:26Z",
        "closed_at": "2022-10-28T23:51:51Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\nI consistently get a segfault when any of the ONNX tests fail running under `pytest`. `gdb` shows the error coming from `__repr__` of `torch::jit::Graph`, and looks like a possible use after free.\r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior:\r\n\r\n1. In `torch/onnx/symblic_opset9.py` replace `mul` with `def mul(g, self, other): raise RuntimeError()`\r\n1. Build and run onnx test with pytest: `pytest onnx/test_pytorch_onnx_onnxruntime.py -k test_arithmetic`\r\n\r\nRelevant (non-CPython) part of C++ stack trace:\r\n```\r\n#0  0x0000555558c8d470 in ?? ()\r\n#1  0x00007ffd87360315 in c10::operator<< (out=..., t=...) at ../aten/src/ATen/core/type.cpp:120\r\n#2  0x00007ffd8b443c8f in torch::jit::operator<< (out=..., l=...) at ../torch/csrc/jit/ir/ir.cpp:98\r\n#3  0x00007ffd8b44551b in torch::jit::Graph::print (this=0x555558c8de60, out=..., print_source_locations=true)\r\n    at ../torch/csrc/jit/ir/ir.cpp:320\r\n#4  0x00007ffd8b453468 in torch::jit::Graph::toString[abi:cxx11](bool) const (this=0x555558c8de60, \r\n    print_source_locations=true) at ../torch/csrc/jit/ir/ir.cpp:1841\r\n#5  0x00007ffd97a8b7a9 in torch::jit::<lambda(torch::jit::Graph&)>::operator()(torch::jit::Graph &) const (\r\n    __closure=0x5555582ce288, g=...) at ../torch/csrc/jit/python/python_ir.cpp:215\r\n#6  0x00007ffd97aba3c7 in pybind11::detail::argument_loader<torch::jit::Graph&>::call_impl<std::__cxx11::basic_string<char>, torch::jit::initPythonIRBindings(PyObject*)::<lambda(torch::jit::Graph&)>&, 0, pybind11::detail::void_type>(torch::jit::<lambda(torch::jit::Graph&)> &, std::index_sequence, pybind11::detail::void_type &&) (this=0x7fffffff7cb0, f=...)\r\n    at ../torch/include/pybind11/cast.h:2042\r\n#7  0x00007ffd97ab60cf in pybind11::detail::argument_loader<torch::jit::Graph&>::call<std::__cxx11::basic_string<char>, pybind11::detail::void_type, torch::jit::initPythonIRBindings(PyObject*)::<lambda(torch::jit::Graph&)>&>(torch::jit::<lambda(torch::jit::Graph&)> &) (this=0x7fffffff7cb0, f=...) at ../torch/include/pybind11/cast.h:2014\r\n#8  0x00007ffd97aa3c17 in pybind11::cpp_function::<lambda(pybind11::detail::function_call&)>::operator()(pybind11::detail::function_call &) const (this=0x0, call=...) at ../torch/include/pybind11/pybind11.h:192\r\n#9  0x00007ffd97aa3cbd in pybind11::cpp_function::<lambda(pybind11::detail::function_call&)>::_FUN(pybind11::detail::function_call &) () at ../torch/include/pybind11/pybind11.h:170\r\n#10 0x00007ffd9732da78 in pybind11::cpp_function::dispatcher (self=0x7ffd507a34b0, args_in=0x7ffd44844bb0, kwargs_in=0x0)\r\n    at ../torch/include/pybind11/pybind11.h:767\r\n```\r\n\r\npython stack trace:\r\n```\r\nFatal Python error: Segmentation fault\r\n\r\nCurrent thread 0x00007f054a514740 (most recent call first):\r\n  File \"/home/pbell/.conda/envs/pytorch-dev/lib/python3.8/site-packages/_pytest/_io/saferepr.py\", line 58 in repr_instance\r\n  File \"/home/pbell/.conda/envs/pytorch-dev/lib/python3.8/reprlib.py\", line 62 in repr1\r\n  File \"/home/pbell/.conda/envs/pytorch-dev/lib/python3.8/reprlib.py\", line 52 in repr\r\n  File \"/home/pbell/.conda/envs/pytorch-dev/lib/python3.8/site-packages/_pytest/_io/saferepr.py\", line 49 in repr\r\n  File \"/home/pbell/.conda/envs/pytorch-dev/lib/python3.8/site-packages/_pytest/_io/saferepr.py\", line 88 in saferepr\r\n  File \"/home/pbell/.conda/envs/pytorch-dev/lib/python3.8/site-packages/_pytest/_code/code.py\", line 686 in repr_args\r\n  File \"/home/pbell/.conda/envs/pytorch-dev/lib/python3.8/site-packages/_pytest/_code/code.py\", line 776 in repr_traceback_entry\r\n  File \"/home/pbell/.conda/envs/pytorch-dev/lib/python3.8/site-packages/_pytest/_code/code.py\", line 825 in repr_traceback\r\n  File \"/home/pbell/.conda/envs/pytorch-dev/lib/python3.8/site-packages/_pytest/_code/code.py\", line 884 in repr_excinfo\r\n  File \"/home/pbell/.conda/envs/pytorch-dev/lib/python3.8/site-packages/_pytest/_code/code.py\", line 627 in getrepr\r\n  File \"/home/pbell/.conda/envs/pytorch-dev/lib/python3.8/site-packages/_pytest/nodes.py\", line 409 in _repr_failure_py\r\n  File \"/home/pbell/.conda/envs/pytorch-dev/lib/python3.8/site-packages/_pytest/python.py\", line 1663 in repr_failure\r\n  File \"/home/pbell/.conda/envs/pytorch-dev/lib/python3.8/site-packages/_pytest/reports.py\", line 318 in from_item_and_call\r\n  File \"/home/pbell/.conda/envs/pytorch-dev/lib/python3.8/site-packages/_pytest/runner.py\", line 336 in pytest_runtest_makereport\r\n  File \"/home/pbell/.conda/envs/pytorch-dev/lib/python3.8/site-packages/pluggy/callers.py\", line 187 in _multicall\r\n  File \"/home/pbell/.conda/envs/pytorch-dev/lib/python3.8/site-packages/pluggy/manager.py\", line 84 in <lambda>\r\n  File \"/home/pbell/.conda/envs/pytorch-dev/lib/python3.8/site-packages/pluggy/manager.py\", line 93 in _hookexec\r\n  File \"/home/pbell/.conda/envs/pytorch-dev/lib/python3.8/site-packages/pluggy/hooks.py\", line 286 in __call__\r\n  File \"/home/pbell/.conda/envs/pytorch-dev/lib/python3.8/site-packages/_pytest/runner.py\", line 218 in call_and_report\r\n  File \"/home/pbell/.conda/envs/pytorch-dev/lib/python3.8/site-packages/_pytest/runner.py\", line 127 in runtestprotocol\r\n  File \"/home/pbell/.conda/envs/pytorch-dev/lib/python3.8/site-packages/_pytest/runner.py\", line 110 in pytest_runtest_protocol\r\n  File \"/home/pbell/.conda/envs/pytorch-dev/lib/python3.8/site-packages/pluggy/callers.py\", line 187 in _multicall\r\n  File \"/home/pbell/.conda/envs/pytorch-dev/lib/python3.8/site-packages/pluggy/manager.py\", line 84 in <lambda>\r\n  File \"/home/pbell/.conda/envs/pytorch-dev/lib/python3.8/site-packages/pluggy/manager.py\", line 93 in _hookexec\r\n  File \"/home/pbell/.conda/envs/pytorch-dev/lib/python3.8/site-packages/pluggy/hooks.py\", line 286 in __call__\r\n  File \"/home/pbell/.conda/envs/pytorch-dev/lib/python3.8/site-packages/_pytest/main.py\", line 338 in pytest_runtestloop\r\n  File \"/home/pbell/.conda/envs/pytorch-dev/lib/python3.8/site-packages/pluggy/callers.py\", line 187 in _multicall\r\n  File \"/home/pbell/.conda/envs/pytorch-dev/lib/python3.8/site-packages/pluggy/manager.py\", line 84 in <lambda>\r\n  File \"/home/pbell/.conda/envs/pytorch-dev/lib/python3.8/site-packages/pluggy/manager.py\", line 93 in _hookexec\r\n  File \"/home/pbell/.conda/envs/pytorch-dev/lib/python3.8/site-packages/pluggy/hooks.py\", line 286 in __call__\r\n  File \"/home/pbell/.conda/envs/pytorch-dev/lib/python3.8/site-packages/_pytest/main.py\", line 313 in _main\r\n  File \"/home/pbell/.conda/envs/pytorch-dev/lib/python3.8/site-packages/_pytest/main.py\", line 257 in wrap_session\r\n  File \"/home/pbell/.conda/envs/pytorch-dev/lib/python3.8/site-packages/_pytest/main.py\", line 306 in pytest_cmdline_main\r\n  File \"/home/pbell/.conda/envs/pytorch-dev/lib/python3.8/site-packages/pluggy/callers.py\", line 187 in _multicall\r\n  File \"/home/pbell/.conda/envs/pytorch-dev/lib/python3.8/site-packages/pluggy/manager.py\", line 84 in <lambda>\r\n  File \"/home/pbell/.conda/envs/pytorch-dev/lib/python3.8/site-packages/pluggy/manager.py\", line 93 in _hookexec\r\n  File \"/home/pbell/.conda/envs/pytorch-dev/lib/python3.8/site-packages/pluggy/hooks.py\", line 286 in __call__\r\n  File \"/home/pbell/.conda/envs/pytorch-dev/lib/python3.8/site-packages/_pytest/config/__init__.py\", line 164 in main\r\n  File \"/home/pbell/.conda/envs/pytorch-dev/bin/pytest\", line 11 in <module>\r\nSegmentation fault (core dumped)\r\n```\r\n\r\n## Environment\r\n\r\n```\r\nCollecting environment information...\r\nPyTorch version: 1.8.0a0+af2250e\r\nIs debug build: True\r\nCUDA used to build PyTorch: 11.0\r\nROCM used to build PyTorch: N/A\r\n\r\nOS: Ubuntu 20.04.1 LTS (x86_64)\r\nGCC version: (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0\r\nClang version: Could not collect\r\nCMake version: version 3.18.2\r\n\r\nPython version: 3.8 (64-bit runtime)\r\nIs CUDA available: True\r\nCUDA runtime version: Could not collect\r\nGPU models and configuration: \r\nGPU 0: GeForce RTX 2060\r\nGPU 1: GeForce RTX 2060\r\n\r\nNvidia driver version: 460.27.04\r\ncuDNN version: Probably one of the following:\r\n/usr/local/cuda-10.1.243/targets/x86_64-linux/lib/libcudnn.so.8\r\n/usr/local/cuda-10.1.243/targets/x86_64-linux/lib/libcudnn_adv_infer.so.8\r\n/usr/local/cuda-10.1.243/targets/x86_64-linux/lib/libcudnn_adv_train.so.8\r\n/usr/local/cuda-10.1.243/targets/x86_64-linux/lib/libcudnn_cnn_infer.so.8\r\n/usr/local/cuda-10.1.243/targets/x86_64-linux/lib/libcudnn_cnn_train.so.8\r\n/usr/local/cuda-10.1.243/targets/x86_64-linux/lib/libcudnn_ops_infer.so.8\r\n/usr/local/cuda-10.1.243/targets/x86_64-linux/lib/libcudnn_ops_train.so.8\r\n/usr/local/cuda-10.2.89/targets/x86_64-linux/lib/libcudnn.so.8\r\n/usr/local/cuda-10.2.89/targets/x86_64-linux/lib/libcudnn_adv_infer.so.8\r\n/usr/local/cuda-10.2.89/targets/x86_64-linux/lib/libcudnn_adv_train.so.8\r\n/usr/local/cuda-10.2.89/targets/x86_64-linux/lib/libcudnn_cnn_infer.so.8\r\n/usr/local/cuda-10.2.89/targets/x86_64-linux/lib/libcudnn_cnn_train.so.8\r\n/usr/local/cuda-10.2.89/targets/x86_64-linux/lib/libcudnn_ops_infer.so.8\r\n/usr/local/cuda-10.2.89/targets/x86_64-linux/lib/libcudnn_ops_train.so.8\r\nHIP runtime version: N/A\r\nMIOpen runtime version: N/A\r\n\r\nVersions of relevant libraries:\r\n[pip3] numpy==1.19.4\r\n[pip3] pytorch-sphinx-theme==0.0.19\r\n[pip3] torch==1.8.0a0+7bbbca7\r\n[pip3] torchvision==0.9.0.dev20210205\r\n[conda] mkl                       2020.2                      256    conda-forge\r\n[conda] mkl-include               2020.2                      256    conda-forge\r\n[conda] mkl-service               2.3.0            py38h1e0a361_2    conda-forge\r\n[conda] mkl_fft                   1.2.0            py38hab2c0dc_1    conda-forge\r\n[conda] numpy                     1.19.4           py38hf0fd68c_1    conda-forge\r\n[conda] pytorch-sphinx-theme      0.0.19                   pypi_0    pypi\r\n[conda] torch                     1.8.0a0+7bbbca7          pypi_0    pypi\r\n[conda] torchvision               0.9.0.dev20210205      py38_cu102    pytorch-nightly\r\n```\r\n\n\ncc @houseroad @spandantiwari @lara-hdr @BowenBao @neginraoof @gmagogsfm",
        "closed_by": {
            "login": "pytorchmergebot",
            "id": 97764156,
            "node_id": "U_kgDOBdPDPA",
            "avatar_url": "https://avatars.githubusercontent.com/u/97764156?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pytorchmergebot",
            "html_url": "https://github.com/pytorchmergebot",
            "followers_url": "https://api.github.com/users/pytorchmergebot/followers",
            "following_url": "https://api.github.com/users/pytorchmergebot/following{/other_user}",
            "gists_url": "https://api.github.com/users/pytorchmergebot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pytorchmergebot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pytorchmergebot/subscriptions",
            "organizations_url": "https://api.github.com/users/pytorchmergebot/orgs",
            "repos_url": "https://api.github.com/users/pytorchmergebot/repos",
            "events_url": "https://api.github.com/users/pytorchmergebot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pytorchmergebot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/51833/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/51833/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/51735",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/51735/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/51735/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/51735/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/51735",
        "id": 801537737,
        "node_id": "MDU6SXNzdWU4MDE1Mzc3Mzc=",
        "number": 51735,
        "title": "aten::normal_ not handled as a special op in RemoveTensorMutation pass.",
        "user": {
            "login": "neginraoof",
            "id": 16928382,
            "node_id": "MDQ6VXNlcjE2OTI4Mzgy",
            "avatar_url": "https://avatars.githubusercontent.com/u/16928382?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/neginraoof",
            "html_url": "https://github.com/neginraoof",
            "followers_url": "https://api.github.com/users/neginraoof/followers",
            "following_url": "https://api.github.com/users/neginraoof/following{/other_user}",
            "gists_url": "https://api.github.com/users/neginraoof/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/neginraoof/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neginraoof/subscriptions",
            "organizations_url": "https://api.github.com/users/neginraoof/orgs",
            "repos_url": "https://api.github.com/users/neginraoof/repos",
            "events_url": "https://api.github.com/users/neginraoof/events{/privacy}",
            "received_events_url": "https://api.github.com/users/neginraoof/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 912691507,
                "node_id": "MDU6TGFiZWw5MTI2OTE1MDc=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20internals",
                "name": "module: internals",
                "color": "f7e101",
                "default": false,
                "description": "Related to internal abstractions in c10 and ATen"
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "eellison",
            "id": 11477974,
            "node_id": "MDQ6VXNlcjExNDc3OTc0",
            "avatar_url": "https://avatars.githubusercontent.com/u/11477974?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eellison",
            "html_url": "https://github.com/eellison",
            "followers_url": "https://api.github.com/users/eellison/followers",
            "following_url": "https://api.github.com/users/eellison/following{/other_user}",
            "gists_url": "https://api.github.com/users/eellison/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eellison/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eellison/subscriptions",
            "organizations_url": "https://api.github.com/users/eellison/orgs",
            "repos_url": "https://api.github.com/users/eellison/repos",
            "events_url": "https://api.github.com/users/eellison/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eellison/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "eellison",
                "id": 11477974,
                "node_id": "MDQ6VXNlcjExNDc3OTc0",
                "avatar_url": "https://avatars.githubusercontent.com/u/11477974?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/eellison",
                "html_url": "https://github.com/eellison",
                "followers_url": "https://api.github.com/users/eellison/followers",
                "following_url": "https://api.github.com/users/eellison/following{/other_user}",
                "gists_url": "https://api.github.com/users/eellison/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/eellison/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eellison/subscriptions",
                "organizations_url": "https://api.github.com/users/eellison/orgs",
                "repos_url": "https://api.github.com/users/eellison/repos",
                "events_url": "https://api.github.com/users/eellison/events{/privacy}",
                "received_events_url": "https://api.github.com/users/eellison/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 7,
        "created_at": "2021-02-04T18:35:34Z",
        "updated_at": "2021-03-10T22:30:20Z",
        "closed_at": "2021-03-10T22:30:20Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\naten::normal_ should be considered as a special op in remove mutation pass.\r\nThe op does not have an equivalent aten::normal\r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior:\r\n\r\nApply remove mutation on the model below:\r\n\r\n```\r\nclass Noise(nn.Module):\r\n    def forward(self, image):\r\n        return image.new_empty(2, 1, 3, 4).normal_()\r\n```\r\n\r\n## Expected behavior\r\n\r\nError is:\r\nRuntimeError: 0 INTERNAL ASSERT FAILED at \"/pytorch/torch/csrc/jit/ir/alias_analysis.cpp\":532, please report a bug to PyTorch. We don't have an op for aten::normal but it isn't a special case.  Argument types: Tensor, float, float, None, \r\n\n\ncc @ezyang @bhosmer @smessmer @ljk53 @bdhirsh @ailzhang @gmagogsfm",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/51735/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/51735/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/51691",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/51691/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/51691/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/51691/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/51691",
        "id": 800853272,
        "node_id": "MDU6SXNzdWU4MDA4NTMyNzI=",
        "number": 51691,
        "title": "jit internal python bindings all get added to the `torch.` namespace.",
        "user": {
            "login": "albanD",
            "id": 6359743,
            "node_id": "MDQ6VXNlcjYzNTk3NDM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6359743?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/albanD",
            "html_url": "https://github.com/albanD",
            "followers_url": "https://api.github.com/users/albanD/followers",
            "following_url": "https://api.github.com/users/albanD/following{/other_user}",
            "gists_url": "https://api.github.com/users/albanD/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/albanD/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/albanD/subscriptions",
            "organizations_url": "https://api.github.com/users/albanD/orgs",
            "repos_url": "https://api.github.com/users/albanD/repos",
            "events_url": "https://api.github.com/users/albanD/events{/privacy}",
            "received_events_url": "https://api.github.com/users/albanD/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 2203967172,
                "node_id": "MDU6TGFiZWwyMjAzOTY3MTcy",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/days",
                "name": "days",
                "color": "77f497",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "SplitInfinity",
            "id": 4392003,
            "node_id": "MDQ6VXNlcjQzOTIwMDM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4392003?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SplitInfinity",
            "html_url": "https://github.com/SplitInfinity",
            "followers_url": "https://api.github.com/users/SplitInfinity/followers",
            "following_url": "https://api.github.com/users/SplitInfinity/following{/other_user}",
            "gists_url": "https://api.github.com/users/SplitInfinity/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SplitInfinity/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SplitInfinity/subscriptions",
            "organizations_url": "https://api.github.com/users/SplitInfinity/orgs",
            "repos_url": "https://api.github.com/users/SplitInfinity/repos",
            "events_url": "https://api.github.com/users/SplitInfinity/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SplitInfinity/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "SplitInfinity",
                "id": 4392003,
                "node_id": "MDQ6VXNlcjQzOTIwMDM=",
                "avatar_url": "https://avatars.githubusercontent.com/u/4392003?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/SplitInfinity",
                "html_url": "https://github.com/SplitInfinity",
                "followers_url": "https://api.github.com/users/SplitInfinity/followers",
                "following_url": "https://api.github.com/users/SplitInfinity/following{/other_user}",
                "gists_url": "https://api.github.com/users/SplitInfinity/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/SplitInfinity/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/SplitInfinity/subscriptions",
                "organizations_url": "https://api.github.com/users/SplitInfinity/orgs",
                "repos_url": "https://api.github.com/users/SplitInfinity/repos",
                "events_url": "https://api.github.com/users/SplitInfinity/events{/privacy}",
                "received_events_url": "https://api.github.com/users/SplitInfinity/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 6,
        "created_at": "2021-02-04T01:49:08Z",
        "updated_at": "2021-02-27T00:07:33Z",
        "closed_at": "2021-02-27T00:07:33Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### The problem\r\n\r\nWe have a construct in the torch init that adds to `torch.XX` anything that is is `torch._C.XX`.\r\nThe jit init is given the torch._C module here: https://github.com/pytorch/pytorch/blob/45e5562fcc5b0759b26f46f18f1156213b354902/torch/csrc/jit/python/init.cpp#L134\r\nThis file adds a lot of internal stuff (_XX) which is ok as they are not added to `torch.`.\r\n\r\nBut the python IR binding called afterwards here: https://github.com/pytorch/pytorch/blob/45e5562fcc5b0759b26f46f18f1156213b354902/torch/csrc/jit/python/python_ir.cpp#L210\r\n\r\nAdds many things with the `_` and so all of these things get added to `torch.` in the end.\r\n\r\nNote that other subset of the jit might be doing the same thing, but I stumbled upon the IR binding one first.\r\n\r\n\r\n### Proposed solution\r\n\r\nMy proposed solution is to make the top level module create a `torch._C._jit` submodule that will be passed to all the initialization code. This way, none of it will be added to the `torch.` package.\r\nBut we can explore other options as well!\r\n\n\ncc @gmagogsfm",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/51691/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/51691/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/51582",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/51582/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/51582/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/51582/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/51582",
        "id": 799692994,
        "node_id": "MDU6SXNzdWU3OTk2OTI5OTQ=",
        "number": 51582,
        "title": "[JIT] Support Union[NoneType, T] as input type",
        "user": {
            "login": "esqu1",
            "id": 7027037,
            "node_id": "MDQ6VXNlcjcwMjcwMzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7027037?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/esqu1",
            "html_url": "https://github.com/esqu1",
            "followers_url": "https://api.github.com/users/esqu1/followers",
            "following_url": "https://api.github.com/users/esqu1/following{/other_user}",
            "gists_url": "https://api.github.com/users/esqu1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/esqu1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/esqu1/subscriptions",
            "organizations_url": "https://api.github.com/users/esqu1/orgs",
            "repos_url": "https://api.github.com/users/esqu1/repos",
            "events_url": "https://api.github.com/users/esqu1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/esqu1/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "nikithamalgifb",
            "id": 70345919,
            "node_id": "MDQ6VXNlcjcwMzQ1OTE5",
            "avatar_url": "https://avatars.githubusercontent.com/u/70345919?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nikithamalgifb",
            "html_url": "https://github.com/nikithamalgifb",
            "followers_url": "https://api.github.com/users/nikithamalgifb/followers",
            "following_url": "https://api.github.com/users/nikithamalgifb/following{/other_user}",
            "gists_url": "https://api.github.com/users/nikithamalgifb/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nikithamalgifb/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nikithamalgifb/subscriptions",
            "organizations_url": "https://api.github.com/users/nikithamalgifb/orgs",
            "repos_url": "https://api.github.com/users/nikithamalgifb/repos",
            "events_url": "https://api.github.com/users/nikithamalgifb/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nikithamalgifb/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "nikithamalgifb",
                "id": 70345919,
                "node_id": "MDQ6VXNlcjcwMzQ1OTE5",
                "avatar_url": "https://avatars.githubusercontent.com/u/70345919?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/nikithamalgifb",
                "html_url": "https://github.com/nikithamalgifb",
                "followers_url": "https://api.github.com/users/nikithamalgifb/followers",
                "following_url": "https://api.github.com/users/nikithamalgifb/following{/other_user}",
                "gists_url": "https://api.github.com/users/nikithamalgifb/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/nikithamalgifb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nikithamalgifb/subscriptions",
                "organizations_url": "https://api.github.com/users/nikithamalgifb/orgs",
                "repos_url": "https://api.github.com/users/nikithamalgifb/repos",
                "events_url": "https://api.github.com/users/nikithamalgifb/events{/privacy}",
                "received_events_url": "https://api.github.com/users/nikithamalgifb/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2021-02-02T21:12:41Z",
        "updated_at": "2021-02-04T14:29:14Z",
        "closed_at": "2021-02-04T14:29:14Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\nWhile `Union` is not supported yet in TorchScript, it would be tremendously useful to have support for `Union[None, ...]`. This is because the `Optional[T]` type annotation is just an alias to `Union[None, T]`, and prior to Python 3.9, `__repr__` for `Union` does not account for this special case (in Python 3.9+, `repr(Union[None, T])` will display `Optional[T]`.\r\n\r\nThis is especially necessary for code generators like torch.fx, where Optional arguments will become Union types in the resulting GraphModule, making the GraphModule non-scriptable.\r\n\r\nI've brought this up with the FX team (see #51457) but a better solution would be to change this within the TorchScript side to account for any kind of code generator.\r\n\r\n## REPRO\r\n```\r\nclass TestModule(torch.nn.Module):\r\n    def forward(self, x: torch.Tensor, k: Optional[int]):\r\n        return x\r\n\r\nm = TestModule()\r\ngm = torch.fx.symbolic_trace(m)\r\nscripted_gm = torch.jit.script(gm)\r\n```\r\n\r\n## EXPECTED OUTCOME\r\nThis should work without errors.\r\n## ACTUAL OUTCOME\r\nI get the error `Unknown type constructor Union` because the resulting GraphModule contains Union annotations in place of the Optional type annotations.\n\ncc @gmagogsfm",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/51582/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/51582/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/51176",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/51176/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/51176/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/51176/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/51176",
        "id": 794704540,
        "node_id": "MDU6SXNzdWU3OTQ3MDQ1NDA=",
        "number": 51176,
        "title": "[JIT] Tuple assignment doesn't work when unpacking values to class attributes",
        "user": {
            "login": "gmagogsfm",
            "id": 1817752,
            "node_id": "MDQ6VXNlcjE4MTc3NTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1817752?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gmagogsfm",
            "html_url": "https://github.com/gmagogsfm",
            "followers_url": "https://api.github.com/users/gmagogsfm/followers",
            "following_url": "https://api.github.com/users/gmagogsfm/following{/other_user}",
            "gists_url": "https://api.github.com/users/gmagogsfm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gmagogsfm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gmagogsfm/subscriptions",
            "organizations_url": "https://api.github.com/users/gmagogsfm/orgs",
            "repos_url": "https://api.github.com/users/gmagogsfm/repos",
            "events_url": "https://api.github.com/users/gmagogsfm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gmagogsfm/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "gmagogsfm",
            "id": 1817752,
            "node_id": "MDQ6VXNlcjE4MTc3NTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1817752?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gmagogsfm",
            "html_url": "https://github.com/gmagogsfm",
            "followers_url": "https://api.github.com/users/gmagogsfm/followers",
            "following_url": "https://api.github.com/users/gmagogsfm/following{/other_user}",
            "gists_url": "https://api.github.com/users/gmagogsfm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gmagogsfm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gmagogsfm/subscriptions",
            "organizations_url": "https://api.github.com/users/gmagogsfm/orgs",
            "repos_url": "https://api.github.com/users/gmagogsfm/repos",
            "events_url": "https://api.github.com/users/gmagogsfm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gmagogsfm/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "gmagogsfm",
                "id": 1817752,
                "node_id": "MDQ6VXNlcjE4MTc3NTI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/1817752?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/gmagogsfm",
                "html_url": "https://github.com/gmagogsfm",
                "followers_url": "https://api.github.com/users/gmagogsfm/followers",
                "following_url": "https://api.github.com/users/gmagogsfm/following{/other_user}",
                "gists_url": "https://api.github.com/users/gmagogsfm/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/gmagogsfm/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gmagogsfm/subscriptions",
                "organizations_url": "https://api.github.com/users/gmagogsfm/orgs",
                "repos_url": "https://api.github.com/users/gmagogsfm/repos",
                "events_url": "https://api.github.com/users/gmagogsfm/events{/privacy}",
                "received_events_url": "https://api.github.com/users/gmagogsfm/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 2,
        "created_at": "2021-01-27T02:09:26Z",
        "updated_at": "2021-04-11T21:23:22Z",
        "closed_at": "2021-04-11T21:23:22Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\nFollowing code snippet fails\r\n\r\n```\r\nimport torch\r\n\r\ndef pass_through(a: int, b: int):\r\n    return (a, b)\r\n\r\nclass JitClass:\r\n    def __init__(self, a: int, b: int):\r\n        self.a, self.b = pass_through(a, b)\r\n\r\n    def get(self):\r\n        return self.a + self.b\r\n\r\n@torch.jit.script\r\ndef fn(a: int, b: int):\r\n    o = JitClass(a, b)\r\n    return o.get()\r\n```\r\n\r\nError:\r\n\r\n```\r\nRuntimeError:\r\nlhs of assignment must be a variable, subscript, or starred expression:\r\n  File \"self_attr.py\", line 8\r\n    def __init__(self, a: int, b: int):\r\n        self.a, self.b = pass_through(a, b)\r\n        ~~~~~~ <--- HERE\r\n```\r\n\r\nThis exception is thrown from here: [[link](https://github.com/pytorch/pytorch/blob/e2041ce3540a08dcdc70eaef86b13ca84b31ebd5/torch/csrc/jit/frontend/ir_emitter.cpp#L2021)]\r\n\r\nI think this can be fixed by handling the case where assignee is a `select` expression (like `self.a`)\r\n\n\ncc @gmagogsfm",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/51176/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/51176/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/51041",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/51041/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/51041/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/51041/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/51041",
        "id": 793546588,
        "node_id": "MDU6SXNzdWU3OTM1NDY1ODg=",
        "number": 51041,
        "title": "[jit] ScriptModule attribute type annotation doesn't work for `Optional[List[int]] = None`",
        "user": {
            "login": "suo",
            "id": 1617424,
            "node_id": "MDQ6VXNlcjE2MTc0MjQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1617424?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/suo",
            "html_url": "https://github.com/suo",
            "followers_url": "https://api.github.com/users/suo/followers",
            "following_url": "https://api.github.com/users/suo/following{/other_user}",
            "gists_url": "https://api.github.com/users/suo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/suo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/suo/subscriptions",
            "organizations_url": "https://api.github.com/users/suo/orgs",
            "repos_url": "https://api.github.com/users/suo/repos",
            "events_url": "https://api.github.com/users/suo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/suo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "ansley",
            "id": 59447410,
            "node_id": "MDQ6VXNlcjU5NDQ3NDEw",
            "avatar_url": "https://avatars.githubusercontent.com/u/59447410?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ansley",
            "html_url": "https://github.com/ansley",
            "followers_url": "https://api.github.com/users/ansley/followers",
            "following_url": "https://api.github.com/users/ansley/following{/other_user}",
            "gists_url": "https://api.github.com/users/ansley/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ansley/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ansley/subscriptions",
            "organizations_url": "https://api.github.com/users/ansley/orgs",
            "repos_url": "https://api.github.com/users/ansley/repos",
            "events_url": "https://api.github.com/users/ansley/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ansley/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "ansley",
                "id": 59447410,
                "node_id": "MDQ6VXNlcjU5NDQ3NDEw",
                "avatar_url": "https://avatars.githubusercontent.com/u/59447410?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ansley",
                "html_url": "https://github.com/ansley",
                "followers_url": "https://api.github.com/users/ansley/followers",
                "following_url": "https://api.github.com/users/ansley/following{/other_user}",
                "gists_url": "https://api.github.com/users/ansley/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ansley/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ansley/subscriptions",
                "organizations_url": "https://api.github.com/users/ansley/orgs",
                "repos_url": "https://api.github.com/users/ansley/repos",
                "events_url": "https://api.github.com/users/ansley/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ansley/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 4,
        "created_at": "2021-01-25T16:50:55Z",
        "updated_at": "2021-03-03T13:59:56Z",
        "closed_at": "2021-03-03T13:59:56Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "```\r\nimport torch\r\nfrom typing import Optional, List\r\n\r\n\r\nclass ToScript(torch.nn.Module):\r\n    def __init__(self):\r\n        super().__init__()\r\n        self.foo = torch.jit.annotate(Optional[List[int]], None)\r\n        # also doesn't work\r\n        # self.foo : Optional[List[int]] = None\r\n\r\n    def forward(self, x: List[int]):\r\n        self.foo = x\r\n        return 1\r\n\r\n\r\ntorch.jit.script(ToScript())\r\n```\r\n\r\nGives an error like:\r\n```\r\nWrong type for attribute assignment. Expected None but got List[int]:\r\n  File \"/private/home/suo/scratch/test.py\", line 13\r\n    def forward(self, x: List[int]):\r\n        self.foo = x\r\n        ~~~~~~~~~~~~ <--- HERE\r\n        return 1\r\n```\n\ncc @gmagogsfm",
        "closed_by": {
            "login": "ansley",
            "id": 59447410,
            "node_id": "MDQ6VXNlcjU5NDQ3NDEw",
            "avatar_url": "https://avatars.githubusercontent.com/u/59447410?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ansley",
            "html_url": "https://github.com/ansley",
            "followers_url": "https://api.github.com/users/ansley/followers",
            "following_url": "https://api.github.com/users/ansley/following{/other_user}",
            "gists_url": "https://api.github.com/users/ansley/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ansley/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ansley/subscriptions",
            "organizations_url": "https://api.github.com/users/ansley/orgs",
            "repos_url": "https://api.github.com/users/ansley/repos",
            "events_url": "https://api.github.com/users/ansley/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ansley/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/51041/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/51041/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/51040",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/51040/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/51040/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/51040/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/51040",
        "id": 793535072,
        "node_id": "MDU6SXNzdWU3OTM1MzUwNzI=",
        "number": 51040,
        "title": "for..else silently fails in Torchscript",
        "user": {
            "login": "nikithamalgifb",
            "id": 70345919,
            "node_id": "MDQ6VXNlcjcwMzQ1OTE5",
            "avatar_url": "https://avatars.githubusercontent.com/u/70345919?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nikithamalgifb",
            "html_url": "https://github.com/nikithamalgifb",
            "followers_url": "https://api.github.com/users/nikithamalgifb/followers",
            "following_url": "https://api.github.com/users/nikithamalgifb/following{/other_user}",
            "gists_url": "https://api.github.com/users/nikithamalgifb/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nikithamalgifb/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nikithamalgifb/subscriptions",
            "organizations_url": "https://api.github.com/users/nikithamalgifb/orgs",
            "repos_url": "https://api.github.com/users/nikithamalgifb/repos",
            "events_url": "https://api.github.com/users/nikithamalgifb/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nikithamalgifb/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "nikithamalgifb",
            "id": 70345919,
            "node_id": "MDQ6VXNlcjcwMzQ1OTE5",
            "avatar_url": "https://avatars.githubusercontent.com/u/70345919?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nikithamalgifb",
            "html_url": "https://github.com/nikithamalgifb",
            "followers_url": "https://api.github.com/users/nikithamalgifb/followers",
            "following_url": "https://api.github.com/users/nikithamalgifb/following{/other_user}",
            "gists_url": "https://api.github.com/users/nikithamalgifb/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nikithamalgifb/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nikithamalgifb/subscriptions",
            "organizations_url": "https://api.github.com/users/nikithamalgifb/orgs",
            "repos_url": "https://api.github.com/users/nikithamalgifb/repos",
            "events_url": "https://api.github.com/users/nikithamalgifb/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nikithamalgifb/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "nikithamalgifb",
                "id": 70345919,
                "node_id": "MDQ6VXNlcjcwMzQ1OTE5",
                "avatar_url": "https://avatars.githubusercontent.com/u/70345919?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/nikithamalgifb",
                "html_url": "https://github.com/nikithamalgifb",
                "followers_url": "https://api.github.com/users/nikithamalgifb/followers",
                "following_url": "https://api.github.com/users/nikithamalgifb/following{/other_user}",
                "gists_url": "https://api.github.com/users/nikithamalgifb/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/nikithamalgifb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nikithamalgifb/subscriptions",
                "organizations_url": "https://api.github.com/users/nikithamalgifb/orgs",
                "repos_url": "https://api.github.com/users/nikithamalgifb/repos",
                "events_url": "https://api.github.com/users/nikithamalgifb/events{/privacy}",
                "received_events_url": "https://api.github.com/users/nikithamalgifb/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2021-01-25T16:36:42Z",
        "updated_at": "2021-01-28T16:21:15Z",
        "closed_at": "2021-01-28T16:21:15Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\nfor..else statement silently fails in Torchscript. \r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior:\r\n```\r\n@torch.jit.script\r\n def  test():\r\n    c = 0\r\n    for i in range(4):\r\n        c += 10\r\n    else:\r\n        print(\"In else block of for...else\")\r\n    return c\r\n      \r\n print(test())\r\n```\r\nOutput:\r\n--------\r\n[nikithamalgi/pytorch] python repro.py \r\n50\r\n\r\n## Expected behavior\r\nfor..else is not supported in Torchscript, so we should throw an error message\r\n\r\n\r\ncc @gmagogsfm",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/51040/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/51040/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/51023",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/51023/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/51023/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/51023/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/51023",
        "id": 792994775,
        "node_id": "MDU6SXNzdWU3OTI5OTQ3NzU=",
        "number": 51023,
        "title": "Typing not preserved on reassignment",
        "user": {
            "login": "ansley",
            "id": 59447410,
            "node_id": "MDQ6VXNlcjU5NDQ3NDEw",
            "avatar_url": "https://avatars.githubusercontent.com/u/59447410?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ansley",
            "html_url": "https://github.com/ansley",
            "followers_url": "https://api.github.com/users/ansley/followers",
            "following_url": "https://api.github.com/users/ansley/following{/other_user}",
            "gists_url": "https://api.github.com/users/ansley/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ansley/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ansley/subscriptions",
            "organizations_url": "https://api.github.com/users/ansley/orgs",
            "repos_url": "https://api.github.com/users/ansley/repos",
            "events_url": "https://api.github.com/users/ansley/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ansley/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 2673997276,
                "node_id": "MDU6TGFiZWwyNjczOTk3Mjc2",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/TSRootCause:TypeChecking",
                "name": "TSRootCause:TypeChecking",
                "color": "A2A3EC",
                "default": false,
                "description": ""
            },
            {
                "id": 2674375683,
                "node_id": "MDU6TGFiZWwyNjc0Mzc1Njgz",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/TSUsability",
                "name": "TSUsability",
                "color": "D4C5F9",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "ansley",
            "id": 59447410,
            "node_id": "MDQ6VXNlcjU5NDQ3NDEw",
            "avatar_url": "https://avatars.githubusercontent.com/u/59447410?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ansley",
            "html_url": "https://github.com/ansley",
            "followers_url": "https://api.github.com/users/ansley/followers",
            "following_url": "https://api.github.com/users/ansley/following{/other_user}",
            "gists_url": "https://api.github.com/users/ansley/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ansley/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ansley/subscriptions",
            "organizations_url": "https://api.github.com/users/ansley/orgs",
            "repos_url": "https://api.github.com/users/ansley/repos",
            "events_url": "https://api.github.com/users/ansley/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ansley/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "ansley",
                "id": 59447410,
                "node_id": "MDQ6VXNlcjU5NDQ3NDEw",
                "avatar_url": "https://avatars.githubusercontent.com/u/59447410?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ansley",
                "html_url": "https://github.com/ansley",
                "followers_url": "https://api.github.com/users/ansley/followers",
                "following_url": "https://api.github.com/users/ansley/following{/other_user}",
                "gists_url": "https://api.github.com/users/ansley/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ansley/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ansley/subscriptions",
                "organizations_url": "https://api.github.com/users/ansley/orgs",
                "repos_url": "https://api.github.com/users/ansley/repos",
                "events_url": "https://api.github.com/users/ansley/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ansley/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 4,
        "created_at": "2021-01-25T03:33:58Z",
        "updated_at": "2021-03-03T13:59:40Z",
        "closed_at": "2021-03-03T13:59:40Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\nType annotations aren't preserved on variable reassignment. It seems unintuitive to me that we would throw here:\r\n\r\n```python\r\n@torch.jit.script\r\ndef fn():\r\n    x: int = \"foo\"\r\n    return x\r\n```\r\n\r\n...but not here:\r\n\r\n```python\r\n@torch.jit.script\r\ndef fn():\r\n    x: int = 1\r\n    x = \"foo\"\r\n    return x\r\n```\r\n\r\nFWIW, `mypy` doesn't accept either example.\r\n\r\n\n\ncc @gmagogsfm",
        "closed_by": {
            "login": "ansley",
            "id": 59447410,
            "node_id": "MDQ6VXNlcjU5NDQ3NDEw",
            "avatar_url": "https://avatars.githubusercontent.com/u/59447410?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ansley",
            "html_url": "https://github.com/ansley",
            "followers_url": "https://api.github.com/users/ansley/followers",
            "following_url": "https://api.github.com/users/ansley/following{/other_user}",
            "gists_url": "https://api.github.com/users/ansley/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ansley/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ansley/subscriptions",
            "organizations_url": "https://api.github.com/users/ansley/orgs",
            "repos_url": "https://api.github.com/users/ansley/repos",
            "events_url": "https://api.github.com/users/ansley/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ansley/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/51023/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/51023/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/50821",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/50821/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/50821/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/50821/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/50821",
        "id": 790181106,
        "node_id": "MDU6SXNzdWU3OTAxODExMDY=",
        "number": 50821,
        "title": "{**dict} syntax for TorchScript results in inscrutable error message",
        "user": {
            "login": "gibiansky",
            "id": 1865411,
            "node_id": "MDQ6VXNlcjE4NjU0MTE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1865411?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gibiansky",
            "html_url": "https://github.com/gibiansky",
            "followers_url": "https://api.github.com/users/gibiansky/followers",
            "following_url": "https://api.github.com/users/gibiansky/following{/other_user}",
            "gists_url": "https://api.github.com/users/gibiansky/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gibiansky/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gibiansky/subscriptions",
            "organizations_url": "https://api.github.com/users/gibiansky/orgs",
            "repos_url": "https://api.github.com/users/gibiansky/repos",
            "events_url": "https://api.github.com/users/gibiansky/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gibiansky/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 2203967172,
                "node_id": "MDU6TGFiZWwyMjAzOTY3MTcy",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/days",
                "name": "days",
                "color": "77f497",
                "default": false,
                "description": ""
            },
            {
                "id": 2674375683,
                "node_id": "MDU6TGFiZWwyNjc0Mzc1Njgz",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/TSUsability",
                "name": "TSUsability",
                "color": "D4C5F9",
                "default": false,
                "description": ""
            },
            {
                "id": 2677230705,
                "node_id": "MDU6TGFiZWwyNjc3MjMwNzA1",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/TSRootCause:UnsupportedConstructs",
                "name": "TSRootCause:UnsupportedConstructs",
                "color": "A2A3EC",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "ansley",
            "id": 59447410,
            "node_id": "MDQ6VXNlcjU5NDQ3NDEw",
            "avatar_url": "https://avatars.githubusercontent.com/u/59447410?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ansley",
            "html_url": "https://github.com/ansley",
            "followers_url": "https://api.github.com/users/ansley/followers",
            "following_url": "https://api.github.com/users/ansley/following{/other_user}",
            "gists_url": "https://api.github.com/users/ansley/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ansley/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ansley/subscriptions",
            "organizations_url": "https://api.github.com/users/ansley/orgs",
            "repos_url": "https://api.github.com/users/ansley/repos",
            "events_url": "https://api.github.com/users/ansley/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ansley/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "ansley",
                "id": 59447410,
                "node_id": "MDQ6VXNlcjU5NDQ3NDEw",
                "avatar_url": "https://avatars.githubusercontent.com/u/59447410?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ansley",
                "html_url": "https://github.com/ansley",
                "followers_url": "https://api.github.com/users/ansley/followers",
                "following_url": "https://api.github.com/users/ansley/following{/other_user}",
                "gists_url": "https://api.github.com/users/ansley/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ansley/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ansley/subscriptions",
                "organizations_url": "https://api.github.com/users/ansley/orgs",
                "repos_url": "https://api.github.com/users/ansley/repos",
                "events_url": "https://api.github.com/users/ansley/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ansley/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 2,
        "created_at": "2021-01-20T17:34:30Z",
        "updated_at": "2021-01-30T11:49:59Z",
        "closed_at": "2021-01-30T11:49:59Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\n```\r\nclass A(torch.nn.Module):\r\n    @torch.jit.export\r\n    def test(self):\r\n        s= {\"hello\": None}\r\n        return {**s}\r\n        \r\ntorch.jit.script(A())\r\n```\r\n\r\nInstead of gracefully telling you that `{**s}` is unsupported by TorchScript, you get a very confusing error message:\r\n\r\n```\r\ntorch/jit/frontend.py in __init__(self, ctx, offending_node, reason)\r\n    109         node_type = type(offending_node)\r\n    110         range_len = len(node_start_tokens.get(node_type, ' '))\r\n--> 111         source_range = ctx.make_range(offending_node.lineno,\r\n    112                                       offending_node.col_offset,\r\n    113                                       offending_node.col_offset + range_len)\r\n\r\nAttributeError: 'NoneType' object has no attribute 'lineno'\r\n```\r\n\r\n## Expected behavior\r\n\r\nEither this works or gives a clearer error message.\r\n\r\n## Environment\r\n\r\nInside fbcode.\n\ncc @gmagogsfm",
        "closed_by": {
            "login": "ansley",
            "id": 59447410,
            "node_id": "MDQ6VXNlcjU5NDQ3NDEw",
            "avatar_url": "https://avatars.githubusercontent.com/u/59447410?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ansley",
            "html_url": "https://github.com/ansley",
            "followers_url": "https://api.github.com/users/ansley/followers",
            "following_url": "https://api.github.com/users/ansley/following{/other_user}",
            "gists_url": "https://api.github.com/users/ansley/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ansley/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ansley/subscriptions",
            "organizations_url": "https://api.github.com/users/ansley/orgs",
            "repos_url": "https://api.github.com/users/ansley/repos",
            "events_url": "https://api.github.com/users/ansley/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ansley/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/50821/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/50821/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/50454",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/50454/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/50454/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/50454/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/50454",
        "id": 784718914,
        "node_id": "MDU6SXNzdWU3ODQ3MTg5MTQ=",
        "number": 50454,
        "title": "Segfault after calling `inlined_graph.nodes()`",
        "user": {
            "login": "ppwwyyxx",
            "id": 1381301,
            "node_id": "MDQ6VXNlcjEzODEzMDE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1381301?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ppwwyyxx",
            "html_url": "https://github.com/ppwwyyxx",
            "followers_url": "https://api.github.com/users/ppwwyyxx/followers",
            "following_url": "https://api.github.com/users/ppwwyyxx/following{/other_user}",
            "gists_url": "https://api.github.com/users/ppwwyyxx/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ppwwyyxx/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ppwwyyxx/subscriptions",
            "organizations_url": "https://api.github.com/users/ppwwyyxx/orgs",
            "repos_url": "https://api.github.com/users/ppwwyyxx/repos",
            "events_url": "https://api.github.com/users/ppwwyyxx/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ppwwyyxx/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "t-vi",
            "id": 20787943,
            "node_id": "MDQ6VXNlcjIwNzg3OTQz",
            "avatar_url": "https://avatars.githubusercontent.com/u/20787943?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/t-vi",
            "html_url": "https://github.com/t-vi",
            "followers_url": "https://api.github.com/users/t-vi/followers",
            "following_url": "https://api.github.com/users/t-vi/following{/other_user}",
            "gists_url": "https://api.github.com/users/t-vi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/t-vi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/t-vi/subscriptions",
            "organizations_url": "https://api.github.com/users/t-vi/orgs",
            "repos_url": "https://api.github.com/users/t-vi/repos",
            "events_url": "https://api.github.com/users/t-vi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/t-vi/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "t-vi",
                "id": 20787943,
                "node_id": "MDQ6VXNlcjIwNzg3OTQz",
                "avatar_url": "https://avatars.githubusercontent.com/u/20787943?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/t-vi",
                "html_url": "https://github.com/t-vi",
                "followers_url": "https://api.github.com/users/t-vi/followers",
                "following_url": "https://api.github.com/users/t-vi/following{/other_user}",
                "gists_url": "https://api.github.com/users/t-vi/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/t-vi/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/t-vi/subscriptions",
                "organizations_url": "https://api.github.com/users/t-vi/orgs",
                "repos_url": "https://api.github.com/users/t-vi/repos",
                "events_url": "https://api.github.com/users/t-vi/events{/privacy}",
                "received_events_url": "https://api.github.com/users/t-vi/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 6,
        "created_at": "2021-01-13T01:43:42Z",
        "updated_at": "2021-02-10T19:13:07Z",
        "closed_at": "2021-02-10T19:13:07Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\nI'm trying to iterate over all operators of a traced graph. This code:\r\n```python\r\nimport torch\r\nfrom torch import nn\r\nclass A(nn.Module):\r\n    def forward(self, x):\r\n        return x * 2\r\nprint(torch.__version__)\r\nmodel = A()\r\ntrace = torch.jit.trace(model, torch.tensor([3]))\r\nprint(trace.inlined_graph)\r\nn = trace.inlined_graph.nodes()\r\nprint(list(n))\r\n```\r\nprints:\r\n```\r\n1.8.0a0+5cd04d2\r\ngraph(%self : __torch__.A,\r\n      %x : Long(1, strides=[1], requires_grad=0, device=cpu)):\r\n  %2 : Long(requires_grad=0, device=cpu) = prim::Constant[value={2}]() # a.py:8:0\r\n  %3 : Long(1, strides=[1], requires_grad=0, device=cpu) = aten::mul(%x, %2) # a.py:8:0\r\n  return (%3)\r\n\r\nzsh: segmentation fault (core dumped)  python3 a.py\r\n```\r\n\r\n`list(trace.graph.nodes())` works fine.\r\n`G = trace.inlined_graph; print(list(G.nodes()))` also works - so it seems the crash is because `inlined_graph` was freed.\r\n\r\nI'm using python3.8 on fair cluster with a pytorch built by myself. Stack trace:\r\n```\r\nhread 1 \"python3\" received signal SIGSEGV, Segmentation fault.\r\n0x00007fffd610d8db in pybind11::detail::type_caster_base<torch::jit::Node>::cast(torch::jit::Node const*, pybind11::return_value_policy, pybind11::handle) ()\r\n   from /private/home/xxx/pytorch/torch/lib/libtorch_python.so\r\n(gdb) bt\r\n#0  0x00007fffd610d8db in pybind11::detail::type_caster_base<torch::jit::Node>::cast(torch::jit::Node const*, pybind11::return_value_policy, pybind11::handle) ()\r\n   from /private/home/xxx/pytorch/torch/lib/libtorch_python.so\r\n#1  0x00007fffd6110fb4 in pybind11::cpp_function::initialize<pybind11::make_iterator<(pybind11::return_value_policy)6, torch::jit::generic_graph_node_list_iterator<torch::jit::Node>, torch::jit::generic_graph_node_list_iterator<torch::jit::Node>, torch::jit::Node*>(torch::jit::generic_graph_node_list_iterator<torch::jit::Node>, torch::jit::generic_graph_node_list_iterator<torch::jit::Node>)::{lambda(pybind11::detail::iterator_state<torch::jit::generic_graph_node_list_iterator<torch::jit::Node>, torch::jit::generic_graph_node_list_iterator<torch::jit::Node>, false, (pybind11::return_value_policy)6>&)#2}, torch::jit::Node*, pybind11::detail::iterator_state<torch::jit::generic_graph_node_list_iterator<torch::jit::Node>, torch::jit::generic_graph_node_list_iterator<torch::jit::Node>, false, (pybind11::return_value_policy)6>&, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::return_value_policy>(pybind11::make_iterator<(pybind11::return_value_policy)6, torch::jit::generic_graph_node_list_iterator<torch::jit::Node>, torch::jit::generic_graph_node_list_iterator<torch::jit::Node>, torch::jit::Node*>(torch::jit::generic_graph_node_list_iterator<torch::jit::Node>, torch::jit::generic_graph_node_list_iterator<torch::jit::Node>)::{lambda(pybind11::detail::iterator_state<torch::jit::generic_graph_node_list_iterator<torch::jit::Node>, torch::jit::generic_graph_node_list_iterator<torch::jit::Node>, false, (pybind11::return_value_policy)6>&)#2}&&, torch::jit::Node* (*)(pybind11::detail::iterator_state<torch::jit::generic_graph_node_list_iterator<torch::jit::Node>, torch::jit::generic_graph_node_list_iterator<torch::jit::Node>, false, (pybind11::return_value_policy)6>&), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::return_value_policy const&)::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call) () from /private/home/xxx/pytorch/torch/lib/libtorch_python.so\r\n#2  0x00007fffd5de165f in pybind11::cpp_function::dispatcher(_object*, _object*, _object*) () from /private/home/xxx/pytorch/torch/lib/libtorch_python.so\r\n#3  0x00005555556c9c96 in cfunction_call_varargs (kwargs=<optimized out>,\r\n    args=<optimized out>, func=0x7ffeeceb12c0)\r\n    at /tmp/build/80754af9/python_1573076469108/work/Objects/call.c:742\r\n#4  PyCFunction_Call (func=0x7ffeeceb12c0, args=<optimized out>, kwargs=<optimized out>)\r\n    at /tmp/build/80754af9/python_1573076469108/work/Objects/call.c:772\r\n#5  0x000055555568631f in _PyObject_MakeTpCall (callable=0x7ffeeceb12c0,\r\n    args=<optimized out>, nargs=<optimized out>, keywords=<optimized out>)\r\n    at /tmp/build/80754af9/python_1573076469108/work/Objects/call.c:159\r\n#6  0x00005555556d628f in _PyObject_Vectorcall (kwnames=0x0, nargsf=1,\r\n    args=0x7fffffffb988, callable=0x7ffeeceb12c0)\r\n    at /tmp/build/80754af9/python_1573076469108/work/Include/cpython/abstract.h:125\r\n#7  method_vectorcall (method=<optimized out>, args=0x0, nargsf=<optimized out>,\r\n    kwnames=<optimized out>)\r\n    at /tmp/build/80754af9/python_1573076469108/work/Objects/classobject.c:67\r\n#8  0x00005555555cf098 in _PyObject_Vectorcall (callable=0x7ffeed5452c0,\r\n--Type <RET> for more, q to quit, c to continue without paging--\r\n    ut>, nargsf=<optimized out>, kwnames=<optimized out>) at /tmp/build/80754af9/python_1573076469108/work/Include/cpython/abstract.h:127\r\n#9  0x00005555556c8a21 in _PyObject_FastCall () at /tmp/build/80754af9/python_1573076469108/work/Include/cpython/abstract.h:147\r\n#10 call_unbound (nargs=<optimized out>, args=<optimized out>, self=<optimized out>, func=<optimized out>, unbound=<optimized out>) at /tmp/build/80754af9/python_1573076469108/work/Objects/typeobject.c:1451\r\n#11 call_method (nargs=0, args=0x0, name=0x5555558a6c20 <PyId___next__.15142>, obj=0x7fff90405af0) at /tmp/build/80754af9/python_1573076469108/work/Objects/typeobject.c:1480\r\n#12 slot_tp_iternext (self=0x7fff90405af0) at /tmp/build/80754af9/python_1573076469108/work/Objects/typeobject.c:6695\r\n#13 0x00005555556ccbb4 in list_extend (iterable=<optimized out>, self=0x7ffeed8c7a40) at /tmp/build/80754af9/python_1573076469108/work/Objects/listobject.c:953\r\n#14 list___init___impl (iterable=<optimized out>, self=0x7ffeed8c7a40) at /tmp/build/80754af9/python_1573076469108/work/Objects/listobject.c:2723\r\n#15 list___init__ (self=0x7ffeed8c7a40, args=<optimized out>, kwargs=<optimized out>) at /tmp/build/80754af9/python_1573076469108/work/Objects/clinic/listobject.c.h:329\r\n#16 0x0000555555686294 in type_call (kwds=0x0, args=0x7ffff781ad60, type=<optimized out>) at /tmp/build/80754af9/python_1573076469108/work/Objects/typeobject.c:989\r\n#17 _PyObject_MakeTpCall (callable=0x5555558c3240 <PyList_Type>, args=<optimized out>, nargs=<optimized out>, keywords=<optimized out>) at /tmp/build/80754af9/python_1573076469108/work/Objects/call.c:159\r\n#18 0x000055555570d945 in _PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffff78437b8, callable=<optimized out>) at /tmp/build/80754af9/python_1573076469108/work/Include/cpython/abstract.h:125\r\n#19 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, tstate=0x5555558e9590) at /tmp/build/80754af9/python_1573076469108/work/Python/ceval.c:4987\r\n#20 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>) at /tmp/build/80754af9/python_1573076469108/work/Python/ceval.c:3500\r\n#21 0x00005555556d4c32 in _PyEval_EvalCodeWithName (_co=0x7ffff77f9d40, globals=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=0x0, kwargs=0x0, kwcount=<optimized out>, kwstep=2, defs=0x0, defcount=0,\r\n    kwdefs=0x0, closure=0x0, name=0x0, qualname=0x0) at /tmp/build/80754af9/python_1573076469108/work/Python/ceval.c:4298\r\n#22 0x00005555556d5a04 in PyEval_EvalCodeEx (_co=<optimized out>, globals=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kws=<optimized out>, kwcount=0, defs=0x0, defcount=0, kwdefs=0x0, closure=0x0)\r\n    at /tmp/build/80754af9/python_1573076469108/work/Python/ceval.c:4327\r\n#23 0x0000555555768f5c in PyEval_EvalCode (co=<optimized out>, globals=<optimized out>, locals=<optimized out>) at /tmp/build/80754af9/python_1573076469108/work/Python/ceval.c:718\r\n#24 0x0000555555769004 in run_eval_code_obj (co=0x7ffff77f9d40, globals=0x7ffff78ae540, locals=0x7ffff78ae540) at /tmp/build/80754af9/python_1573076469108/work/Python/pythonrun.c:1117\r\n#25 0x000055555579e304 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7ffff78ae540, locals=0x7ffff78ae540, flags=<optimized out>, arena=<optimized out>) at /tmp/build/80754af9/python_1573076469108/work/Python/pythonrun.c:1139\r\n#26 0x00005555557a0c50 in PyRun_FileExFlags (fp=<optimized out>, filename_str=<optimized out>, start=<optimized out>, globals=0x7ffff78ae540, locals=0x7ffff78ae540, closeit=1, flags=0x7fffffffbe68)\r\n    at /tmp/build/80754af9/python_1573076469108/work/Python/pythonrun.c:1055\r\n#27 0x00005555557a0e41 in PyRun_SimpleFileExFlags (fp=0x5555558e7d10, filename=<optimized out>, closeit=1, flags=0x7fffffffbe68) at /tmp/build/80754af9/python_1573076469108/work/Python/pythonrun.c:428\r\n#28 0x00005555557a1983 in pymain_run_file (cf=0x7fffffffbe68, config=0x5555558e86a0) at /tmp/build/80754af9/python_1573076469108/work/Modules/main.c:381\r\n#29 pymain_run_python (exitcode=0x7fffffffbe60) at /tmp/build/80754af9/python_1573076469108/work/Modules/main.c:565\r\n#30 Py_RunMain () at /tmp/build/80754af9/python_1573076469108/work/Modules/main.c:644\r\n#31 0x00005555557a1bc9 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /tmp/build/80754af9/python_1573076469108/work/Modules/main.c:698\r\n#32 0x00007ffff7db50b3 in __libc_start_main (main=0x55555565e720 <main>, argc=2, argv=0x7fffffffc068, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fffffffc058) at ../csu/libc-start.c:308\r\n#33 0x000055555572ae13 in _start () at ../sysdeps/x86_64/elf/start.S:103\r\n\r\n```\r\n\r\ncc @gmagogsfm",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/50454/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/50454/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/49969",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/49969/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/49969/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/49969/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/49969",
        "id": 776495807,
        "node_id": "MDU6SXNzdWU3NzY0OTU4MDc=",
        "number": 49969,
        "title": "Improve JIT Python interface safety",
        "user": {
            "login": "t-vi",
            "id": 20787943,
            "node_id": "MDQ6VXNlcjIwNzg3OTQz",
            "avatar_url": "https://avatars.githubusercontent.com/u/20787943?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/t-vi",
            "html_url": "https://github.com/t-vi",
            "followers_url": "https://api.github.com/users/t-vi/followers",
            "following_url": "https://api.github.com/users/t-vi/following{/other_user}",
            "gists_url": "https://api.github.com/users/t-vi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/t-vi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/t-vi/subscriptions",
            "organizations_url": "https://api.github.com/users/t-vi/orgs",
            "repos_url": "https://api.github.com/users/t-vi/repos",
            "events_url": "https://api.github.com/users/t-vi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/t-vi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "t-vi",
            "id": 20787943,
            "node_id": "MDQ6VXNlcjIwNzg3OTQz",
            "avatar_url": "https://avatars.githubusercontent.com/u/20787943?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/t-vi",
            "html_url": "https://github.com/t-vi",
            "followers_url": "https://api.github.com/users/t-vi/followers",
            "following_url": "https://api.github.com/users/t-vi/following{/other_user}",
            "gists_url": "https://api.github.com/users/t-vi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/t-vi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/t-vi/subscriptions",
            "organizations_url": "https://api.github.com/users/t-vi/orgs",
            "repos_url": "https://api.github.com/users/t-vi/repos",
            "events_url": "https://api.github.com/users/t-vi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/t-vi/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "t-vi",
                "id": 20787943,
                "node_id": "MDQ6VXNlcjIwNzg3OTQz",
                "avatar_url": "https://avatars.githubusercontent.com/u/20787943?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/t-vi",
                "html_url": "https://github.com/t-vi",
                "followers_url": "https://api.github.com/users/t-vi/followers",
                "following_url": "https://api.github.com/users/t-vi/following{/other_user}",
                "gists_url": "https://api.github.com/users/t-vi/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/t-vi/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/t-vi/subscriptions",
                "organizations_url": "https://api.github.com/users/t-vi/orgs",
                "repos_url": "https://api.github.com/users/t-vi/repos",
                "events_url": "https://api.github.com/users/t-vi/events{/privacy}",
                "received_events_url": "https://api.github.com/users/t-vi/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 4,
        "created_at": "2020-12-30T14:57:31Z",
        "updated_at": "2021-02-04T09:39:11Z",
        "closed_at": "2021-02-04T09:39:11Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "## \ud83d\ude80 Feature\r\nI propose to improve the Python JIT interface safety by wrapping the \"custom ownership\" C++ classes like Node, Value, and Block in smart pointers supporting invalidation.\r\n\r\n## Motivation\r\n\r\nCurrently the JIT Python bindings for Node, Block, Value and potentially others (where the ownership model is \"owned by graph, handed out as raw pointers, but may be destroyed at will\" work with essentially raw pointers, making it too easy to access freed memory, which is bad (and might lead to crashes).\r\n\r\n## Pitch\r\n\r\n(At least) for the Python bindings we should wrap the objects using a custom shared smart pointer which supports invalidation that is done when destroying the C++ object wrapped by the Python object.\r\n\r\nThis would involve (e.g. for a Node):\r\n- create a wrapper (struct with a (raw) pointer to a Node) when creating a node, hold on to that with a shared_ptr,\r\n- set the wrapper's pointer to the node to `nullptr` on destruction,\r\n- cause PyBind11 to check and dereference the wrapper at each invocation. This can be done using a custom caster (see https://github.com/pybind/pybind11/issues/2751).\r\n\r\nThis won't give us thread safety, but at least we don't crash from Python by using Python Node objects pointing to invalid memory.\r\n\r\n## Alternatives\r\n\r\n- Keep stuff unsafe.\r\n- Move to some smart-pointer thing for C++, too, and use some invalidation scheme there.\r\n\r\n## Additional context\r\n\r\nThis would cause the creation of an additional struct and a smart pointer to it in each instantiation of a Node (etc.) and clearing the pointer on destruction, which would be the main perf impact. All other changes only affect the Python bindings, which I would think that is less critical.\r\n\r\nI do have experimental code doing this and am looking to be able to build a subgraph-creating pass (say, similar to `create_autodiff_subgraphs` from Python).\n\ncc @gmagogsfm",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/49969/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/49969/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/49728",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/49728/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/49728/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/49728/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/49728",
        "id": 772715663,
        "node_id": "MDU6SXNzdWU3NzI3MTU2NjM=",
        "number": 49728,
        "title": "[jit] metacompile does not work in ternary operators",
        "user": {
            "login": "ppwwyyxx",
            "id": 1381301,
            "node_id": "MDQ6VXNlcjEzODEzMDE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1381301?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ppwwyyxx",
            "html_url": "https://github.com/ppwwyyxx",
            "followers_url": "https://api.github.com/users/ppwwyyxx/followers",
            "following_url": "https://api.github.com/users/ppwwyyxx/following{/other_user}",
            "gists_url": "https://api.github.com/users/ppwwyyxx/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ppwwyyxx/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ppwwyyxx/subscriptions",
            "organizations_url": "https://api.github.com/users/ppwwyyxx/orgs",
            "repos_url": "https://api.github.com/users/ppwwyyxx/repos",
            "events_url": "https://api.github.com/users/ppwwyyxx/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ppwwyyxx/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 2203967172,
                "node_id": "MDU6TGFiZWwyMjAzOTY3MTcy",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/days",
                "name": "days",
                "color": "77f497",
                "default": false,
                "description": ""
            },
            {
                "id": 2673978162,
                "node_id": "MDU6TGFiZWwyNjczOTc4MTYy",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/TSRootCause:TypeRefinement",
                "name": "TSRootCause:TypeRefinement",
                "color": "A2A3EC",
                "default": false,
                "description": ""
            },
            {
                "id": 2674375683,
                "node_id": "MDU6TGFiZWwyNjc0Mzc1Njgz",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/TSUsability",
                "name": "TSUsability",
                "color": "D4C5F9",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "nikithamalgifb",
            "id": 70345919,
            "node_id": "MDQ6VXNlcjcwMzQ1OTE5",
            "avatar_url": "https://avatars.githubusercontent.com/u/70345919?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nikithamalgifb",
            "html_url": "https://github.com/nikithamalgifb",
            "followers_url": "https://api.github.com/users/nikithamalgifb/followers",
            "following_url": "https://api.github.com/users/nikithamalgifb/following{/other_user}",
            "gists_url": "https://api.github.com/users/nikithamalgifb/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nikithamalgifb/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nikithamalgifb/subscriptions",
            "organizations_url": "https://api.github.com/users/nikithamalgifb/orgs",
            "repos_url": "https://api.github.com/users/nikithamalgifb/repos",
            "events_url": "https://api.github.com/users/nikithamalgifb/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nikithamalgifb/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "nikithamalgifb",
                "id": 70345919,
                "node_id": "MDQ6VXNlcjcwMzQ1OTE5",
                "avatar_url": "https://avatars.githubusercontent.com/u/70345919?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/nikithamalgifb",
                "html_url": "https://github.com/nikithamalgifb",
                "followers_url": "https://api.github.com/users/nikithamalgifb/followers",
                "following_url": "https://api.github.com/users/nikithamalgifb/following{/other_user}",
                "gists_url": "https://api.github.com/users/nikithamalgifb/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/nikithamalgifb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nikithamalgifb/subscriptions",
                "organizations_url": "https://api.github.com/users/nikithamalgifb/orgs",
                "repos_url": "https://api.github.com/users/nikithamalgifb/repos",
                "events_url": "https://api.github.com/users/nikithamalgifb/events{/privacy}",
                "received_events_url": "https://api.github.com/users/nikithamalgifb/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 3,
        "created_at": "2020-12-22T07:32:21Z",
        "updated_at": "2021-02-06T22:47:17Z",
        "closed_at": "2021-02-06T22:47:17Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "## \ud83d\ude80 Feature\r\n\r\nWith #43942 now fixed, I found that there is still inconsistency between ternary op and basic if-else.\r\n\r\nThis module is scriptable:\r\n```python\r\nclass MyModule(torch.nn.Module):\r\n    flag: torch.jit.Final[bool]\r\n\r\n    def __init__(self):\r\n        super().__init__()\r\n        self.flag = True\r\n\r\n    def forward(self) -> torch.Tensor:\r\n        if self.flag:\r\n            return torch.ones(3)\r\n        else:\r\n            return {}\r\n```\r\n\r\nBut this module is not:\r\n```python\r\nclass MyModule(torch.nn.Module):\r\n    flag: torch.jit.Final[bool]\r\n\r\n    def __init__(self):\r\n        super().__init__()\r\n        self.flag = True\r\n\r\n    def forward(self) -> torch.Tensor:\r\n        return torch.ones(3) if self.flag else {}\r\n```\r\nwith error message:\r\n```\r\nif-expression's true branch has type Tensor but false branch has type Dict[str, Tensor]:\r\n```\r\n\r\ncc @gmagogsfm @ejguan",
        "closed_by": {
            "login": "nikithamalgifb",
            "id": 70345919,
            "node_id": "MDQ6VXNlcjcwMzQ1OTE5",
            "avatar_url": "https://avatars.githubusercontent.com/u/70345919?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nikithamalgifb",
            "html_url": "https://github.com/nikithamalgifb",
            "followers_url": "https://api.github.com/users/nikithamalgifb/followers",
            "following_url": "https://api.github.com/users/nikithamalgifb/following{/other_user}",
            "gists_url": "https://api.github.com/users/nikithamalgifb/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nikithamalgifb/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nikithamalgifb/subscriptions",
            "organizations_url": "https://api.github.com/users/nikithamalgifb/orgs",
            "repos_url": "https://api.github.com/users/nikithamalgifb/repos",
            "events_url": "https://api.github.com/users/nikithamalgifb/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nikithamalgifb/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/49728/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/49728/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/49617",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/49617/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/49617/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/49617/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/49617",
        "id": 771176872,
        "node_id": "MDU6SXNzdWU3NzExNzY4NzI=",
        "number": 49617,
        "title": "Recent Python versions break JIT tests (locally defined classes don't work well, even with global)",
        "user": {
            "login": "t-vi",
            "id": 20787943,
            "node_id": "MDQ6VXNlcjIwNzg3OTQz",
            "avatar_url": "https://avatars.githubusercontent.com/u/20787943?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/t-vi",
            "html_url": "https://github.com/t-vi",
            "followers_url": "https://api.github.com/users/t-vi/followers",
            "following_url": "https://api.github.com/users/t-vi/following{/other_user}",
            "gists_url": "https://api.github.com/users/t-vi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/t-vi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/t-vi/subscriptions",
            "organizations_url": "https://api.github.com/users/t-vi/orgs",
            "repos_url": "https://api.github.com/users/t-vi/repos",
            "events_url": "https://api.github.com/users/t-vi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/t-vi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 443484135,
                "node_id": "MDU6TGFiZWw0NDM0ODQxMzU=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/high%20priority",
                "name": "high priority",
                "color": "F22613",
                "default": false,
                "description": null
            },
            {
                "id": 466131885,
                "node_id": "MDU6TGFiZWw0NjYxMzE4ODU=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triage%20review",
                "name": "triage review",
                "color": "cc317c",
                "default": false,
                "description": ""
            },
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "gmagogsfm",
            "id": 1817752,
            "node_id": "MDQ6VXNlcjE4MTc3NTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1817752?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gmagogsfm",
            "html_url": "https://github.com/gmagogsfm",
            "followers_url": "https://api.github.com/users/gmagogsfm/followers",
            "following_url": "https://api.github.com/users/gmagogsfm/following{/other_user}",
            "gists_url": "https://api.github.com/users/gmagogsfm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gmagogsfm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gmagogsfm/subscriptions",
            "organizations_url": "https://api.github.com/users/gmagogsfm/orgs",
            "repos_url": "https://api.github.com/users/gmagogsfm/repos",
            "events_url": "https://api.github.com/users/gmagogsfm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gmagogsfm/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "gmagogsfm",
                "id": 1817752,
                "node_id": "MDQ6VXNlcjE4MTc3NTI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/1817752?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/gmagogsfm",
                "html_url": "https://github.com/gmagogsfm",
                "followers_url": "https://api.github.com/users/gmagogsfm/followers",
                "following_url": "https://api.github.com/users/gmagogsfm/following{/other_user}",
                "gists_url": "https://api.github.com/users/gmagogsfm/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/gmagogsfm/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gmagogsfm/subscriptions",
                "organizations_url": "https://api.github.com/users/gmagogsfm/orgs",
                "repos_url": "https://api.github.com/users/gmagogsfm/repos",
                "events_url": "https://api.github.com/users/gmagogsfm/events{/privacy}",
                "received_events_url": "https://api.github.com/users/gmagogsfm/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 6,
        "created_at": "2020-12-18T21:21:58Z",
        "updated_at": "2021-01-27T19:00:29Z",
        "closed_at": "2021-01-27T19:00:29Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\nRecent Python versions updated the inspect.getsource* mechanism for classes. This breaks many of our JIT tests.\r\n\r\n## To Reproduce\r\n\r\nRun test/test_jit.py on Python 3.9.\r\n\r\n## Expected behavior\r\n\r\nTests pass.\r\n\r\n## Environment\r\n\r\nPython 3.9\r\nPyTorch master\r\n\r\n## Additional context\r\n\r\nPython bug report: https://bugs.python.org/issue42666\r\n\r\n\r\nMy impression is that it's a case of \"Don't do that then\".\n\ncc @ezyang @gchanan @zou3519 @bdhirsh @jbschlosser @gmagogsfm",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/49617/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/49617/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/49362",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/49362/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/49362/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/49362/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/49362",
        "id": 766953374,
        "node_id": "MDU6SXNzdWU3NjY5NTMzNzQ=",
        "number": 49362,
        "title": "DictType creation fails to check for invalid annotations",
        "user": {
            "login": "gmagogsfm",
            "id": 1817752,
            "node_id": "MDQ6VXNlcjE4MTc3NTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1817752?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gmagogsfm",
            "html_url": "https://github.com/gmagogsfm",
            "followers_url": "https://api.github.com/users/gmagogsfm/followers",
            "following_url": "https://api.github.com/users/gmagogsfm/following{/other_user}",
            "gists_url": "https://api.github.com/users/gmagogsfm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gmagogsfm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gmagogsfm/subscriptions",
            "organizations_url": "https://api.github.com/users/gmagogsfm/orgs",
            "repos_url": "https://api.github.com/users/gmagogsfm/repos",
            "events_url": "https://api.github.com/users/gmagogsfm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gmagogsfm/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "nikithamalgifb",
            "id": 70345919,
            "node_id": "MDQ6VXNlcjcwMzQ1OTE5",
            "avatar_url": "https://avatars.githubusercontent.com/u/70345919?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nikithamalgifb",
            "html_url": "https://github.com/nikithamalgifb",
            "followers_url": "https://api.github.com/users/nikithamalgifb/followers",
            "following_url": "https://api.github.com/users/nikithamalgifb/following{/other_user}",
            "gists_url": "https://api.github.com/users/nikithamalgifb/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nikithamalgifb/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nikithamalgifb/subscriptions",
            "organizations_url": "https://api.github.com/users/nikithamalgifb/orgs",
            "repos_url": "https://api.github.com/users/nikithamalgifb/repos",
            "events_url": "https://api.github.com/users/nikithamalgifb/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nikithamalgifb/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "nikithamalgifb",
                "id": 70345919,
                "node_id": "MDQ6VXNlcjcwMzQ1OTE5",
                "avatar_url": "https://avatars.githubusercontent.com/u/70345919?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/nikithamalgifb",
                "html_url": "https://github.com/nikithamalgifb",
                "followers_url": "https://api.github.com/users/nikithamalgifb/followers",
                "following_url": "https://api.github.com/users/nikithamalgifb/following{/other_user}",
                "gists_url": "https://api.github.com/users/nikithamalgifb/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/nikithamalgifb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nikithamalgifb/subscriptions",
                "organizations_url": "https://api.github.com/users/nikithamalgifb/orgs",
                "repos_url": "https://api.github.com/users/nikithamalgifb/repos",
                "events_url": "https://api.github.com/users/nikithamalgifb/events{/privacy}",
                "received_events_url": "https://api.github.com/users/nikithamalgifb/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-12-14T21:41:00Z",
        "updated_at": "2020-12-17T08:32:27Z",
        "closed_at": "2020-12-17T08:32:27Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\nFollowing snippet crashes TorchScript\r\n\r\n```\r\nimport torch\r\nfrom typing import Dict\r\n\r\ndef fn(key: str, dictionary: Dict[str, torch.jit.ScriptModule]):\r\n    return dictionary[key]\r\n\r\ntorch.jit.script(fn)\r\n```\r\n\r\nInitial investigation shows that we are missing a none-ness check for both `key` and `value` here:\r\nhttps://github.com/pytorch/pytorch/blob/86cf1e135879238a9fd8d00f06e5096e18f534ba/torch/jit/annotations.py#L286\n\ncc @gmagogsfm",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/49362/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/49362/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/49326",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/49326/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/49326/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/49326/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/49326",
        "id": 766322880,
        "node_id": "MDU6SXNzdWU3NjYzMjI4ODA=",
        "number": 49326,
        "title": "OpInfo-based testing for JIT consistency fails for custom op.output_func",
        "user": {
            "login": "IvanYashchuk",
            "id": 19621411,
            "node_id": "MDQ6VXNlcjE5NjIxNDEx",
            "avatar_url": "https://avatars.githubusercontent.com/u/19621411?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/IvanYashchuk",
            "html_url": "https://github.com/IvanYashchuk",
            "followers_url": "https://api.github.com/users/IvanYashchuk/followers",
            "following_url": "https://api.github.com/users/IvanYashchuk/following{/other_user}",
            "gists_url": "https://api.github.com/users/IvanYashchuk/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/IvanYashchuk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/IvanYashchuk/subscriptions",
            "organizations_url": "https://api.github.com/users/IvanYashchuk/orgs",
            "repos_url": "https://api.github.com/users/IvanYashchuk/repos",
            "events_url": "https://api.github.com/users/IvanYashchuk/events{/privacy}",
            "received_events_url": "https://api.github.com/users/IvanYashchuk/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1300933336,
                "node_id": "MDU6TGFiZWwxMzAwOTMzMzM2",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20tests",
                "name": "module: tests",
                "color": "f7e101",
                "default": false,
                "description": "Issues related to tests (not the torch.testing module)"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "Lilyjjo",
            "id": 35852084,
            "node_id": "MDQ6VXNlcjM1ODUyMDg0",
            "avatar_url": "https://avatars.githubusercontent.com/u/35852084?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Lilyjjo",
            "html_url": "https://github.com/Lilyjjo",
            "followers_url": "https://api.github.com/users/Lilyjjo/followers",
            "following_url": "https://api.github.com/users/Lilyjjo/following{/other_user}",
            "gists_url": "https://api.github.com/users/Lilyjjo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Lilyjjo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Lilyjjo/subscriptions",
            "organizations_url": "https://api.github.com/users/Lilyjjo/orgs",
            "repos_url": "https://api.github.com/users/Lilyjjo/repos",
            "events_url": "https://api.github.com/users/Lilyjjo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Lilyjjo/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "Lilyjjo",
                "id": 35852084,
                "node_id": "MDQ6VXNlcjM1ODUyMDg0",
                "avatar_url": "https://avatars.githubusercontent.com/u/35852084?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/Lilyjjo",
                "html_url": "https://github.com/Lilyjjo",
                "followers_url": "https://api.github.com/users/Lilyjjo/followers",
                "following_url": "https://api.github.com/users/Lilyjjo/following{/other_user}",
                "gists_url": "https://api.github.com/users/Lilyjjo/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/Lilyjjo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Lilyjjo/subscriptions",
                "organizations_url": "https://api.github.com/users/Lilyjjo/orgs",
                "repos_url": "https://api.github.com/users/Lilyjjo/repos",
                "events_url": "https://api.github.com/users/Lilyjjo/events{/privacy}",
                "received_events_url": "https://api.github.com/users/Lilyjjo/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 3,
        "created_at": "2020-12-14T11:28:44Z",
        "updated_at": "2021-02-09T19:16:59Z",
        "closed_at": "2021-02-09T19:16:59Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "OpInfo-based `test_variant_consistency_jit` fails when `op.output_func` returns a different number of outputs than `op.get_op`. For example using `output_func=itemgetter(1)` for op returning a tuple with two elements gives with `TypeError: iteration over a 0-d tensor` at [`check_output_types`](https://github.com/pytorch/pytorch/blob/master/torch/testing/_internal/common_jit.py#L20).\r\nThe reason is that types are obtained from the `op_get` instead of `output_func` \r\n`func.last_graph` is constructed here https://github.com/pytorch/pytorch/blob/master/torch/testing/_internal/jit_metaprogramming_utils.py#L301\n\ncc @mruberry @VitalyFedyunin @walterddr @gmagogsfm",
        "closed_by": {
            "login": "Lilyjjo",
            "id": 35852084,
            "node_id": "MDQ6VXNlcjM1ODUyMDg0",
            "avatar_url": "https://avatars.githubusercontent.com/u/35852084?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Lilyjjo",
            "html_url": "https://github.com/Lilyjjo",
            "followers_url": "https://api.github.com/users/Lilyjjo/followers",
            "following_url": "https://api.github.com/users/Lilyjjo/following{/other_user}",
            "gists_url": "https://api.github.com/users/Lilyjjo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Lilyjjo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Lilyjjo/subscriptions",
            "organizations_url": "https://api.github.com/users/Lilyjjo/orgs",
            "repos_url": "https://api.github.com/users/Lilyjjo/repos",
            "events_url": "https://api.github.com/users/Lilyjjo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Lilyjjo/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/49326/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/49326/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/49299",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/49299/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/49299/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/49299/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/49299",
        "id": 765597016,
        "node_id": "MDU6SXNzdWU3NjU1OTcwMTY=",
        "number": 49299,
        "title": "JIT: DifferentiableGraph/Requires grad handled badly by ProfilingExecutor and fuser fallbacks",
        "user": {
            "login": "t-vi",
            "id": 20787943,
            "node_id": "MDQ6VXNlcjIwNzg3OTQz",
            "avatar_url": "https://avatars.githubusercontent.com/u/20787943?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/t-vi",
            "html_url": "https://github.com/t-vi",
            "followers_url": "https://api.github.com/users/t-vi/followers",
            "following_url": "https://api.github.com/users/t-vi/following{/other_user}",
            "gists_url": "https://api.github.com/users/t-vi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/t-vi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/t-vi/subscriptions",
            "organizations_url": "https://api.github.com/users/t-vi/orgs",
            "repos_url": "https://api.github.com/users/t-vi/repos",
            "events_url": "https://api.github.com/users/t-vi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/t-vi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 10,
        "created_at": "2020-12-13T18:58:07Z",
        "updated_at": "2021-01-09T04:03:28Z",
        "closed_at": "2021-01-09T04:03:28Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\nTo me, it seems like the interplay between requiring gradients and the profiling executor/fuser fallback seems not ideal:\r\n1) in the fuser1 (TensorExpr) and fuser2 (CudaFuser), if I run a few grad-requiring tensors through my model and then run non-grad-requiring, it will run into the DifferentiableSubgraph and give me a grad-requiring output even though none of the inputs requires gradient. (It will also run a kernel outputting intermediates that we don't need, so perf loss...)\r\n2) in the fuser2 (CudaFuser) the CudaFusionGuard doesn't check for requires grad, so if I run a few non-grad-requiring tensors first, and feed a grad-requiring input, it'll drop the gradient (this is different for fuser1 where the typecheck checks for requires grad and then drops into the fallback).\r\n\r\nTo me it would seem that if we want to pull off the fallback stuff, we would properly guard DifferentiableGraph with what requires grad and the fusion guards with nothing requires grad (we might also have cases where which gradients are required varies).\r\n\r\n## To Reproduce\r\n\r\n```python\r\nfor fuser in [\"fuser1\", \"fuser2\"]:\r\n    for rq in [True, False]:\r\n        c = torch.jit.fuser(fuser)\r\n        c.__enter__()\r\n\r\n        def ratio_iou(x1, y1, w1, h1, x2, y2, w2, h2):\r\n            xi = torch.max(x1, x2)                                  # Intersection left\r\n            yi = torch.max(y1, y2)                                  # Intersection top\r\n            wi = torch.clamp(torch.min(x1+w1, x2+w2) - xi, min=0.)  # Intersection width\r\n            hi = torch.clamp(torch.min(y1+h1, y2+h2) - yi, min=0.)  # Intersection height\r\n            area_i = wi * hi                                        # Area Intersection\r\n            area_u = w1 * h1 + w2 * h2 - wi * hi                    # Area Union\r\n            return area_i / torch.clamp(area_u, min=1e-5)           # Intersection over Union\r\n\r\n        ratio_iou_scripted = torch.jit.script(ratio_iou)\r\n\r\n        x1, y1, w1, h1, x2, y2, w2, h2 = torch.randn(8, 100, 1000, device='cuda', requires_grad=not rq).exp()\r\n\r\n        for i in range(10):\r\n            ratio_iou_scripted.graph_for(x1, y1, w1, h1, x2, y2, w2, h2)\r\n        #print(ratio_iou_scripted.graph_for(x1, y1, w1, h1, x2, y2, w2, h2))\r\n\r\n        x1, y1, w1, h1, x2, y2, w2, h2 = torch.randn(8, 100, 1000, device='cuda', requires_grad=rq).exp()\r\n        print(fuser, x1.requires_grad, ratio_iou_scripted(x1, y1, w1, h1, x2, y2, w2, h2).requires_grad)\r\n```\r\n\r\n## Expected behavior\r\n\r\n`requires_grad` of output same as for input.\r\n\r\n## Environment\r\n\r\nPyTorch master.\r\n\r\n## Additional context\r\n\r\nThis used to be handled by the ArgSpec mechanism.\n\ncc @gmagogsfm",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/49299/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/49299/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/48786",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/48786/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/48786/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/48786/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/48786",
        "id": 756280211,
        "node_id": "MDU6SXNzdWU3NTYyODAyMTE=",
        "number": 48786,
        "title": "Improve assertAutodiffNode error message",
        "user": {
            "login": "Lilyjjo",
            "id": 35852084,
            "node_id": "MDQ6VXNlcjM1ODUyMDg0",
            "avatar_url": "https://avatars.githubusercontent.com/u/35852084?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Lilyjjo",
            "html_url": "https://github.com/Lilyjjo",
            "followers_url": "https://api.github.com/users/Lilyjjo/followers",
            "following_url": "https://api.github.com/users/Lilyjjo/following{/other_user}",
            "gists_url": "https://api.github.com/users/Lilyjjo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Lilyjjo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Lilyjjo/subscriptions",
            "organizations_url": "https://api.github.com/users/Lilyjjo/orgs",
            "repos_url": "https://api.github.com/users/Lilyjjo/repos",
            "events_url": "https://api.github.com/users/Lilyjjo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Lilyjjo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 2203967172,
                "node_id": "MDU6TGFiZWwyMjAzOTY3MTcy",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/days",
                "name": "days",
                "color": "77f497",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "Lilyjjo",
            "id": 35852084,
            "node_id": "MDQ6VXNlcjM1ODUyMDg0",
            "avatar_url": "https://avatars.githubusercontent.com/u/35852084?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Lilyjjo",
            "html_url": "https://github.com/Lilyjjo",
            "followers_url": "https://api.github.com/users/Lilyjjo/followers",
            "following_url": "https://api.github.com/users/Lilyjjo/following{/other_user}",
            "gists_url": "https://api.github.com/users/Lilyjjo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Lilyjjo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Lilyjjo/subscriptions",
            "organizations_url": "https://api.github.com/users/Lilyjjo/orgs",
            "repos_url": "https://api.github.com/users/Lilyjjo/repos",
            "events_url": "https://api.github.com/users/Lilyjjo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Lilyjjo/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "Lilyjjo",
                "id": 35852084,
                "node_id": "MDQ6VXNlcjM1ODUyMDg0",
                "avatar_url": "https://avatars.githubusercontent.com/u/35852084?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/Lilyjjo",
                "html_url": "https://github.com/Lilyjjo",
                "followers_url": "https://api.github.com/users/Lilyjjo/followers",
                "following_url": "https://api.github.com/users/Lilyjjo/following{/other_user}",
                "gists_url": "https://api.github.com/users/Lilyjjo/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/Lilyjjo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Lilyjjo/subscriptions",
                "organizations_url": "https://api.github.com/users/Lilyjjo/orgs",
                "repos_url": "https://api.github.com/users/Lilyjjo/repos",
                "events_url": "https://api.github.com/users/Lilyjjo/events{/privacy}",
                "received_events_url": "https://api.github.com/users/Lilyjjo/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-12-03T15:10:04Z",
        "updated_at": "2021-01-21T18:15:43Z",
        "closed_at": "2021-01-21T18:15:43Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "The error message created in PR #48567 for assertAutodiffNode can be improved by looking at the comments on the PR. Improving the error message will improve contributors' UX. \n\ncc @gmagogsfm",
        "closed_by": {
            "login": "Lilyjjo",
            "id": 35852084,
            "node_id": "MDQ6VXNlcjM1ODUyMDg0",
            "avatar_url": "https://avatars.githubusercontent.com/u/35852084?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Lilyjjo",
            "html_url": "https://github.com/Lilyjjo",
            "followers_url": "https://api.github.com/users/Lilyjjo/followers",
            "following_url": "https://api.github.com/users/Lilyjjo/following{/other_user}",
            "gists_url": "https://api.github.com/users/Lilyjjo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Lilyjjo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Lilyjjo/subscriptions",
            "organizations_url": "https://api.github.com/users/Lilyjjo/orgs",
            "repos_url": "https://api.github.com/users/Lilyjjo/repos",
            "events_url": "https://api.github.com/users/Lilyjjo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Lilyjjo/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/48786/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/48786/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/48674",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/48674/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/48674/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/48674/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/48674",
        "id": 754804160,
        "node_id": "MDU6SXNzdWU3NTQ4MDQxNjA=",
        "number": 48674,
        "title": "`torch.jit.script` is often broken in Python-3.9",
        "user": {
            "login": "malfet",
            "id": 2453524,
            "node_id": "MDQ6VXNlcjI0NTM1MjQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2453524?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/malfet",
            "html_url": "https://github.com/malfet",
            "followers_url": "https://api.github.com/users/malfet/followers",
            "following_url": "https://api.github.com/users/malfet/following{/other_user}",
            "gists_url": "https://api.github.com/users/malfet/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/malfet/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/malfet/subscriptions",
            "organizations_url": "https://api.github.com/users/malfet/orgs",
            "repos_url": "https://api.github.com/users/malfet/repos",
            "events_url": "https://api.github.com/users/malfet/events{/privacy}",
            "received_events_url": "https://api.github.com/users/malfet/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "malfet",
            "id": 2453524,
            "node_id": "MDQ6VXNlcjI0NTM1MjQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2453524?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/malfet",
            "html_url": "https://github.com/malfet",
            "followers_url": "https://api.github.com/users/malfet/followers",
            "following_url": "https://api.github.com/users/malfet/following{/other_user}",
            "gists_url": "https://api.github.com/users/malfet/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/malfet/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/malfet/subscriptions",
            "organizations_url": "https://api.github.com/users/malfet/orgs",
            "repos_url": "https://api.github.com/users/malfet/repos",
            "events_url": "https://api.github.com/users/malfet/events{/privacy}",
            "received_events_url": "https://api.github.com/users/malfet/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "malfet",
                "id": 2453524,
                "node_id": "MDQ6VXNlcjI0NTM1MjQ=",
                "avatar_url": "https://avatars.githubusercontent.com/u/2453524?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/malfet",
                "html_url": "https://github.com/malfet",
                "followers_url": "https://api.github.com/users/malfet/followers",
                "following_url": "https://api.github.com/users/malfet/following{/other_user}",
                "gists_url": "https://api.github.com/users/malfet/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/malfet/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/malfet/subscriptions",
                "organizations_url": "https://api.github.com/users/malfet/orgs",
                "repos_url": "https://api.github.com/users/malfet/repos",
                "events_url": "https://api.github.com/users/malfet/events{/privacy}",
                "received_events_url": "https://api.github.com/users/malfet/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": {
            "url": "https://api.github.com/repos/pytorch/pytorch/milestones/19",
            "html_url": "https://github.com/pytorch/pytorch/milestone/19",
            "labels_url": "https://api.github.com/repos/pytorch/pytorch/milestones/19/labels",
            "id": 5927736,
            "node_id": "MDk6TWlsZXN0b25lNTkyNzczNg==",
            "number": 19,
            "title": "1.7.1",
            "description": "",
            "creator": {
                "login": "gchanan",
                "id": 3768583,
                "node_id": "MDQ6VXNlcjM3Njg1ODM=",
                "avatar_url": "https://avatars.githubusercontent.com/u/3768583?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/gchanan",
                "html_url": "https://github.com/gchanan",
                "followers_url": "https://api.github.com/users/gchanan/followers",
                "following_url": "https://api.github.com/users/gchanan/following{/other_user}",
                "gists_url": "https://api.github.com/users/gchanan/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/gchanan/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gchanan/subscriptions",
                "organizations_url": "https://api.github.com/users/gchanan/orgs",
                "repos_url": "https://api.github.com/users/gchanan/repos",
                "events_url": "https://api.github.com/users/gchanan/events{/privacy}",
                "received_events_url": "https://api.github.com/users/gchanan/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 1,
            "closed_issues": 37,
            "state": "closed",
            "created_at": "2020-09-28T20:17:13Z",
            "updated_at": "2021-03-08T21:35:37Z",
            "due_on": null,
            "closed_at": "2021-01-07T22:40:43Z"
        },
        "comments": 2,
        "created_at": "2020-12-01T23:27:28Z",
        "updated_at": "2020-12-02T17:58:19Z",
        "closed_at": "2020-12-02T17:58:18Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "Following example:\r\n```\r\nimport torch\r\ndef foo(x: torch.Tensor) -> float: \r\n    return x[-3]\r\nbar=torch.jit.script(foo)\r\nprint(bar(torch.rand((10,))))\r\n```\r\nfails in Python-3.9 with\r\n```\r\ntorch.jit.frontend.NotSupportedError: ellipsis is not supported:\r\n  File \"/home/conda/jit.py\", line 3\r\ndef foo(x: torch.Tensor) -> int:\r\n    return x[-3]\r\n           ~ <--- HERE\r\n```\n\ncc @gmagogsfm",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/48674/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/48674/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/48643",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/48643/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/48643/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/48643/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/48643",
        "id": 754075741,
        "node_id": "MDU6SXNzdWU3NTQwNzU3NDE=",
        "number": 48643,
        "title": "Torchscript does not work with type: ignore comments for mypy",
        "user": {
            "login": "pmeier",
            "id": 6849766,
            "node_id": "MDQ6VXNlcjY4NDk3NjY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6849766?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pmeier",
            "html_url": "https://github.com/pmeier",
            "followers_url": "https://api.github.com/users/pmeier/followers",
            "following_url": "https://api.github.com/users/pmeier/following{/other_user}",
            "gists_url": "https://api.github.com/users/pmeier/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pmeier/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pmeier/subscriptions",
            "organizations_url": "https://api.github.com/users/pmeier/orgs",
            "repos_url": "https://api.github.com/users/pmeier/repos",
            "events_url": "https://api.github.com/users/pmeier/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pmeier/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "gmagogsfm",
            "id": 1817752,
            "node_id": "MDQ6VXNlcjE4MTc3NTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1817752?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gmagogsfm",
            "html_url": "https://github.com/gmagogsfm",
            "followers_url": "https://api.github.com/users/gmagogsfm/followers",
            "following_url": "https://api.github.com/users/gmagogsfm/following{/other_user}",
            "gists_url": "https://api.github.com/users/gmagogsfm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gmagogsfm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gmagogsfm/subscriptions",
            "organizations_url": "https://api.github.com/users/gmagogsfm/orgs",
            "repos_url": "https://api.github.com/users/gmagogsfm/repos",
            "events_url": "https://api.github.com/users/gmagogsfm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gmagogsfm/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "gmagogsfm",
                "id": 1817752,
                "node_id": "MDQ6VXNlcjE4MTc3NTI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/1817752?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/gmagogsfm",
                "html_url": "https://github.com/gmagogsfm",
                "followers_url": "https://api.github.com/users/gmagogsfm/followers",
                "following_url": "https://api.github.com/users/gmagogsfm/following{/other_user}",
                "gists_url": "https://api.github.com/users/gmagogsfm/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/gmagogsfm/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gmagogsfm/subscriptions",
                "organizations_url": "https://api.github.com/users/gmagogsfm/orgs",
                "repos_url": "https://api.github.com/users/gmagogsfm/repos",
                "events_url": "https://api.github.com/users/gmagogsfm/events{/privacy}",
                "received_events_url": "https://api.github.com/users/gmagogsfm/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 7,
        "created_at": "2020-12-01T06:55:31Z",
        "updated_at": "2021-02-08T19:37:37Z",
        "closed_at": "2021-02-08T19:25:11Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "## \ud83d\ude80 Feature\r\n\r\ntorchscript should work with [`type: ignore` comments](https://mypy.readthedocs.io/en/stable/common_issues.html#spurious-errors-and-locally-silencing-the-checker) from `mypy`.\r\n\r\n## Motivation\r\n\r\nIn `torchvision` we are beginning to type check our annotations with `mypy`. Since torchscript as of now only supports a subset of the annotations, we need to silence `mypy` on some lines. This can be done with `type: ignore` comments that are added to the offending line. \r\n\r\nUnfortunately and as of now, this doesn't work with torchscript. You can find two examples below:\r\n\r\n### Overload\r\n\r\n```python\r\nfrom torch import nn, jit, Tensor\r\nfrom typing import List\r\n\r\n\r\nclass Foo(nn.Module):\r\n    @jit._overload_method\r\n    def forward(self, input: List[Tensor]) -> Tensor:\r\n        pass\r\n\r\n    @jit._overload_method  # type: ignore[no-redef]\r\n    def forward(self, input: Tensor) -> Tensor:\r\n        pass\r\n\r\n    def forward(self, input: Tensor) -> Tensor:  # type: ignore[no-redef]\r\n        pass\r\n\r\n\r\nfoo = Foo()\r\njit.script(foo)\r\n```\r\n\r\n```\r\nRuntimeError: expected type comment but found 'def' here:\r\ndef forward(self, input: Tensor) -> Tensor:  # type: ignore[no-redef]\r\n~~~ <--- HERE\r\n```\r\n\r\n### Override\r\n\r\n```python\r\nfrom torch import nn, jit, Tensor\r\n\r\n\r\nclass Bar(nn.ModuleDict):\r\n    def forward(self, input: Tensor) -> Tensor:  # type: ignore[override]\r\n        pass\r\n\r\n\r\nbar = Bar()\r\njit.script(bar)\r\n```\r\n\r\n```\r\nRuntimeError: expected type comment but found 'def' here:\r\ndef forward(self, input: Tensor) -> Tensor:  # type: ignore[override]\r\n~~~ <--- HERE\r\n```\r\n\r\n## Additional context\r\n\r\nSee https://github.com/pytorch/vision/issues/3027 for a real-world example.\r\n\r\nCc @eellison @fmassa @frgfm \r\n\r\n\r\ncc @gmagogsfm",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/48643/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/48643/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/48634",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/48634/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/48634/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/48634/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/48634",
        "id": 753927414,
        "node_id": "MDU6SXNzdWU3NTM5Mjc0MTQ=",
        "number": 48634,
        "title": "[docs] ScriptModule docs are not properly generated",
        "user": {
            "login": "mariosasko",
            "id": 47462742,
            "node_id": "MDQ6VXNlcjQ3NDYyNzQy",
            "avatar_url": "https://avatars.githubusercontent.com/u/47462742?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mariosasko",
            "html_url": "https://github.com/mariosasko",
            "followers_url": "https://api.github.com/users/mariosasko/followers",
            "following_url": "https://api.github.com/users/mariosasko/following{/other_user}",
            "gists_url": "https://api.github.com/users/mariosasko/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mariosasko/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mariosasko/subscriptions",
            "organizations_url": "https://api.github.com/users/mariosasko/orgs",
            "repos_url": "https://api.github.com/users/mariosasko/repos",
            "events_url": "https://api.github.com/users/mariosasko/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mariosasko/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-12-01T01:27:41Z",
        "updated_at": "2021-01-23T06:35:32Z",
        "closed_at": "2021-01-23T06:35:32Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "## \ud83d\udcda Documentation\r\n\r\nLink to ScriptModule on [jit's doc page](https://pytorch.org/docs/stable/jit.html):\r\n![img1](https://user-images.githubusercontent.com/47462742/100685028-cee46280-337b-11eb-842f-f92e822afe77.PNG)\r\n\r\nScriptModule's doc page:\r\n![img2](https://user-images.githubusercontent.com/47462742/100685043-d60b7080-337b-11eb-8623-20bdb29747d5.PNG)\r\n\r\nThere is a typo as well, `wrap a` (I assume the author meant `wrapper around`)\n\ncc @gmagogsfm",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/48634/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/48634/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/48415",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/48415/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/48415/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/48415/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/48415",
        "id": 749561306,
        "node_id": "MDU6SXNzdWU3NDk1NjEzMDY=",
        "number": 48415,
        "title": "torch.jit.save() produces complex c++ error when path does not exist",
        "user": {
            "login": "kondela",
            "id": 34348494,
            "node_id": "MDQ6VXNlcjM0MzQ4NDk0",
            "avatar_url": "https://avatars.githubusercontent.com/u/34348494?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kondela",
            "html_url": "https://github.com/kondela",
            "followers_url": "https://api.github.com/users/kondela/followers",
            "following_url": "https://api.github.com/users/kondela/following{/other_user}",
            "gists_url": "https://api.github.com/users/kondela/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kondela/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kondela/subscriptions",
            "organizations_url": "https://api.github.com/users/kondela/orgs",
            "repos_url": "https://api.github.com/users/kondela/repos",
            "events_url": "https://api.github.com/users/kondela/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kondela/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "tugsbayasgalan",
            "id": 16603271,
            "node_id": "MDQ6VXNlcjE2NjAzMjcx",
            "avatar_url": "https://avatars.githubusercontent.com/u/16603271?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tugsbayasgalan",
            "html_url": "https://github.com/tugsbayasgalan",
            "followers_url": "https://api.github.com/users/tugsbayasgalan/followers",
            "following_url": "https://api.github.com/users/tugsbayasgalan/following{/other_user}",
            "gists_url": "https://api.github.com/users/tugsbayasgalan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tugsbayasgalan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tugsbayasgalan/subscriptions",
            "organizations_url": "https://api.github.com/users/tugsbayasgalan/orgs",
            "repos_url": "https://api.github.com/users/tugsbayasgalan/repos",
            "events_url": "https://api.github.com/users/tugsbayasgalan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tugsbayasgalan/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "tugsbayasgalan",
                "id": 16603271,
                "node_id": "MDQ6VXNlcjE2NjAzMjcx",
                "avatar_url": "https://avatars.githubusercontent.com/u/16603271?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/tugsbayasgalan",
                "html_url": "https://github.com/tugsbayasgalan",
                "followers_url": "https://api.github.com/users/tugsbayasgalan/followers",
                "following_url": "https://api.github.com/users/tugsbayasgalan/following{/other_user}",
                "gists_url": "https://api.github.com/users/tugsbayasgalan/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/tugsbayasgalan/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tugsbayasgalan/subscriptions",
                "organizations_url": "https://api.github.com/users/tugsbayasgalan/orgs",
                "repos_url": "https://api.github.com/users/tugsbayasgalan/repos",
                "events_url": "https://api.github.com/users/tugsbayasgalan/events{/privacy}",
                "received_events_url": "https://api.github.com/users/tugsbayasgalan/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 2,
        "created_at": "2020-11-24T10:03:50Z",
        "updated_at": "2021-01-12T00:39:13Z",
        "closed_at": "2021-01-12T00:39:13Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## Issue description\r\n\r\nCurrently, when you use `torch.jit.save()` to save/export your model as a `.pth` or `.pt` file (instead of writing it to a buffer) it throws (to me) a cryptic error message from cpp when supplied path does not exist (it also kills kernel in jupyter notebook). Aforementioned error is different when using `torch.save()` which throws a regular.\r\n\r\nCurrent `torch.save()` error message:\r\n```python\r\nFileNotFoundError: [Errno 2] No such file or directory: 'non/existent/path/model.pth'\r\n```\r\n \r\nCurrent `torch.jit.save()` error message:\r\n```cpp\r\nlibc++abi.dylib: terminating with uncaught exception of type c10::Error: [enforce fail at inline_container.cc:366] . PytorchStreamWriter failed writing file version: file write failed\r\nframe #0: c10::ThrowEnforceNotMet(char const*, int, char const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, void const*) + 191 (0x1073efb5f in libc10.dylib)\r\nframe #1: caffe2::serialize::PyTorchStreamWriter::valid(char const*, char const*) + 144 (0x1174a10d0 in libtorch_cpu.dylib)\r\nframe #2: caffe2::serialize::PyTorchStreamWriter::writeRecord(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, void const*, unsigned long, bool) + 469 (0x1174a1335 in libtorch_cpu.dylib)\r\nframe #3: caffe2::serialize::PyTorchStreamWriter::writeEndOfFile() + 126 (0x1174a163e in libtorch_cpu.dylib)\r\nframe #4: caffe2::serialize::PyTorchStreamWriter::~PyTorchStreamWriter() + 31 (0x1174a188f in libtorch_cpu.dylib)\r\nframe #5: torch::jit::ExportModule(torch::jit::Module const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > const&, bool) + 138 (0x118e3b81a in libtorch_cpu.dylib)\r\nframe #6: void pybind11::cpp_function::initialize<torch::jit::initJitScriptBindings(_object*)::$_13, void, torch::jit::Module&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > const&, pybind11::name, pybind11::is_method, pybind11::sibling, pybind11::arg, pybind11::arg_v>(torch::jit::initJitScriptBindings(_object*)::$_13&&, void (*)(torch::jit::Module&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > const&), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, pybind11::arg const&, pybind11::arg_v const&)::'lambda'(pybind11::detail::function_call&)::__invoke(pybind11::detail::function_call&) + 246 (0x114f51156 in libtorch_python.dylib)\r\nframe #7: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) + 3412 (0x1148fa9c4 in libtorch_python.dylib)\r\n<omitting python frames>\r\n```\r\n\r\nThis could be fixed by adding a check for path validity in:\r\n\r\nhttps://github.com/pytorch/pytorch/blob/9dc9a55bc47c98d4683afb969d871615ca45874b/torch/jit/_serialization.py#L80-L81\r\n\r\nFurthermore, there's already a form of path/file checking in `torch.jit.load()`:\r\n\r\nhttps://github.com/pytorch/pytorch/blob/9dc9a55bc47c98d4683afb969d871615ca45874b/torch/jit/_serialization.py#L149-L153\r\n\r\nIf the aforementioned lack of path checking in `torch.jit.save()` is intended behavior then I would suggest to reconsider it since a meaningful error message could serve as a reasonable enhancement. I can try to create a PR myself if this enhancement gets approved.\r\n\r\n## Code example\r\n\r\n```python\r\nimport torch\r\n\r\nclass SampleNet(torch.nn.Module):\r\n    def __init__(self):\r\n        super(SampleNet, self).__init__()\r\n        self.linear = torch.nn.Linear(2, 1)\r\n\r\n    def forward(self, x):\r\n        return self.linear(x)\r\n    \r\nm = torch.jit.script(SampleNet())\r\ntorch.jit.save(m, 'non/existent/path/model.pth')\r\n# or torch.save(m, 'non/existent/path/model.pth') for a comparison\r\n```\n\ncc @gmagogsfm",
        "closed_by": {
            "login": "tugsbayasgalan",
            "id": 16603271,
            "node_id": "MDQ6VXNlcjE2NjAzMjcx",
            "avatar_url": "https://avatars.githubusercontent.com/u/16603271?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tugsbayasgalan",
            "html_url": "https://github.com/tugsbayasgalan",
            "followers_url": "https://api.github.com/users/tugsbayasgalan/followers",
            "following_url": "https://api.github.com/users/tugsbayasgalan/following{/other_user}",
            "gists_url": "https://api.github.com/users/tugsbayasgalan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tugsbayasgalan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tugsbayasgalan/subscriptions",
            "organizations_url": "https://api.github.com/users/tugsbayasgalan/orgs",
            "repos_url": "https://api.github.com/users/tugsbayasgalan/repos",
            "events_url": "https://api.github.com/users/tugsbayasgalan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tugsbayasgalan/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/48415/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/48415/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/48200",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/48200/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/48200/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/48200/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/48200",
        "id": 745974399,
        "node_id": "MDU6SXNzdWU3NDU5NzQzOTk=",
        "number": 48200,
        "title": "@torch.jit.script causes compilation error on Ampere architecture (RTX 3090)",
        "user": {
            "login": "Callidior",
            "id": 7915048,
            "node_id": "MDQ6VXNlcjc5MTUwNDg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7915048?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Callidior",
            "html_url": "https://github.com/Callidior",
            "followers_url": "https://api.github.com/users/Callidior/followers",
            "following_url": "https://api.github.com/users/Callidior/following{/other_user}",
            "gists_url": "https://api.github.com/users/Callidior/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Callidior/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Callidior/subscriptions",
            "organizations_url": "https://api.github.com/users/Callidior/orgs",
            "repos_url": "https://api.github.com/users/Callidior/repos",
            "events_url": "https://api.github.com/users/Callidior/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Callidior/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "jjsjann123",
            "id": 3709243,
            "node_id": "MDQ6VXNlcjM3MDkyNDM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3709243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jjsjann123",
            "html_url": "https://github.com/jjsjann123",
            "followers_url": "https://api.github.com/users/jjsjann123/followers",
            "following_url": "https://api.github.com/users/jjsjann123/following{/other_user}",
            "gists_url": "https://api.github.com/users/jjsjann123/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jjsjann123/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jjsjann123/subscriptions",
            "organizations_url": "https://api.github.com/users/jjsjann123/orgs",
            "repos_url": "https://api.github.com/users/jjsjann123/repos",
            "events_url": "https://api.github.com/users/jjsjann123/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jjsjann123/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "jjsjann123",
                "id": 3709243,
                "node_id": "MDQ6VXNlcjM3MDkyNDM=",
                "avatar_url": "https://avatars.githubusercontent.com/u/3709243?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/jjsjann123",
                "html_url": "https://github.com/jjsjann123",
                "followers_url": "https://api.github.com/users/jjsjann123/followers",
                "following_url": "https://api.github.com/users/jjsjann123/following{/other_user}",
                "gists_url": "https://api.github.com/users/jjsjann123/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/jjsjann123/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jjsjann123/subscriptions",
                "organizations_url": "https://api.github.com/users/jjsjann123/orgs",
                "repos_url": "https://api.github.com/users/jjsjann123/repos",
                "events_url": "https://api.github.com/users/jjsjann123/events{/privacy}",
                "received_events_url": "https://api.github.com/users/jjsjann123/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 3,
        "created_at": "2020-11-18T20:18:54Z",
        "updated_at": "2020-12-02T19:53:15Z",
        "closed_at": "2020-12-02T19:53:15Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\nFor being able to use a RTX 3090, I upgraded my PyTorch to 1.7.0 using conda. When wanting to run my code, which used to run perfectly on PyTorch 1.6 and GTX 2080 Ti, I encountered the following error. The stack trace mentions a function that uses `@torch.jit.script`. When I remove this decorator, the code runs fine.\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"example.py\", line 12, in <module>\r\n    out = test(A).cpu().item()\r\nRuntimeError: nvrtc: error: invalid value for --gpu-architecture (-arch)\r\n\r\nnvrtc compilation failed:\r\n\r\n#define NAN __int_as_float(0x7fffffff)\r\n#define POS_INFINITY __int_as_float(0x7f800000)\r\n#define NEG_INFINITY __int_as_float(0xff800000)\r\n\r\n\r\ntemplate<typename T>\r\n__device__ T maximum(T a, T b) {\r\n  return isnan(a) ? a : (a > b ? a : b);\r\n}\r\n\r\ntemplate<typename T>\r\n__device__ T minimum(T a, T b) {\r\n  return isnan(a) ? a : (a < b ? a : b);\r\n}\r\n\r\nextern \"C\" __global__\r\nvoid func_1(float* t0, float* t1, float* aten_sub_flat) {\r\n{\r\n  if (512 * blockIdx.x + threadIdx.x<1000 ? 1 : 0) {\r\n    float v = __ldg(t0 + (((512 * blockIdx.x + threadIdx.x) / 10) / 10) * 10 + (512 * blockIdx.x + threadIdx.x) % 10);\r\n    float v_1 = __ldg(t1 + (512 * blockIdx.x + threadIdx.x) / 10);\r\n    aten_sub_flat[512 * blockIdx.x + threadIdx.x] = v - v_1;\r\n  }\r\n}\r\n}\r\n```\r\n\r\nThe same code still runs perfectly with PyTorch 1.7 on a GTX 2080, even with the decorator.\r\n\r\n## To Reproduce\r\n\r\nRun the following code on an RTX 3090 (or other Ampere GPU, probably):\r\n\r\n```python\r\nimport torch\r\n\r\n@torch.jit.script\r\ndef test(A):\r\n\r\n    D = A[:, None, :] - A[:, :, None]\r\n    return torch.mean(D)\r\n\r\nif __name__ == '__main__':\r\n    for i in range(2):\r\n        A = torch.rand(10, 10).cuda()\r\n        out = test(A).cpu().item()\r\n        print(out)\r\n```\r\n\r\nNote that the first call to `test` is successful. It fails on the second one.\r\n\r\nAfter removing `@torch.jit.script`, the error should disappear.\r\n\r\n## Expected behavior\r\n\r\nThe function is being executed on the GPU without error and two numbers are printed.\r\n\r\n## Environment\r\n\r\n```\r\nPyTorch version: 1.7.0\r\nIs debug build: True\r\nCUDA used to build PyTorch: 11.0\r\nROCM used to build PyTorch: N/A\r\n\r\nOS: Ubuntu 18.04.5 LTS (x86_64)\r\nGCC version: (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0\r\nClang version: Could not collect\r\nCMake version: Could not collect\r\n\r\nPython version: 3.8 (64-bit runtime)\r\nIs CUDA available: True\r\nCUDA runtime version: Could not collect\r\nGPU models and configuration:\r\nGPU 0: GeForce RTX 3090\r\nGPU 1: GeForce RTX 2080 Ti\r\n\r\nNvidia driver version: 455.38\r\ncuDNN version: Could not collect\r\nHIP runtime version: N/A\r\nMIOpen runtime version: N/A\r\n\r\nVersions of relevant libraries:\r\n[pip3] numpy==1.19.2\r\n[pip3] torch==1.7.0\r\n[pip3] torchaudio==0.7.0a0+ac17b64\r\n[pip3] torchtext==0.8.0a0+cd6902d\r\n[pip3] torchvision==0.8.1\r\n[conda] blas                      1.0                         mkl\r\n[conda] cudatoolkit               11.0.221             h6bb024c_0\r\n[conda] mkl                       2020.2                      256\r\n[conda] mkl-service               2.3.0            py38he904b0f_0\r\n[conda] mkl_fft                   1.2.0            py38h23d657b_0\r\n[conda] mkl_random                1.1.1            py38h0573a6f_0\r\n[conda] numpy                     1.19.2           py38h54aff64_0\r\n[conda] numpy-base                1.19.2           py38hfa32c7d_0\r\n[conda] pytorch                   1.7.0           py3.8_cuda11.0.221_cudnn8.0.3_0    pytorch\r\n[conda] torchaudio                0.7.0                      py38    pytorch\r\n[conda] torchtext                 0.8.0                      py38    pytorch\r\n[conda] torchvision               0.8.1                py38_cu110    pytorch\r\n```\n\ncc @gmagogsfm",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/48200/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/48200/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/47631",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/47631/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/47631/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/47631/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/47631",
        "id": 739403816,
        "node_id": "MDU6SXNzdWU3Mzk0MDM4MTY=",
        "number": 47631,
        "title": "[JIT] Module interface subtype checking not working correctly",
        "user": {
            "login": "SplitInfinity",
            "id": 4392003,
            "node_id": "MDQ6VXNlcjQzOTIwMDM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4392003?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SplitInfinity",
            "html_url": "https://github.com/SplitInfinity",
            "followers_url": "https://api.github.com/users/SplitInfinity/followers",
            "following_url": "https://api.github.com/users/SplitInfinity/following{/other_user}",
            "gists_url": "https://api.github.com/users/SplitInfinity/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SplitInfinity/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SplitInfinity/subscriptions",
            "organizations_url": "https://api.github.com/users/SplitInfinity/orgs",
            "repos_url": "https://api.github.com/users/SplitInfinity/repos",
            "events_url": "https://api.github.com/users/SplitInfinity/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SplitInfinity/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 2203967172,
                "node_id": "MDU6TGFiZWwyMjAzOTY3MTcy",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/days",
                "name": "days",
                "color": "77f497",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "SplitInfinity",
            "id": 4392003,
            "node_id": "MDQ6VXNlcjQzOTIwMDM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4392003?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SplitInfinity",
            "html_url": "https://github.com/SplitInfinity",
            "followers_url": "https://api.github.com/users/SplitInfinity/followers",
            "following_url": "https://api.github.com/users/SplitInfinity/following{/other_user}",
            "gists_url": "https://api.github.com/users/SplitInfinity/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SplitInfinity/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SplitInfinity/subscriptions",
            "organizations_url": "https://api.github.com/users/SplitInfinity/orgs",
            "repos_url": "https://api.github.com/users/SplitInfinity/repos",
            "events_url": "https://api.github.com/users/SplitInfinity/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SplitInfinity/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "SplitInfinity",
                "id": 4392003,
                "node_id": "MDQ6VXNlcjQzOTIwMDM=",
                "avatar_url": "https://avatars.githubusercontent.com/u/4392003?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/SplitInfinity",
                "html_url": "https://github.com/SplitInfinity",
                "followers_url": "https://api.github.com/users/SplitInfinity/followers",
                "following_url": "https://api.github.com/users/SplitInfinity/following{/other_user}",
                "gists_url": "https://api.github.com/users/SplitInfinity/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/SplitInfinity/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/SplitInfinity/subscriptions",
                "organizations_url": "https://api.github.com/users/SplitInfinity/orgs",
                "repos_url": "https://api.github.com/users/SplitInfinity/repos",
                "events_url": "https://api.github.com/users/SplitInfinity/events{/privacy}",
                "received_events_url": "https://api.github.com/users/SplitInfinity/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-11-09T22:18:30Z",
        "updated_at": "2020-11-13T08:48:33Z",
        "closed_at": "2020-11-13T08:48:33Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## To Reproduce\r\n```\r\nimport torch\r\nfrom typing import Any\r\n\r\n@torch.jit.interface\r\nclass ModuleInterface(torch.nn.Module):\r\n    def forward(self, inputs: torch.Tensor) -> Any:\r\n        pass\r\n\r\nclass TestModule(torch.nn.Module):\r\n    def __init__(self):\r\n        super(TestModule, self).__init__()\r\n\r\n    def forward(self, inputs: Any) -> Any:\r\n        return inputs\r\n\r\nclass Mod(torch.nn.Module):\r\n    def __init__(self):\r\n        super(Mod, self).__init__()\r\n        self.d = torch.nn.ModuleDict({\"module\": TestModule()})\r\n\r\n    def forward(self, x: Any, key: str) -> Any:\r\n        value: ModuleInterface = self.d[key]\r\n        return value.forward(x)\r\n\r\n# this fails with \"Attribute module is not of annotated type ModuleInterface\".\r\nm = Mod()\r\ntorch.jit.script(m)\r\n```\r\n\r\n## Expected behavior\r\n\r\nThis should compile. `(Any) -> Any` (the module) should be an acceptable subtype of `(Tensor) -> Any` (the interface) because `Tensor` is a subtype of `Any`. Any argument that the interface is called with should be safe to pass to the actual module too.\r\n\n\ncc @gmagogsfm",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/47631/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/47631/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/47528",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/47528/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/47528/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/47528/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/47528",
        "id": 738076457,
        "node_id": "MDU6SXNzdWU3MzgwNzY0NTc=",
        "number": 47528,
        "title": "torch.nn.ZeroPad2d is not scriptable",
        "user": {
            "login": "BowenBao",
            "id": 9376104,
            "node_id": "MDQ6VXNlcjkzNzYxMDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9376104?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/BowenBao",
            "html_url": "https://github.com/BowenBao",
            "followers_url": "https://api.github.com/users/BowenBao/followers",
            "following_url": "https://api.github.com/users/BowenBao/following{/other_user}",
            "gists_url": "https://api.github.com/users/BowenBao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/BowenBao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/BowenBao/subscriptions",
            "organizations_url": "https://api.github.com/users/BowenBao/orgs",
            "repos_url": "https://api.github.com/users/BowenBao/repos",
            "events_url": "https://api.github.com/users/BowenBao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/BowenBao/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "malfet",
            "id": 2453524,
            "node_id": "MDQ6VXNlcjI0NTM1MjQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2453524?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/malfet",
            "html_url": "https://github.com/malfet",
            "followers_url": "https://api.github.com/users/malfet/followers",
            "following_url": "https://api.github.com/users/malfet/following{/other_user}",
            "gists_url": "https://api.github.com/users/malfet/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/malfet/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/malfet/subscriptions",
            "organizations_url": "https://api.github.com/users/malfet/orgs",
            "repos_url": "https://api.github.com/users/malfet/repos",
            "events_url": "https://api.github.com/users/malfet/events{/privacy}",
            "received_events_url": "https://api.github.com/users/malfet/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "malfet",
                "id": 2453524,
                "node_id": "MDQ6VXNlcjI0NTM1MjQ=",
                "avatar_url": "https://avatars.githubusercontent.com/u/2453524?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/malfet",
                "html_url": "https://github.com/malfet",
                "followers_url": "https://api.github.com/users/malfet/followers",
                "following_url": "https://api.github.com/users/malfet/following{/other_user}",
                "gists_url": "https://api.github.com/users/malfet/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/malfet/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/malfet/subscriptions",
                "organizations_url": "https://api.github.com/users/malfet/orgs",
                "repos_url": "https://api.github.com/users/malfet/repos",
                "events_url": "https://api.github.com/users/malfet/events{/privacy}",
                "received_events_url": "https://api.github.com/users/malfet/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 5,
        "created_at": "2020-11-06T22:21:44Z",
        "updated_at": "2020-11-26T16:11:45Z",
        "closed_at": "2020-11-26T16:11:45Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\nRuntime error thrown when trying to script model that calls `nn.ZeroPad2d`.\r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior:\r\n\r\n1. Run the below script in python.\r\n\r\n```python\r\nimport torch\r\nfrom torch import nn\r\n\r\nclass Pad(torch.nn.Module):\r\n    def forward(self, x):\r\n        pad_op =  nn.ZeroPad2d(padding=(10, 20, 0, 0))\r\n        return pad_op(x)\r\n\r\nm = torch.jit.script(Pad())\r\n```\r\n\r\n2. Observe error\r\n\r\n```\r\nRuntimeError:\r\nUnknown type name '_size_4_t':\r\n  File \"/home/bowbao/repos/pytorch/torch/nn/modules/padding.py\", line 453\r\n    def __init__(self, padding: _size_4_t) -> None:\r\n                                ~~~~~~~~~ <--- HERE\r\n        super(ZeroPad2d, self).__init__(padding, 0.)\r\n'ZeroPad2d.__init__' is being compiled since it was called from '__torch__.torch.nn.modules.padding.ZeroPad2d'\r\n  File \"repro_1p_rnn_fairseq.py\", line 6\r\n    def forward(self, x):\r\n        pad_op =  nn.ZeroPad2d(padding=(10, 20, 0, 0))\r\n                  ~~~~~~~~~~~~ <--- HERE\r\n        return pad_op(x)\r\n'__torch__.torch.nn.modules.padding.ZeroPad2d' is being compiled since it was called from 'Pad.forward'\r\n  File \"repro_1p_rnn_fairseq.py\", line 6\r\n    def forward(self, x):\r\n        pad_op =  nn.ZeroPad2d(padding=(10, 20, 0, 0))\r\n        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ <--- HERE\r\n        return pad_op(x)\r\n```\r\n\r\n<!-- If you have a code sample, error messages, stack traces, please provide it here as well -->\r\n\r\n## Expected behavior\r\n\r\nCreate scripted module correctly.\r\n\r\n\n\ncc @gmagogsfm",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/47528/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/47528/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/47493",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/47493/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/47493/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/47493/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/47493",
        "id": 737509509,
        "node_id": "MDU6SXNzdWU3Mzc1MDk1MDk=",
        "number": 47493,
        "title": "Unable to create TorchScript compatible CUDA extension",
        "user": {
            "login": "zasdfgbnm",
            "id": 1032377,
            "node_id": "MDQ6VXNlcjEwMzIzNzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1032377?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zasdfgbnm",
            "html_url": "https://github.com/zasdfgbnm",
            "followers_url": "https://api.github.com/users/zasdfgbnm/followers",
            "following_url": "https://api.github.com/users/zasdfgbnm/following{/other_user}",
            "gists_url": "https://api.github.com/users/zasdfgbnm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zasdfgbnm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zasdfgbnm/subscriptions",
            "organizations_url": "https://api.github.com/users/zasdfgbnm/orgs",
            "repos_url": "https://api.github.com/users/zasdfgbnm/repos",
            "events_url": "https://api.github.com/users/zasdfgbnm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zasdfgbnm/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 884152160,
                "node_id": "MDU6TGFiZWw4ODQxNTIxNjA=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20cpp-extensions",
                "name": "module: cpp-extensions",
                "color": "f7e101",
                "default": false,
                "description": "Related to torch.utils.cpp_extension"
            },
            {
                "id": 2203967632,
                "node_id": "MDU6TGFiZWwyMjAzOTY3NjMy",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/weeks",
                "name": "weeks",
                "color": "e5808f",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2020-11-06T06:32:08Z",
        "updated_at": "2021-02-27T15:15:19Z",
        "closed_at": "2020-11-30T20:19:13Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\n```cuda\r\n// test.cu\r\n#include <torch/extension.h>\r\n\r\nbool is_installed() { return true; }\r\n\r\nTORCH_LIBRARY(my_ops, m) {\r\n  m.def(\"is_installed() -> bool\", &is_installed);\r\n}\r\n```\r\n\r\n```python\r\n# setup.py\r\nfrom setuptools import setup\r\nimport torch\r\nfrom torch.utils.cpp_extension import CUDAExtension, BuildExtension\r\n\r\nsetup(\r\n    name='test',\r\n    ext_modules=[\r\n        CUDAExtension('test', ['test.cu'])\r\n    ],\r\n    cmdclass={\r\n        'build_ext': BuildExtension\r\n    }\r\n)\r\n```\r\n\r\nError:\r\n```\r\n[1/1] /usr/local/cuda/bin/nvcc -I/home/gaoxiang/.local/lib/python3.8/site-packages/torch/include -I/home/gaoxiang/.local/lib/python3.8/site-packages/torch/include/torch/csrc/api/include -I/home/gaoxiang/.local/lib/python3.8/site-packages/torch/include/TH -I/home/gaoxiang/.local/lib/python3.8/site-packages/torch/include/THC -I/usr/local/cuda/include -I/usr/include/python3.8 -c -c /home/gaoxiang/extension-jit/test.cu -o /home/gaoxiang/extension-jit/build/temp.linux-x86_64-3.8/test.o -D__CUDA_NO_HALF_OPERATORS__ -D__CUDA_NO_HALF_CONVERSIONS__ -D__CUDA_NO_BFLOAT16_CONVERSIONS__ -D__CUDA_NO_HALF2_OPERATORS__ --expt-relaxed-constexpr --compiler-options ''\"'\"'-fPIC'\"'\"'' -DTORCH_API_INCLUDE_EXTENSION_H '-DPYBIND11_COMPILER_TYPE=\"_gcc\"' '-DPYBIND11_STDLIB=\"_libstdcpp\"' '-DPYBIND11_BUILD_ABI=\"_cxxabi1014\"' -DTORCH_EXTENSION_NAME=test -D_GLIBCXX_USE_CXX11_ABI=1 -gencode=arch=compute_86,code=sm_86 -std=c++14\r\nFAILED: /home/gaoxiang/extension-jit/build/temp.linux-x86_64-3.8/test.o \r\n/usr/local/cuda/bin/nvcc -I/home/gaoxiang/.local/lib/python3.8/site-packages/torch/include -I/home/gaoxiang/.local/lib/python3.8/site-packages/torch/include/torch/csrc/api/include -I/home/gaoxiang/.local/lib/python3.8/site-packages/torch/include/TH -I/home/gaoxiang/.local/lib/python3.8/site-packages/torch/include/THC -I/usr/local/cuda/include -I/usr/include/python3.8 -c -c /home/gaoxiang/extension-jit/test.cu -o /home/gaoxiang/extension-jit/build/temp.linux-x86_64-3.8/test.o -D__CUDA_NO_HALF_OPERATORS__ -D__CUDA_NO_HALF_CONVERSIONS__ -D__CUDA_NO_BFLOAT16_CONVERSIONS__ -D__CUDA_NO_HALF2_OPERATORS__ --expt-relaxed-constexpr --compiler-options ''\"'\"'-fPIC'\"'\"'' -DTORCH_API_INCLUDE_EXTENSION_H '-DPYBIND11_COMPILER_TYPE=\"_gcc\"' '-DPYBIND11_STDLIB=\"_libstdcpp\"' '-DPYBIND11_BUILD_ABI=\"_cxxabi1014\"' -DTORCH_EXTENSION_NAME=test -D_GLIBCXX_USE_CXX11_ABI=1 -gencode=arch=compute_86,code=sm_86 -std=c++14\r\n/home/gaoxiang/.local/lib/python3.8/site-packages/torch/include/ATen/core/boxing/impl/make_boxed_from_unboxed_functor.h(326): warning: variable \"num_ivalue_args\" was declared but never referenced\r\n          detected during:\r\n            instantiation of \"std::decay_t<c10::guts::infer_function_traits<Functor>::type::return_type> c10::impl::call_functor_with_args_from_stack_<Functor,AllowDeprecatedTypes,ivalue_arg_indices...>(Functor *, c10::Stack *, std::index_sequence<ivalue_arg_indices...>) [with Functor=c10::impl::WrapFunctionIntoRuntimeFunctor<std::decay_t<__nv_bool ()>>, AllowDeprecatedTypes=false, ivalue_arg_indices=<>]\" \r\n(346): here\r\n            instantiation of \"std::decay_t<c10::guts::infer_function_traits<Functor>::type::return_type> c10::impl::call_functor_with_args_from_stack<Functor,AllowDeprecatedTypes>(Functor *, c10::Stack *) [with Functor=c10::impl::WrapFunctionIntoRuntimeFunctor<std::decay_t<__nv_bool ()>>, AllowDeprecatedTypes=false]\" \r\n(396): here\r\n            instantiation of \"void c10::impl::make_boxed_from_unboxed_functor<KernelFunctor, AllowDeprecatedTypes>::call(c10::OperatorKernel *, const c10::OperatorHandle &, c10::Stack *) [with KernelFunctor=c10::impl::WrapFunctionIntoRuntimeFunctor<std::decay_t<__nv_bool ()>>, AllowDeprecatedTypes=false]\" \r\n/home/gaoxiang/.local/lib/python3.8/site-packages/torch/include/ATen/core/boxing/KernelFunction_impl.h(109): here\r\n            instantiation of \"c10::KernelFunction c10::KernelFunction::makeFromUnboxedFunctor<AllowLegacyTypes,KernelFunctor>(std::unique_ptr<c10::OperatorKernel, std::default_delete<c10::OperatorKernel>>) [with AllowLegacyTypes=false, KernelFunctor=c10::impl::WrapFunctionIntoRuntimeFunctor<std::decay_t<__nv_bool ()>>]\" \r\n/home/gaoxiang/.local/lib/python3.8/site-packages/torch/include/ATen/core/boxing/KernelFunction_impl.h(175): here\r\n            instantiation of \"c10::KernelFunction c10::KernelFunction::makeFromUnboxedRuntimeFunction(FuncType *) [with AllowLegacyTypes=false, FuncType=__nv_bool ()]\" \r\n/home/gaoxiang/.local/lib/python3.8/site-packages/torch/include/torch/library.h(92): here\r\n            instantiation of \"torch::CppFunction::CppFunction(Func *, std::enable_if_t<c10::guts::is_function_type<Func>::value, std::nullptr_t>) [with Func=__nv_bool ()]\" \r\n/home/gaoxiang/.local/lib/python3.8/site-packages/torch/include/torch/library.h(457): here\r\n            instantiation of \"torch::Library &torch::Library::def(NameOrSchema &&, Func &&) & [with NameOrSchema=const char (&)[23], Func=__nv_bool (*)()]\" \r\n/home/gaoxiang/extension-jit/test.cu(6): here\r\n\r\n/home/gaoxiang/.local/lib/python3.8/site-packages/torch/include/ATen/core/op_registration/infer_schema.h: In instantiation of 'constexpr std::array<c10::detail::infer_schema::ArgumentDef, sizeof... (Ts)> c10::detail::infer_schema::createArgumentVectorFromTypes(std::index_sequence<ns ...>) [with Ts = {bool}; long unsigned int ...Is = {0}; std::index_sequence<ns ...> = std::integer_sequence<long unsigned int, 0>]':\r\n/home/gaoxiang/.local/lib/python3.8/site-packages/torch/include/ATen/core/op_registration/infer_schema.h:80:55:   required from 'c10::FunctionSchema c10::detail::infer_schema::createFunctionSchemaFromTraitsFlattenedReturns(std::string&&, std::string&&) [with FunctionTraits = c10::guts::function_traits<bool()>; std::string = std::__cxx11::basic_string<char>]'\r\n/home/gaoxiang/.local/lib/python3.8/site-packages/torch/include/ATen/core/op_registration/infer_schema.h:146:121:   required from 'c10::FunctionSchema c10::inferFunctionSchemaFlattenedReturns(std::string&&, std::string&&) [with FuncType = bool(); std::string = std::__cxx11::basic_string<char>]'\r\n/home/gaoxiang/.local/lib/python3.8/site-packages/torch/include/ATen/core/op_registration/op_registration.h:23:152:   required from 'std::unique_ptr<c10::FunctionSchema> c10::detail::inferFunctionSchemaFromFunctor() [with KernelFunctor = c10::impl::detail::WrapFunctionIntoRuntimeFunctor_<bool (*)(), bool, c10::guts::typelist::typelist<> >]'\r\n/home/gaoxiang/.local/lib/python3.8/site-packages/torch/include/torch/library.h:91:363:   required from 'torch::CppFunction::CppFunction(Func*, std::enable_if_t<c10::guts::is_function_type<FuncType_>::value, std::nullptr_t>) [with Func = bool(); std::enable_if_t<c10::guts::is_function_type<FuncType_>::value, std::nullptr_t> = std::nullptr_t]'\r\n/home/gaoxiang/.local/lib/python3.8/site-packages/torch/include/torch/library.h:457:13:   required from 'torch::Library& torch::Library::def(NameOrSchema&&, Func&&) & [with NameOrSchema = const char (&)[23]; Func = bool (*)()]'\r\n/home/gaoxiang/extension-jit/test.cu:6:46:   required from here\r\n/home/gaoxiang/.local/lib/python3.8/site-packages/torch/include/ATen/core/op_registration/infer_schema.h:120:86:   in 'constexpr' expansion of 'c10::detail::infer_schema::createReturns<bool, void>::call()'\r\n/home/gaoxiang/.local/lib/python3.8/site-packages/torch/include/ATen/core/op_registration/infer_schema.h:89:55:   in 'constexpr' expansion of 'c10::detail::infer_schema::createReturns<std::tuple<bool>, void>::call()'\r\n/home/gaoxiang/.local/lib/python3.8/site-packages/torch/include/ATen/core/op_registration/infer_schema.h:48:82: error: no matching function for call to 'c10::detail::infer_schema::ArgumentDef::ArgumentDef(c10::TypePtr (*)())'\r\n   48 |   return (\r\n      |                                                                                  ^                                                       \r\n/home/gaoxiang/.local/lib/python3.8/site-packages/torch/include/ATen/core/op_registration/infer_schema.h:22:8: note: candidate: 'c10::detail::infer_schema::ArgumentDef::ArgumentDef()'\r\n   22 | struct ArgumentDef final {\r\n      |        ^~~~~~~~~~~\r\n/home/gaoxiang/.local/lib/python3.8/site-packages/torch/include/ATen/core/op_registration/infer_schema.h:22:8: note:   candidate expects 0 arguments, 1 provided\r\n/home/gaoxiang/.local/lib/python3.8/site-packages/torch/include/ATen/core/op_registration/infer_schema.h:22:8: note: candidate: 'constexpr c10::detail::infer_schema::ArgumentDef::ArgumentDef(const c10::detail::infer_schema::ArgumentDef&)'\r\n/home/gaoxiang/.local/lib/python3.8/site-packages/torch/include/ATen/core/op_registration/infer_schema.h:22:8: note:   no known conversion for argument 1 from 'c10::TypePtr (*)()' {aka 'std::shared_ptr<c10::Type> (*)()'} to 'const c10::detail::infer_schema::ArgumentDef&'\r\n/home/gaoxiang/.local/lib/python3.8/site-packages/torch/include/ATen/core/op_registration/infer_schema.h:22:8: note: candidate: 'constexpr c10::detail::infer_schema::ArgumentDef::ArgumentDef(c10::detail::infer_schema::ArgumentDef&&)'\r\n/home/gaoxiang/.local/lib/python3.8/site-packages/torch/include/ATen/core/op_registration/infer_schema.h:22:8: note:   no known conversion for argument 1 from 'c10::TypePtr (*)()' {aka 'std::shared_ptr<c10::Type> (*)()'} to 'c10::detail::infer_schema::ArgumentDef&&'\r\n/home/gaoxiang/.local/lib/python3.8/site-packages/torch/include/ATen/core/op_registration/infer_schema.h: In instantiation of 'c10::FunctionSchema c10::detail::infer_schema::createFunctionSchemaFromTraitsFlattenedReturns(std::string&&, std::string&&) [with FunctionTraits = c10::guts::function_traits<bool()>; std::string = std::__cxx11::basic_string<char>]':\r\n/home/gaoxiang/.local/lib/python3.8/site-packages/torch/include/ATen/core/op_registration/infer_schema.h:146:121:   required from 'c10::FunctionSchema c10::inferFunctionSchemaFlattenedReturns(std::string&&, std::string&&) [with FuncType = bool(); std::string = std::__cxx11::basic_string<char>]'\r\n/home/gaoxiang/.local/lib/python3.8/site-packages/torch/include/ATen/core/op_registration/op_registration.h:23:152:   required from 'std::unique_ptr<c10::FunctionSchema> c10::detail::inferFunctionSchemaFromFunctor() [with KernelFunctor = c10::impl::detail::WrapFunctionIntoRuntimeFunctor_<bool (*)(), bool, c10::guts::typelist::typelist<> >]'\r\n/home/gaoxiang/.local/lib/python3.8/site-packages/torch/include/torch/library.h:91:363:   required from 'torch::CppFunction::CppFunction(Func*, std::enable_if_t<c10::guts::is_function_type<FuncType_>::value, std::nullptr_t>) [with Func = bool(); std::enable_if_t<c10::guts::is_function_type<FuncType_>::value, std::nullptr_t> = std::nullptr_t]'\r\n/home/gaoxiang/.local/lib/python3.8/site-packages/torch/include/torch/library.h:457:13:   required from 'torch::Library& torch::Library::def(NameOrSchema&&, Func&&) & [with NameOrSchema = const char (&)[23]; Func = bool (*)()]'\r\n/home/gaoxiang/extension-jit/test.cu:6:46:   required from here\r\n/home/gaoxiang/.local/lib/python3.8/site-packages/torch/include/ATen/core/op_registration/infer_schema.h:120:86:   in 'constexpr' expansion of 'c10::detail::infer_schema::createReturns<bool, void>::call()'\r\n/home/gaoxiang/.local/lib/python3.8/site-packages/torch/include/ATen/core/op_registration/infer_schema.h:89:55:   in 'constexpr' expansion of 'c10::detail::infer_schema::createReturns<std::tuple<bool>, void>::call()'\r\n/home/gaoxiang/.local/lib/python3.8/site-packages/torch/include/ATen/core/op_registration/infer_schema.h:80:55:   in 'constexpr' expansion of 'c10::detail::infer_schema::createArgumentVectorFromTypes<bool, 0>((std::make_index_sequence<1>(), std::make_index_sequence<1>()))'\r\n/home/gaoxiang/.local/lib/python3.8/site-packages/torch/include/ATen/core/op_registration/infer_schema.h:120:16: error: 'constexpr' call flows off the end of the function\r\n  120 |  constexpr auto returns = createReturns<ReturnType>::call();\r\n      |                ^~~~~~~\r\nninja: build stopped: subcommand failed.\r\n```\r\n\r\n## Environment\r\n\r\n```\r\nCollecting environment information...\r\nPyTorch version: 1.8.0a0+ceb16d8\r\nIs debug build: False\r\nCUDA used to build PyTorch: 11.1\r\nROCM used to build PyTorch: N/A\r\n\r\nOS: Arch Linux (x86_64)\r\nGCC version: (GCC) 10.2.0\r\nClang version: 10.0.1 \r\nCMake version: version 3.18.4\r\n\r\nPython version: 3.8 (64-bit runtime)\r\nIs CUDA available: True\r\nCUDA runtime version: Could not collect\r\nGPU models and configuration: \r\nGPU 0: GeForce RTX 3090\r\nGPU 1: GeForce RTX 2080 Ti\r\n\r\nNvidia driver version: 455.28\r\ncuDNN version: Probably one of the following:\r\n/usr/lib/libcudnn.so.8.0.4\r\n/usr/lib/libcudnn_adv_infer.so.8.0.4\r\n/usr/lib/libcudnn_adv_train.so.8.0.4\r\n/usr/lib/libcudnn_cnn_infer.so.8.0.4\r\n/usr/lib/libcudnn_cnn_train.so.8.0.4\r\n/usr/lib/libcudnn_ops_infer.so.8.0.4\r\n/usr/lib/libcudnn_ops_train.so.8.0.4\r\nHIP runtime version: N/A\r\nMIOpen runtime version: N/A\r\n\r\nVersions of relevant libraries:\r\n[pip3] numpy==1.18.1\r\n[pip3] pytorch-sphinx-theme==0.0.19\r\n[pip3] torch==1.8.0a0\r\n[pip3] torchani==2.3.dev42+g5a856ee.d20201105\r\n[pip3] torchvision==0.8.0a0+a9c78f1\r\n[conda] Could not collect\r\n```\n\ncc @yf225 @glaringlee @gmagogsfm",
        "closed_by": {
            "login": "zasdfgbnm",
            "id": 1032377,
            "node_id": "MDQ6VXNlcjEwMzIzNzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1032377?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zasdfgbnm",
            "html_url": "https://github.com/zasdfgbnm",
            "followers_url": "https://api.github.com/users/zasdfgbnm/followers",
            "following_url": "https://api.github.com/users/zasdfgbnm/following{/other_user}",
            "gists_url": "https://api.github.com/users/zasdfgbnm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zasdfgbnm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zasdfgbnm/subscriptions",
            "organizations_url": "https://api.github.com/users/zasdfgbnm/orgs",
            "repos_url": "https://api.github.com/users/zasdfgbnm/repos",
            "events_url": "https://api.github.com/users/zasdfgbnm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zasdfgbnm/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/47493/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/47493/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/47379",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/47379/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/47379/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/47379/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/47379",
        "id": 736374692,
        "node_id": "MDU6SXNzdWU3MzYzNzQ2OTI=",
        "number": 47379,
        "title": "`torch.jit.is_tracing()` not supported during scripting",
        "user": {
            "login": "ppwwyyxx",
            "id": 1381301,
            "node_id": "MDQ6VXNlcjEzODEzMDE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1381301?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ppwwyyxx",
            "html_url": "https://github.com/ppwwyyxx",
            "followers_url": "https://api.github.com/users/ppwwyyxx/followers",
            "following_url": "https://api.github.com/users/ppwwyyxx/following{/other_user}",
            "gists_url": "https://api.github.com/users/ppwwyyxx/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ppwwyyxx/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ppwwyyxx/subscriptions",
            "organizations_url": "https://api.github.com/users/ppwwyyxx/orgs",
            "repos_url": "https://api.github.com/users/ppwwyyxx/repos",
            "events_url": "https://api.github.com/users/ppwwyyxx/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ppwwyyxx/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 2203967172,
                "node_id": "MDU6TGFiZWwyMjAzOTY3MTcy",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/days",
                "name": "days",
                "color": "77f497",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "Lilyjjo",
            "id": 35852084,
            "node_id": "MDQ6VXNlcjM1ODUyMDg0",
            "avatar_url": "https://avatars.githubusercontent.com/u/35852084?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Lilyjjo",
            "html_url": "https://github.com/Lilyjjo",
            "followers_url": "https://api.github.com/users/Lilyjjo/followers",
            "following_url": "https://api.github.com/users/Lilyjjo/following{/other_user}",
            "gists_url": "https://api.github.com/users/Lilyjjo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Lilyjjo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Lilyjjo/subscriptions",
            "organizations_url": "https://api.github.com/users/Lilyjjo/orgs",
            "repos_url": "https://api.github.com/users/Lilyjjo/repos",
            "events_url": "https://api.github.com/users/Lilyjjo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Lilyjjo/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "Lilyjjo",
                "id": 35852084,
                "node_id": "MDQ6VXNlcjM1ODUyMDg0",
                "avatar_url": "https://avatars.githubusercontent.com/u/35852084?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/Lilyjjo",
                "html_url": "https://github.com/Lilyjjo",
                "followers_url": "https://api.github.com/users/Lilyjjo/followers",
                "following_url": "https://api.github.com/users/Lilyjjo/following{/other_user}",
                "gists_url": "https://api.github.com/users/Lilyjjo/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/Lilyjjo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Lilyjjo/subscriptions",
                "organizations_url": "https://api.github.com/users/Lilyjjo/orgs",
                "repos_url": "https://api.github.com/users/Lilyjjo/repos",
                "events_url": "https://api.github.com/users/Lilyjjo/events{/privacy}",
                "received_events_url": "https://api.github.com/users/Lilyjjo/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-11-04T19:39:45Z",
        "updated_at": "2021-02-20T10:55:47Z",
        "closed_at": "2021-02-20T10:55:47Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "## \ud83d\ude80 Feature\r\n```python\r\nclass A(nn.Module):\r\n    def forward(self, x):\r\n        if torch.jit.is_scripting() or not torch.jit.is_tracing():\r\n            return x + 1\r\n        else:\r\n            return x + 2\r\n\r\na = A()\r\nscript = torch.jit.script(a)\r\n```\r\nprints\r\n```\r\nRuntimeError: \r\nPython builtin <built-in method _is_tracing of PyCapsule object at 0x7fd9ad2d8e70> is currently not supported in Torchscript:\r\n  File \"/torch/jit/_trace.py\", line 979\r\n    code with ``torch.jit.trace``) and ``False`` otherwise.\r\n    \"\"\"\r\n    return torch._C._is_tracing()\r\n           ~~~~~~~~~~~~~~~~~~~~ <--- HERE\r\n'is_tracing' is being compiled since it was called from 'A.forward'\r\n  File \"a.py\", line 20\r\n    def forward(self, x): \r\n        if torch.jit.is_scripting() or not torch.jit.is_tracing():\r\n           ~~~~~~~~~~~~~~~~~~~~~~ <--- HERE                                                       \r\n            return x + 1\r\n        else:   \r\n```\r\n## Motivation\r\n\r\nwe have some code that works in eager & scripting mode, but need a different codepath in tracing mode to handle dynamic shapes.\r\n\r\nWorkaround: this works, at the cost of duplicating the eager/scripting codeblock:\r\n```python\r\n       if torch.jit.is_scripting():\r\n            return x + 1\r\n        else:\r\n            if not torch.jit.is_tracing():\r\n                return x + 1\r\n            else:\r\n                return x + 2\r\n```\n\ncc @gmagogsfm",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/47379/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/47379/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/47334",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/47334/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/47334/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/47334/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/47334",
        "id": 735783231,
        "node_id": "MDU6SXNzdWU3MzU3ODMyMzE=",
        "number": 47334,
        "title": "[jit] support slicing tuple with (negative) step",
        "user": {
            "login": "ppwwyyxx",
            "id": 1381301,
            "node_id": "MDQ6VXNlcjEzODEzMDE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1381301?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ppwwyyxx",
            "html_url": "https://github.com/ppwwyyxx",
            "followers_url": "https://api.github.com/users/ppwwyyxx/followers",
            "following_url": "https://api.github.com/users/ppwwyyxx/following{/other_user}",
            "gists_url": "https://api.github.com/users/ppwwyyxx/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ppwwyyxx/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ppwwyyxx/subscriptions",
            "organizations_url": "https://api.github.com/users/ppwwyyxx/orgs",
            "repos_url": "https://api.github.com/users/ppwwyyxx/repos",
            "events_url": "https://api.github.com/users/ppwwyyxx/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ppwwyyxx/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 2203967172,
                "node_id": "MDU6TGFiZWwyMjAzOTY3MTcy",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/days",
                "name": "days",
                "color": "77f497",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "tugsbayasgalan",
            "id": 16603271,
            "node_id": "MDQ6VXNlcjE2NjAzMjcx",
            "avatar_url": "https://avatars.githubusercontent.com/u/16603271?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tugsbayasgalan",
            "html_url": "https://github.com/tugsbayasgalan",
            "followers_url": "https://api.github.com/users/tugsbayasgalan/followers",
            "following_url": "https://api.github.com/users/tugsbayasgalan/following{/other_user}",
            "gists_url": "https://api.github.com/users/tugsbayasgalan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tugsbayasgalan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tugsbayasgalan/subscriptions",
            "organizations_url": "https://api.github.com/users/tugsbayasgalan/orgs",
            "repos_url": "https://api.github.com/users/tugsbayasgalan/repos",
            "events_url": "https://api.github.com/users/tugsbayasgalan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tugsbayasgalan/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "tugsbayasgalan",
                "id": 16603271,
                "node_id": "MDQ6VXNlcjE2NjAzMjcx",
                "avatar_url": "https://avatars.githubusercontent.com/u/16603271?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/tugsbayasgalan",
                "html_url": "https://github.com/tugsbayasgalan",
                "followers_url": "https://api.github.com/users/tugsbayasgalan/followers",
                "following_url": "https://api.github.com/users/tugsbayasgalan/following{/other_user}",
                "gists_url": "https://api.github.com/users/tugsbayasgalan/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/tugsbayasgalan/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tugsbayasgalan/subscriptions",
                "organizations_url": "https://api.github.com/users/tugsbayasgalan/orgs",
                "repos_url": "https://api.github.com/users/tugsbayasgalan/repos",
                "events_url": "https://api.github.com/users/tugsbayasgalan/events{/privacy}",
                "received_events_url": "https://api.github.com/users/tugsbayasgalan/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-11-04T03:29:05Z",
        "updated_at": "2021-01-05T17:17:12Z",
        "closed_at": "2021-01-05T17:17:12Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "## \ud83d\ude80 Feature\r\n\r\n## Motivation\r\n\r\n```python\r\nclass A(nn.Module):\r\n    def __init__(self):\r\n        super().__init__()\r\n        self.x = tuple([0, 1, 2])\r\n        self.y = nn.ModuleList([nn.Linear(10, 10)] * 3)\r\n\r\n    def forward(self, x):\r\n        return self.x[::-1][0] + x\r\n\r\na = A()\r\nscript = torch.jit.script(a)\r\n```\r\n\r\nPrints:\r\n```\r\nRuntimeError:                                                                                                                                                                                       \r\nUnsupported operation: slicing tuples with a step isn't supported:                                \r\n  File \"a.py\", line 19         \r\n    def forward(self, x):                                                                         \r\n        return self.x[::-1][0] + x                                                                                                                                                                  \r\n               ~~~~~~~~~~~~ <--- HERE \r\n```\n\ncc @gmagogsfm",
        "closed_by": {
            "login": "tugsbayasgalan",
            "id": 16603271,
            "node_id": "MDQ6VXNlcjE2NjAzMjcx",
            "avatar_url": "https://avatars.githubusercontent.com/u/16603271?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tugsbayasgalan",
            "html_url": "https://github.com/tugsbayasgalan",
            "followers_url": "https://api.github.com/users/tugsbayasgalan/followers",
            "following_url": "https://api.github.com/users/tugsbayasgalan/following{/other_user}",
            "gists_url": "https://api.github.com/users/tugsbayasgalan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tugsbayasgalan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tugsbayasgalan/subscriptions",
            "organizations_url": "https://api.github.com/users/tugsbayasgalan/orgs",
            "repos_url": "https://api.github.com/users/tugsbayasgalan/repos",
            "events_url": "https://api.github.com/users/tugsbayasgalan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tugsbayasgalan/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/47334/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/47334/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/47304",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/47304/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/47304/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/47304/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/47304",
        "id": 735584447,
        "node_id": "MDU6SXNzdWU3MzU1ODQ0NDc=",
        "number": 47304,
        "title": "JIT PTX error when loading a TorchScript model that performs torch.exp(x**2), with pytorch 1.7.0 and nightly",
        "user": {
            "login": "IgnacioJPickering",
            "id": 34223426,
            "node_id": "MDQ6VXNlcjM0MjIzNDI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/34223426?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/IgnacioJPickering",
            "html_url": "https://github.com/IgnacioJPickering",
            "followers_url": "https://api.github.com/users/IgnacioJPickering/followers",
            "following_url": "https://api.github.com/users/IgnacioJPickering/following{/other_user}",
            "gists_url": "https://api.github.com/users/IgnacioJPickering/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/IgnacioJPickering/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/IgnacioJPickering/subscriptions",
            "organizations_url": "https://api.github.com/users/IgnacioJPickering/orgs",
            "repos_url": "https://api.github.com/users/IgnacioJPickering/repos",
            "events_url": "https://api.github.com/users/IgnacioJPickering/events{/privacy}",
            "received_events_url": "https://api.github.com/users/IgnacioJPickering/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "nickgg",
            "id": 701287,
            "node_id": "MDQ6VXNlcjcwMTI4Nw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/701287?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nickgg",
            "html_url": "https://github.com/nickgg",
            "followers_url": "https://api.github.com/users/nickgg/followers",
            "following_url": "https://api.github.com/users/nickgg/following{/other_user}",
            "gists_url": "https://api.github.com/users/nickgg/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nickgg/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nickgg/subscriptions",
            "organizations_url": "https://api.github.com/users/nickgg/orgs",
            "repos_url": "https://api.github.com/users/nickgg/repos",
            "events_url": "https://api.github.com/users/nickgg/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nickgg/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "nickgg",
                "id": 701287,
                "node_id": "MDQ6VXNlcjcwMTI4Nw==",
                "avatar_url": "https://avatars.githubusercontent.com/u/701287?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/nickgg",
                "html_url": "https://github.com/nickgg",
                "followers_url": "https://api.github.com/users/nickgg/followers",
                "following_url": "https://api.github.com/users/nickgg/following{/other_user}",
                "gists_url": "https://api.github.com/users/nickgg/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/nickgg/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nickgg/subscriptions",
                "organizations_url": "https://api.github.com/users/nickgg/orgs",
                "repos_url": "https://api.github.com/users/nickgg/repos",
                "events_url": "https://api.github.com/users/nickgg/events{/privacy}",
                "received_events_url": "https://api.github.com/users/nickgg/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 2,
        "created_at": "2020-11-03T19:35:37Z",
        "updated_at": "2020-11-12T19:07:50Z",
        "closed_at": "2020-11-12T19:07:50Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\nTorchScript compiled model fails after a few evaluations of calling autograd.grad, if the model executes torch.exp(x**2)\r\nthis happens in pytorch 1.7.0+cu101 and nightly pytorch\r\n\r\n## To Reproduce\r\n\r\n```\r\nimport torch\r\ndevice = torch.device('cuda')\r\nx = torch.tensor([0.],dtype=torch.double,requires_grad=True,device=device)\r\n\r\nclass Model(torch.nn.Module):\r\n    def forward(self, x):\r\n        return torch.exp(x**2)\r\n\r\n# this code errors out\r\nmodel_jit = torch.jit.script(Model()).to(device).double()\r\nfor j in range(3):\r\n    out = model_jit(x)\r\n    _ = torch.autograd.grad(out, x)\r\n\r\n```\r\n\r\nError message:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"error.py\", line 14, in <module>\r\n    _ = torch.autograd.grad(out, x)\r\n  File \"/home/ignacio/anaconda3/envs/torchani/lib/python3.7/site-packages/torch/autograd/__init__.py\", line 204, in grad\r\n    inputs, allow_unused)\r\nRuntimeError: CUDA driver error: a PTX JIT compilation failed\r\n```\r\n\r\n## Expected behavior\r\n\r\nCode should run correctly with no errors\r\n\r\n## Environment\r\n```\r\nCollecting environment information...\r\nPyTorch version: 1.7.0+cu101\r\nIs debug build: True\r\nCUDA used to build PyTorch: 10.1\r\nROCM used to build PyTorch: N/A\r\n\r\nOS: Ubuntu 20.04.1 LTS (x86_64)\r\nGCC version: (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0\r\nClang version: 10.0.0-4ubuntu1 \r\nCMake version: version 3.16.3\r\n\r\nPython version: 3.7 (64-bit runtime)\r\nIs CUDA available: True\r\nCUDA runtime version: Could not collect\r\nGPU models and configuration: GPU 0: Quadro RTX 6000\r\nNvidia driver version: 455.32.00\r\ncuDNN version: Could not collect\r\nHIP runtime version: N/A\r\nMIOpen runtime version: N/A\r\n\r\nVersions of relevant libraries:\r\n[pip] numpy==1.18.1\r\n[pip] pytorch-memlab==0.2.2\r\n[pip] torch==1.7.0+cu101\r\n[pip] torchvision==0.7.0.dev20200610\r\n[conda] blas                      1.0                         mkl  \r\n[conda] cudatoolkit               10.2.89              hfd86e86_1  \r\n[conda] mkl                       2020.1                      217  \r\n[conda] mkl-service               2.3.0            py37he904b0f_0  \r\n[conda] mkl_fft                   1.0.15           py37ha843d7b_0  \r\n[conda] mkl_random                1.1.1            py37h0573a6f_0  \r\n[conda] numpy                     1.18.1                   pypi_0    pypi\r\n[conda] numpy-base                1.18.1           py37hde5b4d6_1  \r\n[conda] pytorch-memlab            0.2.2                    pypi_0    pypi\r\n[conda] torch                     1.7.0+cu101              pypi_0    pypi\r\n[conda] torchvision               0.7.0.dev20200610          pypi_0    pypi\r\n```\r\n\r\n## Additional context\r\n\r\nCode fails also with the nightly pytorch version. The x**2 inside exp is important for the code to fail, also it needs multiple sequential evaluations to fail. The same model not JIT scripted does not fail or produce any warnings or errors,  code works correctly on pytorch 1.6.0+cu101, code also fails in a GeForce 2080 Ti.\r\n\r\n\r\ncc @gmagogsfm",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/47304/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/47304/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/47138",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/47138/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/47138/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/47138/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/47138",
        "id": 733558858,
        "node_id": "MDU6SXNzdWU3MzM1NTg4NTg=",
        "number": 47138,
        "title": "Jit Error with CUDA and FP16 -- identifier \"aten_add_flat__1\" is undefined",
        "user": {
            "login": "erikwijmans",
            "id": 12722529,
            "node_id": "MDQ6VXNlcjEyNzIyNTI5",
            "avatar_url": "https://avatars.githubusercontent.com/u/12722529?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/erikwijmans",
            "html_url": "https://github.com/erikwijmans",
            "followers_url": "https://api.github.com/users/erikwijmans/followers",
            "following_url": "https://api.github.com/users/erikwijmans/following{/other_user}",
            "gists_url": "https://api.github.com/users/erikwijmans/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/erikwijmans/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/erikwijmans/subscriptions",
            "organizations_url": "https://api.github.com/users/erikwijmans/orgs",
            "repos_url": "https://api.github.com/users/erikwijmans/repos",
            "events_url": "https://api.github.com/users/erikwijmans/events{/privacy}",
            "received_events_url": "https://api.github.com/users/erikwijmans/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "nickgg",
            "id": 701287,
            "node_id": "MDQ6VXNlcjcwMTI4Nw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/701287?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nickgg",
            "html_url": "https://github.com/nickgg",
            "followers_url": "https://api.github.com/users/nickgg/followers",
            "following_url": "https://api.github.com/users/nickgg/following{/other_user}",
            "gists_url": "https://api.github.com/users/nickgg/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nickgg/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nickgg/subscriptions",
            "organizations_url": "https://api.github.com/users/nickgg/orgs",
            "repos_url": "https://api.github.com/users/nickgg/repos",
            "events_url": "https://api.github.com/users/nickgg/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nickgg/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "nickgg",
                "id": 701287,
                "node_id": "MDQ6VXNlcjcwMTI4Nw==",
                "avatar_url": "https://avatars.githubusercontent.com/u/701287?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/nickgg",
                "html_url": "https://github.com/nickgg",
                "followers_url": "https://api.github.com/users/nickgg/followers",
                "following_url": "https://api.github.com/users/nickgg/following{/other_user}",
                "gists_url": "https://api.github.com/users/nickgg/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/nickgg/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nickgg/subscriptions",
                "organizations_url": "https://api.github.com/users/nickgg/orgs",
                "repos_url": "https://api.github.com/users/nickgg/repos",
                "events_url": "https://api.github.com/users/nickgg/events{/privacy}",
                "received_events_url": "https://api.github.com/users/nickgg/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 9,
        "created_at": "2020-10-30T22:47:01Z",
        "updated_at": "2021-01-13T10:20:52Z",
        "closed_at": "2020-11-04T23:53:18Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\nWhen running a scripted module with a cuda device and with fp16, I get the following error when computing the backwards pass:\r\n```\r\nRuntimeError: default_program(59): error: identifier \"aten_add_flat__1\" is undefined\r\n\r\ndefault_program(60): error: no operator \"=\" matches these operands\r\n            operand types are: half = float\r\n```\r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior:\r\n\r\n`python repro.py` where repro  has the following contents:\r\n```python\r\nimport torch\r\nfrom torch import nn\r\nfrom torch.nn import functional as F\r\n\r\ndtype = torch.float16\r\ndevice = torch.device(\"cuda\", 0)\r\n\r\n\r\nclass MockSEFixupBasicBlock(nn.Module):\r\n    def __init__(self, inplanes, planes):\r\n        super().__init__()\r\n\r\n        self.fixup_bias2a = nn.Parameter(torch.zeros(1))\r\n        self.fixup_scale = nn.Parameter(torch.ones(1))\r\n        self.fixup_bias2b = nn.Parameter(torch.zeros(1))\r\n\r\n    def forward(self, x):\r\n        identity = x\r\n        out = x\r\n\r\n        out = out + self.fixup_bias2a\r\n        out = out * self.fixup_scale + self.fixup_bias2b\r\n\r\n        return out * out + identity\r\n\r\n\r\nnet = torch.jit.script(MockSEFixupBasicBlock(64, 64)).to(dtype=dtype, device=device)\r\n\r\ninp = torch.randn(16, 64, 16, 16, dtype=dtype, device=device)\r\n\r\nfor i in range(10):\r\n    for param in net.parameters():\r\n        param.grad = None\r\n\r\n    print(i)\r\n    net(inp).mean().backward()\r\n\r\n```\r\n\r\nI have minified this as much as I can (started with the actual module from my network and removed stuff that didn't cause the error)\r\n\r\nRunning this produces the following:\r\n```\r\n0\r\n1\r\nTraceback (most recent call last):\r\n  File \"repro.py\", line 36, in <module>\r\n    net(inp).mean().backward()\r\n  File \"/private/home/erikwijmans/miniconda3/envs/v4r/lib/python3.6/site-packages/torch/nn/modules/module.py\", line 727, in _call_impl\r\n    result = self.forward(*input, **kwargs)\r\nRuntimeError: default_program(59): error: identifier \"aten_add_flat__1\" is undefined\r\n\r\ndefault_program(60): error: no operator \"=\" matches these operands\r\n            operand types are: half = float\r\n\r\n2 errors detected in the compilation of \"default_program\".\r\n\r\nnvrtc compilation failed: \r\n\r\n#define NAN __int_as_float(0x7fffffff)\r\n#define POS_INFINITY __int_as_float(0x7f800000)\r\n#define NEG_INFINITY __int_as_float(0xff800000)\r\n\r\n\r\ntemplate<typename T>\r\n__device__ T maximum(T a, T b) {\r\n  return isnan(a) ? a : (a > b ? a : b);\r\n}\r\n\r\ntemplate<typename T>\r\n__device__ T minimum(T a, T b) {\r\n  return isnan(a) ? a : (a < b ? a : b);\r\n}\r\n\r\n\r\n#define __HALF_TO_US(var) *(reinterpret_cast<unsigned short *>(&(var)))\r\n#define __HALF_TO_CUS(var) *(reinterpret_cast<const unsigned short *>(&(var)))\r\n#if defined(__cplusplus)\r\n  struct __align__(2) __half {\r\n    __host__ __device__ __half() { }\r\n\r\n  protected:\r\n    unsigned short __x;\r\n  };\r\n\r\n  /* All intrinsic functions are only available to nvcc compilers */\r\n  #if defined(__CUDACC__)\r\n    /* Definitions of intrinsics */\r\n    __device__ __half __float2half(const float f) {\r\n      __half val;\r\n      asm(\"{  cvt.rn.f16.f32 %0, %1;}\\n\" : \"=h\"(__HALF_TO_US(val)) : \"f\"(f));\r\n      return val;\r\n    }\r\n\r\n    __device__ float __half2float(const __half h) {\r\n      float val;\r\n      asm(\"{  cvt.f32.f16 %0, %1;}\\n\" : \"=f\"(val) : \"h\"(__HALF_TO_CUS(h)));\r\n      return val;\r\n    }\r\n\r\n  #endif /* defined(__CUDACC__) */\r\n#endif /* defined(__cplusplus) */\r\n#undef __HALF_TO_US\r\n#undef __HALF_TO_CUS\r\n\r\ntypedef __half half;\r\n\r\nextern \"C\" __global__\r\nvoid func_1(half* t0, half* t1, half* t2, half* t3, half* aten_add_flat, half* aten_add_flat_1, half* aten_add_flat_2) {\r\n{\r\n  float t3_ = __half2float(t3[0]);\r\n  float v = __half2float(t0[16 * ((512 * blockIdx.x + threadIdx.x) / 16) + (512 * blockIdx.x + threadIdx.x) % 16]);\r\n  aten_add_flat_2[512 * blockIdx.x + threadIdx.x] = __float2half(v + t3_);\r\n  float t2_ = __half2float(t2[0]);\r\n  float t1_ = __half2float(t1[0]);\r\n  float aten_add_flat_ = __half2float(aten_add_flat_1[512 * blockIdx.x + threadIdx.x]);\r\n  aten_add_flat__1 = __float2half((__half2float(t0[16 * ((512 * blockIdx.x + threadIdx.x) / 16) + (512 * blockIdx.x + threadIdx.x) % 16]) + t3_) * t2_ + t1_);\r\n  aten_add_flat_1[512 * blockIdx.x + threadIdx.x] = aten_add_flat_;\r\n  float v_1 = __half2float(t0[16 * ((512 * blockIdx.x + threadIdx.x) / 16) + (512 * blockIdx.x + threadIdx.x) % 16]);\r\n  float v_2 = __half2float(t0[16 * ((512 * blockIdx.x + threadIdx.x) / 16) + (512 * blockIdx.x + threadIdx.x) % 16]);\r\n  float v_3 = __half2float(t0[16 * ((512 * blockIdx.x + threadIdx.x) / 16) + (512 * blockIdx.x + threadIdx.x) % 16]);\r\n  aten_add_flat[512 * blockIdx.x + threadIdx.x] = __float2half(((v_1 + t3_) * t2_ + t1_) * ((v_2 + t3_) * t2_ + t1_) + v_3);\r\n}\r\n}\r\n```\r\n\r\nThe exact number of iterations it runs for before erroring seems to be somewhat stochastic, but I have never seen it error on the first iteration and have only seen it error on the 2nd or 3rd.\r\n\r\nI have also seen with slightly different variants of this that `aten_mul_flat__1` is undefined.  I assume the root cause is the same, but thought I would point this out.\r\n\r\n## Expected behavior\r\n\r\nDoes not crash\r\n\r\n## Environment\r\n\r\n - PyTorch Version (e.g., 1.0): `1.7.0-py3.6_cuda10.1.243_cudnn7.6.3_0`\r\n - OS (e.g., Linux): Linux\r\n - How you installed PyTorch (`conda`, `pip`, source): conda\r\n - Build command you used (if compiling from source): N/A\r\n - Python version: 3.6\r\n - CUDA/cuDNN version: 10.1/7603\r\n - GPU models and configuration: Quadro GP100 and Tesla V100\r\n - Any other relevant information:  Works on the same system(s) with `1.6.0-py3.6_cuda10.1.243_cudnn7.6.3_0`\r\n\r\n\r\n\r\n\r\ncc @gmagogsfm",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/47138/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/47138/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/46964",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/46964/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/46964/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/46964/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/46964",
        "id": 730989648,
        "node_id": "MDU6SXNzdWU3MzA5ODk2NDg=",
        "number": 46964,
        "title": "torch.jit.Final does not work in Pytorch1.7 + Python3.6",
        "user": {
            "login": "ppwwyyxx",
            "id": 1381301,
            "node_id": "MDQ6VXNlcjEzODEzMDE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1381301?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ppwwyyxx",
            "html_url": "https://github.com/ppwwyyxx",
            "followers_url": "https://api.github.com/users/ppwwyyxx/followers",
            "following_url": "https://api.github.com/users/ppwwyyxx/following{/other_user}",
            "gists_url": "https://api.github.com/users/ppwwyyxx/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ppwwyyxx/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ppwwyyxx/subscriptions",
            "organizations_url": "https://api.github.com/users/ppwwyyxx/orgs",
            "repos_url": "https://api.github.com/users/ppwwyyxx/repos",
            "events_url": "https://api.github.com/users/ppwwyyxx/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ppwwyyxx/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 2203967172,
                "node_id": "MDU6TGFiZWwyMjAzOTY3MTcy",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/days",
                "name": "days",
                "color": "77f497",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "Lilyjjo",
            "id": 35852084,
            "node_id": "MDQ6VXNlcjM1ODUyMDg0",
            "avatar_url": "https://avatars.githubusercontent.com/u/35852084?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Lilyjjo",
            "html_url": "https://github.com/Lilyjjo",
            "followers_url": "https://api.github.com/users/Lilyjjo/followers",
            "following_url": "https://api.github.com/users/Lilyjjo/following{/other_user}",
            "gists_url": "https://api.github.com/users/Lilyjjo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Lilyjjo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Lilyjjo/subscriptions",
            "organizations_url": "https://api.github.com/users/Lilyjjo/orgs",
            "repos_url": "https://api.github.com/users/Lilyjjo/repos",
            "events_url": "https://api.github.com/users/Lilyjjo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Lilyjjo/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "Lilyjjo",
                "id": 35852084,
                "node_id": "MDQ6VXNlcjM1ODUyMDg0",
                "avatar_url": "https://avatars.githubusercontent.com/u/35852084?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/Lilyjjo",
                "html_url": "https://github.com/Lilyjjo",
                "followers_url": "https://api.github.com/users/Lilyjjo/followers",
                "following_url": "https://api.github.com/users/Lilyjjo/following{/other_user}",
                "gists_url": "https://api.github.com/users/Lilyjjo/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/Lilyjjo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Lilyjjo/subscriptions",
                "organizations_url": "https://api.github.com/users/Lilyjjo/orgs",
                "repos_url": "https://api.github.com/users/Lilyjjo/repos",
                "events_url": "https://api.github.com/users/Lilyjjo/events{/privacy}",
                "received_events_url": "https://api.github.com/users/Lilyjjo/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-10-28T01:03:55Z",
        "updated_at": "2020-11-10T18:54:04Z",
        "closed_at": "2020-11-10T18:54:04Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\n\r\n## To Reproduce\r\n\r\n```\r\n# Dockerfile\r\nFROM python:3.6-slim-buster\r\nUSER root\r\nWORKDIR /root\r\nRUN python3 -m pip install --upgrade pip\r\nRUN python3 -m pip install torch==1.7.0+cpu -f https://download.pytorch.org/whl/torch_stable.html\r\nCOPY a.py /\r\nRUN python3 /a.py\r\n\r\n# a.py:\r\nimport torch\r\nfrom torch import nn\r\n\r\nclass A(nn.Module):\r\n    dim: torch.jit.Final[int] = 4\r\n\r\n    def __init__(self):\r\n        super().__init__()\r\n        self.l = nn.Linear(10, 10)\r\n\r\n    def forward(self, x):\r\n        return self.l(x)\r\n\r\n\r\nclass B(nn.Module):\r\n    def __init__(self):\r\n        super().__init__()\r\n        self.a = A()\r\n\r\n    def forward(self, x):\r\n        return self.a(x) + self.a.dim\r\n\r\nb = B()\r\nb = torch.jit.script(b)\r\n```\r\n\r\nError:\r\n```\r\nTraceback (most recent call last):\r\n  File \"/a.py\", line 24, in <module>\r\n    b = torch.jit.script(b)\r\n  File \"/usr/local/lib/python3.6/site-packages/torch/jit/_script.py\", line 898, in script\r\n    obj, torch.jit._recursive.infer_methods_to_compile\r\n  File \"/usr/local/lib/python3.6/site-packages/torch/jit/_recursive.py\", line 352, in create_script_module\r\n    return create_script_module_impl(nn_module, concrete_type, stubs_fn)\r\n  File \"/usr/local/lib/python3.6/site-packages/torch/jit/_recursive.py\", line 410, in create_script_module_impl\r\n    create_methods_and_properties_from_stubs(concrete_type, method_stubs, property_stubs)\r\n  File \"/usr/local/lib/python3.6/site-packages/torch/jit/_recursive.py\", line 304, in create_methods_and_properties_from_stubs\r\n    concrete_type._create_methods_and_properties(property_defs, property_rcbs, method_defs, method_rcbs, method_defaults)\r\nRuntimeError: \r\nModule 'A' has no attribute 'dim' :\r\n  File \"/a.py\", line 21\r\n    def forward(self, x):\r\n        return self.a(x) + self.a.dim\r\n                           ~~~~~~~~~~ <--- HERE\r\n```\r\n\r\nIt works if we change 3.6 to 3.7.\n\ncc @gmagogsfm",
        "closed_by": {
            "login": "Lilyjjo",
            "id": 35852084,
            "node_id": "MDQ6VXNlcjM1ODUyMDg0",
            "avatar_url": "https://avatars.githubusercontent.com/u/35852084?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Lilyjjo",
            "html_url": "https://github.com/Lilyjjo",
            "followers_url": "https://api.github.com/users/Lilyjjo/followers",
            "following_url": "https://api.github.com/users/Lilyjjo/following{/other_user}",
            "gists_url": "https://api.github.com/users/Lilyjjo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Lilyjjo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Lilyjjo/subscriptions",
            "organizations_url": "https://api.github.com/users/Lilyjjo/orgs",
            "repos_url": "https://api.github.com/users/Lilyjjo/repos",
            "events_url": "https://api.github.com/users/Lilyjjo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Lilyjjo/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/46964/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/46964/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/46848",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/46848/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/46848/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/46848/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/46848",
        "id": 729691971,
        "node_id": "MDU6SXNzdWU3Mjk2OTE5NzE=",
        "number": 46848,
        "title": "TorchScript not recognize -0.0 as argument",
        "user": {
            "login": "ejguan",
            "id": 68879799,
            "node_id": "MDQ6VXNlcjY4ODc5Nzk5",
            "avatar_url": "https://avatars.githubusercontent.com/u/68879799?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ejguan",
            "html_url": "https://github.com/ejguan",
            "followers_url": "https://api.github.com/users/ejguan/followers",
            "following_url": "https://api.github.com/users/ejguan/following{/other_user}",
            "gists_url": "https://api.github.com/users/ejguan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ejguan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ejguan/subscriptions",
            "organizations_url": "https://api.github.com/users/ejguan/orgs",
            "repos_url": "https://api.github.com/users/ejguan/repos",
            "events_url": "https://api.github.com/users/ejguan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ejguan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1027606656,
                "node_id": "MDU6TGFiZWwxMDI3NjA2NjU2",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20bootcamp",
                "name": "module: bootcamp",
                "color": "f7e101",
                "default": false,
                "description": "We plan to do a full writeup on the issue, and then get someone to do it for onboarding"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-10-26T15:59:38Z",
        "updated_at": "2020-11-07T09:30:49Z",
        "closed_at": "2020-11-07T09:30:49Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\n<!-- A clear and concise description of what the bug is. -->\r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior:\r\n\r\n1. Add a test `('copysign', (S, S), (-0.0,), 'scalar_neg_zero', (False,))` with `-0.0` as an input to [torch/testing/_internal/common_methods_invocations.py](https://github.com/pytorch/pytorch/blob/master/torch/testing/_internal/common_methods_invocations.py).\r\nThe PR is #46396.\r\n1. Got an `AssertError` for `TestJitGeneratedAutograd` at https://github.com/pytorch/pytorch/blob/ac146c48200cc3c32087bff6337588205ba5e721/torch/testing/_internal/jit_utils.py#L611-L615\r\n1. Comparing the code and graph between both function:\r\n-  Original`m`\r\n![image](https://user-images.githubusercontent.com/68879799/97059735-42b27480-155f-11eb-82de-76a8d47f0efa.png)\r\n- Imported `m_import`\r\n![image](https://user-images.githubusercontent.com/68879799/97059742-4cd47300-155f-11eb-9e81-6186db37da41.png)\r\n1. `-0.0` is converted to `0.0` as shown above.\r\n1. Even if it seems two functions have same arugment as `0.0`, the outputs from them are totally different. The original function `m` is actually taking `-0.0` as the input, but the imported function `m_import` is taking `0.0` as the input.\r\n\r\n<!-- If you have a code sample, error messages, stack traces, please provide it here as well -->\r\n\r\n## Expected behavior\r\n\r\n<!-- A clear and concise description of what you expected to happen. -->\r\nThe argument should be passed as `-0.0` rather than `0.0` in the function.\r\n\r\n## Environment\r\nPR based on viable/strict branch.\r\n\r\nPyTorch version: 1.8.0a0+d945e36\r\nIs debug build: True\r\nCUDA used to build PyTorch: None\r\nROCM used to build PyTorch: N/A\r\n\r\nOS: Mac OSX 10.15.7 (x86_64)\r\nGCC version: Could not collect\r\nClang version: 11.0.3 (clang-1103.0.32.62)\r\nCMake version: version 3.14.0\r\n\r\nPython version: 3.8 (64-bit runtime)\r\nIs CUDA available: False\r\nCUDA runtime version: No CUDA\r\nGPU models and configuration: No CUDA\r\nNvidia driver version: No CUDA\r\ncuDNN version: No CUDA\r\nHIP runtime version: N/A\r\nMIOpen runtime version: N/A\r\n\r\nVersions of relevant libraries:\r\n[pip3] numpy==1.19.1\r\n[pip3] pytorch-sphinx-theme==0.0.24\r\n[pip3] torch==1.8.0a0\r\n[pip3] torchvision==0.8.0a0+c36dc43\r\n[conda] mkl                       2020.2                      260\r\n[conda] mkl-include               2020.2                      260\r\n[conda] numpy                     1.19.1           py38ha6d8c68_0\r\n[conda] numpy-base                1.19.1           py38h68fea81_0\r\n[conda] pytorch-sphinx-theme      0.0.24                    dev_0    <develop>\r\n[conda] torch                     1.8.0a0                   dev_0    <develop>\r\n[conda] torchvision               0.8.0a0+c36dc43           dev_0    <develop>\r\n\r\n## Additional context\r\n\r\n<!-- Add any other context about the problem here. -->\r\n\n\ncc @gmagogsfm",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/46848/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/46848/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/46816",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/46816/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/46816/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/46816/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/46816",
        "id": 728966375,
        "node_id": "MDU6SXNzdWU3Mjg5NjYzNzU=",
        "number": 46816,
        "title": "TORCH.JIT.UNUSED 's code can't run",
        "user": {
            "login": "dugudongfangshuo",
            "id": 32250216,
            "node_id": "MDQ6VXNlcjMyMjUwMjE2",
            "avatar_url": "https://avatars.githubusercontent.com/u/32250216?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dugudongfangshuo",
            "html_url": "https://github.com/dugudongfangshuo",
            "followers_url": "https://api.github.com/users/dugudongfangshuo/followers",
            "following_url": "https://api.github.com/users/dugudongfangshuo/following{/other_user}",
            "gists_url": "https://api.github.com/users/dugudongfangshuo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dugudongfangshuo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dugudongfangshuo/subscriptions",
            "organizations_url": "https://api.github.com/users/dugudongfangshuo/orgs",
            "repos_url": "https://api.github.com/users/dugudongfangshuo/repos",
            "events_url": "https://api.github.com/users/dugudongfangshuo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dugudongfangshuo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "eellison",
            "id": 11477974,
            "node_id": "MDQ6VXNlcjExNDc3OTc0",
            "avatar_url": "https://avatars.githubusercontent.com/u/11477974?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eellison",
            "html_url": "https://github.com/eellison",
            "followers_url": "https://api.github.com/users/eellison/followers",
            "following_url": "https://api.github.com/users/eellison/following{/other_user}",
            "gists_url": "https://api.github.com/users/eellison/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eellison/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eellison/subscriptions",
            "organizations_url": "https://api.github.com/users/eellison/orgs",
            "repos_url": "https://api.github.com/users/eellison/repos",
            "events_url": "https://api.github.com/users/eellison/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eellison/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "eellison",
                "id": 11477974,
                "node_id": "MDQ6VXNlcjExNDc3OTc0",
                "avatar_url": "https://avatars.githubusercontent.com/u/11477974?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/eellison",
                "html_url": "https://github.com/eellison",
                "followers_url": "https://api.github.com/users/eellison/followers",
                "following_url": "https://api.github.com/users/eellison/following{/other_user}",
                "gists_url": "https://api.github.com/users/eellison/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/eellison/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eellison/subscriptions",
                "organizations_url": "https://api.github.com/users/eellison/orgs",
                "repos_url": "https://api.github.com/users/eellison/repos",
                "events_url": "https://api.github.com/users/eellison/events{/privacy}",
                "received_events_url": "https://api.github.com/users/eellison/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-10-25T08:07:53Z",
        "updated_at": "2020-11-06T05:31:19Z",
        "closed_at": "2020-11-06T05:31:19Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## \ud83d\udcda Documentation\r\ndocument url is [https://pytorch.org/docs/stable/generated/torch.jit.unused.html](url)\r\nin there code is \r\n```\r\nimport torch\r\nimport torch.nn as nn\r\n\r\nclass MyModule(nn.Module):\r\n    def __init__(self, use_memory_efficent):\r\n        super(MyModule, self).__init__()\r\n        self.use_memory_efficent = use_memory_efficent\r\n\r\n    @torch.jit.unused\r\n    def memory_efficient(self, x):\r\n        import pdb\r\n        pdb.set_trace()\r\n        return x + 10\r\n\r\n    def forward(self, x):\r\n        # Use not-yet-scriptable memory efficient mode\r\n        if self.use_memory_efficient:\r\n            return self.memory_efficient(x)\r\n        else:\r\n            return x + 10\r\n\r\nm = torch.jit.script(MyModule(use_memory_efficent=False))\r\nm.save(\"m.pt\")\r\n\r\nm = torch.jit.script(MyModule(use_memory_efficient=True))\r\n# exception raised\r\nm(torch.rand(100))\r\n```\r\nin the  __init__  the var is use_memory_efficent\r\nbut in   def forward the var is use_memory_efficient\r\nso this code can't run  \r\ncorrect is all use_memory_efficent\r\ni hope you can fix it  \n\ncc @gmagogsfm",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/46816/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/46816/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/46703",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/46703/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/46703/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/46703/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/46703",
        "id": 727211201,
        "node_id": "MDU6SXNzdWU3MjcyMTEyMDE=",
        "number": 46703,
        "title": "[jit] metacompile if-statements with boolean literal or boolean constants",
        "user": {
            "login": "ppwwyyxx",
            "id": 1381301,
            "node_id": "MDQ6VXNlcjEzODEzMDE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1381301?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ppwwyyxx",
            "html_url": "https://github.com/ppwwyyxx",
            "followers_url": "https://api.github.com/users/ppwwyyxx/followers",
            "following_url": "https://api.github.com/users/ppwwyyxx/following{/other_user}",
            "gists_url": "https://api.github.com/users/ppwwyyxx/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ppwwyyxx/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ppwwyyxx/subscriptions",
            "organizations_url": "https://api.github.com/users/ppwwyyxx/orgs",
            "repos_url": "https://api.github.com/users/ppwwyyxx/repos",
            "events_url": "https://api.github.com/users/ppwwyyxx/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ppwwyyxx/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "eellison",
            "id": 11477974,
            "node_id": "MDQ6VXNlcjExNDc3OTc0",
            "avatar_url": "https://avatars.githubusercontent.com/u/11477974?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eellison",
            "html_url": "https://github.com/eellison",
            "followers_url": "https://api.github.com/users/eellison/followers",
            "following_url": "https://api.github.com/users/eellison/following{/other_user}",
            "gists_url": "https://api.github.com/users/eellison/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eellison/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eellison/subscriptions",
            "organizations_url": "https://api.github.com/users/eellison/orgs",
            "repos_url": "https://api.github.com/users/eellison/repos",
            "events_url": "https://api.github.com/users/eellison/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eellison/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "eellison",
                "id": 11477974,
                "node_id": "MDQ6VXNlcjExNDc3OTc0",
                "avatar_url": "https://avatars.githubusercontent.com/u/11477974?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/eellison",
                "html_url": "https://github.com/eellison",
                "followers_url": "https://api.github.com/users/eellison/followers",
                "following_url": "https://api.github.com/users/eellison/following{/other_user}",
                "gists_url": "https://api.github.com/users/eellison/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/eellison/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eellison/subscriptions",
                "organizations_url": "https://api.github.com/users/eellison/orgs",
                "repos_url": "https://api.github.com/users/eellison/repos",
                "events_url": "https://api.github.com/users/eellison/events{/privacy}",
                "received_events_url": "https://api.github.com/users/eellison/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-10-22T09:22:32Z",
        "updated_at": "2020-11-20T19:22:00Z",
        "closed_at": "2020-11-20T19:22:00Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "## \ud83d\ude80 Feature\r\n\r\n## Motivation\r\n\r\nSkipping compilation when not needed is in general helpful for migrating code to torchscript.\r\n\r\n## Pitch\r\n```\r\nimport torch\r\n\r\nclass A(torch.nn.Module):\r\n    good: torch.jit.Final[bool]\r\n    def __init__(self):\r\n        super().__init__()\r\n        self.good = True\r\n    def forward(self, x):\r\n        #if hasattr(self, 'good'):  # works\r\n        #if True:  # fails\r\n        #if self.good is not None:  # works\r\n        if self.good:  # fails\r\n            return x\r\n\r\n        # imagine below are some code that are scriptable depend on the availability of self.good\r\n        print(\"hello\") + 2  # shall not be compiled\r\n\r\nx = A()\r\nf = torch.jit.script(x)\r\nf.forward(torch.randn(3))\r\n```\r\n\r\ncc @gmagogsfm",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/46703/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/46703/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/46682",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/46682/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/46682/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/46682/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/46682",
        "id": 726883919,
        "node_id": "MDU6SXNzdWU3MjY4ODM5MTk=",
        "number": 46682,
        "title": "Missing support in TorchScript: \"in\" operator to check if a string contains substring",
        "user": {
            "login": "cndn",
            "id": 7022920,
            "node_id": "MDQ6VXNlcjcwMjI5MjA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7022920?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cndn",
            "html_url": "https://github.com/cndn",
            "followers_url": "https://api.github.com/users/cndn/followers",
            "following_url": "https://api.github.com/users/cndn/following{/other_user}",
            "gists_url": "https://api.github.com/users/cndn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cndn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cndn/subscriptions",
            "organizations_url": "https://api.github.com/users/cndn/orgs",
            "repos_url": "https://api.github.com/users/cndn/repos",
            "events_url": "https://api.github.com/users/cndn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cndn/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1027606656,
                "node_id": "MDU6TGFiZWwxMDI3NjA2NjU2",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20bootcamp",
                "name": "module: bootcamp",
                "color": "f7e101",
                "default": false,
                "description": "We plan to do a full writeup on the issue, and then get someone to do it for onboarding"
            },
            {
                "id": 2203967172,
                "node_id": "MDU6TGFiZWwyMjAzOTY3MTcy",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/days",
                "name": "days",
                "color": "77f497",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "ansley",
            "id": 59447410,
            "node_id": "MDQ6VXNlcjU5NDQ3NDEw",
            "avatar_url": "https://avatars.githubusercontent.com/u/59447410?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ansley",
            "html_url": "https://github.com/ansley",
            "followers_url": "https://api.github.com/users/ansley/followers",
            "following_url": "https://api.github.com/users/ansley/following{/other_user}",
            "gists_url": "https://api.github.com/users/ansley/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ansley/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ansley/subscriptions",
            "organizations_url": "https://api.github.com/users/ansley/orgs",
            "repos_url": "https://api.github.com/users/ansley/repos",
            "events_url": "https://api.github.com/users/ansley/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ansley/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "ansley",
                "id": 59447410,
                "node_id": "MDQ6VXNlcjU5NDQ3NDEw",
                "avatar_url": "https://avatars.githubusercontent.com/u/59447410?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ansley",
                "html_url": "https://github.com/ansley",
                "followers_url": "https://api.github.com/users/ansley/followers",
                "following_url": "https://api.github.com/users/ansley/following{/other_user}",
                "gists_url": "https://api.github.com/users/ansley/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ansley/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ansley/subscriptions",
                "organizations_url": "https://api.github.com/users/ansley/orgs",
                "repos_url": "https://api.github.com/users/ansley/repos",
                "events_url": "https://api.github.com/users/ansley/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ansley/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 2,
        "created_at": "2020-10-21T21:43:28Z",
        "updated_at": "2020-12-29T15:10:11Z",
        "closed_at": "2020-12-29T15:10:11Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\nCalling `\"a\" in \"abcd\" ` in TS model throws an error\r\n\r\nRuntimeError: \r\nArguments for call are not valid.\r\nThe following variants are available:\r\n  \r\n  aten::__contains__.str_list(str[] l, str item) -> (bool):\r\n  Expected a value of type 'List[str]' for argument 'l' but instead found type 'str'.\r\n  \r\n  aten::__contains__.str(Dict(str, t) dict, str key) -> (bool):\r\n  Could not match type str to Dict[str, t] in argument 'dict': Cannot match a dict to str.\r\n  \r\n  aten::__contains__.int(Dict(int, t) dict, int key) -> (bool):\r\n  Could not match type str to Dict[int, t] in argument 'dict': Cannot match a dict to str.\r\n  \r\n  aten::__contains__.bool(Dict(bool, t) dict, bool key) -> (bool):\r\n  Could not match type str to Dict[bool, t] in argument 'dict': Cannot match a dict to str.\r\n  \r\n  aten::__contains__.float(Dict(float, t) dict, float key) -> (bool):\r\n  Could not match type str to Dict[float, t] in argument 'dict': Cannot match a dict to str.\r\n  \r\n  aten::__contains__.Tensor(Dict(Tensor, t) dict, Tensor key) -> (bool):\r\n  Could not match type str to Dict[Tensor, t] in argument 'dict': Cannot match a dict to str.\r\n  \r\n  aten::__contains__.int_list(int[] l, int item) -> (bool):\r\n  Expected a value of type 'List[int]' for argument 'l' but instead found type 'str'.\r\n  \r\n  aten::__contains__.float_list(float[] l, float item) -> (bool):\r\n  Expected a value of type 'List[float]' for argument 'l' but instead found type 'str'.\r\n\r\nLooks like the string overload isn't bound yet\r\n\r\n## To Reproduce\r\n\r\n```\r\nimport torch\r\nfrom torch import nn\r\n\r\nclass MyModel(nn.Module):\r\n    def __init__(self):\r\n        super().__init__()\r\n    def forward(self):\r\n        return \"a\" in \"abcd\"\r\n\r\nm = MyModel()\r\nscripted = torch.jit.script(m)\r\nscripted()\r\n```\r\n\r\n## Expected behavior\r\n\r\nThe minimal repro example runs without error\r\n\r\n## Environment\r\n\r\nFB intern\r\n\n\ncc @gmagogsfm",
        "closed_by": {
            "login": "ansley",
            "id": 59447410,
            "node_id": "MDQ6VXNlcjU5NDQ3NDEw",
            "avatar_url": "https://avatars.githubusercontent.com/u/59447410?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ansley",
            "html_url": "https://github.com/ansley",
            "followers_url": "https://api.github.com/users/ansley/followers",
            "following_url": "https://api.github.com/users/ansley/following{/other_user}",
            "gists_url": "https://api.github.com/users/ansley/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ansley/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ansley/subscriptions",
            "organizations_url": "https://api.github.com/users/ansley/orgs",
            "repos_url": "https://api.github.com/users/ansley/repos",
            "events_url": "https://api.github.com/users/ansley/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ansley/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/46682/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/46682/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/46458",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/46458/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/46458/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/46458/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/46458",
        "id": 722995428,
        "node_id": "MDU6SXNzdWU3MjI5OTU0Mjg=",
        "number": 46458,
        "title": "Tensor expressions type promotion for torch.sin is incorrect after #45733",
        "user": {
            "login": "mruberry",
            "id": 38511765,
            "node_id": "MDQ6VXNlcjM4NTExNzY1",
            "avatar_url": "https://avatars.githubusercontent.com/u/38511765?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mruberry",
            "html_url": "https://github.com/mruberry",
            "followers_url": "https://api.github.com/users/mruberry/followers",
            "following_url": "https://api.github.com/users/mruberry/following{/other_user}",
            "gists_url": "https://api.github.com/users/mruberry/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mruberry/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mruberry/subscriptions",
            "organizations_url": "https://api.github.com/users/mruberry/orgs",
            "repos_url": "https://api.github.com/users/mruberry/repos",
            "events_url": "https://api.github.com/users/mruberry/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mruberry/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "bertmaher",
            "id": 4441820,
            "node_id": "MDQ6VXNlcjQ0NDE4MjA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4441820?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bertmaher",
            "html_url": "https://github.com/bertmaher",
            "followers_url": "https://api.github.com/users/bertmaher/followers",
            "following_url": "https://api.github.com/users/bertmaher/following{/other_user}",
            "gists_url": "https://api.github.com/users/bertmaher/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bertmaher/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bertmaher/subscriptions",
            "organizations_url": "https://api.github.com/users/bertmaher/orgs",
            "repos_url": "https://api.github.com/users/bertmaher/repos",
            "events_url": "https://api.github.com/users/bertmaher/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bertmaher/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "bertmaher",
                "id": 4441820,
                "node_id": "MDQ6VXNlcjQ0NDE4MjA=",
                "avatar_url": "https://avatars.githubusercontent.com/u/4441820?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/bertmaher",
                "html_url": "https://github.com/bertmaher",
                "followers_url": "https://api.github.com/users/bertmaher/followers",
                "following_url": "https://api.github.com/users/bertmaher/following{/other_user}",
                "gists_url": "https://api.github.com/users/bertmaher/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/bertmaher/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bertmaher/subscriptions",
                "organizations_url": "https://api.github.com/users/bertmaher/orgs",
                "repos_url": "https://api.github.com/users/bertmaher/repos",
                "events_url": "https://api.github.com/users/bertmaher/events{/privacy}",
                "received_events_url": "https://api.github.com/users/bertmaher/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 10,
        "created_at": "2020-10-16T07:53:47Z",
        "updated_at": "2020-10-24T11:32:02Z",
        "closed_at": "2020-10-24T00:37:56Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "https://github.com/pytorch/pytorch/pull/45733 adds int->float type promotion to torch.sin(), which is consistent with NumPy's sin() function. Since TE implements its own type promotion, that type promotion is now inconsistent with ATen's. The correct behavior is to promote integer inputs to torch.sin() to the default scalar type before the computation. \n\ncc @gmagogsfm",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/46458/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/46458/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/46326",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/46326/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/46326/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/46326/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/46326",
        "id": 721639912,
        "node_id": "MDU6SXNzdWU3MjE2Mzk5MTI=",
        "number": 46326,
        "title": "[JIT] Unannotated NamedTuple Type should use TensorType::getInferred()",
        "user": {
            "login": "eellison",
            "id": 11477974,
            "node_id": "MDQ6VXNlcjExNDc3OTc0",
            "avatar_url": "https://avatars.githubusercontent.com/u/11477974?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eellison",
            "html_url": "https://github.com/eellison",
            "followers_url": "https://api.github.com/users/eellison/followers",
            "following_url": "https://api.github.com/users/eellison/following{/other_user}",
            "gists_url": "https://api.github.com/users/eellison/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eellison/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eellison/subscriptions",
            "organizations_url": "https://api.github.com/users/eellison/orgs",
            "repos_url": "https://api.github.com/users/eellison/repos",
            "events_url": "https://api.github.com/users/eellison/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eellison/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1027606656,
                "node_id": "MDU6TGFiZWwxMDI3NjA2NjU2",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20bootcamp",
                "name": "module: bootcamp",
                "color": "f7e101",
                "default": false,
                "description": "We plan to do a full writeup on the issue, and then get someone to do it for onboarding"
            },
            {
                "id": 2203967172,
                "node_id": "MDU6TGFiZWwyMjAzOTY3MTcy",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/days",
                "name": "days",
                "color": "77f497",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2020-10-14T17:17:20Z",
        "updated_at": "2020-10-29T19:11:25Z",
        "closed_at": "2020-10-29T19:11:25Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug / \ud83d\ude80  Feature\r\n```\r\nimport torch\r\nfrom collections import namedtuple\r\n_MyNamedTuple = namedtuple('_MyNamedTuple', ['value'])\r\n\r\n@torch.jit.script\r\ndef foo():\r\n    return _MyNamedTuple(1)\r\n> Expected a value of type 'Tensor' for argument 'value' but instead found type 'int'.\r\n```\r\n\r\nIt would be nice if we showed that the Tensor type was inferred because no type annotations were given for the named tuple. There was a user internally who was confused by this.\r\n\n\ncc @gmagogsfm",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/46326/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/46326/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/46047",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/46047/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/46047/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/46047/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/46047",
        "id": 717545208,
        "node_id": "MDU6SXNzdWU3MTc1NDUyMDg=",
        "number": 46047,
        "title": "[JIT] Docstrings for custom C++ classes",
        "user": {
            "login": "jamesr66a",
            "id": 4685384,
            "node_id": "MDQ6VXNlcjQ2ODUzODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4685384?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesr66a",
            "html_url": "https://github.com/jamesr66a",
            "followers_url": "https://api.github.com/users/jamesr66a/followers",
            "following_url": "https://api.github.com/users/jamesr66a/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesr66a/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesr66a/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesr66a/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesr66a/orgs",
            "repos_url": "https://api.github.com/users/jamesr66a/repos",
            "events_url": "https://api.github.com/users/jamesr66a/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesr66a/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "gmagogsfm",
            "id": 1817752,
            "node_id": "MDQ6VXNlcjE4MTc3NTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1817752?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gmagogsfm",
            "html_url": "https://github.com/gmagogsfm",
            "followers_url": "https://api.github.com/users/gmagogsfm/followers",
            "following_url": "https://api.github.com/users/gmagogsfm/following{/other_user}",
            "gists_url": "https://api.github.com/users/gmagogsfm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gmagogsfm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gmagogsfm/subscriptions",
            "organizations_url": "https://api.github.com/users/gmagogsfm/orgs",
            "repos_url": "https://api.github.com/users/gmagogsfm/repos",
            "events_url": "https://api.github.com/users/gmagogsfm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gmagogsfm/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "gmagogsfm",
                "id": 1817752,
                "node_id": "MDQ6VXNlcjE4MTc3NTI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/1817752?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/gmagogsfm",
                "html_url": "https://github.com/gmagogsfm",
                "followers_url": "https://api.github.com/users/gmagogsfm/followers",
                "following_url": "https://api.github.com/users/gmagogsfm/following{/other_user}",
                "gists_url": "https://api.github.com/users/gmagogsfm/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/gmagogsfm/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gmagogsfm/subscriptions",
                "organizations_url": "https://api.github.com/users/gmagogsfm/orgs",
                "repos_url": "https://api.github.com/users/gmagogsfm/repos",
                "events_url": "https://api.github.com/users/gmagogsfm/events{/privacy}",
                "received_events_url": "https://api.github.com/users/gmagogsfm/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 3,
        "created_at": "2020-10-08T17:51:07Z",
        "updated_at": "2020-10-24T19:56:48Z",
        "closed_at": "2020-10-24T19:56:47Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "We should have a way to specify docstrings on a) custom registered classes and b) the methods thereof. I believe this will entail:\r\n\r\n1) C++ APIs for populating the docstring. I can't find a pybind11 equivalent for installing a docstring on a class, but it could be an extra string argument to the `torch::class_<>` constructor. For method definitions I think it should similarly be an extra string argument to `class_::def()`\r\n2) A way to represent docstrings in the TorchScript type system. For classes, it could preferably be a `__doc__` attribute, or a special case method on the `ClassType`: https://github.com/pytorch/pytorch/blob/40828b68e1bb0eb6fc2996889d4886ae988dc059/aten/src/ATen/core/jit_type.h#L1950. For methods, I think we would need to add a special docstring method to `jit::Function`: https://github.com/pytorch/pytorch/blob/40828b68e1bb0eb6fc2996889d4886ae988dc059/aten/src/ATen/core/function.h#L27\r\n3) Then, in the Python bindings, for classes we would need to bind in a `__doc__` property to access the docstring as we defined in step (2): https://github.com/pytorch/pytorch/blob/40828b68e1bb0eb6fc2996889d4886ae988dc059/torch/csrc/jit/python/python_custom_class.cpp#L31. For functions similarly we would bind in the `__doc__` property on ScriptFunction: https://github.com/pytorch/pytorch/blob/40828b68e1bb0eb6fc2996889d4886ae988dc059/torch/csrc/jit/python/script_init.cpp#L1111\r\n\r\nNote that for any of these stages, if we can generalize the support to broader TorchScript support (particularly the frontend concerns), that would probably be a good idea\r\n\r\ncc @gmagogsfm",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/46047/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/46047/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/45953",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/45953/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/45953/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/45953/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/45953",
        "id": 716241606,
        "node_id": "MDU6SXNzdWU3MTYyNDE2MDY=",
        "number": 45953,
        "title": "torch.jit.script: RuntimeError: default_program(61): error: no suitable conversion function from \"__half\" to \"float\" exists",
        "user": {
            "login": "szhengac",
            "id": 3960020,
            "node_id": "MDQ6VXNlcjM5NjAwMjA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3960020?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/szhengac",
            "html_url": "https://github.com/szhengac",
            "followers_url": "https://api.github.com/users/szhengac/followers",
            "following_url": "https://api.github.com/users/szhengac/following{/other_user}",
            "gists_url": "https://api.github.com/users/szhengac/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/szhengac/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/szhengac/subscriptions",
            "organizations_url": "https://api.github.com/users/szhengac/orgs",
            "repos_url": "https://api.github.com/users/szhengac/repos",
            "events_url": "https://api.github.com/users/szhengac/events{/privacy}",
            "received_events_url": "https://api.github.com/users/szhengac/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2020-10-07T06:32:54Z",
        "updated_at": "2020-10-14T23:00:57Z",
        "closed_at": "2020-10-12T20:34:25Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "When I ran [deepspeed bert example](https://github.com/microsoft/DeepSpeedExamples/blob/master/bing_bert/ds_train_bert_nvidia_data_bsz32k_seq512.sh), I received the following error:\r\n\r\n`Traceback (most recent call last):\r\n  File \"/home/ec2-user/DeepSpeedExamples/bing_bert/deepspeed_train.py\", line 532, in <module>\r\n    main()\r\n  File \"/home/ec2-user/DeepSpeedExamples/bing_bert/deepspeed_train.py\", line 525, in main\r\n    run(args, model, optimizer, start_epoch)\r\n  File \"/home/ec2-user/DeepSpeedExamples/bing_bert/deepspeed_train.py\", line 491, in run\r\n    train(args, index, model, optimizer, pretrain_dataset_provider)\r\n  File \"/home/ec2-user/DeepSpeedExamples/bing_bert/deepspeed_train.py\", line 166, in train\r\n    loss = model.network(batch)\r\n  File \"/home/ec2-user/.local/lib/python3.7/site-packages/torch/nn/modules/module.py\", line 727, in _call_impl\r\n    result = self.forward(*input, **kwargs)\r\n  File \"/home/ec2-user/.local/lib/python3.7/site-packages/deepspeed/runtime/engine.py\", line 743, in forward\r\n    loss = self.module(*inputs, **kwargs)\r\n  File \"/home/ec2-user/.local/lib/python3.7/site-packages/torch/nn/modules/module.py\", line 727, in _call_impl\r\n    result = self.forward(*input, **kwargs)\r\n  File \"/home/ec2-user/DeepSpeedExamples/bing_bert/nvidia/modelingpreln.py\", line 1144, in forward\r\n    sequence_output, pooled_output, masked_token_indexes)\r\n  File \"/home/ec2-user/.local/lib/python3.7/site-packages/torch/nn/modules/module.py\", line 727, in _call_impl\r\n    result = self.forward(*input, **kwargs)\r\n  File \"/home/ec2-user/DeepSpeedExamples/bing_bert/nvidia/modelingpreln.py\", line 769, in forward\r\n    masked_token_indexes)\r\n  File \"/home/ec2-user/.local/lib/python3.7/site-packages/torch/nn/modules/module.py\", line 727, in _call_impl\r\n    result = self.forward(*input, **kwargs)\r\n  File \"/home/ec2-user/DeepSpeedExamples/bing_bert/nvidia/modelingpreln.py\", line 721, in forward\r\n    hidden_states = self.transform(hidden_states)\r\n  File \"/home/ec2-user/.local/lib/python3.7/site-packages/torch/nn/modules/module.py\", line 727, in _call_impl\r\n    result = self.forward(*input, **kwargs)\r\n  File \"/home/ec2-user/DeepSpeedExamples/bing_bert/nvidia/modelingpreln.py\", line 701, in forward\r\n    hidden_states = self.dense_act(hidden_states)\r\n  File \"/home/ec2-user/.local/lib/python3.7/site-packages/torch/nn/modules/module.py\", line 727, in _call_impl\r\n    result = self.forward(*input, **kwargs)\r\n  File \"/home/ec2-user/DeepSpeedExamples/bing_bert/nvidia/modelingpreln.py\", line 252, in forward\r\n    return bias_gelu(self.bias, F.linear(input, self.weight, None))\r\nRuntimeError: default_program(61): error: no suitable conversion function from \"__half\" to \"float\" exists\r\n\r\ndefault_program(61): error: no suitable constructor exists to convert from \"float\" to \"__half\"\r\n\r\ndefault_program(66): error: no suitable conversion function from \"__half\" to \"float\" exists\r\n\r\ndefault_program(66): error: no suitable constructor exists to convert from \"float\" to \"__half\"\r\n\r\ndefault_program(66): error: no operator \"*\" matches these operands\r\n            operand types are: __half * __half\r\n\r\n5 errors detected in the compilation of \"default_program\".\r\n\r\nnvrtc compilation failed: \r\n\r\n#define NAN __int_as_float(0x7fffffff)\r\n#define POS_INFINITY __int_as_float(0x7f800000)\r\n#define NEG_INFINITY __int_as_float(0xff800000)\r\n\r\n\r\ntemplate<typename T>\r\n__device__ T maximum(T a, T b) {\r\n  return isnan(a) ? a : (a > b ? a : b);\r\n}\r\n\r\ntemplate<typename T>\r\n__device__ T minimum(T a, T b) {\r\n  return isnan(a) ? a : (a < b ? a : b);\r\n}\r\n\r\n\r\n#define __HALF_TO_US(var) *(reinterpret_cast<unsigned short *>(&(var)))\r\n#define __HALF_TO_CUS(var) *(reinterpret_cast<const unsigned short *>(&(var)))\r\n#if defined(__cplusplus)\r\n  struct __align__(2) __half {\r\n    __host__ __device__ __half() { }\r\n\r\n  protected:\r\n    unsigned short __x;\r\n  };\r\n\r\n  /* All intrinsic functions are only available to nvcc compilers */\r\n  #if defined(__CUDACC__)\r\n    /* Definitions of intrinsics */\r\n    __device__ __half __float2half(const float f) {\r\n      __half val;\r\n      asm(\"{  cvt.rn.f16.f32 %0, %1;}\\n\" : \"=h\"(__HALF_TO_US(val)) : \"f\"(f));\r\n      return val;\r\n    }\r\n\r\n    __device__ float __half2float(const __half h) {\r\n      float val;\r\n      asm(\"{  cvt.f32.f16 %0, %1;}\\n\" : \"=f\"(val) : \"h\"(__HALF_TO_CUS(h)));\r\n      return val;\r\n    }\r\n\r\n  #endif /* defined(__CUDACC__) */\r\n#endif /* defined(__cplusplus) */\r\n#undef __HALF_TO_US\r\n#undef __HALF_TO_CUS\r\n\r\ntypedef __half half;\r\n\r\nextern \"C\" __global__\r\nvoid func_2(half* t0, half* t1, half* aten_mul_flat, half* aten_add_flat, half* aten_div_flat, half* aten_mul_flat_1) {\r\n{\r\n  float v = __half2float(t0[(512 * blockIdx.x + threadIdx.x) % 1024]);\r\n  float v_1 = __half2float(t1[512 * blockIdx.x + threadIdx.x]);\r\n  aten_div_flat[512 * blockIdx.x + threadIdx.x] = __float2half((v + v_1) / 1.414209961891174f);\r\n  half aten_mul_flat_ = aten_mul_flat_1[512 * blockIdx.x + threadIdx.x];\r\n  aten_mul_flat_ = __float2half((__half2float(t0[(512 * blockIdx.x + threadIdx.x) % 1024]) + __half2float(t1[512 * blockIdx.x + threadIdx.x])) * 0.5f);\r\n  aten_mul_flat_1[512 * blockIdx.x + threadIdx.x] = aten_mul_flat_;\r\n  float v_2 = __half2float(t0[(512 * blockIdx.x + threadIdx.x) % 1024]);\r\n  float v_3 = __half2float(t1[512 * blockIdx.x + threadIdx.x]);\r\n  aten_add_flat[512 * blockIdx.x + threadIdx.x] = __float2half(__half2float(erff(__float2half((v_2 + v_3) / 1.414209961891174f))) + 1.f);\r\n  float v_4 = __half2float(t0[(512 * blockIdx.x + threadIdx.x) % 1024]);\r\n  float v_5 = __half2float(t1[512 * blockIdx.x + threadIdx.x]);\r\n  float v_6 = __half2float(t0[(512 * blockIdx.x + threadIdx.x) % 1024]);\r\n  float v_7 = __half2float(t1[512 * blockIdx.x + threadIdx.x]);\r\n  aten_mul_flat[512 * blockIdx.x + threadIdx.x] = __float2half((v_4 + v_5) * 0.5f) * __float2half(__half2float(erff(__float2half((v_6 + v_7) / 1.414209961891174f))) + 1.f);\r\n}\r\n}\r\n`\r\n\r\nI found that it is due to the [torch jit script decorator ](https://github.com/microsoft/DeepSpeedExamples/blob/28a32fb313479b0d18c0157b62945026a4fd4ef6/bing_bert/nvidia/modelingpreln.py#L187). If I remove this decorator, everything goes well.\r\n\r\nI use the pytorch master version on Oct 4th, 2020.\n\ncc @gmagogsfm",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/45953/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/45953/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/45921",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/45921/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/45921/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/45921/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/45921",
        "id": 716004477,
        "node_id": "MDU6SXNzdWU3MTYwMDQ0Nzc=",
        "number": 45921,
        "title": "Make `torch.jit._script_if_tracing` public",
        "user": {
            "login": "fritzo",
            "id": 648532,
            "node_id": "MDQ6VXNlcjY0ODUzMg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/648532?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fritzo",
            "html_url": "https://github.com/fritzo",
            "followers_url": "https://api.github.com/users/fritzo/followers",
            "following_url": "https://api.github.com/users/fritzo/following{/other_user}",
            "gists_url": "https://api.github.com/users/fritzo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fritzo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fritzo/subscriptions",
            "organizations_url": "https://api.github.com/users/fritzo/orgs",
            "repos_url": "https://api.github.com/users/fritzo/repos",
            "events_url": "https://api.github.com/users/fritzo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fritzo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "gmagogsfm",
            "id": 1817752,
            "node_id": "MDQ6VXNlcjE4MTc3NTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1817752?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gmagogsfm",
            "html_url": "https://github.com/gmagogsfm",
            "followers_url": "https://api.github.com/users/gmagogsfm/followers",
            "following_url": "https://api.github.com/users/gmagogsfm/following{/other_user}",
            "gists_url": "https://api.github.com/users/gmagogsfm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gmagogsfm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gmagogsfm/subscriptions",
            "organizations_url": "https://api.github.com/users/gmagogsfm/orgs",
            "repos_url": "https://api.github.com/users/gmagogsfm/repos",
            "events_url": "https://api.github.com/users/gmagogsfm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gmagogsfm/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "gmagogsfm",
                "id": 1817752,
                "node_id": "MDQ6VXNlcjE4MTc3NTI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/1817752?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/gmagogsfm",
                "html_url": "https://github.com/gmagogsfm",
                "followers_url": "https://api.github.com/users/gmagogsfm/followers",
                "following_url": "https://api.github.com/users/gmagogsfm/following{/other_user}",
                "gists_url": "https://api.github.com/users/gmagogsfm/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/gmagogsfm/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gmagogsfm/subscriptions",
                "organizations_url": "https://api.github.com/users/gmagogsfm/orgs",
                "repos_url": "https://api.github.com/users/gmagogsfm/repos",
                "events_url": "https://api.github.com/users/gmagogsfm/events{/privacy}",
                "received_events_url": "https://api.github.com/users/gmagogsfm/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-10-06T20:36:12Z",
        "updated_at": "2020-10-18T00:34:48Z",
        "closed_at": "2020-10-18T00:34:48Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "## \ud83d\ude80 Feature\r\nI would like to use `torch.jit._script_if_tracing()` in a downstream library. Could jit devs make it public please \ud83d\ude04 ?\r\n\r\n## Motivation\r\n\r\nAs discussed in https://github.com/pyro-ppl/pyro/pull/2387 it is useful to decorate some functions as `torch.jit._script_if_tracing()` even if those functions are not in the PyTorch codebase. Making this function public and documented would guarantee to downstream libraries that it will exist in the future.\r\n\r\n## Pitch\r\n\r\nFirst rename it to `torch.jit.script_if_tracing()`. Then add a docstring.\n\ncc @gmagogsfm",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/45921/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/45921/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/45904",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/45904/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/45904/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/45904/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/45904",
        "id": 715832975,
        "node_id": "MDU6SXNzdWU3MTU4MzI5NzU=",
        "number": 45904,
        "title": "Scripting torch.nn.MaxPool fails when return_indices=True",
        "user": {
            "login": "neginraoof",
            "id": 16928382,
            "node_id": "MDQ6VXNlcjE2OTI4Mzgy",
            "avatar_url": "https://avatars.githubusercontent.com/u/16928382?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/neginraoof",
            "html_url": "https://github.com/neginraoof",
            "followers_url": "https://api.github.com/users/neginraoof/followers",
            "following_url": "https://api.github.com/users/neginraoof/following{/other_user}",
            "gists_url": "https://api.github.com/users/neginraoof/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/neginraoof/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neginraoof/subscriptions",
            "organizations_url": "https://api.github.com/users/neginraoof/orgs",
            "repos_url": "https://api.github.com/users/neginraoof/repos",
            "events_url": "https://api.github.com/users/neginraoof/events{/privacy}",
            "received_events_url": "https://api.github.com/users/neginraoof/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1076922764,
                "node_id": "MDU6TGFiZWwxMDc2OTIyNzY0",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20nn",
                "name": "module: nn",
                "color": "f7e101",
                "default": false,
                "description": "Related to torch.nn"
            },
            {
                "id": 1300875269,
                "node_id": "MDU6TGFiZWwxMzAwODc1MjY5",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20typing",
                "name": "module: typing",
                "color": "f7e101",
                "default": false,
                "description": "Related to mypy type annotations"
            },
            {
                "id": 2405747036,
                "node_id": "MDU6TGFiZWwyNDA1NzQ3MDM2",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20pooling",
                "name": "module: pooling",
                "color": "f7e101",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "garymm",
            "id": 421339,
            "node_id": "MDQ6VXNlcjQyMTMzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/421339?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/garymm",
            "html_url": "https://github.com/garymm",
            "followers_url": "https://api.github.com/users/garymm/followers",
            "following_url": "https://api.github.com/users/garymm/following{/other_user}",
            "gists_url": "https://api.github.com/users/garymm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/garymm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/garymm/subscriptions",
            "organizations_url": "https://api.github.com/users/garymm/orgs",
            "repos_url": "https://api.github.com/users/garymm/repos",
            "events_url": "https://api.github.com/users/garymm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/garymm/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "garymm",
                "id": 421339,
                "node_id": "MDQ6VXNlcjQyMTMzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/421339?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/garymm",
                "html_url": "https://github.com/garymm",
                "followers_url": "https://api.github.com/users/garymm/followers",
                "following_url": "https://api.github.com/users/garymm/following{/other_user}",
                "gists_url": "https://api.github.com/users/garymm/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/garymm/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/garymm/subscriptions",
                "organizations_url": "https://api.github.com/users/garymm/orgs",
                "repos_url": "https://api.github.com/users/garymm/repos",
                "events_url": "https://api.github.com/users/garymm/events{/privacy}",
                "received_events_url": "https://api.github.com/users/garymm/received_events",
                "type": "User",
                "site_admin": false
            },
            {
                "login": "eellison",
                "id": 11477974,
                "node_id": "MDQ6VXNlcjExNDc3OTc0",
                "avatar_url": "https://avatars.githubusercontent.com/u/11477974?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/eellison",
                "html_url": "https://github.com/eellison",
                "followers_url": "https://api.github.com/users/eellison/followers",
                "following_url": "https://api.github.com/users/eellison/following{/other_user}",
                "gists_url": "https://api.github.com/users/eellison/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/eellison/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eellison/subscriptions",
                "organizations_url": "https://api.github.com/users/eellison/orgs",
                "repos_url": "https://api.github.com/users/eellison/repos",
                "events_url": "https://api.github.com/users/eellison/events{/privacy}",
                "received_events_url": "https://api.github.com/users/eellison/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 6,
        "created_at": "2020-10-06T16:18:41Z",
        "updated_at": "2021-10-14T18:00:55Z",
        "closed_at": "2021-10-14T18:00:55Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\nType annotation for MaxPool functions does not support the case return_indices=True.\r\nJit script fails with the exception below:\r\n\r\n```\r\nRuntimeError:\r\nReturn value was annotated as having type Tensor but is actually of type Tuple[Tensor, Tensor]:\r\n  File \"/opt/anaconda3/lib/python3.8/site-packages/torch/nn/modules/pooling.py\", line 227\r\n    def forward(self, input: Tensor) -> Tensor:\r\n        return F.max_pool3d(input, self.kernel_size, self.stride,\r\n        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n                            self.padding, self.dilation, self.ceil_mode,\r\n                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n                            self.return_indices)\r\n                            ~~~~~~~~~~~~~~~~~~~ <--- HERE\r\n```\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior:\r\n\r\n```\r\nmodel = torch.nn.MaxPool1d(2, stride=1, return_indices=True)\r\ntorch.jit.script(model)\r\n```\r\n\n\ncc @albanD @mruberry @ezyang @malfet @rgommers @xuzhao9 @gramster @gmagogsfm",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/45904/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/45904/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/45902",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/45902/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/45902/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/45902/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/45902",
        "id": 715785509,
        "node_id": "MDU6SXNzdWU3MTU3ODU1MDk=",
        "number": 45902,
        "title": "Freeze module pass fails on torchvision RCNN models",
        "user": {
            "login": "neginraoof",
            "id": 16928382,
            "node_id": "MDQ6VXNlcjE2OTI4Mzgy",
            "avatar_url": "https://avatars.githubusercontent.com/u/16928382?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/neginraoof",
            "html_url": "https://github.com/neginraoof",
            "followers_url": "https://api.github.com/users/neginraoof/followers",
            "following_url": "https://api.github.com/users/neginraoof/following{/other_user}",
            "gists_url": "https://api.github.com/users/neginraoof/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/neginraoof/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neginraoof/subscriptions",
            "organizations_url": "https://api.github.com/users/neginraoof/orgs",
            "repos_url": "https://api.github.com/users/neginraoof/repos",
            "events_url": "https://api.github.com/users/neginraoof/events{/privacy}",
            "received_events_url": "https://api.github.com/users/neginraoof/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "eellison",
            "id": 11477974,
            "node_id": "MDQ6VXNlcjExNDc3OTc0",
            "avatar_url": "https://avatars.githubusercontent.com/u/11477974?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eellison",
            "html_url": "https://github.com/eellison",
            "followers_url": "https://api.github.com/users/eellison/followers",
            "following_url": "https://api.github.com/users/eellison/following{/other_user}",
            "gists_url": "https://api.github.com/users/eellison/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eellison/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eellison/subscriptions",
            "organizations_url": "https://api.github.com/users/eellison/orgs",
            "repos_url": "https://api.github.com/users/eellison/repos",
            "events_url": "https://api.github.com/users/eellison/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eellison/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "eellison",
                "id": 11477974,
                "node_id": "MDQ6VXNlcjExNDc3OTc0",
                "avatar_url": "https://avatars.githubusercontent.com/u/11477974?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/eellison",
                "html_url": "https://github.com/eellison",
                "followers_url": "https://api.github.com/users/eellison/followers",
                "following_url": "https://api.github.com/users/eellison/following{/other_user}",
                "gists_url": "https://api.github.com/users/eellison/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/eellison/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eellison/subscriptions",
                "organizations_url": "https://api.github.com/users/eellison/orgs",
                "repos_url": "https://api.github.com/users/eellison/repos",
                "events_url": "https://api.github.com/users/eellison/events{/privacy}",
                "received_events_url": "https://api.github.com/users/eellison/received_events",
                "type": "User",
                "site_admin": false
            },
            {
                "login": "bzinodev",
                "id": 55170918,
                "node_id": "MDQ6VXNlcjU1MTcwOTE4",
                "avatar_url": "https://avatars.githubusercontent.com/u/55170918?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/bzinodev",
                "html_url": "https://github.com/bzinodev",
                "followers_url": "https://api.github.com/users/bzinodev/followers",
                "following_url": "https://api.github.com/users/bzinodev/following{/other_user}",
                "gists_url": "https://api.github.com/users/bzinodev/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/bzinodev/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bzinodev/subscriptions",
                "organizations_url": "https://api.github.com/users/bzinodev/orgs",
                "repos_url": "https://api.github.com/users/bzinodev/repos",
                "events_url": "https://api.github.com/users/bzinodev/events{/privacy}",
                "received_events_url": "https://api.github.com/users/bzinodev/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-10-06T15:23:28Z",
        "updated_at": "2020-10-15T18:02:08Z",
        "closed_at": "2020-10-15T18:02:08Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\nFreeze module pass fails with below exception for torchvision Faster RCNN, Mask RCNN, Keypoint RCNN models:\r\n\r\n```\r\ntorch._C._freeze_module(script_module._c)\r\nRuntimeError: node->kind() == prim::GetAttr INTERNAL ASSERT FAILED at \"../torch/csrc/jit/passes/freeze_module.cpp\":22, please report a bug to PyTorch. Expected prim::GetAttr nodes\r\n```\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior:\r\n```\r\nmodel = torchvision.models.detection.keypoint_rcnn.keypointrcnn_resnet50_fpn(pretrained=True, min_size=200, max_size=300)\r\nmodel.eval()\r\nscript_module = torch.jit.script(model)\r\ntorch._C._freeze_module(script_module._c)\r\n```\r\n\n\ncc @gmagogsfm",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/45902/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/45902/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/45824",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/45824/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/45824/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/45824/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/45824",
        "id": 714407708,
        "node_id": "MDU6SXNzdWU3MTQ0MDc3MDg=",
        "number": 45824,
        "title": "torch.jit.load does not accept pathlib.Path arguments",
        "user": {
            "login": "jonathan-conder-sm",
            "id": 63538679,
            "node_id": "MDQ6VXNlcjYzNTM4Njc5",
            "avatar_url": "https://avatars.githubusercontent.com/u/63538679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jonathan-conder-sm",
            "html_url": "https://github.com/jonathan-conder-sm",
            "followers_url": "https://api.github.com/users/jonathan-conder-sm/followers",
            "following_url": "https://api.github.com/users/jonathan-conder-sm/following{/other_user}",
            "gists_url": "https://api.github.com/users/jonathan-conder-sm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jonathan-conder-sm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jonathan-conder-sm/subscriptions",
            "organizations_url": "https://api.github.com/users/jonathan-conder-sm/orgs",
            "repos_url": "https://api.github.com/users/jonathan-conder-sm/repos",
            "events_url": "https://api.github.com/users/jonathan-conder-sm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jonathan-conder-sm/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-10-04T21:35:52Z",
        "updated_at": "2020-10-08T08:32:38Z",
        "closed_at": "2020-10-08T08:32:38Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\n`torch.jit.load` does not accept `pathlib.Path` arguments\r\n\r\n## To Reproduce\r\n\r\n```python\r\nfrom pathlib import Path\r\nimport torch\r\n\r\nmodel = torch.jit.load(Path(\"path/to/model.pth\"))\r\n```\r\n\r\n## Expected behavior\r\n\r\nShould be the same as `torch.jit.load(\"path/to/model.pth\")`.\r\n\r\n## Current behavior\r\n\r\n```\r\nTypeError: import_ir_module(): incompatible function arguments. The following argument types are supported:\r\n    1. (arg0: torch._C.CompilationUnit, arg1: str, arg2: object, arg3: torch._C.ExtraFilesMap) -> torch._C.ScriptModule\r\n\r\nInvoked with: <torch._C.CompilationUnit object at 0x7fe633ff4a30>, PosixPath('path/to/model.pth'), None, ExtraFilesMap{}\r\n```\r\n\r\n## Environment\r\n\r\nPyTorch version: 1.6.0\r\nIs debug build: False\r\nCUDA used to build PyTorch: 10.2\r\nROCM used to build PyTorch: N/A\r\n\r\nOS: Ubuntu 20.04.1 LTS (x86_64)\r\nGCC version: (Ubuntu 9.3.0-10ubuntu2) 9.3.0\r\nClang version: Could not collect\r\nCMake version: Could not collect\r\n\r\nPython version: 3.8 (64-bit runtime)\r\nIs CUDA available: True\r\nCUDA runtime version: 10.1.243\r\nGPU models and configuration: GPU 0: GeForce GTX 1070\r\nNvidia driver version: 450.51.06\r\ncuDNN version: Could not collect\r\nHIP runtime version: N/A\r\nMIOpen runtime version: N/A\r\n\r\nVersions of relevant libraries:\r\n[pip3] numpy==1.19.2\r\n[pip3] torch==1.6.0\r\n[pip3] torch-model-archiver==0.2.0\r\n[pip3] torchserve==0.2.0\r\n[conda] numpy                     1.19.2                   pypi_0    pypi\r\n[conda] torch                     1.6.0                    pypi_0    pypi\r\n[conda] torch-model-archiver      0.2.0                    pypi_0    pypi\r\n[conda] torchserve                0.2.0                    pypi_0    pypi\n\ncc @gmagogsfm",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/45824/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/45824/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/45784",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/45784/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/45784/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/45784/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/45784",
        "id": 713950101,
        "node_id": "MDU6SXNzdWU3MTM5NTAxMDE=",
        "number": 45784,
        "title": "Proposal for stricter backward compatibility in function checks",
        "user": {
            "login": "raziel",
            "id": 129535,
            "node_id": "MDQ6VXNlcjEyOTUzNQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/129535?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/raziel",
            "html_url": "https://github.com/raziel",
            "followers_url": "https://api.github.com/users/raziel/followers",
            "following_url": "https://api.github.com/users/raziel/following{/other_user}",
            "gists_url": "https://api.github.com/users/raziel/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/raziel/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/raziel/subscriptions",
            "organizations_url": "https://api.github.com/users/raziel/orgs",
            "repos_url": "https://api.github.com/users/raziel/repos",
            "events_url": "https://api.github.com/users/raziel/events{/privacy}",
            "received_events_url": "https://api.github.com/users/raziel/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "raziel",
            "id": 129535,
            "node_id": "MDQ6VXNlcjEyOTUzNQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/129535?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/raziel",
            "html_url": "https://github.com/raziel",
            "followers_url": "https://api.github.com/users/raziel/followers",
            "following_url": "https://api.github.com/users/raziel/following{/other_user}",
            "gists_url": "https://api.github.com/users/raziel/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/raziel/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/raziel/subscriptions",
            "organizations_url": "https://api.github.com/users/raziel/orgs",
            "repos_url": "https://api.github.com/users/raziel/repos",
            "events_url": "https://api.github.com/users/raziel/events{/privacy}",
            "received_events_url": "https://api.github.com/users/raziel/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "raziel",
                "id": 129535,
                "node_id": "MDQ6VXNlcjEyOTUzNQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/129535?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/raziel",
                "html_url": "https://github.com/raziel",
                "followers_url": "https://api.github.com/users/raziel/followers",
                "following_url": "https://api.github.com/users/raziel/following{/other_user}",
                "gists_url": "https://api.github.com/users/raziel/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/raziel/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/raziel/subscriptions",
                "organizations_url": "https://api.github.com/users/raziel/orgs",
                "repos_url": "https://api.github.com/users/raziel/repos",
                "events_url": "https://api.github.com/users/raziel/events{/privacy}",
                "received_events_url": "https://api.github.com/users/raziel/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 2,
        "created_at": "2020-10-02T23:22:51Z",
        "updated_at": "2020-10-06T16:19:22Z",
        "closed_at": "2020-10-06T16:19:22Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "Proposal for stricter backward compatibility in function schema checks\r\n\r\nCurrently, there is a backwards compatibility check for the python API which follows python rules. This can be an issue for the C++ API, since the python rules are too permissive for C++ backward compatibility, where only positional arguments (no named args) are available.\r\n\r\nThis proposal is for going from the more permissive Python-derived rules (see Current backwards-compatibility) to new stricter C++ derived rules (see New backwards-compatibility).\r\n\r\n**Current backwards-compatibility**\r\nA function is backwards compatible if:\r\n\r\n- The function's structure of old and new match (e.g. name, overload name, etc.).\r\n- The new function has a backward compatible argument for every positional argument in the old function.\r\n- All new positional arguments (not present in old) appear afterwards (i.e. appended to the list of positional arguments) and either match a kwarg by name and compatibility (i.e. old kwarg becoming positional) or provides a default value.\r\n-- E.g. `f_new(a, b, c=1) => f_old(a, b); f_new(a, c=1, *, b) => f_old(a, *, b); f_new(a, b, *, c) => f_old(a, *, b, c)`\r\n- The new function has a matching backward compatible kwarg for every kwarg in the old function, and all the kwargs in the old function have a matching kwarg or positional argument (per the rule above).\r\n- All new kwargs (not present in old) provide a default value.\r\n-- E.g. `f_new(a, b, *, c) => f_old(a, *, b, c); f_new(a, *, c, b) => f_old(a, *, b, c); f_new(a, *, b, c, d=1) => f_old(a, *, b, c)`\r\n\r\n**New backwards-compatibility**\r\nA function is backwards compatible if:\r\n\r\n- [Function structure] The new schema's name, overload-name, varargs, and return arity are the same.\r\n- [Output Narrowing] The new schema's output type must be the same class or inherit from the old schema's output type.\r\n- [Argument count] The new schema must have at least as many arguments as the old schema (considering the list of positional and kwargs).\r\n- [Arg Compatibility] Every argument in the old schema has a corresponding argument in the new schema that:\r\n-- is at the same position.\r\n-- has the same name.\r\n-- is either positional, or kwarg and the old argument was kwarg.\r\n-- has the same type, or the old argument's type inherits from the new argument's type.\r\n- E.g.\r\n- OK    f_new(a, b, c=1) => f_old(a, b)\r\n- NOK   f_new(a, c=1, *, b) => f_old(a, *, b)\r\n- OK    f_new(a, b, *, c) => f_old(a, *, b, c)\r\n- NOK   f_new(a, *, b, c) -> f_old(a, b, *, c)\r\n- NOK   f_new(a, *, c, b) => f_old(a, *, b, c)\r\n- OK    f_new(a, *, b, c, d=1) => f_old(a, *, b, c)\r\n\r\n\r\ncc @gmagogsfm",
        "closed_by": {
            "login": "raziel",
            "id": 129535,
            "node_id": "MDQ6VXNlcjEyOTUzNQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/129535?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/raziel",
            "html_url": "https://github.com/raziel",
            "followers_url": "https://api.github.com/users/raziel/followers",
            "following_url": "https://api.github.com/users/raziel/following{/other_user}",
            "gists_url": "https://api.github.com/users/raziel/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/raziel/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/raziel/subscriptions",
            "organizations_url": "https://api.github.com/users/raziel/orgs",
            "repos_url": "https://api.github.com/users/raziel/repos",
            "events_url": "https://api.github.com/users/raziel/events{/privacy}",
            "received_events_url": "https://api.github.com/users/raziel/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/45784/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/45784/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/45558",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/45558/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/45558/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/45558/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/45558",
        "id": 711636587,
        "node_id": "MDU6SXNzdWU3MTE2MzY1ODc=",
        "number": 45558,
        "title": "[JIT] TorchScript runtime Expected Tensor but got None",
        "user": {
            "login": "xionghuaidong",
            "id": 5087599,
            "node_id": "MDQ6VXNlcjUwODc1OTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5087599?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xionghuaidong",
            "html_url": "https://github.com/xionghuaidong",
            "followers_url": "https://api.github.com/users/xionghuaidong/followers",
            "following_url": "https://api.github.com/users/xionghuaidong/following{/other_user}",
            "gists_url": "https://api.github.com/users/xionghuaidong/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xionghuaidong/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xionghuaidong/subscriptions",
            "organizations_url": "https://api.github.com/users/xionghuaidong/orgs",
            "repos_url": "https://api.github.com/users/xionghuaidong/repos",
            "events_url": "https://api.github.com/users/xionghuaidong/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xionghuaidong/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "SplitInfinity",
            "id": 4392003,
            "node_id": "MDQ6VXNlcjQzOTIwMDM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4392003?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SplitInfinity",
            "html_url": "https://github.com/SplitInfinity",
            "followers_url": "https://api.github.com/users/SplitInfinity/followers",
            "following_url": "https://api.github.com/users/SplitInfinity/following{/other_user}",
            "gists_url": "https://api.github.com/users/SplitInfinity/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SplitInfinity/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SplitInfinity/subscriptions",
            "organizations_url": "https://api.github.com/users/SplitInfinity/orgs",
            "repos_url": "https://api.github.com/users/SplitInfinity/repos",
            "events_url": "https://api.github.com/users/SplitInfinity/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SplitInfinity/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "SplitInfinity",
                "id": 4392003,
                "node_id": "MDQ6VXNlcjQzOTIwMDM=",
                "avatar_url": "https://avatars.githubusercontent.com/u/4392003?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/SplitInfinity",
                "html_url": "https://github.com/SplitInfinity",
                "followers_url": "https://api.github.com/users/SplitInfinity/followers",
                "following_url": "https://api.github.com/users/SplitInfinity/following{/other_user}",
                "gists_url": "https://api.github.com/users/SplitInfinity/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/SplitInfinity/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/SplitInfinity/subscriptions",
                "organizations_url": "https://api.github.com/users/SplitInfinity/orgs",
                "repos_url": "https://api.github.com/users/SplitInfinity/repos",
                "events_url": "https://api.github.com/users/SplitInfinity/events{/privacy}",
                "received_events_url": "https://api.github.com/users/SplitInfinity/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-09-30T05:11:11Z",
        "updated_at": "2020-10-08T21:47:15Z",
        "closed_at": "2020-10-08T21:47:15Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\nRecently, we are testing PyTorch 1.7 as we need the with-statement support, so that our algorithm which contains a custom module using ``torch.no_grad`` can be deployed to the production environment.\r\n\r\nDuring the testing, we encountered the following assertion failure:\r\n\r\n```text\r\nterminate called after throwing an instance of 'c10::Error'\r\n  what():  isTensor() INTERNAL ASSERT FAILED at \"/home/huaidong.xhd/libtorch/include/ATen/core/ivalue_inl.h\":126, please report a bug to PyTorch. Expected Tensor but got None\r\nException raised from toTensor at /home/huaidong.xhd/libtorch/include/ATen/core/ivalue_inl.h:126 (most recent call first):\r\nframe #0: c10::Error::Error(c10::SourceLocation, std::string) + 0x3e (0x7f1744327dee in /home/huaidong.xhd/libtorch/lib/libc10.so)\r\nframe #1: c10::IValue::toTensor() && + 0xb5 (0x405cdd in /home/huaidong.xhd/Documents/git/develop/ml-predict-service/build/a.out)\r\nframe #2: /home/huaidong.xhd/Documents/git/develop/ml-predict-service/build/a.out() [0x403aba]\r\nframe #3: __libc_start_main + 0xf5 (0x7f173cd2c555 in /lib64/libc.so.6)\r\nframe #4: /home/huaidong.xhd/Documents/git/develop/ml-predict-service/build/a.out() [0x4036e9]\r\n```\r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior:\r\n\r\n1. Use the following Python code to create a serialized PyTorch module.\r\n   ```python\r\n   import torch\r\n   \r\n   class MyModule(torch.nn.Module):\r\n       def forward(self, x):\r\n           with torch.no_grad():\r\n               print('with torch.no_grad()')\r\n           return x + 1.0\r\n   \r\n   mod = MyModule()\r\n   scm = torch.jit.script(mod)\r\n   torch.jit.save(scm, './my_module.ptm')\r\n   ```\r\n2. Create a C++ test program ``test_ptm.cpp``.\r\n   ```cpp\r\n   #include <iostream>\r\n   #include <torch/script.h>\r\n   \r\n   int main()\r\n   {\r\n       at::Tensor input = torch::rand({2, 3});\r\n       std::cout << \"input: \" << input << std::endl;\r\n       torch::jit::script::Module scm = torch::jit::load(\"./my_module.ptm\");\r\n       at::Tensor output = scm.forward({input}).toTensor();\r\n       std::cout << \"output: \" << output << std::endl;\r\n   }\r\n   ```\r\n3. Build the test program with the following command:\r\n   ```bash\r\n   g++ test_ptm.cpp -I ${HOME}/libtorch/include -L ${HOME}/libtorch/lib -l torch -l torch_cpu -l c10 -l gomp -Wl,-rpath,${HOME}/libtorch/lib\r\n   ```\r\n4. Execute ``./a.out`` with ``my_module.ptm`` in the current directory.\r\n\r\n## Expected behavior\r\n\r\n``./a.out`` should terminate with exit code 0 instead of throw an exception.\r\n\r\n## Environment\r\n\r\nCollecting environment information...\r\nPyTorch version: 1.7.0.dev20200922+cpu\r\nIs debug build: True\r\nCUDA used to build PyTorch: None\r\nROCM used to build PyTorch: N/A\r\n\r\nOS: CentOS Linux 7 (Core) (x86_64)\r\nGCC version: (GCC) 4.8.5 20150623 (Red Hat 4.8.5-39)\r\nClang version: Could not collect\r\nCMake version: Could not collect\r\n\r\nPython version: 3.7 (64-bit runtime)\r\nIs CUDA available: False\r\nCUDA runtime version: No CUDA\r\nGPU models and configuration: No CUDA\r\nNvidia driver version: No CUDA\r\ncuDNN version: No CUDA\r\nHIP runtime version: N/A\r\nMIOpen runtime version: N/A\r\n\r\nVersions of relevant libraries:\r\n[pip3] numpy==1.19.2\r\n[pip3] torch==1.7.0.dev20200922+cpu\r\n[pip3] torchvision==0.7.0+cpu\r\n[conda] Could not collect\r\n\n\ncc @gmagogsfm",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/45558/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/45558/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/45225",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/45225/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/45225/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/45225/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/45225",
        "id": 707651844,
        "node_id": "MDU6SXNzdWU3MDc2NTE4NDQ=",
        "number": 45225,
        "title": "Support custom state_dict load/save functionality for Script Models",
        "user": {
            "login": "supriyar",
            "id": 2657489,
            "node_id": "MDQ6VXNlcjI2NTc0ODk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2657489?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/supriyar",
            "html_url": "https://github.com/supriyar",
            "followers_url": "https://api.github.com/users/supriyar/followers",
            "following_url": "https://api.github.com/users/supriyar/following{/other_user}",
            "gists_url": "https://api.github.com/users/supriyar/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/supriyar/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/supriyar/subscriptions",
            "organizations_url": "https://api.github.com/users/supriyar/orgs",
            "repos_url": "https://api.github.com/users/supriyar/repos",
            "events_url": "https://api.github.com/users/supriyar/events{/privacy}",
            "received_events_url": "https://api.github.com/users/supriyar/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "gmagogsfm",
            "id": 1817752,
            "node_id": "MDQ6VXNlcjE4MTc3NTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1817752?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gmagogsfm",
            "html_url": "https://github.com/gmagogsfm",
            "followers_url": "https://api.github.com/users/gmagogsfm/followers",
            "following_url": "https://api.github.com/users/gmagogsfm/following{/other_user}",
            "gists_url": "https://api.github.com/users/gmagogsfm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gmagogsfm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gmagogsfm/subscriptions",
            "organizations_url": "https://api.github.com/users/gmagogsfm/orgs",
            "repos_url": "https://api.github.com/users/gmagogsfm/repos",
            "events_url": "https://api.github.com/users/gmagogsfm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gmagogsfm/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "gmagogsfm",
                "id": 1817752,
                "node_id": "MDQ6VXNlcjE4MTc3NTI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/1817752?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/gmagogsfm",
                "html_url": "https://github.com/gmagogsfm",
                "followers_url": "https://api.github.com/users/gmagogsfm/followers",
                "following_url": "https://api.github.com/users/gmagogsfm/following{/other_user}",
                "gists_url": "https://api.github.com/users/gmagogsfm/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/gmagogsfm/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gmagogsfm/subscriptions",
                "organizations_url": "https://api.github.com/users/gmagogsfm/orgs",
                "repos_url": "https://api.github.com/users/gmagogsfm/repos",
                "events_url": "https://api.github.com/users/gmagogsfm/events{/privacy}",
                "received_events_url": "https://api.github.com/users/gmagogsfm/received_events",
                "type": "User",
                "site_admin": false
            },
            {
                "login": "SplitInfinity",
                "id": 4392003,
                "node_id": "MDQ6VXNlcjQzOTIwMDM=",
                "avatar_url": "https://avatars.githubusercontent.com/u/4392003?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/SplitInfinity",
                "html_url": "https://github.com/SplitInfinity",
                "followers_url": "https://api.github.com/users/SplitInfinity/followers",
                "following_url": "https://api.github.com/users/SplitInfinity/following{/other_user}",
                "gists_url": "https://api.github.com/users/SplitInfinity/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/SplitInfinity/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/SplitInfinity/subscriptions",
                "organizations_url": "https://api.github.com/users/SplitInfinity/orgs",
                "repos_url": "https://api.github.com/users/SplitInfinity/repos",
                "events_url": "https://api.github.com/users/SplitInfinity/events{/privacy}",
                "received_events_url": "https://api.github.com/users/SplitInfinity/received_events",
                "type": "User",
                "site_admin": false
            },
            {
                "login": "jerryzh168",
                "id": 4958441,
                "node_id": "MDQ6VXNlcjQ5NTg0NDE=",
                "avatar_url": "https://avatars.githubusercontent.com/u/4958441?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/jerryzh168",
                "html_url": "https://github.com/jerryzh168",
                "followers_url": "https://api.github.com/users/jerryzh168/followers",
                "following_url": "https://api.github.com/users/jerryzh168/following{/other_user}",
                "gists_url": "https://api.github.com/users/jerryzh168/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/jerryzh168/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jerryzh168/subscriptions",
                "organizations_url": "https://api.github.com/users/jerryzh168/orgs",
                "repos_url": "https://api.github.com/users/jerryzh168/repos",
                "events_url": "https://api.github.com/users/jerryzh168/events{/privacy}",
                "received_events_url": "https://api.github.com/users/jerryzh168/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 5,
        "created_at": "2020-09-23T20:17:53Z",
        "updated_at": "2021-05-11T05:27:47Z",
        "closed_at": "2021-05-11T05:27:47Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "TorchScript does not have access to custom _{save_to,load_from}_state_dict code present in the modules.\r\n\r\nUse Case:\r\nWe are trying to add functionality to load/save observer stats from script modules using the state_dict. \r\nFor Quantization Observers, like PerChannelMinMaxObserver we have a custom `load_from_state_dict` that resizes the attributes based on the input size - https://github.com/pytorch/pytorch/blob/master/torch/quantization/observer.py#L636-L654. \r\nWhen we script the model the loading of stats for this observer is broken. We have a current workaround by defining a custom `load_observer_stats` function that calls a custom `load_from_state_dict` if the observer type is a scripted PerChannelMinMax.\r\n\r\ncc @gmagogsfm @suo ",
        "closed_by": {
            "login": "gmagogsfm",
            "id": 1817752,
            "node_id": "MDQ6VXNlcjE4MTc3NTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1817752?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gmagogsfm",
            "html_url": "https://github.com/gmagogsfm",
            "followers_url": "https://api.github.com/users/gmagogsfm/followers",
            "following_url": "https://api.github.com/users/gmagogsfm/following{/other_user}",
            "gists_url": "https://api.github.com/users/gmagogsfm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gmagogsfm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gmagogsfm/subscriptions",
            "organizations_url": "https://api.github.com/users/gmagogsfm/orgs",
            "repos_url": "https://api.github.com/users/gmagogsfm/repos",
            "events_url": "https://api.github.com/users/gmagogsfm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gmagogsfm/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/45225/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/45225/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/45108",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/45108/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/45108/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/45108/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/45108",
        "id": 706123587,
        "node_id": "MDU6SXNzdWU3MDYxMjM1ODc=",
        "number": 45108,
        "title": "warnings.warn is too spammy in TorchScript",
        "user": {
            "login": "dzhulgakov",
            "id": 17890620,
            "node_id": "MDQ6VXNlcjE3ODkwNjIw",
            "avatar_url": "https://avatars.githubusercontent.com/u/17890620?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dzhulgakov",
            "html_url": "https://github.com/dzhulgakov",
            "followers_url": "https://api.github.com/users/dzhulgakov/followers",
            "following_url": "https://api.github.com/users/dzhulgakov/following{/other_user}",
            "gists_url": "https://api.github.com/users/dzhulgakov/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dzhulgakov/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dzhulgakov/subscriptions",
            "organizations_url": "https://api.github.com/users/dzhulgakov/orgs",
            "repos_url": "https://api.github.com/users/dzhulgakov/repos",
            "events_url": "https://api.github.com/users/dzhulgakov/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dzhulgakov/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 466131885,
                "node_id": "MDU6TGFiZWw0NjYxMzE4ODU=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triage%20review",
                "name": "triage review",
                "color": "cc317c",
                "default": false,
                "description": ""
            },
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "gmagogsfm",
            "id": 1817752,
            "node_id": "MDQ6VXNlcjE4MTc3NTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1817752?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gmagogsfm",
            "html_url": "https://github.com/gmagogsfm",
            "followers_url": "https://api.github.com/users/gmagogsfm/followers",
            "following_url": "https://api.github.com/users/gmagogsfm/following{/other_user}",
            "gists_url": "https://api.github.com/users/gmagogsfm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gmagogsfm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gmagogsfm/subscriptions",
            "organizations_url": "https://api.github.com/users/gmagogsfm/orgs",
            "repos_url": "https://api.github.com/users/gmagogsfm/repos",
            "events_url": "https://api.github.com/users/gmagogsfm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gmagogsfm/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "gmagogsfm",
                "id": 1817752,
                "node_id": "MDQ6VXNlcjE4MTc3NTI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/1817752?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/gmagogsfm",
                "html_url": "https://github.com/gmagogsfm",
                "followers_url": "https://api.github.com/users/gmagogsfm/followers",
                "following_url": "https://api.github.com/users/gmagogsfm/following{/other_user}",
                "gists_url": "https://api.github.com/users/gmagogsfm/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/gmagogsfm/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gmagogsfm/subscriptions",
                "organizations_url": "https://api.github.com/users/gmagogsfm/orgs",
                "repos_url": "https://api.github.com/users/gmagogsfm/repos",
                "events_url": "https://api.github.com/users/gmagogsfm/events{/privacy}",
                "received_events_url": "https://api.github.com/users/gmagogsfm/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 4,
        "created_at": "2020-09-22T06:48:33Z",
        "updated_at": "2020-10-02T22:00:27Z",
        "closed_at": "2020-10-02T22:00:27Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\nTorchScript supports `warnings.warn` syntax, however it doesn't respect the Python defaults (which is print the warning only once per invocation point as pointed out by `stack_level`): https://docs.python.org/3/library/warnings.html#the-warnings-filter\r\n\r\nIt can cause a lot of spam, especially for deployed inference models.\r\n\r\n## To Reproduce\r\n\r\nSample notebook: https://colab.research.google.com/drive/1Zcm4F3rk58Q8aEBtfxSgHOKGJ9Ib2Uhs?usp=sharing\r\n\r\n```\r\nimport torch\r\n\r\ndef foo(x):\r\n  for i in range(10):\r\n    x = torch.nn.functional.softmax(x)  # generates a warning inside\r\n\r\nfoo(torch.rand(5))\r\n\r\n# warning is printed once\r\n\r\ntorch.jit.script(foo)(torch.rand(5))\r\n\r\n# warning is printed 10 times\r\n```\r\n\r\n## Expected behavior\r\n\r\nIdeally, we'd emulate Python's default syntax directly, i.e. do the dedup based on the stack trace - the `warn` instruction in TorchScript actually does receive `stack_level` but ignores it.\r\n\r\nAs a simple fix though we can pretend that `log_level` is 0 - i.e. log only the first invocation of the unique instruction (e.g. can be done by adding a mutable flag to Code instance in Interpreter for each warn instruction.\r\n\r\nNote, that TORCH_WARN_ONCE in C++ is not a good fit here - it'd put all warning to the same line in C++ which is not desired.\n\ncc @ezyang @gchanan @zou3519 @gmagogsfm",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/45108/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/45108/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/45072",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/45072/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/45072/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/45072/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/45072",
        "id": 705781127,
        "node_id": "MDU6SXNzdWU3MDU3ODExMjc=",
        "number": 45072,
        "title": "nn.Module.script",
        "user": {
            "login": "cpuhrsch",
            "id": 1716488,
            "node_id": "MDQ6VXNlcjE3MTY0ODg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1716488?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cpuhrsch",
            "html_url": "https://github.com/cpuhrsch",
            "followers_url": "https://api.github.com/users/cpuhrsch/followers",
            "following_url": "https://api.github.com/users/cpuhrsch/following{/other_user}",
            "gists_url": "https://api.github.com/users/cpuhrsch/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cpuhrsch/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cpuhrsch/subscriptions",
            "organizations_url": "https://api.github.com/users/cpuhrsch/orgs",
            "repos_url": "https://api.github.com/users/cpuhrsch/repos",
            "events_url": "https://api.github.com/users/cpuhrsch/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cpuhrsch/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1076922351,
                "node_id": "MDU6TGFiZWwxMDc2OTIyMzUx",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/feature",
                "name": "feature",
                "color": "ffceba",
                "default": false,
                "description": "A request for a proper, new feature."
            },
            {
                "id": 1076922764,
                "node_id": "MDU6TGFiZWwxMDc2OTIyNzY0",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20nn",
                "name": "module: nn",
                "color": "f7e101",
                "default": false,
                "description": "Related to torch.nn"
            },
            {
                "id": 1447309924,
                "node_id": "MDU6TGFiZWwxNDQ3MzA5OTI0",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/better-engineering",
                "name": "better-engineering",
                "color": "94f76a",
                "default": false,
                "description": "Relatively self-contained tasks for better engineering contributors"
            },
            {
                "id": 2274227235,
                "node_id": "MDU6TGFiZWwyMjc0MjI3MjM1",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20torchbind",
                "name": "module: torchbind",
                "color": "f7e101",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 9,
        "created_at": "2020-09-21T17:22:04Z",
        "updated_at": "2020-11-10T17:04:49Z",
        "closed_at": "2020-11-10T17:04:49Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "## \ud83d\ude80 Feature\r\n\r\n## Motivation\r\n\r\nThere is a pervasive pattern within the PyTorch community where users have the need to prepare a Module before calling torch.jit.script. An example here might include replacing an instance of an object with an instance of its JIT-able equivalent (e.g. [PyText ScriptVocab](https://github.com/facebookresearch/pytext/blob/master/pytext/torchscript/vocab.py#L12)) for deployment.\r\n\r\n## Pitch\r\n\r\nAdd a method .script to nn.Module, which is called in a fashion similar to nn.Module.eval. \r\n\r\nThe method can be overridden by the user to allow a user-defined preparation of the object for scripting. This might, for example, involve replacing or removing member variables that are not JIT-able.\r\n\r\n## Alternatives\r\n\r\nConcrete user-defined methods such as torchtext\u2019s [to_ivalue](https://github.com/pytorch/text/blob/53e3ae293359bc2a629d27e195e99d1e7f7b85c3/test/data/test_functional.py#L93) or separate wrappers such as [PyText ScriptVocab](https://github.com/facebookresearch/pytext/blob/master/pytext/torchscript/vocab.py#L12)\r\n## Additional context\r\n\r\nThe method should be out of place so the original module input, which the user may continue to use, is not modified. The method should be called within torch.jit.script (if present) so as not to expand the API surface for the end user.\n\ncc @gmagogsfm @albanD @mruberry",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/45072/reactions",
            "total_count": 3,
            "+1": 3,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/45072/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/44892",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/44892/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/44892/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/44892/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/44892",
        "id": 703777666,
        "node_id": "MDU6SXNzdWU3MDM3Nzc2NjY=",
        "number": 44892,
        "title": "Enum value's type in incorrectly inferred after save/load",
        "user": {
            "login": "gmagogsfm",
            "id": 1817752,
            "node_id": "MDQ6VXNlcjE4MTc3NTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1817752?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gmagogsfm",
            "html_url": "https://github.com/gmagogsfm",
            "followers_url": "https://api.github.com/users/gmagogsfm/followers",
            "following_url": "https://api.github.com/users/gmagogsfm/following{/other_user}",
            "gists_url": "https://api.github.com/users/gmagogsfm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gmagogsfm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gmagogsfm/subscriptions",
            "organizations_url": "https://api.github.com/users/gmagogsfm/orgs",
            "repos_url": "https://api.github.com/users/gmagogsfm/repos",
            "events_url": "https://api.github.com/users/gmagogsfm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gmagogsfm/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "gmagogsfm",
            "id": 1817752,
            "node_id": "MDQ6VXNlcjE4MTc3NTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1817752?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gmagogsfm",
            "html_url": "https://github.com/gmagogsfm",
            "followers_url": "https://api.github.com/users/gmagogsfm/followers",
            "following_url": "https://api.github.com/users/gmagogsfm/following{/other_user}",
            "gists_url": "https://api.github.com/users/gmagogsfm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gmagogsfm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gmagogsfm/subscriptions",
            "organizations_url": "https://api.github.com/users/gmagogsfm/orgs",
            "repos_url": "https://api.github.com/users/gmagogsfm/repos",
            "events_url": "https://api.github.com/users/gmagogsfm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gmagogsfm/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "gmagogsfm",
                "id": 1817752,
                "node_id": "MDQ6VXNlcjE4MTc3NTI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/1817752?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/gmagogsfm",
                "html_url": "https://github.com/gmagogsfm",
                "followers_url": "https://api.github.com/users/gmagogsfm/followers",
                "following_url": "https://api.github.com/users/gmagogsfm/following{/other_user}",
                "gists_url": "https://api.github.com/users/gmagogsfm/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/gmagogsfm/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gmagogsfm/subscriptions",
                "organizations_url": "https://api.github.com/users/gmagogsfm/orgs",
                "repos_url": "https://api.github.com/users/gmagogsfm/repos",
                "events_url": "https://api.github.com/users/gmagogsfm/events{/privacy}",
                "received_events_url": "https://api.github.com/users/gmagogsfm/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-09-17T17:30:26Z",
        "updated_at": "2020-09-22T19:00:05Z",
        "closed_at": "2020-09-22T19:00:05Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\nWhen a module with a string-enum attribute is saved and loaded back, the string-enum attribute's is inferred to be a int-enum instead. \r\n\r\n## To Reproduce\r\n\r\nRun the test added in:\r\nhttps://github.com/pytorch/pytorch/pull/44891\r\n\r\n\r\n## Expected behavior\r\n\r\nThe attribute should still be string-enum type.\r\n\r\n\n\ncc @gmagogsfm",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/44892/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/44892/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/44864",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/44864/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/44864/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/44864/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/44864",
        "id": 703324268,
        "node_id": "MDU6SXNzdWU3MDMzMjQyNjg=",
        "number": 44864,
        "title": "[JIT] treat `assert not torch.jit.is_scripting()` statically",
        "user": {
            "login": "ppwwyyxx",
            "id": 1381301,
            "node_id": "MDQ6VXNlcjEzODEzMDE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1381301?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ppwwyyxx",
            "html_url": "https://github.com/ppwwyyxx",
            "followers_url": "https://api.github.com/users/ppwwyyxx/followers",
            "following_url": "https://api.github.com/users/ppwwyyxx/following{/other_user}",
            "gists_url": "https://api.github.com/users/ppwwyyxx/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ppwwyyxx/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ppwwyyxx/subscriptions",
            "organizations_url": "https://api.github.com/users/ppwwyyxx/orgs",
            "repos_url": "https://api.github.com/users/ppwwyyxx/repos",
            "events_url": "https://api.github.com/users/ppwwyyxx/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ppwwyyxx/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-09-17T06:59:54Z",
        "updated_at": "2020-09-18T01:13:56Z",
        "closed_at": "2020-09-18T01:13:56Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "## \ud83d\ude80 Feature\r\nJIT should treat `assert not torch.jit.is_scripting()` statically (like how it treats `if is_scripting()` and ignore what's after the assertion in a basicblock.\r\n\r\n## Motivation\r\n\r\nHaving more ways to let torchscript ignore code sections will in general make it easier to migrate code to partially support torchscript.\r\n\r\n## Pitch\r\nCurrently, this is scriptable:\r\n```\r\nclass A(nn.Module):\r\n    def __init__(self):\r\n        super().__init__()\r\n        self.k = 1.0\r\n    def forward(self, x):\r\n        if self.training and not torch.jit.is_scripting():\r\n            return x * self.k if self.k != \"test\" else x   # not supported due to lack of union type\r\n        else:\r\n            return x + 1\r\n\r\na = A()\r\na = torch.jit.script(a)\r\n```\r\nbut this fails:\r\n```\r\nclass A(nn.Module):\r\n    def __init__(self):\r\n        super().__init__()\r\n        self.k = 1.0\r\n    def forward(self, x):\r\n        if self.training:\r\n            assert not torch.jit.is_scripting(), \"this codepath is not supported\"\r\n            return x * self.k if self.k != \"test\" else x   # error in torchscript due to type mistmatch\r\n        else:\r\n            return x + 1\r\n\r\na = A()\r\na = torch.jit.script(a)\r\n```\r\n\r\nThe former case can be used as a workaround but it's not an ideal solution, because it does not throw errors when user tries to use the scripted model in training mode. Bypassing code sections using `assert not torch.jit.is_scripting()` seems like the simplest syntax: it's only one line of code and does not introduce extra indentation. This is similar to `@torch.jit.unused`: it skips the code with one extra line and throws an error if the skipped code is called.\r\n(This issue is not about union type specifically, since it applies to other python features missing in torchscript.)\r\n\r\n## Alternatives\r\n```python\r\nclass A(nn.Module):\r\n    def __init__(self):\r\n        super().__init__()\r\n        self.k = 1.0\r\n    def forward(self, x):\r\n        if self.training:\r\n            if not torch.jit.is_scripting():\r\n                return x * self.k if self.k != \"test\" else x\r\n            else:\r\n                assert False, \"this codepath is not supported\"\r\n        else:\r\n            return x + 1\r\n```\r\nthis works now but it's more ugly.\r\n\r\ncc @gmagogsfm",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/44864/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/44864/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/44506",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/44506/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/44506/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/44506/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/44506",
        "id": 698502083,
        "node_id": "MDU6SXNzdWU2OTg1MDIwODM=",
        "number": 44506,
        "title": "Support OpInfo-based JIT testing",
        "user": {
            "login": "mruberry",
            "id": 38511765,
            "node_id": "MDQ6VXNlcjM4NTExNzY1",
            "avatar_url": "https://avatars.githubusercontent.com/u/38511765?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mruberry",
            "html_url": "https://github.com/mruberry",
            "followers_url": "https://api.github.com/users/mruberry/followers",
            "following_url": "https://api.github.com/users/mruberry/following{/other_user}",
            "gists_url": "https://api.github.com/users/mruberry/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mruberry/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mruberry/subscriptions",
            "organizations_url": "https://api.github.com/users/mruberry/orgs",
            "repos_url": "https://api.github.com/users/mruberry/repos",
            "events_url": "https://api.github.com/users/mruberry/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mruberry/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1300933336,
                "node_id": "MDU6TGFiZWwxMzAwOTMzMzM2",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20tests",
                "name": "module: tests",
                "color": "f7e101",
                "default": false,
                "description": "Issues related to tests (not the torch.testing module)"
            },
            {
                "id": 2203967632,
                "node_id": "MDU6TGFiZWwyMjAzOTY3NjMy",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/weeks",
                "name": "weeks",
                "color": "e5808f",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "Lilyjjo",
            "id": 35852084,
            "node_id": "MDQ6VXNlcjM1ODUyMDg0",
            "avatar_url": "https://avatars.githubusercontent.com/u/35852084?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Lilyjjo",
            "html_url": "https://github.com/Lilyjjo",
            "followers_url": "https://api.github.com/users/Lilyjjo/followers",
            "following_url": "https://api.github.com/users/Lilyjjo/following{/other_user}",
            "gists_url": "https://api.github.com/users/Lilyjjo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Lilyjjo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Lilyjjo/subscriptions",
            "organizations_url": "https://api.github.com/users/Lilyjjo/orgs",
            "repos_url": "https://api.github.com/users/Lilyjjo/repos",
            "events_url": "https://api.github.com/users/Lilyjjo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Lilyjjo/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "Lilyjjo",
                "id": 35852084,
                "node_id": "MDQ6VXNlcjM1ODUyMDg0",
                "avatar_url": "https://avatars.githubusercontent.com/u/35852084?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/Lilyjjo",
                "html_url": "https://github.com/Lilyjjo",
                "followers_url": "https://api.github.com/users/Lilyjjo/followers",
                "following_url": "https://api.github.com/users/Lilyjjo/following{/other_user}",
                "gists_url": "https://api.github.com/users/Lilyjjo/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/Lilyjjo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Lilyjjo/subscriptions",
                "organizations_url": "https://api.github.com/users/Lilyjjo/orgs",
                "repos_url": "https://api.github.com/users/Lilyjjo/repos",
                "events_url": "https://api.github.com/users/Lilyjjo/events{/privacy}",
                "received_events_url": "https://api.github.com/users/Lilyjjo/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 2,
        "created_at": "2020-09-10T21:16:51Z",
        "updated_at": "2020-12-16T16:28:02Z",
        "closed_at": "2020-12-16T16:28:01Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "Today in PyTorch test_autograd.py and test_jit.py use \"method tests\" from common_methods_invocations.py to generate tests. Pointer:\r\n\r\nhttps://github.com/pytorch/pytorch/blob/4bead6438a4271f154980dc242199c2f1b897bc1/torch/testing/_internal/common_methods_invocations.py#L364\r\n\r\nThese tuples are tricky to use and hard to maintain, however. To facilitate more maintainable and thorough tests we're switching the test suite to use OpInfos, instead. Pointer:\r\n\r\nhttps://github.com/pytorch/pytorch/blob/4bead6438a4271f154980dc242199c2f1b897bc1/torch/testing/_internal/common_methods_invocations.py#L201\r\n\r\nOpInfos have significant advantages vs. the method test tuples:\r\n\r\n- an OpInfo is a class, which makes it easy to add and query operator properties\r\n- OpInfos are intended for use with multiple tests\r\n- the device generic testing framework supports OpInfos\r\n\r\nTo switch from method_tests to OpInfos, however, tests using method_tests have to be updated to use OpInfos.@albanD and I already reviewed test_autograd.py's use of method_tests and developed better, more comprehensive, and more readable tests that use OpInfos instead. Compare the method_test-based tests here:\r\n\r\nhttps://github.com/pytorch/pytorch/blob/4bead6438a4271f154980dc242199c2f1b897bc1/test/test_autograd.py#L4669\r\n\r\nwith the new OpInfo based grad and gradgrad checks here:\r\n\r\nhttps://github.com/pytorch/pytorch/blob/4bead6438a4271f154980dc242199c2f1b897bc1/test/test_ops.py#L94\r\n\r\nI expect similar results from revising the generated tests in test_jit.py, and, as mentioned above, this revision is necessary for us to move away from method_tests. For test_autograd.py this revision process took ~4 hours. \r\n\r\ncc @gmagogsfm @mruberry @VitalyFedyunin @jansel \r\n\r\n\r\n",
        "closed_by": {
            "login": "mruberry",
            "id": 38511765,
            "node_id": "MDQ6VXNlcjM4NTExNzY1",
            "avatar_url": "https://avatars.githubusercontent.com/u/38511765?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mruberry",
            "html_url": "https://github.com/mruberry",
            "followers_url": "https://api.github.com/users/mruberry/followers",
            "following_url": "https://api.github.com/users/mruberry/following{/other_user}",
            "gists_url": "https://api.github.com/users/mruberry/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mruberry/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mruberry/subscriptions",
            "organizations_url": "https://api.github.com/users/mruberry/orgs",
            "repos_url": "https://api.github.com/users/mruberry/repos",
            "events_url": "https://api.github.com/users/mruberry/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mruberry/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/44506/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 1,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/44506/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/44107",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/44107/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/44107/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/44107/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/44107",
        "id": 691958525,
        "node_id": "MDU6SXNzdWU2OTE5NTg1MjU=",
        "number": 44107,
        "title": "TorchScript number type is cast to an integer during assignment inside jit.trace",
        "user": {
            "login": "acivgin1",
            "id": 7559356,
            "node_id": "MDQ6VXNlcjc1NTkzNTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7559356?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/acivgin1",
            "html_url": "https://github.com/acivgin1",
            "followers_url": "https://api.github.com/users/acivgin1/followers",
            "following_url": "https://api.github.com/users/acivgin1/following{/other_user}",
            "gists_url": "https://api.github.com/users/acivgin1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/acivgin1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/acivgin1/subscriptions",
            "organizations_url": "https://api.github.com/users/acivgin1/orgs",
            "repos_url": "https://api.github.com/users/acivgin1/repos",
            "events_url": "https://api.github.com/users/acivgin1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/acivgin1/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-09-03T13:10:59Z",
        "updated_at": "2020-09-24T23:29:31Z",
        "closed_at": "2020-09-24T23:29:31Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\nThe TorchScript `number` type gets cast to an integer type during value assignment inside jit.trace\r\n\r\n## To Reproduce\r\n\r\nThis is the minimal code example that produces this bug.\r\n\r\n```python\r\nimport torch\r\n\r\n\r\n@torch.jit.script\r\ndef test(some_tensor: torch.Tensor):\r\n    for loop_idx in range(some_tensor.shape[0]):\r\n        temp = some_tensor[loop_idx].item()\r\n        print(temp)\r\n        some_tensor[loop_idx] = temp\r\n\r\n    return some_tensor\r\n\r\n\r\nsome_tensor = torch.Tensor([0.5, 1.5])\r\nprint(some_tensor)\r\nprint(test(some_tensor), '\\n')\r\nprint(test.code)\r\n```\r\n\r\nOutput:\r\n\r\n```\r\ntensor([0.5000, 1.5000])\r\n0.5\r\n1.5\r\ntensor([0., 1.])\r\n\r\ndef test(some_tensor: Tensor) -> Tensor:\r\n  for loop_idx in range((torch.size(some_tensor))[0]):\r\n    _0 = torch.select(some_tensor, 0, loop_idx)\r\n    temp = torch.item(_0)\r\n    print(temp)\r\n    _1 = torch.select(some_tensor, 0, loop_idx)\r\n    _2 = torch.copy_(_1, int(temp))\r\n  return some_tensor\r\n```\r\n\r\nThis happens with `float16` and `float64` data types, as well as with `cpu` and `cuda` tensors .\r\n\r\n## Expected behavior\r\n\r\nThe internal number type being cast to the proper type of the tensor it's being assigned to.\r\n\r\nThis doesn't happen when `.item()` is left out, since `temp` remains a `Tensor` and preserves its type, or when explicit type casting is used, i.e. `some_tensor[loop_idx] = float(temp)` and `some_tensor[loop_idx] = torch.jit.annotate(float, temp)`\r\n\r\nThis might also be related to other bugs that produce different outputs, that have `.item()` inside a `torch.jit.script` function, like in the case of summing multiple loss scalar values.\r\n\r\n## Environment\r\n\r\n```sh\r\nPyTorch version: 1.6.0\r\nIs debug build: No\r\nCUDA used to build PyTorch: 10.2\r\n\r\nOS: Ubuntu 18.04.4 LTS\r\nGCC version: (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0\r\nCMake version: version 3.10.2\r\n\r\nPython version: 3.7\r\nIs CUDA available: Yes\r\nCUDA runtime version: Could not collect\r\nGPU models and configuration: GPU 0: GeForce RTX 2080\r\nNvidia driver version: 450.51.05\r\ncuDNN version: /usr/lib/x86_64-linux-gnu/libcudnn.so.7.6.5\r\n\r\nVersions of relevant libraries:\r\n[pip3] numpy==1.19.1\r\n[pip3] torch==1.6.0\r\n[pip3] torchvision==0.7.0\r\n[conda] blas                      1.0                         mkl  \r\n[conda] cudatoolkit               10.2.89              hfd86e86_1  \r\n[conda] mkl                       2020.1                      217  \r\n[conda] mkl-service               2.3.0            py37he904b0f_0  \r\n[conda] mkl_fft                   1.1.0            py37h23d657b_0  \r\n[conda] mkl_random                1.1.1            py37h0da4684_0    conda-forge\r\n[conda] numpy                     1.19.1           py37hbc911f0_0  \r\n[conda] numpy-base                1.19.1           py37hfa32c7d_0  \r\n[conda] pytorch                   1.6.0           py3.7_cuda10.2.89_cudnn7.6.5_0    pytorch\r\n[conda] torchvision               0.7.0                py37_cu102    pytorch\r\n```\r\n\r\ncc @gmagogsfm",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/44107/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/44107/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/44038",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/44038/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/44038/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/44038/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/44038",
        "id": 691241665,
        "node_id": "MDU6SXNzdWU2OTEyNDE2NjU=",
        "number": 44038,
        "title": "[JIT] Implement a hash function for a tuple of ints ",
        "user": {
            "login": "edqwerty10",
            "id": 14037238,
            "node_id": "MDQ6VXNlcjE0MDM3MjM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/14037238?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/edqwerty10",
            "html_url": "https://github.com/edqwerty10",
            "followers_url": "https://api.github.com/users/edqwerty10/followers",
            "following_url": "https://api.github.com/users/edqwerty10/following{/other_user}",
            "gists_url": "https://api.github.com/users/edqwerty10/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/edqwerty10/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/edqwerty10/subscriptions",
            "organizations_url": "https://api.github.com/users/edqwerty10/orgs",
            "repos_url": "https://api.github.com/users/edqwerty10/repos",
            "events_url": "https://api.github.com/users/edqwerty10/events{/privacy}",
            "received_events_url": "https://api.github.com/users/edqwerty10/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 2203967172,
                "node_id": "MDU6TGFiZWwyMjAzOTY3MTcy",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/days",
                "name": "days",
                "color": "77f497",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "gmagogsfm",
            "id": 1817752,
            "node_id": "MDQ6VXNlcjE4MTc3NTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1817752?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gmagogsfm",
            "html_url": "https://github.com/gmagogsfm",
            "followers_url": "https://api.github.com/users/gmagogsfm/followers",
            "following_url": "https://api.github.com/users/gmagogsfm/following{/other_user}",
            "gists_url": "https://api.github.com/users/gmagogsfm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gmagogsfm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gmagogsfm/subscriptions",
            "organizations_url": "https://api.github.com/users/gmagogsfm/orgs",
            "repos_url": "https://api.github.com/users/gmagogsfm/repos",
            "events_url": "https://api.github.com/users/gmagogsfm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gmagogsfm/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "gmagogsfm",
                "id": 1817752,
                "node_id": "MDQ6VXNlcjE4MTc3NTI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/1817752?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/gmagogsfm",
                "html_url": "https://github.com/gmagogsfm",
                "followers_url": "https://api.github.com/users/gmagogsfm/followers",
                "following_url": "https://api.github.com/users/gmagogsfm/following{/other_user}",
                "gists_url": "https://api.github.com/users/gmagogsfm/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/gmagogsfm/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gmagogsfm/subscriptions",
                "organizations_url": "https://api.github.com/users/gmagogsfm/orgs",
                "repos_url": "https://api.github.com/users/gmagogsfm/repos",
                "events_url": "https://api.github.com/users/gmagogsfm/events{/privacy}",
                "received_events_url": "https://api.github.com/users/gmagogsfm/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-09-02T17:24:48Z",
        "updated_at": "2020-10-24T04:28:51Z",
        "closed_at": "2020-10-24T04:28:51Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## \ud83d\ude80 Feature\r\nImplement hash(Tuple[int]) to be available in Torch Script\r\n\r\n## Motivation\r\nConvert a DPER3 module to Torch Script\r\n\r\n## Pitch\r\nCompute a hash value for Tuple[int] \r\n\r\n## Alternatives\r\nPlanning to convert Tuple[int] to a string containing the ints separated by a comma. \r\n\r\n## Additional context\r\nHere is a code snippet to reproduce the unsupported hash function error\r\n```\r\nimport torch\r\nfrom typing import Tuple\r\n\r\nclass TestModule(torch.nn.Module):\r\n    def __init__(self):\r\n        super(TestModule, self).__init__()\r\n\r\n    def forward(self, ids: Tuple[int]) -> int:\r\n        return hash(ids)\r\n\r\nscripted_module = torch.jit.script(TestModule())\r\nret = scripted_module((1, 2))\r\n```\r\n\r\nError Output:\r\n```\r\nArguments for call are not valid.\r\nThe following variants are available:\r\n  \r\n  aten::hash.str(str t) -> (int):\r\n  Expected a value of type 'str' for argument 't' but instead found type 'Tuple[int]'.\r\n  \r\n  aten::hash.int(int t) -> (int):\r\n  Expected a value of type 'int' for argument 't' but instead found type 'Tuple[int]'.\r\n  \r\n  aten::hash.float(float t) -> (int):\r\n  Expected a value of type 'float' for argument 't' but instead found type 'Tuple[int]'.\r\n\r\nThe original call is:\r\n  File \"<ipython-input-63-fad4df6d9cb7>\", line 11\r\n    def forward(self, ids: Tuple[int]) -> int:\r\n        return hash(ids)\r\n               ~~~~ <--- HERE\r\n```\r\n\r\ncc @gmagogsfm",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/44038/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/44038/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/43943",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/43943/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/43943/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/43943/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/43943",
        "id": 689909588,
        "node_id": "MDU6SXNzdWU2ODk5MDk1ODg=",
        "number": 43943,
        "title": "[jit] Support slicing multiple dimensions with sequences",
        "user": {
            "login": "chenbohua3",
            "id": 19526090,
            "node_id": "MDQ6VXNlcjE5NTI2MDkw",
            "avatar_url": "https://avatars.githubusercontent.com/u/19526090?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chenbohua3",
            "html_url": "https://github.com/chenbohua3",
            "followers_url": "https://api.github.com/users/chenbohua3/followers",
            "following_url": "https://api.github.com/users/chenbohua3/following{/other_user}",
            "gists_url": "https://api.github.com/users/chenbohua3/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chenbohua3/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chenbohua3/subscriptions",
            "organizations_url": "https://api.github.com/users/chenbohua3/orgs",
            "repos_url": "https://api.github.com/users/chenbohua3/repos",
            "events_url": "https://api.github.com/users/chenbohua3/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chenbohua3/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 2203967172,
                "node_id": "MDU6TGFiZWwyMjAzOTY3MTcy",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/days",
                "name": "days",
                "color": "77f497",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "Lilyjjo",
            "id": 35852084,
            "node_id": "MDQ6VXNlcjM1ODUyMDg0",
            "avatar_url": "https://avatars.githubusercontent.com/u/35852084?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Lilyjjo",
            "html_url": "https://github.com/Lilyjjo",
            "followers_url": "https://api.github.com/users/Lilyjjo/followers",
            "following_url": "https://api.github.com/users/Lilyjjo/following{/other_user}",
            "gists_url": "https://api.github.com/users/Lilyjjo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Lilyjjo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Lilyjjo/subscriptions",
            "organizations_url": "https://api.github.com/users/Lilyjjo/orgs",
            "repos_url": "https://api.github.com/users/Lilyjjo/repos",
            "events_url": "https://api.github.com/users/Lilyjjo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Lilyjjo/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "Lilyjjo",
                "id": 35852084,
                "node_id": "MDQ6VXNlcjM1ODUyMDg0",
                "avatar_url": "https://avatars.githubusercontent.com/u/35852084?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/Lilyjjo",
                "html_url": "https://github.com/Lilyjjo",
                "followers_url": "https://api.github.com/users/Lilyjjo/followers",
                "following_url": "https://api.github.com/users/Lilyjjo/following{/other_user}",
                "gists_url": "https://api.github.com/users/Lilyjjo/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/Lilyjjo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Lilyjjo/subscriptions",
                "organizations_url": "https://api.github.com/users/Lilyjjo/orgs",
                "repos_url": "https://api.github.com/users/Lilyjjo/repos",
                "events_url": "https://api.github.com/users/Lilyjjo/events{/privacy}",
                "received_events_url": "https://api.github.com/users/Lilyjjo/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-09-01T07:48:16Z",
        "updated_at": "2020-10-05T22:14:06Z",
        "closed_at": "2020-10-05T22:14:06Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## \ud83d\ude80 Feature\r\nSupport slicing multiple dimensions with sequences.\r\n\r\n## Motivation\r\nCurrently slicing multiple dimensions with sequences is not supported by torchscript.\r\n```\r\nclass MyModule(torch.nn.Module):\r\n    def forward(self, x):\r\n        x = x[:, :, [0, 1]]\r\n        return x\r\n# will get torch.jit.frontend.NotSupportedError: slicing multiple dimensions with sequences not supported yet:\r\n```\r\nA workaround may be:\r\n```\r\nclass MyModule(torch.nn.Module):\r\n    def forward(self, x):\r\n        x = x[:, :].index_select(2, torch.tensor([0, 1]))\r\n        # or\r\n        idx = torch.tensor([0, 1])\r\n        x = x[:, :, idx]\r\n        return x\r\n```\r\nBut this is not intuitive and user-friendly.\r\n\r\n\r\ncc @gmagogsfm",
        "closed_by": {
            "login": "Lilyjjo",
            "id": 35852084,
            "node_id": "MDQ6VXNlcjM1ODUyMDg0",
            "avatar_url": "https://avatars.githubusercontent.com/u/35852084?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Lilyjjo",
            "html_url": "https://github.com/Lilyjjo",
            "followers_url": "https://api.github.com/users/Lilyjjo/followers",
            "following_url": "https://api.github.com/users/Lilyjjo/following{/other_user}",
            "gists_url": "https://api.github.com/users/Lilyjjo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Lilyjjo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Lilyjjo/subscriptions",
            "organizations_url": "https://api.github.com/users/Lilyjjo/orgs",
            "repos_url": "https://api.github.com/users/Lilyjjo/repos",
            "events_url": "https://api.github.com/users/Lilyjjo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Lilyjjo/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/43943/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/43943/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/43942",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/43942/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/43942/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/43942/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/43942",
        "id": 689862834,
        "node_id": "MDU6SXNzdWU2ODk4NjI4MzQ=",
        "number": 43942,
        "title": "[jit] return type Any does not work for ternary operators",
        "user": {
            "login": "chenbohua3",
            "id": 19526090,
            "node_id": "MDQ6VXNlcjE5NTI2MDkw",
            "avatar_url": "https://avatars.githubusercontent.com/u/19526090?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chenbohua3",
            "html_url": "https://github.com/chenbohua3",
            "followers_url": "https://api.github.com/users/chenbohua3/followers",
            "following_url": "https://api.github.com/users/chenbohua3/following{/other_user}",
            "gists_url": "https://api.github.com/users/chenbohua3/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chenbohua3/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chenbohua3/subscriptions",
            "organizations_url": "https://api.github.com/users/chenbohua3/orgs",
            "repos_url": "https://api.github.com/users/chenbohua3/repos",
            "events_url": "https://api.github.com/users/chenbohua3/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chenbohua3/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 2203967172,
                "node_id": "MDU6TGFiZWwyMjAzOTY3MTcy",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/days",
                "name": "days",
                "color": "77f497",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "ejguan",
            "id": 68879799,
            "node_id": "MDQ6VXNlcjY4ODc5Nzk5",
            "avatar_url": "https://avatars.githubusercontent.com/u/68879799?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ejguan",
            "html_url": "https://github.com/ejguan",
            "followers_url": "https://api.github.com/users/ejguan/followers",
            "following_url": "https://api.github.com/users/ejguan/following{/other_user}",
            "gists_url": "https://api.github.com/users/ejguan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ejguan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ejguan/subscriptions",
            "organizations_url": "https://api.github.com/users/ejguan/orgs",
            "repos_url": "https://api.github.com/users/ejguan/repos",
            "events_url": "https://api.github.com/users/ejguan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ejguan/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "ejguan",
                "id": 68879799,
                "node_id": "MDQ6VXNlcjY4ODc5Nzk5",
                "avatar_url": "https://avatars.githubusercontent.com/u/68879799?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ejguan",
                "html_url": "https://github.com/ejguan",
                "followers_url": "https://api.github.com/users/ejguan/followers",
                "following_url": "https://api.github.com/users/ejguan/following{/other_user}",
                "gists_url": "https://api.github.com/users/ejguan/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ejguan/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ejguan/subscriptions",
                "organizations_url": "https://api.github.com/users/ejguan/orgs",
                "repos_url": "https://api.github.com/users/ejguan/repos",
                "events_url": "https://api.github.com/users/ejguan/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ejguan/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 3,
        "created_at": "2020-09-01T06:36:40Z",
        "updated_at": "2020-12-21T22:14:15Z",
        "closed_at": "2020-12-21T22:14:15Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## To Reproduce\r\n\r\nthis module can be exported to torchscript:\r\n```\r\nclass MyModule(torch.nn.Module):\r\n    def forward(self) -> Any:\r\n        if self.training:\r\n            return 'xx'\r\n        else:\r\n            return {}\r\n```\r\n\r\nthis module can not:\r\n```\r\nclass MyModule(torch.nn.Module):\r\n    def forward(self) -> Any:\r\n        return 'xx' if self.training else {}\r\n```\r\nand we will get `if-expression's true branch has type str but false branch has type Dict[str, Tensor]:`\r\n\r\n\r\n## Environment\r\n\r\n - PyTorch Version (e.g., 1.0): commit 8a41fa47187c5533a639b34478c10a44641a4db9\r\n - OS (e.g., Linux): Linux\r\n - How you installed PyTorch (`conda`, `pip`, source): source\r\n - Build command you used (if compiling from source): described [here](https://github.com/pytorch/pytorch#from-source)\r\n - Python version: 3.7\r\n - CUDA/cuDNN version: 10.0/7.6.5\r\n\r\n\r\ncc @gmagogsfm",
        "closed_by": {
            "login": "ejguan",
            "id": 68879799,
            "node_id": "MDQ6VXNlcjY4ODc5Nzk5",
            "avatar_url": "https://avatars.githubusercontent.com/u/68879799?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ejguan",
            "html_url": "https://github.com/ejguan",
            "followers_url": "https://api.github.com/users/ejguan/followers",
            "following_url": "https://api.github.com/users/ejguan/following{/other_user}",
            "gists_url": "https://api.github.com/users/ejguan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ejguan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ejguan/subscriptions",
            "organizations_url": "https://api.github.com/users/ejguan/orgs",
            "repos_url": "https://api.github.com/users/ejguan/repos",
            "events_url": "https://api.github.com/users/ejguan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ejguan/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/43942/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/43942/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/43619",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/43619/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/43619/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/43619/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/43619",
        "id": 686126303,
        "node_id": "MDU6SXNzdWU2ODYxMjYzMDM=",
        "number": 43619,
        "title": "JIT changes method kwarg argument names",
        "user": {
            "login": "vadimkantorov",
            "id": 1041752,
            "node_id": "MDQ6VXNlcjEwNDE3NTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1041752?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vadimkantorov",
            "html_url": "https://github.com/vadimkantorov",
            "followers_url": "https://api.github.com/users/vadimkantorov/followers",
            "following_url": "https://api.github.com/users/vadimkantorov/following{/other_user}",
            "gists_url": "https://api.github.com/users/vadimkantorov/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vadimkantorov/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vadimkantorov/subscriptions",
            "organizations_url": "https://api.github.com/users/vadimkantorov/orgs",
            "repos_url": "https://api.github.com/users/vadimkantorov/repos",
            "events_url": "https://api.github.com/users/vadimkantorov/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vadimkantorov/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "gmagogsfm",
            "id": 1817752,
            "node_id": "MDQ6VXNlcjE4MTc3NTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1817752?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gmagogsfm",
            "html_url": "https://github.com/gmagogsfm",
            "followers_url": "https://api.github.com/users/gmagogsfm/followers",
            "following_url": "https://api.github.com/users/gmagogsfm/following{/other_user}",
            "gists_url": "https://api.github.com/users/gmagogsfm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gmagogsfm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gmagogsfm/subscriptions",
            "organizations_url": "https://api.github.com/users/gmagogsfm/orgs",
            "repos_url": "https://api.github.com/users/gmagogsfm/repos",
            "events_url": "https://api.github.com/users/gmagogsfm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gmagogsfm/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "gmagogsfm",
                "id": 1817752,
                "node_id": "MDQ6VXNlcjE4MTc3NTI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/1817752?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/gmagogsfm",
                "html_url": "https://github.com/gmagogsfm",
                "followers_url": "https://api.github.com/users/gmagogsfm/followers",
                "following_url": "https://api.github.com/users/gmagogsfm/following{/other_user}",
                "gists_url": "https://api.github.com/users/gmagogsfm/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/gmagogsfm/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gmagogsfm/subscriptions",
                "organizations_url": "https://api.github.com/users/gmagogsfm/orgs",
                "repos_url": "https://api.github.com/users/gmagogsfm/repos",
                "events_url": "https://api.github.com/users/gmagogsfm/events{/privacy}",
                "received_events_url": "https://api.github.com/users/gmagogsfm/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 2,
        "created_at": "2020-08-26T08:34:49Z",
        "updated_at": "2021-02-17T22:49:33Z",
        "closed_at": "2021-02-17T22:49:33Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "```python\r\nclass TestModule(torch.nn.Module):\r\n    def forward(self, x):\r\n        return x.transpose(0,1)\r\n    \r\nclass AnotherTestModule(torch.nn.Module):\r\n    def __init__(self):\r\n        super().__init__()\r\n        self.inner_module = TestModule()\r\n        \r\n    def forward(self, y):\r\n        return self.inner_module(x=y)\r\n    \r\nmodule = AnotherTestModule()\r\ntrace_input = torch.ones([1,1])\r\ntraced_module = torch.jit.trace_module(module, dict(forward=(trace_input,)))\r\n \r\ntry:\r\n    print('Original module')\r\n    module(y=trace_input)\r\n    print('Correct\\n')\r\nexcept RuntimeError as e:\r\n    print(e, '\\n')\r\n \r\ntry:\r\n    print('Traced module')\r\n    traced_module(y=trace_input)\r\n    print('Correct\\n')\r\nexcept RuntimeError as e:\r\n    print(e, '\\n')\r\n \r\nprint('Traced module code')\r\nprint(traced_module.code)\r\n```\r\n\r\n```\r\nOriginal module\r\nCorrect\r\n\r\nTraced module\r\nforward() is missing value for argument 'x'. Declaration: forward(__torch__.___torch_mangle_61.AnotherTestModule self, Tensor x) -> (Tensor) \r\n\r\nTraced module code\r\ndef forward(self,\r\n    x: Tensor) -> Tensor:\r\n  return (self.inner_module).forward(x, )\r\n```\n\ncc @gmagogsfm",
        "closed_by": {
            "login": "gmagogsfm",
            "id": 1817752,
            "node_id": "MDQ6VXNlcjE4MTc3NTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1817752?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gmagogsfm",
            "html_url": "https://github.com/gmagogsfm",
            "followers_url": "https://api.github.com/users/gmagogsfm/followers",
            "following_url": "https://api.github.com/users/gmagogsfm/following{/other_user}",
            "gists_url": "https://api.github.com/users/gmagogsfm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gmagogsfm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gmagogsfm/subscriptions",
            "organizations_url": "https://api.github.com/users/gmagogsfm/orgs",
            "repos_url": "https://api.github.com/users/gmagogsfm/repos",
            "events_url": "https://api.github.com/users/gmagogsfm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gmagogsfm/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/43619/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/43619/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/43577",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/43577/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/43577/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/43577/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/43577",
        "id": 685825435,
        "node_id": "MDU6SXNzdWU2ODU4MjU0MzU=",
        "number": 43577,
        "title": "test_enum_iterate is doing bad things with the gc",
        "user": {
            "login": "albanD",
            "id": 6359743,
            "node_id": "MDQ6VXNlcjYzNTk3NDM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6359743?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/albanD",
            "html_url": "https://github.com/albanD",
            "followers_url": "https://api.github.com/users/albanD/followers",
            "following_url": "https://api.github.com/users/albanD/following{/other_user}",
            "gists_url": "https://api.github.com/users/albanD/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/albanD/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/albanD/subscriptions",
            "organizations_url": "https://api.github.com/users/albanD/orgs",
            "repos_url": "https://api.github.com/users/albanD/repos",
            "events_url": "https://api.github.com/users/albanD/events{/privacy}",
            "received_events_url": "https://api.github.com/users/albanD/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "gmagogsfm",
            "id": 1817752,
            "node_id": "MDQ6VXNlcjE4MTc3NTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1817752?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gmagogsfm",
            "html_url": "https://github.com/gmagogsfm",
            "followers_url": "https://api.github.com/users/gmagogsfm/followers",
            "following_url": "https://api.github.com/users/gmagogsfm/following{/other_user}",
            "gists_url": "https://api.github.com/users/gmagogsfm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gmagogsfm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gmagogsfm/subscriptions",
            "organizations_url": "https://api.github.com/users/gmagogsfm/orgs",
            "repos_url": "https://api.github.com/users/gmagogsfm/repos",
            "events_url": "https://api.github.com/users/gmagogsfm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gmagogsfm/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "gmagogsfm",
                "id": 1817752,
                "node_id": "MDQ6VXNlcjE4MTc3NTI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/1817752?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/gmagogsfm",
                "html_url": "https://github.com/gmagogsfm",
                "followers_url": "https://api.github.com/users/gmagogsfm/followers",
                "following_url": "https://api.github.com/users/gmagogsfm/following{/other_user}",
                "gists_url": "https://api.github.com/users/gmagogsfm/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/gmagogsfm/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gmagogsfm/subscriptions",
                "organizations_url": "https://api.github.com/users/gmagogsfm/orgs",
                "repos_url": "https://api.github.com/users/gmagogsfm/repos",
                "events_url": "https://api.github.com/users/gmagogsfm/events{/privacy}",
                "received_events_url": "https://api.github.com/users/gmagogsfm/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 3,
        "created_at": "2020-08-25T21:22:21Z",
        "updated_at": "2020-09-16T23:23:49Z",
        "closed_at": "2020-09-16T23:23:49Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "Running with a debug build of python 3.6, running ` python run_test.py -i test_jit -v` fails with the following error:\r\n\r\n```\r\n# More tests that are ok\r\ntest_enum_comp_diff_classes (jit.test_enum.TestEnum) ... ok\r\ntest_enum_iterate (jit.test_enum.TestEnum) ... python: Modules/gcmodule.c:380: visit_decref: Assertion `_PyGCHead_REFS(gc) != 0' failed.\r\nTraceback (most recent call last):\r\n  File \"run_test.py\", line 719, in <module>\r\n    main()\r\n  File \"run_test.py\", line 708, in main\r\n    raise RuntimeError(err)\r\nRuntimeError: test_jit failed! Received signal: SIGIOT\r\n```\r\n\r\n\r\n<details><summary>The full stack trace when the error happens</summary>\r\n\r\n```\r\n(gdb) bt\r\n#0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50\r\n#1  0x00007ffff7c69859 in __GI_abort () at abort.c:79\r\n#2  0x00007ffff7c69729 in __assert_fail_base (fmt=0x7ffff7dff588 \"%s%s%s:%u: %s%sAssertion `%s' failed.\\n%n\", \r\n    assertion=0x55555576a56a \"_PyGCHead_REFS(gc) != 0\", file=0x55555576a520 \"Modules/gcmodule.c\", line=380, function=<optimized out>)\r\n    at assert.c:92\r\n#3  0x00007ffff7c7af36 in __GI___assert_fail (assertion=assertion@entry=0x55555576a56a \"_PyGCHead_REFS(gc) != 0\", \r\n    file=file@entry=0x55555576a520 \"Modules/gcmodule.c\", line=line@entry=380, \r\n    function=function@entry=0x55555576aac8 <__PRETTY_FUNCTION__.14474> \"visit_decref\") at assert.c:101\r\n#4  0x00005555555c6900 in visit_decref (op=0x7fff84979bb8, data=<optimized out>) at Modules/gcmodule.c:384\r\n#5  0x000055555561d480 in dict_traverse (op=<optimized out>, visit=0x5555555c6876 <visit_decref>, arg=0x0) at Objects/dictobject.c:3046\r\n#6  0x00005555555c5ff9 in subtract_refs (containers=containers@entry=0x5555558162a0 <generations>) at Modules/gcmodule.c:399\r\n#7  0x00005555555c7292 in collect (generation=generation@entry=0, n_collected=n_collected@entry=0x7fffffff9888, \r\n    n_uncollectable=n_uncollectable@entry=0x7fffffff9890, nofail=nofail@entry=0) at Modules/gcmodule.c:953\r\n#8  0x00005555555c7787 in collect_with_callback (generation=0) at Modules/gcmodule.c:1128\r\n#9  0x00005555555c78c4 in collect_generations () at Modules/gcmodule.c:1151\r\n#10 0x00005555555c7a5f in _PyObject_GC_Alloc (use_calloc=use_calloc@entry=0, basicsize=<optimized out>) at Modules/gcmodule.c:1729\r\n#11 0x00005555555c7fb0 in _PyObject_GC_Malloc (basicsize=<optimized out>) at Modules/gcmodule.c:1739\r\n#12 0x00005555555c7fe5 in _PyObject_GC_New (tp=tp@entry=0x555555829a20 <PyFunction_Type>) at Modules/gcmodule.c:1751\r\n#13 0x000055555560b03a in PyFunction_NewWithQualName (code=code@entry=0x7ffee3695ac0, globals=0x7ffee36ff8c8, \r\n    qualname=qualname@entry=0x7ffee3691670) at Objects/funcobject.c:21\r\n#14 0x00005555556d4eb1 in _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:3419\r\n#15 0x00005555556c8fd5 in PyEval_EvalFrameEx (f=f@entry=0x5555578a7a58, throwflag=throwflag@entry=0) at Python/ceval.c:754\r\n#16 0x00005555556c9ac6 in _PyEval_EvalCodeWithName (_co=0x7ffee3695b80, globals=<optimized out>, locals=locals@entry=0x0, \r\n    args=<optimized out>, argcount=2, kwnames=0x0, kwargs=0x55555859d7b8, kwcount=0, kwstep=1, defs=0x0, defcount=0, kwdefs=0x0, \r\n    closure=0x0, name=0x7ffee3699900, qualname=0x7ffee3698310) at Python/ceval.c:4166\r\n#17 0x00005555556c9d29 in fast_function (func=func@entry=0x7ffee36b14a8, stack=<optimized out>, nargs=nargs@entry=2, \r\n    kwnames=kwnames@entry=0x0) at Python/ceval.c:4968\r\n#18 0x00005555556ca01c in call_function (pp_stack=pp_stack@entry=0x7fffffff9c50, oparg=oparg@entry=2, kwnames=kwnames@entry=0x0)\r\n    at Python/ceval.c:4872\r\n#19 0x00005555556d47e5 in _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:3335\r\n#20 0x00005555556c8fd5 in PyEval_EvalFrameEx (f=f@entry=0x55555859d5f8, throwflag=throwflag@entry=0) at Python/ceval.c:754\r\n#21 0x00005555556c90b5 in _PyFunction_FastCall (co=co@entry=0x7ffee368a100, args=0x7fffffff9dd8, args@entry=0x7fffffff9dc0, \r\n    nargs=nargs@entry=3, globals=globals@entry=0x7ffee36ff8c8) at Python/ceval.c:4933\r\n#22 0x00005555556d6766 in _PyFunction_FastCallDict (func=func@entry=0x7ffee36acbd8, args=args@entry=0x7fffffff9dc0, \r\n    nargs=nargs@entry=3, kwargs=kwargs@entry=0x0) at Python/ceval.c:5035\r\n#23 0x00005555555d7377 in _PyObject_FastCallDict (func=func@entry=0x7ffee36acbd8, args=args@entry=0x7fffffff9dc0, nargs=nargs@entry=3, \r\n    kwargs=kwargs@entry=0x0) at Objects/abstract.c:2310\r\n#24 0x00005555555d7629 in _PyObject_Call_Prepend (func=0x7ffee36acbd8, obj=obj@entry=0x7ffee36b2058, args=0x7fff848ee218, kwargs=0x0)\r\n    at Objects/abstract.c:2373\r\n#25 0x00005555555f3375 in method_call (method=<optimized out>, args=<optimized out>, kwargs=<optimized out>)\r\n    at Objects/classobject.c:314\r\n#26 0x00005555555d7017 in PyObject_Call (func=func@entry=0x7ffee336e678, args=args@entry=0x7fff848ee218, kwargs=kwargs@entry=0x0)\r\n    at Objects/abstract.c:2261\r\n#27 0x000055555564dbe5 in slot_tp_call (self=self@entry=0x7ffee36b2058, args=args@entry=0x7fff848ee218, kwds=kwds@entry=0x0)\r\n    at Objects/typeobject.c:6207\r\n#28 0x00005555555d723e in _PyObject_FastCallDict (func=func@entry=0x7ffee36b2058, args=args@entry=0x5555585eb080, nargs=nargs@entry=2, \r\n    kwargs=kwargs@entry=0x0) at Objects/abstract.c:2331\r\n#29 0x00005555555d7a0c in _PyObject_FastCallKeywords (func=func@entry=0x7ffee36b2058, stack=0x5555585eb080, nargs=nargs@entry=2, \r\n    kwnames=kwnames@entry=0x0) at Objects/abstract.c:2496\r\n#30 0x00005555556c9de6 in call_function (pp_stack=pp_stack@entry=0x7fffffffa000, oparg=oparg@entry=2, kwnames=kwnames@entry=0x0)\r\n    at Python/ceval.c:4875\r\n#31 0x00005555556d47e5 in _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:3335\r\n#32 0x00005555556c8fd5 in PyEval_EvalFrameEx (f=f@entry=0x5555585eaec8, throwflag=throwflag@entry=0) at Python/ceval.c:754\r\n#33 0x00005555556c90b5 in _PyFunction_FastCall (co=<optimized out>, args=0x555558706208, nargs=nargs@entry=2, globals=<optimized out>)\r\n    at Python/ceval.c:4933\r\n#34 0x00005555556c9cf5 in fast_function (func=func@entry=0x7ffee36b0280, stack=<optimized out>, nargs=nargs@entry=2, \r\n    kwnames=kwnames@entry=0x0) at Python/ceval.c:4968\r\n#35 0x00005555556ca01c in call_function (pp_stack=pp_stack@entry=0x7fffffffa1c0, oparg=oparg@entry=2, kwnames=kwnames@entry=0x0)\r\n    at Python/ceval.c:4872\r\n#36 0x00005555556d47e5 in _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:3335\r\n#37 0x00005555556c8fd5 in PyEval_EvalFrameEx (f=f@entry=0x555558706048, throwflag=throwflag@entry=0) at Python/ceval.c:754\r\n#38 0x00005555556c90b5 in _PyFunction_FastCall (co=co@entry=0x7ffee368a100, args=0x7fffffffa348, args@entry=0x7fffffffa330, \r\n    nargs=nargs@entry=3, globals=globals@entry=0x7ffee36ff8c8) at Python/ceval.c:4933\r\n#39 0x00005555556d6766 in _PyFunction_FastCallDict (func=func@entry=0x7ffee36acbd8, args=args@entry=0x7fffffffa330, \r\n    nargs=nargs@entry=3, kwargs=kwargs@entry=0x0) at Python/ceval.c:5035\r\n#40 0x00005555555d7377 in _PyObject_FastCallDict (func=func@entry=0x7ffee36acbd8, args=args@entry=0x7fffffffa330, nargs=nargs@entry=3, \r\n    kwargs=kwargs@entry=0x0) at Objects/abstract.c:2310\r\n#41 0x00005555555d7629 in _PyObject_Call_Prepend (func=0x7ffee36acbd8, obj=obj@entry=0x7ffee36b20c0, args=0x7fff848ee678, kwargs=0x0)\r\n    at Objects/abstract.c:2373\r\n#42 0x00005555555f3375 in method_call (method=<optimized out>, args=<optimized out>, kwargs=<optimized out>)\r\n    at Objects/classobject.c:314\r\n#43 0x00005555555d7017 in PyObject_Call (func=func@entry=0x7fffea401c28, args=args@entry=0x7fff848ee678, kwargs=kwargs@entry=0x0)\r\n    at Objects/abstract.c:2261\r\n--Type <RET> for more, q to quit, c to continue without paging--\r\n#44 0x000055555564dbe5 in slot_tp_call (self=self@entry=0x7ffee36b20c0, args=args@entry=0x7fff848ee678, kwds=kwds@entry=0x0)\r\n    at Objects/typeobject.c:6207\r\n#45 0x00005555555d723e in _PyObject_FastCallDict (func=func@entry=0x7ffee36b20c0, args=args@entry=0x5555585cf1c0, nargs=nargs@entry=2, \r\n    kwargs=kwargs@entry=0x0) at Objects/abstract.c:2331\r\n#46 0x00005555555d7a0c in _PyObject_FastCallKeywords (func=func@entry=0x7ffee36b20c0, stack=0x5555585cf1c0, nargs=nargs@entry=2, \r\n    kwnames=kwnames@entry=0x0) at Objects/abstract.c:2496\r\n#47 0x00005555556c9de6 in call_function (pp_stack=pp_stack@entry=0x7fffffffa570, oparg=oparg@entry=2, kwnames=kwnames@entry=0x0)\r\n    at Python/ceval.c:4875\r\n#48 0x00005555556d47e5 in _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:3335\r\n#49 0x00005555556c8fd5 in PyEval_EvalFrameEx (f=f@entry=0x5555585cf008, throwflag=throwflag@entry=0) at Python/ceval.c:754\r\n#50 0x00005555556c9ac6 in _PyEval_EvalCodeWithName (_co=0x7ffee3704a00, globals=<optimized out>, locals=locals@entry=0x0, \r\n    args=<optimized out>, argcount=1, kwnames=0x0, kwargs=0x555558636858, kwcount=0, kwstep=1, defs=0x0, defcount=0, kwdefs=0x0, \r\n    closure=0x7fff84936ae8, name=0x7ffee37072e0, qualname=0x7ffee36fab40) at Python/ceval.c:4166\r\n#51 0x00005555556c9d29 in fast_function (func=func@entry=0x7fff848b5a68, stack=<optimized out>, nargs=nargs@entry=1, \r\n    kwnames=kwnames@entry=0x0) at Python/ceval.c:4968\r\n#52 0x00005555556ca01c in call_function (pp_stack=pp_stack@entry=0x7fffffffa7f0, oparg=oparg@entry=1, kwnames=kwnames@entry=0x0)\r\n    at Python/ceval.c:4872\r\n#53 0x00005555556d47e5 in _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:3335\r\n#54 0x00005555556c8fd5 in PyEval_EvalFrameEx (f=f@entry=0x5555586366a8, throwflag=throwflag@entry=0) at Python/ceval.c:754\r\n#55 0x00005555556c9ac6 in _PyEval_EvalCodeWithName (_co=0x7ffee3704ac0, globals=<optimized out>, locals=locals@entry=0x0, \r\n    args=<optimized out>, argcount=2, kwnames=0x0, kwargs=0x5555578a3a00, kwcount=0, kwstep=1, defs=0x0, defcount=0, kwdefs=0x0, \r\n    closure=0x0, name=0x7ffee37075f0, qualname=0x7ffee37075f0) at Python/ceval.c:4166\r\n#56 0x00005555556c9d29 in fast_function (func=func@entry=0x7ffee36ac840, stack=<optimized out>, nargs=nargs@entry=2, \r\n    kwnames=kwnames@entry=0x0) at Python/ceval.c:4968\r\n#57 0x00005555556ca01c in call_function (pp_stack=pp_stack@entry=0x7fffffffaa70, oparg=oparg@entry=2, kwnames=kwnames@entry=0x0)\r\n    at Python/ceval.c:4872\r\n#58 0x00005555556d47e5 in _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:3335\r\n#59 0x00005555556c8fd5 in PyEval_EvalFrameEx (f=f@entry=0x5555578a37e8, throwflag=throwflag@entry=0) at Python/ceval.c:754\r\n#60 0x00005555556c9ac6 in _PyEval_EvalCodeWithName (_co=0x7ffee368a4c0, globals=<optimized out>, locals=locals@entry=0x0, \r\n    args=<optimized out>, argcount=4, kwnames=0x7ffee3705e50, kwargs=0x5555577b3980, kwcount=1, kwstep=1, defs=0x7ffee369c358, \r\n    defcount=1, kwdefs=0x0, closure=0x0, name=0x7ffee37079e0, qualname=0x7ffee37079e0) at Python/ceval.c:4166\r\n#61 0x00005555556c9d29 in fast_function (func=func@entry=0x7ffee36acc90, stack=<optimized out>, nargs=nargs@entry=4, \r\n    kwnames=kwnames@entry=0x7ffee3705e28) at Python/ceval.c:4968\r\n#62 0x00005555556ca01c in call_function (pp_stack=pp_stack@entry=0x7fffffffacf8, oparg=oparg@entry=5, \r\n    kwnames=kwnames@entry=0x7ffee3705e28) at Python/ceval.c:4872\r\n#63 0x00005555556d4902 in _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:3351\r\n#64 0x00005555556c8fd5 in PyEval_EvalFrameEx (f=f@entry=0x5555577b3758, throwflag=throwflag@entry=0) at Python/ceval.c:754\r\n#65 0x00005555556c9ac6 in _PyEval_EvalCodeWithName (_co=0x7ffee368a040, globals=<optimized out>, locals=locals@entry=0x0, \r\n    args=<optimized out>, argcount=2, kwnames=0x0, kwargs=0x5555585cc468, kwcount=0, kwstep=1, defs=0x7ffee369c2f0, defcount=1, \r\n    kwdefs=0x0, closure=0x0, name=0x7ffff3acdc10, qualname=0x7ffff3acdc10) at Python/ceval.c:4166\r\n#66 0x00005555556c9d29 in fast_function (func=func@entry=0x7ffee36aca68, stack=<optimized out>, nargs=nargs@entry=2, \r\n    kwnames=kwnames@entry=0x0) at Python/ceval.c:4968\r\n#67 0x00005555556ca01c in call_function (pp_stack=pp_stack@entry=0x7fffffffaf70, oparg=oparg@entry=2, kwnames=kwnames@entry=0x0)\r\n    at Python/ceval.c:4872\r\n#68 0x00005555556d47e5 in _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:3335\r\n#69 0x00005555556c8fd5 in PyEval_EvalFrameEx (f=f@entry=0x5555585cc288, throwflag=throwflag@entry=0) at Python/ceval.c:754\r\n#70 0x00005555556c9ac6 in _PyEval_EvalCodeWithName (_co=0x7ffee36f2280, globals=<optimized out>, locals=locals@entry=0x0, \r\n    args=<optimized out>, argcount=1, kwnames=0x0, kwargs=0x5555586dfb30, kwcount=0, kwstep=1, defs=0x7ffee36f0ad0, defcount=3, \r\n    kwdefs=0x0, closure=0x0, name=0x7ffff3b65ba0, qualname=0x7ffff3b65ba0) at Python/ceval.c:4166\r\n#71 0x00005555556c9d29 in fast_function (func=func@entry=0x7ffee364e560, stack=<optimized out>, nargs=nargs@entry=1, \r\n    kwnames=kwnames@entry=0x0) at Python/ceval.c:4968\r\n#72 0x00005555556ca01c in call_function (pp_stack=pp_stack@entry=0x7fffffffb1f0, oparg=oparg@entry=1, kwnames=kwnames@entry=0x0)\r\n    at Python/ceval.c:4872\r\n#73 0x00005555556d47e5 in _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:3335\r\n#74 0x00005555556c8fd5 in PyEval_EvalFrameEx (f=f@entry=0x5555586df978, throwflag=throwflag@entry=0) at Python/ceval.c:754\r\n#75 0x00005555556c90b5 in _PyFunction_FastCall (co=<optimized out>, args=0x55555789b3e8, nargs=nargs@entry=1, globals=<optimized out>)\r\n    at Python/ceval.c:4933\r\n#76 0x00005555556c9cf5 in fast_function (func=func@entry=0x7ffff3d77338, stack=<optimized out>, nargs=nargs@entry=1, \r\n    kwnames=kwnames@entry=0x0) at Python/ceval.c:4968\r\n#77 0x00005555556ca01c in call_function (pp_stack=pp_stack@entry=0x7fffffffb3b0, oparg=oparg@entry=0, kwnames=kwnames@entry=0x0)\r\n    at Python/ceval.c:4872\r\n#78 0x00005555556d47e5 in _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:3335\r\n#79 0x00005555556c8fd5 in PyEval_EvalFrameEx (f=f@entry=0x55555789b1e8, throwflag=throwflag@entry=0) at Python/ceval.c:754\r\n#80 0x00005555556c9ac6 in _PyEval_EvalCodeWithName (_co=_co@entry=0x7ffff4793d00, globals=globals@entry=0x7ffff47f06e8, \r\n    locals=locals@entry=0x0, args=args@entry=0x7fffffffb5e0, argcount=argcount@entry=2, kwnames=kwnames@entry=0x7ffff6e24080, \r\n    kwargs=0x7ffff6e24088, kwcount=0, kwstep=2, defs=0x7ffff47a71b8, defcount=1, kwdefs=0x0, closure=0x0, name=0x7ffff6aff728, \r\n    qualname=0x7ffff4790f20) at Python/ceval.c:4166\r\n#81 0x00005555556d67e6 in _PyFunction_FastCallDict (func=func@entry=0x7ffff4729eb8, args=args@entry=0x7fffffffb5e0, \r\n    nargs=nargs@entry=2, kwargs=kwargs@entry=0x7fffea67e058) at Python/ceval.c:5084\r\n#82 0x00005555555d7377 in _PyObject_FastCallDict (func=func@entry=0x7ffff4729eb8, args=args@entry=0x7fffffffb5e0, nargs=nargs@entry=2, \r\n    kwargs=kwargs@entry=0x7fffea67e058) at Objects/abstract.c:2310\r\n#83 0x00005555555d7629 in _PyObject_Call_Prepend (func=0x7ffff4729eb8, obj=obj@entry=0x7fffea67b7a8, args=0x7fffea43b0c0, \r\n    kwargs=0x7fffea67e058) at Objects/abstract.c:2373\r\n--Type <RET> for more, q to quit, c to continue without paging--\r\n#84 0x00005555555f3375 in method_call (method=<optimized out>, args=<optimized out>, kwargs=<optimized out>)\r\n    at Objects/classobject.c:314\r\n#85 0x00005555555d7017 in PyObject_Call (func=func@entry=0x7ffee32d1b48, args=args@entry=0x7fffea43b0c0, \r\n    kwargs=kwargs@entry=0x7fffea67e058) at Objects/abstract.c:2261\r\n#86 0x00005555556c82c7 in do_call_core (func=func@entry=0x7ffee32d1b48, callargs=callargs@entry=0x7fffea43b0c0, \r\n    kwdict=kwdict@entry=0x7fffea67e058) at Python/ceval.c:5120\r\n#87 0x00005555556d4c75 in _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:3404\r\n#88 0x00005555556c8fd5 in PyEval_EvalFrameEx (f=f@entry=0x7fffea43d448, throwflag=throwflag@entry=0) at Python/ceval.c:754\r\n#89 0x00005555556c9ac6 in _PyEval_EvalCodeWithName (_co=_co@entry=0x7ffff4793e80, globals=globals@entry=0x7ffff47f06e8, \r\n    locals=locals@entry=0x0, args=args@entry=0x7fffffffb9a0, argcount=argcount@entry=2, kwnames=kwnames@entry=0x0, kwargs=0x0, \r\n    kwcount=0, kwstep=2, defs=0x0, defcount=0, kwdefs=0x0, closure=0x0, name=0x7ffff6e27270, qualname=0x7ffff4791e50)\r\n    at Python/ceval.c:4166\r\n#90 0x00005555556d67e6 in _PyFunction_FastCallDict (func=func@entry=0x7ffff472b058, args=args@entry=0x7fffffffb9a0, \r\n    nargs=nargs@entry=2, kwargs=kwargs@entry=0x0) at Python/ceval.c:5084\r\n#91 0x00005555555d7377 in _PyObject_FastCallDict (func=func@entry=0x7ffff472b058, args=args@entry=0x7fffffffb9a0, nargs=nargs@entry=2, \r\n    kwargs=kwargs@entry=0x0) at Objects/abstract.c:2310\r\n#92 0x00005555555d7629 in _PyObject_Call_Prepend (func=0x7ffff472b058, obj=obj@entry=0x7fffea67b7a8, args=0x7fffea43b190, kwargs=0x0)\r\n    at Objects/abstract.c:2373\r\n#93 0x00005555555f3375 in method_call (method=<optimized out>, args=<optimized out>, kwargs=<optimized out>)\r\n    at Objects/classobject.c:314\r\n#94 0x00005555555d7017 in PyObject_Call (func=func@entry=0x7ffee32d9528, args=args@entry=0x7fffea43b190, kwargs=kwargs@entry=0x0)\r\n    at Objects/abstract.c:2261\r\n#95 0x000055555564dbe5 in slot_tp_call (self=self@entry=0x7fffea67b7a8, args=args@entry=0x7fffea43b190, kwds=kwds@entry=0x0)\r\n    at Objects/typeobject.c:6207\r\n#96 0x00005555555d723e in _PyObject_FastCallDict (func=func@entry=0x7fffea67b7a8, args=args@entry=0x555557e76160, nargs=nargs@entry=1, \r\n    kwargs=kwargs@entry=0x0) at Objects/abstract.c:2331\r\n#97 0x00005555555d7a0c in _PyObject_FastCallKeywords (func=func@entry=0x7fffea67b7a8, stack=0x555557e76160, nargs=nargs@entry=1, \r\n    kwnames=kwnames@entry=0x0) at Objects/abstract.c:2496\r\n#98 0x00005555556c9de6 in call_function (pp_stack=pp_stack@entry=0x7fffffffbbe0, oparg=oparg@entry=1, kwnames=kwnames@entry=0x0)\r\n    at Python/ceval.c:4875\r\n#99 0x00005555556d47e5 in _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:3335\r\n#100 0x00005555556c8fd5 in PyEval_EvalFrameEx (f=f@entry=0x555557e75f98, throwflag=throwflag@entry=0) at Python/ceval.c:754\r\n#101 0x00005555556c9ac6 in _PyEval_EvalCodeWithName (_co=_co@entry=0x7ffff47ac280, globals=globals@entry=0x7ffff47fddf0, \r\n    locals=locals@entry=0x0, args=args@entry=0x7fffffffbe10, argcount=argcount@entry=2, kwnames=kwnames@entry=0x7ffff6e24080, \r\n    kwargs=0x7ffff6e24088, kwcount=0, kwstep=2, defs=0x7ffff47429d8, defcount=1, kwdefs=0x0, closure=0x0, name=0x7ffff6aff728, \r\n    qualname=0x7ffff47285f0) at Python/ceval.c:4166\r\n#102 0x00005555556d67e6 in _PyFunction_FastCallDict (func=func@entry=0x7ffff472db20, args=args@entry=0x7fffffffbe10, \r\n    nargs=nargs@entry=2, kwargs=kwargs@entry=0x7fffea6766e8) at Python/ceval.c:5084\r\n#103 0x00005555555d7377 in _PyObject_FastCallDict (func=func@entry=0x7ffff472db20, args=args@entry=0x7fffffffbe10, \r\n    nargs=nargs@entry=2, kwargs=kwargs@entry=0x7fffea6766e8) at Objects/abstract.c:2310\r\n#104 0x00005555555d7629 in _PyObject_Call_Prepend (func=0x7ffff472db20, obj=obj@entry=0x7fffea67b538, args=0x7fffea6e3ef8, \r\n    kwargs=0x7fffea6766e8) at Objects/abstract.c:2373\r\n#105 0x00005555555f3375 in method_call (method=<optimized out>, args=<optimized out>, kwargs=<optimized out>)\r\n    at Objects/classobject.c:314\r\n#106 0x00005555555d7017 in PyObject_Call (func=func@entry=0x7ffff5c4b988, args=args@entry=0x7fffea6e3ef8, \r\n    kwargs=kwargs@entry=0x7fffea6766e8) at Objects/abstract.c:2261\r\n#107 0x00005555556c82c7 in do_call_core (func=func@entry=0x7ffff5c4b988, callargs=callargs@entry=0x7fffea6e3ef8, \r\n    kwdict=kwdict@entry=0x7fffea6766e8) at Python/ceval.c:5120\r\n#108 0x00005555556d4c75 in _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:3404\r\n#109 0x00005555556c8fd5 in PyEval_EvalFrameEx (f=f@entry=0x7fffea9bde20, throwflag=throwflag@entry=0) at Python/ceval.c:754\r\n#110 0x00005555556c9ac6 in _PyEval_EvalCodeWithName (_co=_co@entry=0x7ffff47a6c40, globals=globals@entry=0x7ffff47fddf0, \r\n    locals=locals@entry=0x0, args=args@entry=0x7fffffffc1d0, argcount=argcount@entry=2, kwnames=kwnames@entry=0x0, kwargs=0x0, \r\n    kwcount=0, kwstep=2, defs=0x0, defcount=0, kwdefs=0x0, closure=0x0, name=0x7ffff6e27270, qualname=0x7ffff472e130)\r\n    at Python/ceval.c:4166\r\n#111 0x00005555556d67e6 in _PyFunction_FastCallDict (func=func@entry=0x7ffff472d9b0, args=args@entry=0x7fffffffc1d0, \r\n    nargs=nargs@entry=2, kwargs=kwargs@entry=0x0) at Python/ceval.c:5084\r\n#112 0x00005555555d7377 in _PyObject_FastCallDict (func=func@entry=0x7ffff472d9b0, args=args@entry=0x7fffffffc1d0, \r\n    nargs=nargs@entry=2, kwargs=kwargs@entry=0x0) at Objects/abstract.c:2310\r\n#113 0x00005555555d7629 in _PyObject_Call_Prepend (func=0x7ffff472d9b0, obj=obj@entry=0x7fffea67b538, args=0x7fffea6ceae8, kwargs=0x0)\r\n    at Objects/abstract.c:2373\r\n#114 0x00005555555f3375 in method_call (method=<optimized out>, args=<optimized out>, kwargs=<optimized out>)\r\n    at Objects/classobject.c:314\r\n#115 0x00005555555d7017 in PyObject_Call (func=func@entry=0x7ffee335b7c8, args=args@entry=0x7fffea6ceae8, kwargs=kwargs@entry=0x0)\r\n    at Objects/abstract.c:2261\r\n#116 0x000055555564dbe5 in slot_tp_call (self=self@entry=0x7fffea67b538, args=args@entry=0x7fffea6ceae8, kwds=kwds@entry=0x0)\r\n    at Objects/typeobject.c:6207\r\n#117 0x00005555555d723e in _PyObject_FastCallDict (func=func@entry=0x7fffea67b538, args=args@entry=0x555557e75930, \r\n    nargs=nargs@entry=1, kwargs=kwargs@entry=0x0) at Objects/abstract.c:2331\r\n#118 0x00005555555d7a0c in _PyObject_FastCallKeywords (func=func@entry=0x7fffea67b538, stack=0x555557e75930, nargs=nargs@entry=1, \r\n    kwnames=kwnames@entry=0x0) at Objects/abstract.c:2496\r\n#119 0x00005555556c9de6 in call_function (pp_stack=pp_stack@entry=0x7fffffffc410, oparg=oparg@entry=1, kwnames=kwnames@entry=0x0)\r\n    at Python/ceval.c:4875\r\n#120 0x00005555556d47e5 in _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:3335\r\n--Type <RET> for more, q to quit, c to continue without paging--\r\n#121 0x00005555556c8fd5 in PyEval_EvalFrameEx (f=f@entry=0x555557e75768, throwflag=throwflag@entry=0) at Python/ceval.c:754\r\n#122 0x00005555556c9ac6 in _PyEval_EvalCodeWithName (_co=_co@entry=0x7ffff47ac280, globals=globals@entry=0x7ffff47fddf0, \r\n    locals=locals@entry=0x0, args=args@entry=0x7fffffffc640, argcount=argcount@entry=2, kwnames=kwnames@entry=0x7ffff6e24080, \r\n    kwargs=0x7ffff6e24088, kwcount=0, kwstep=2, defs=0x7ffff47429d8, defcount=1, kwdefs=0x0, closure=0x0, name=0x7ffff6aff728, \r\n    qualname=0x7ffff47285f0) at Python/ceval.c:4166\r\n#123 0x00005555556d67e6 in _PyFunction_FastCallDict (func=func@entry=0x7ffff472db20, args=args@entry=0x7fffffffc640, \r\n    nargs=nargs@entry=2, kwargs=kwargs@entry=0x7fffea43c1c0) at Python/ceval.c:5084\r\n#124 0x00005555555d7377 in _PyObject_FastCallDict (func=func@entry=0x7ffff472db20, args=args@entry=0x7fffffffc640, \r\n    nargs=nargs@entry=2, kwargs=kwargs@entry=0x7fffea43c1c0) at Objects/abstract.c:2310\r\n#125 0x00005555555d7629 in _PyObject_Call_Prepend (func=0x7ffff472db20, obj=obj@entry=0x7fffea9376d8, args=0x7fffea6cea18, \r\n    kwargs=0x7fffea43c1c0) at Objects/abstract.c:2373\r\n#126 0x00005555555f3375 in method_call (method=<optimized out>, args=<optimized out>, kwargs=<optimized out>)\r\n    at Objects/classobject.c:314\r\n#127 0x00005555555d7017 in PyObject_Call (func=func@entry=0x7ffff5d44fa8, args=args@entry=0x7fffea6cea18, \r\n    kwargs=kwargs@entry=0x7fffea43c1c0) at Objects/abstract.c:2261\r\n#128 0x00005555556c82c7 in do_call_core (func=func@entry=0x7ffff5d44fa8, callargs=callargs@entry=0x7fffea6cea18, \r\n    kwdict=kwdict@entry=0x7fffea43c1c0) at Python/ceval.c:5120\r\n#129 0x00005555556d4c75 in _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:3404\r\n#130 0x00005555556c8fd5 in PyEval_EvalFrameEx (f=f@entry=0x7fffea9bdc28, throwflag=throwflag@entry=0) at Python/ceval.c:754\r\n#131 0x00005555556c9ac6 in _PyEval_EvalCodeWithName (_co=_co@entry=0x7ffff47a6c40, globals=globals@entry=0x7ffff47fddf0, \r\n    locals=locals@entry=0x0, args=args@entry=0x7fffffffca00, argcount=argcount@entry=2, kwnames=kwnames@entry=0x0, kwargs=0x0, \r\n    kwcount=0, kwstep=2, defs=0x0, defcount=0, kwdefs=0x0, closure=0x0, name=0x7ffff6e27270, qualname=0x7ffff472e130)\r\n    at Python/ceval.c:4166\r\n#132 0x00005555556d67e6 in _PyFunction_FastCallDict (func=func@entry=0x7ffff472d9b0, args=args@entry=0x7fffffffca00, \r\n    nargs=nargs@entry=2, kwargs=kwargs@entry=0x0) at Python/ceval.c:5084\r\n#133 0x00005555555d7377 in _PyObject_FastCallDict (func=func@entry=0x7ffff472d9b0, args=args@entry=0x7fffffffca00, \r\n    nargs=nargs@entry=2, kwargs=kwargs@entry=0x0) at Objects/abstract.c:2310\r\n#134 0x00005555555d7629 in _PyObject_Call_Prepend (func=0x7ffff472d9b0, obj=obj@entry=0x7fffea9376d8, args=0x7fffea6ce9b0, kwargs=0x0)\r\n    at Objects/abstract.c:2373\r\n#135 0x00005555555f3375 in method_call (method=<optimized out>, args=<optimized out>, kwargs=<optimized out>)\r\n    at Objects/classobject.c:314\r\n#136 0x00005555555d7017 in PyObject_Call (func=func@entry=0x7ffee341b9f8, args=args@entry=0x7fffea6ce9b0, kwargs=kwargs@entry=0x0)\r\n    at Objects/abstract.c:2261\r\n#137 0x000055555564dbe5 in slot_tp_call (self=self@entry=0x7fffea9376d8, args=args@entry=0x7fffea6ce9b0, kwds=kwds@entry=0x0)\r\n    at Objects/typeobject.c:6207\r\n#138 0x00005555555d723e in _PyObject_FastCallDict (func=func@entry=0x7fffea9376d8, args=args@entry=0x555557e87770, \r\n    nargs=nargs@entry=1, kwargs=kwargs@entry=0x0) at Objects/abstract.c:2331\r\n#139 0x00005555555d7a0c in _PyObject_FastCallKeywords (func=func@entry=0x7fffea9376d8, stack=0x555557e87770, nargs=nargs@entry=1, \r\n    kwnames=kwnames@entry=0x0) at Objects/abstract.c:2496\r\n#140 0x00005555556c9de6 in call_function (pp_stack=pp_stack@entry=0x7fffffffcc40, oparg=oparg@entry=1, kwnames=kwnames@entry=0x0)\r\n    at Python/ceval.c:4875\r\n#141 0x00005555556d47e5 in _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:3335\r\n#142 0x00005555556c8fd5 in PyEval_EvalFrameEx (f=f@entry=0x555557e87558, throwflag=throwflag@entry=0) at Python/ceval.c:754\r\n#143 0x00005555556c90b5 in _PyFunction_FastCall (co=<optimized out>, args=0x555557e88a80, nargs=nargs@entry=2, globals=<optimized out>)\r\n    at Python/ceval.c:4933\r\n#144 0x00005555556c9cf5 in fast_function (func=func@entry=0x7ffff46606d0, stack=<optimized out>, nargs=nargs@entry=2, \r\n    kwnames=kwnames@entry=0x0) at Python/ceval.c:4968\r\n#145 0x00005555556ca01c in call_function (pp_stack=pp_stack@entry=0x7fffffffce00, oparg=oparg@entry=1, kwnames=kwnames@entry=0x0)\r\n    at Python/ceval.c:4872\r\n#146 0x00005555556d47e5 in _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:3335\r\n#147 0x00005555556c8fd5 in PyEval_EvalFrameEx (f=f@entry=0x555557e888d8, throwflag=throwflag@entry=0) at Python/ceval.c:754\r\n#148 0x00005555556c90b5 in _PyFunction_FastCall (co=<optimized out>, args=0x5555577353a8, nargs=nargs@entry=1, globals=<optimized out>)\r\n    at Python/ceval.c:4933\r\n#149 0x00005555556c9cf5 in fast_function (func=func@entry=0x7ffff4661058, stack=<optimized out>, nargs=nargs@entry=1, \r\n    kwnames=kwnames@entry=0x0) at Python/ceval.c:4968\r\n#150 0x00005555556ca01c in call_function (pp_stack=pp_stack@entry=0x7fffffffcfc0, oparg=oparg@entry=0, kwnames=kwnames@entry=0x0)\r\n    at Python/ceval.c:4872\r\n#151 0x00005555556d47e5 in _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:3335\r\n#152 0x00005555556c8fd5 in PyEval_EvalFrameEx (f=f@entry=0x5555577351a8, throwflag=throwflag@entry=0) at Python/ceval.c:754\r\n#153 0x00005555556c9ac6 in _PyEval_EvalCodeWithName (_co=_co@entry=0x7ffff4737dc0, globals=globals@entry=0x7ffff47272b0, \r\n    locals=locals@entry=0x0, args=args@entry=0x7fffffffd1f0, argcount=argcount@entry=1, kwnames=kwnames@entry=0x7fffeaa8c4e0, \r\n    kwargs=0x7fffeaa8c4e8, kwcount=2, kwstep=2, defs=0x7ffff4660868, defcount=11, kwdefs=0x7ffff4747148, closure=0x0, \r\n    name=0x7ffff6e27430, qualname=0x7ffff473f7c0) at Python/ceval.c:4166\r\n#154 0x00005555556d67e6 in _PyFunction_FastCallDict (func=func@entry=0x7ffff46608f8, args=args@entry=0x7fffffffd1f0, \r\n    nargs=nargs@entry=1, kwargs=kwargs@entry=0x7fffea6db580) at Python/ceval.c:5084\r\n#155 0x00005555555d7377 in _PyObject_FastCallDict (func=func@entry=0x7ffff46608f8, args=args@entry=0x7fffffffd1f0, \r\n    nargs=nargs@entry=1, kwargs=kwargs@entry=0x7fffea6db580) at Objects/abstract.c:2310\r\n#156 0x00005555555d7629 in _PyObject_Call_Prepend (func=0x7ffff46608f8, obj=obj@entry=0x7fffeaa58330, args=0x7ffff6e24058, \r\n    kwargs=0x7fffea6db580) at Objects/abstract.c:2373\r\n#157 0x00005555555f3375 in method_call (method=<optimized out>, args=<optimized out>, kwargs=<optimized out>)\r\n    at Objects/classobject.c:314\r\n#158 0x00005555555d7017 in PyObject_Call (func=func@entry=0x7ffff5bb2598, args=args@entry=0x7ffff6e24058, \r\n    kwargs=kwargs@entry=0x7fffea6db580) at Objects/abstract.c:2261\r\n--Type <RET> for more, q to quit, c to continue without paging--\r\n#159 0x000055555564d7f3 in slot_tp_init (self=<optimized out>, args=0x7ffff6e24058, kwds=0x7fffea6db580) at Objects/typeobject.c:6420\r\n#160 0x0000555555648f92 in type_call (type=type@entry=0x5555571f2158, args=args@entry=0x7ffff6e24058, kwds=kwds@entry=0x7fffea6db580)\r\n    at Objects/typeobject.c:915\r\n#161 0x00005555555d723e in _PyObject_FastCallDict (func=func@entry=0x5555571f2158, args=args@entry=0x555557e6d168, \r\n    nargs=nargs@entry=0, kwargs=kwargs@entry=0x7fffea6db580) at Objects/abstract.c:2331\r\n#162 0x00005555555d7a0c in _PyObject_FastCallKeywords (func=func@entry=0x5555571f2158, stack=0x555557e6d168, nargs=nargs@entry=0, \r\n    kwnames=kwnames@entry=0x7ffee2ecf948) at Objects/abstract.c:2496\r\n#163 0x00005555556c9de6 in call_function (pp_stack=pp_stack@entry=0x7fffffffd478, oparg=oparg@entry=1, \r\n    kwnames=kwnames@entry=0x7ffee2ecf948) at Python/ceval.c:4875\r\n#164 0x00005555556d4902 in _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:3351\r\n#165 0x00005555556c8fd5 in PyEval_EvalFrameEx (f=f@entry=0x555557e6cf48, throwflag=throwflag@entry=0) at Python/ceval.c:754\r\n#166 0x00005555556c90b5 in _PyFunction_FastCall (co=<optimized out>, args=0x7ffee2e9ed88, nargs=1, globals=<optimized out>)\r\n    at Python/ceval.c:4933\r\n#167 0x00005555556c9cdc in fast_function (func=func@entry=0x7ffee2e233f0, stack=<optimized out>, nargs=nargs@entry=0, \r\n    kwnames=kwnames@entry=0x0) at Python/ceval.c:4975\r\n#168 0x00005555556ca01c in call_function (pp_stack=pp_stack@entry=0x7fffffffd630, oparg=oparg@entry=0, kwnames=kwnames@entry=0x0)\r\n    at Python/ceval.c:4872\r\n#169 0x00005555556d47e5 in _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:3335\r\n#170 0x00005555556c8fd5 in PyEval_EvalFrameEx (f=f@entry=0x555555a07378, throwflag=throwflag@entry=0) at Python/ceval.c:754\r\n#171 0x00005555556c9ac6 in _PyEval_EvalCodeWithName (_co=0x7ffff6736a00, globals=<optimized out>, locals=<optimized out>, \r\n    args=<optimized out>, argcount=argcount@entry=0, kwnames=0x0, kwargs=0x0, kwcount=0, kwstep=2, defs=0x0, defcount=0, kwdefs=0x0, \r\n    closure=0x0, name=0x0, qualname=0x0) at Python/ceval.c:4166\r\n#172 0x00005555556ca109 in PyEval_EvalCodeEx (_co=_co@entry=0x7ffff6736a00, globals=globals@entry=0x7ffff6d2db20, \r\n    locals=locals@entry=0x7ffff6d2db20, args=args@entry=0x0, argcount=argcount@entry=0, kws=kws@entry=0x0, kwcount=0, defs=0x0, \r\n    defcount=0, kwdefs=0x0, closure=0x0) at Python/ceval.c:4187\r\n#173 0x00005555556ca13b in PyEval_EvalCode (co=co@entry=0x7ffff6736a00, globals=globals@entry=0x7ffff6d2db20, \r\n    locals=locals@entry=0x7ffff6d2db20) at Python/ceval.c:731\r\n#174 0x00005555555b1639 in run_mod (mod=mod@entry=0x555555d1e520, filename=filename@entry=0x7ffff6a4b820, \r\n    globals=globals@entry=0x7ffff6d2db20, locals=locals@entry=0x7ffff6d2db20, flags=flags@entry=0x7fffffffd94c, \r\n    arena=arena@entry=0x7ffff6acfbe0) at Python/pythonrun.c:1025\r\n#175 0x00005555555b45b0 in PyRun_FileExFlags (fp=fp@entry=0x5555558b38a0, \r\n    filename_str=filename_str@entry=0x7ffff6b1c5b0 \"test_jit.py\", start=start@entry=257, globals=globals@entry=0x7ffff6d2db20, \r\n    locals=locals@entry=0x7ffff6d2db20, closeit=closeit@entry=1, flags=0x7fffffffd94c) at Python/pythonrun.c:978\r\n#176 0x00005555555b4937 in PyRun_SimpleFileExFlags (fp=fp@entry=0x5555558b38a0, filename=<optimized out>, \r\n    filename@entry=0x7ffff6b1c5b0 \"test_jit.py\", closeit=closeit@entry=1, flags=flags@entry=0x7fffffffd94c) at Python/pythonrun.c:419\r\n#177 0x00005555555b4b16 in PyRun_AnyFileExFlags (fp=fp@entry=0x5555558b38a0, filename=0x7ffff6b1c5b0 \"test_jit.py\", \r\n    closeit=closeit@entry=1, flags=flags@entry=0x7fffffffd94c) at Python/pythonrun.c:81\r\n#178 0x00005555555c51a2 in run_file (fp=fp@entry=0x5555558b38a0, filename=filename@entry=0x5555558a7750 L\"test_jit.py\", \r\n    p_cf=p_cf@entry=0x7fffffffd94c) at Modules/main.c:340\r\n#179 0x00005555555c5dc7 in Py_Main (argc=3, argv=0x5555558a62a0) at Modules/main.c:810\r\n#180 0x00005555555aabc2 in main (argc=3, argv=0x7fffffffdb68) at ./Programs/python.c:69\r\n\r\n```\r\n\r\n</details>\r\n\r\nLet me know if you need any other information.\n\ncc @gmagogsfm",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/43577/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/43577/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/43511",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/43511/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/43511/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/43511/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/43511",
        "id": 684931790,
        "node_id": "MDU6SXNzdWU2ODQ5MzE3OTA=",
        "number": 43511,
        "title": "making slicing from torch.fx scriptable",
        "user": {
            "login": "jerryzh168",
            "id": 4958441,
            "node_id": "MDQ6VXNlcjQ5NTg0NDE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4958441?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryzh168",
            "html_url": "https://github.com/jerryzh168",
            "followers_url": "https://api.github.com/users/jerryzh168/followers",
            "following_url": "https://api.github.com/users/jerryzh168/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryzh168/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryzh168/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryzh168/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryzh168/orgs",
            "repos_url": "https://api.github.com/users/jerryzh168/repos",
            "events_url": "https://api.github.com/users/jerryzh168/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryzh168/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "gmagogsfm",
            "id": 1817752,
            "node_id": "MDQ6VXNlcjE4MTc3NTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1817752?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gmagogsfm",
            "html_url": "https://github.com/gmagogsfm",
            "followers_url": "https://api.github.com/users/gmagogsfm/followers",
            "following_url": "https://api.github.com/users/gmagogsfm/following{/other_user}",
            "gists_url": "https://api.github.com/users/gmagogsfm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gmagogsfm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gmagogsfm/subscriptions",
            "organizations_url": "https://api.github.com/users/gmagogsfm/orgs",
            "repos_url": "https://api.github.com/users/gmagogsfm/repos",
            "events_url": "https://api.github.com/users/gmagogsfm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gmagogsfm/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "gmagogsfm",
                "id": 1817752,
                "node_id": "MDQ6VXNlcjE4MTc3NTI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/1817752?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/gmagogsfm",
                "html_url": "https://github.com/gmagogsfm",
                "followers_url": "https://api.github.com/users/gmagogsfm/followers",
                "following_url": "https://api.github.com/users/gmagogsfm/following{/other_user}",
                "gists_url": "https://api.github.com/users/gmagogsfm/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/gmagogsfm/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gmagogsfm/subscriptions",
                "organizations_url": "https://api.github.com/users/gmagogsfm/orgs",
                "repos_url": "https://api.github.com/users/gmagogsfm/repos",
                "events_url": "https://api.github.com/users/gmagogsfm/events{/privacy}",
                "received_events_url": "https://api.github.com/users/gmagogsfm/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 5,
        "created_at": "2020-08-24T20:05:55Z",
        "updated_at": "2020-09-17T07:59:09Z",
        "closed_at": "2020-09-17T07:43:32Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "======================================================================\r\nERROR: test_torchvision (quantization.test_quantize_fx.TestQuantizeFxModels)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/data/users/jerryzh/pytorch/test/quantization/test_quantize_fx.py\", line 828, in test_torchvision\r\n    script = torch.jit.script(graph_module)\r\n  File \"/data/users/jerryzh/anaconda3/envs/py3/lib/python3.7/site-packages/torch/jit/_script.py\", line 888, in script\r\n    obj, torch.jit._recursive.infer_methods_to_compile\r\n  File \"/data/users/jerryzh/anaconda3/envs/py3/lib/python3.7/site-packages/torch/jit/_recursive.py\", line 317, in create_script_module\r\n    return create_script_module_impl(nn_module, concrete_type, stubs_fn)\r\n  File \"/data/users/jerryzh/anaconda3/envs/py3/lib/python3.7/site-packages/torch/jit/_recursive.py\", line 376, in create_script_module_impl\r\n    create_methods_from_stubs(concrete_type, stubs)\r\n  File \"/data/users/jerryzh/anaconda3/envs/py3/lib/python3.7/site-packages/torch/jit/_recursive.py\", line 292, in create_methods_from_stubs\r\n    concrete_type._create_methods(defs, rcbs, defaults)\r\nRuntimeError:\r\n\r\nslice(Tensor 0, Tensor 1, Tensor 2) -> (Tensor 0):\r\nExpected a value of type 'Tensor' for argument '0' but instead found type 'None'.\r\n:\r\ndef forward(self, x):\r\n    self = self.root\r\n    getitem = x[(slice(None, None, None), 0)]\r\n                 ~~~~~ <--- HERE\r\n    unsqueeze_1 = torch.unsqueeze(getitem, 1)\r\n    mul_1 = unsqueeze_1 * 0.458\r\n\r\n\r\n----------------------------------------------------------------------\r\nRan 1 test in 1.208s\r\n\r\nFAILED (errors=1)\n\ncc @gmagogsfm",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/43511/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/43511/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/43397",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/43397/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/43397/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/43397/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/43397",
        "id": 683345120,
        "node_id": "MDU6SXNzdWU2ODMzNDUxMjA=",
        "number": 43397,
        "title": "Support capturing global variable value in TorchScript with user hint",
        "user": {
            "login": "gmagogsfm",
            "id": 1817752,
            "node_id": "MDQ6VXNlcjE4MTc3NTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1817752?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gmagogsfm",
            "html_url": "https://github.com/gmagogsfm",
            "followers_url": "https://api.github.com/users/gmagogsfm/followers",
            "following_url": "https://api.github.com/users/gmagogsfm/following{/other_user}",
            "gists_url": "https://api.github.com/users/gmagogsfm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gmagogsfm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gmagogsfm/subscriptions",
            "organizations_url": "https://api.github.com/users/gmagogsfm/orgs",
            "repos_url": "https://api.github.com/users/gmagogsfm/repos",
            "events_url": "https://api.github.com/users/gmagogsfm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gmagogsfm/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 2203967172,
                "node_id": "MDU6TGFiZWwyMjAzOTY3MTcy",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/days",
                "name": "days",
                "color": "77f497",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-08-21T06:55:42Z",
        "updated_at": "2020-09-17T19:59:29Z",
        "closed_at": "2020-09-17T19:59:29Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "## \ud83d\ude80 Feature\r\nAllow TorchScript to capture global variable values with help of user hint.\r\n\r\n## Motivation\r\n\r\nSome PyTorch libraries like `torch.distributed`, use global variable to store config information, singleton objects. These global variables are used in APIs like `torch.distributed.alltoall`. Without supporting global variable capturing, it would require 1) Tremendous effort to rewrite these libraries to make them TorchScriptable 2) Required rewrite might be BackwardCompatiblity-Breaking, causing user issues.\r\n\r\n## Pitch\r\n\r\nCurrently global variables can not be captured inside TorchScript because we can't determine correct value to capture at scripting time and we don't have reference semantics for captured global variables. However, these problems don't exist if we can get a hint from user about 1) what value to capture 2) whether the value is constant. \r\n\r\nRoughly, we could provide an API like `global_var = torch.jit.capture_global_value(foo.bar)` that helps keep track of current *constant* value of global variable that is usable in TorchScript.\r\n\r\n## Alternatives\r\n\r\nAlready mentioned in motivation.\r\n\r\n## Additional context\r\n\r\n\n\ncc @suo @gmagogsfm",
        "closed_by": {
            "login": "gmagogsfm",
            "id": 1817752,
            "node_id": "MDQ6VXNlcjE4MTc3NTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1817752?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gmagogsfm",
            "html_url": "https://github.com/gmagogsfm",
            "followers_url": "https://api.github.com/users/gmagogsfm/followers",
            "following_url": "https://api.github.com/users/gmagogsfm/following{/other_user}",
            "gists_url": "https://api.github.com/users/gmagogsfm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gmagogsfm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gmagogsfm/subscriptions",
            "organizations_url": "https://api.github.com/users/gmagogsfm/orgs",
            "repos_url": "https://api.github.com/users/gmagogsfm/repos",
            "events_url": "https://api.github.com/users/gmagogsfm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gmagogsfm/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/43397/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/43397/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/43219",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/43219/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/43219/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/43219/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/43219",
        "id": 681280783,
        "node_id": "MDU6SXNzdWU2ODEyODA3ODM=",
        "number": 43219,
        "title": "[jit] add support for sorting tuples",
        "user": {
            "login": "zdevito",
            "id": 370202,
            "node_id": "MDQ6VXNlcjM3MDIwMg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/370202?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zdevito",
            "html_url": "https://github.com/zdevito",
            "followers_url": "https://api.github.com/users/zdevito/followers",
            "following_url": "https://api.github.com/users/zdevito/following{/other_user}",
            "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions",
            "organizations_url": "https://api.github.com/users/zdevito/orgs",
            "repos_url": "https://api.github.com/users/zdevito/repos",
            "events_url": "https://api.github.com/users/zdevito/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zdevito/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 466131885,
                "node_id": "MDU6TGFiZWw0NjYxMzE4ODU=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triage%20review",
                "name": "triage review",
                "color": "cc317c",
                "default": false,
                "description": ""
            },
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "gmagogsfm",
            "id": 1817752,
            "node_id": "MDQ6VXNlcjE4MTc3NTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1817752?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gmagogsfm",
            "html_url": "https://github.com/gmagogsfm",
            "followers_url": "https://api.github.com/users/gmagogsfm/followers",
            "following_url": "https://api.github.com/users/gmagogsfm/following{/other_user}",
            "gists_url": "https://api.github.com/users/gmagogsfm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gmagogsfm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gmagogsfm/subscriptions",
            "organizations_url": "https://api.github.com/users/gmagogsfm/orgs",
            "repos_url": "https://api.github.com/users/gmagogsfm/repos",
            "events_url": "https://api.github.com/users/gmagogsfm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gmagogsfm/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "gmagogsfm",
                "id": 1817752,
                "node_id": "MDQ6VXNlcjE4MTc3NTI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/1817752?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/gmagogsfm",
                "html_url": "https://github.com/gmagogsfm",
                "followers_url": "https://api.github.com/users/gmagogsfm/followers",
                "following_url": "https://api.github.com/users/gmagogsfm/following{/other_user}",
                "gists_url": "https://api.github.com/users/gmagogsfm/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/gmagogsfm/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gmagogsfm/subscriptions",
                "organizations_url": "https://api.github.com/users/gmagogsfm/orgs",
                "repos_url": "https://api.github.com/users/gmagogsfm/repos",
                "events_url": "https://api.github.com/users/gmagogsfm/events{/privacy}",
                "received_events_url": "https://api.github.com/users/gmagogsfm/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 3,
        "created_at": "2020-08-18T19:32:13Z",
        "updated_at": "2020-09-17T18:22:51Z",
        "closed_at": "2020-09-17T18:22:51Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "## \ud83d\ude80 Feature\r\n\r\nTorchScript's `sorted` function should work with tuple elements.\r\n\r\n## Motivation\r\n\r\nWorkarounds sorting primitive types are messy and without indices sometimes impossible to accomplish.\r\n\r\n## Additional context\r\n\r\n* LATTE has run into this issue.\r\n* It should be relatively simple to add the implementation by implementing a more generic comparison function in IValue.\n\ncc @suo @gmagogsfm",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/43219/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/43219/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/43039",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/43039/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/43039/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/43039/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/43039",
        "id": 678808600,
        "node_id": "MDU6SXNzdWU2Nzg4MDg2MDA=",
        "number": 43039,
        "title": "[JIT] Trace the ResNet18 with MKLDNN layout",
        "user": {
            "login": "stu1130",
            "id": 6792331,
            "node_id": "MDQ6VXNlcjY3OTIzMzE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6792331?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/stu1130",
            "html_url": "https://github.com/stu1130",
            "followers_url": "https://api.github.com/users/stu1130/followers",
            "following_url": "https://api.github.com/users/stu1130/following{/other_user}",
            "gists_url": "https://api.github.com/users/stu1130/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/stu1130/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/stu1130/subscriptions",
            "organizations_url": "https://api.github.com/users/stu1130/orgs",
            "repos_url": "https://api.github.com/users/stu1130/repos",
            "events_url": "https://api.github.com/users/stu1130/events{/privacy}",
            "received_events_url": "https://api.github.com/users/stu1130/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "suo",
            "id": 1617424,
            "node_id": "MDQ6VXNlcjE2MTc0MjQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1617424?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/suo",
            "html_url": "https://github.com/suo",
            "followers_url": "https://api.github.com/users/suo/followers",
            "following_url": "https://api.github.com/users/suo/following{/other_user}",
            "gists_url": "https://api.github.com/users/suo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/suo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/suo/subscriptions",
            "organizations_url": "https://api.github.com/users/suo/orgs",
            "repos_url": "https://api.github.com/users/suo/repos",
            "events_url": "https://api.github.com/users/suo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/suo/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "suo",
                "id": 1617424,
                "node_id": "MDQ6VXNlcjE2MTc0MjQ=",
                "avatar_url": "https://avatars.githubusercontent.com/u/1617424?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/suo",
                "html_url": "https://github.com/suo",
                "followers_url": "https://api.github.com/users/suo/followers",
                "following_url": "https://api.github.com/users/suo/following{/other_user}",
                "gists_url": "https://api.github.com/users/suo/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/suo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/suo/subscriptions",
                "organizations_url": "https://api.github.com/users/suo/orgs",
                "repos_url": "https://api.github.com/users/suo/repos",
                "events_url": "https://api.github.com/users/suo/events{/privacy}",
                "received_events_url": "https://api.github.com/users/suo/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 2,
        "created_at": "2020-08-14T00:00:58Z",
        "updated_at": "2021-07-19T18:06:01Z",
        "closed_at": "2021-07-19T18:06:01Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## \u2753 Questions and Help\r\n\r\nDoes JIT trace support the model with MKLDNN layout?\r\n```\r\nimport torch\r\nimport torchvision\r\nfrom torch.utils import mkldnn as mkldnn_utils\r\n\r\n# An instance of your model.\r\nmodel = torchvision.models.resnet18(pretrained=True)\r\n# Switch the model to eval model\r\nmodel.eval()\r\n\r\nmodel = mkldnn_utils.to_mkldnn(model)\r\n\r\n# An example input you would normally provide to your model's forward() method.\r\nexample = torch.rand(1, 3, 224, 224).to_mkldnn()\r\n\r\n# Use torch.jit.trace to generate a torch.jit.ScriptModule via tracing.\r\ntraced_script_module = torch.jit.trace(model, example)\r\n\r\n# Save the TorchScript model\r\ntraced_script_module.save(\"traced_resnet_model.pt\")\r\n```\r\n```\r\nTraceback (most recent call last):\r\n  File \"pytorch.py\", line 17, in <module>\r\n    traced_script_module = torch.jit.trace(model, example)\r\n  File \"/home/ubuntu/.local/lib/python3.6/site-packages/torch/jit/__init__.py\", line 955, in trace\r\n    check_tolerance, strict, _force_outplace, _module_class)\r\n  File \"/home/ubuntu/.local/lib/python3.6/site-packages/torch/jit/__init__.py\", line 1119, in trace_module\r\n    check_tolerance, strict, _force_outplace, True, _module_class)\r\n  File \"/home/ubuntu/.local/lib/python3.6/site-packages/torch/autograd/grad_mode.py\", line 15, in decorate_context\r\n    return func(*args, **kwargs)\r\n  File \"/home/ubuntu/.local/lib/python3.6/site-packages/torch/jit/__init__.py\", line 597, in _check_trace\r\n    copied_dict[name] = _clone_inputs(data)\r\n  File \"/home/ubuntu/.local/lib/python3.6/site-packages/torch/jit/__init__.py\", line 450, in _clone_inputs\r\n    clone_input, condition_msg=\"tensors\")(args)\r\n  File \"/home/ubuntu/.local/lib/python3.6/site-packages/torch/autograd/function.py\", line 263, in _map\r\n    return fn(obj)\r\n  File \"/home/ubuntu/.local/lib/python3.6/site-packages/torch/jit/__init__.py\", line 443, in clone_input\r\n    v = a.detach().clone(memory_format=torch.preserve_format).requires_grad_(a.requires_grad)\r\nRuntimeError: unsupported memory format option Preserve\r\n```\n\ncc @suo @gmagogsfm",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/43039/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/43039/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/42600",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/42600/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/42600/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/42600/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/42600",
        "id": 673598592,
        "node_id": "MDU6SXNzdWU2NzM1OTg1OTI=",
        "number": 42600,
        "title": "Support forward pre-hooks for modules in TorchScript",
        "user": {
            "login": "yf225",
            "id": 4063635,
            "node_id": "MDQ6VXNlcjQwNjM2MzU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4063635?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yf225",
            "html_url": "https://github.com/yf225",
            "followers_url": "https://api.github.com/users/yf225/followers",
            "following_url": "https://api.github.com/users/yf225/following{/other_user}",
            "gists_url": "https://api.github.com/users/yf225/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yf225/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yf225/subscriptions",
            "organizations_url": "https://api.github.com/users/yf225/orgs",
            "repos_url": "https://api.github.com/users/yf225/repos",
            "events_url": "https://api.github.com/users/yf225/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yf225/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 2203967632,
                "node_id": "MDU6TGFiZWwyMjAzOTY3NjMy",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/weeks",
                "name": "weeks",
                "color": "e5808f",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "Lilyjjo",
            "id": 35852084,
            "node_id": "MDQ6VXNlcjM1ODUyMDg0",
            "avatar_url": "https://avatars.githubusercontent.com/u/35852084?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Lilyjjo",
            "html_url": "https://github.com/Lilyjjo",
            "followers_url": "https://api.github.com/users/Lilyjjo/followers",
            "following_url": "https://api.github.com/users/Lilyjjo/following{/other_user}",
            "gists_url": "https://api.github.com/users/Lilyjjo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Lilyjjo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Lilyjjo/subscriptions",
            "organizations_url": "https://api.github.com/users/Lilyjjo/orgs",
            "repos_url": "https://api.github.com/users/Lilyjjo/repos",
            "events_url": "https://api.github.com/users/Lilyjjo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Lilyjjo/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "Lilyjjo",
                "id": 35852084,
                "node_id": "MDQ6VXNlcjM1ODUyMDg0",
                "avatar_url": "https://avatars.githubusercontent.com/u/35852084?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/Lilyjjo",
                "html_url": "https://github.com/Lilyjjo",
                "followers_url": "https://api.github.com/users/Lilyjjo/followers",
                "following_url": "https://api.github.com/users/Lilyjjo/following{/other_user}",
                "gists_url": "https://api.github.com/users/Lilyjjo/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/Lilyjjo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Lilyjjo/subscriptions",
                "organizations_url": "https://api.github.com/users/Lilyjjo/orgs",
                "repos_url": "https://api.github.com/users/Lilyjjo/repos",
                "events_url": "https://api.github.com/users/Lilyjjo/events{/privacy}",
                "received_events_url": "https://api.github.com/users/Lilyjjo/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 3,
        "created_at": "2020-08-05T14:47:52Z",
        "updated_at": "2021-02-08T20:57:13Z",
        "closed_at": "2021-02-08T20:57:12Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "As part of the PyPer model TorchScript conversion work, we introduced a concept called \"placeholder module\" which has the same forward signature as the actual module, but only some of them are replaced with the actual module in the lazy initialization step before the parent module's first forward call. Here is a minimal example:\r\n\r\n```python\r\nclass TestModule(torch.nn.Module):\r\n    def __init__(self):\r\n        super(TestModule, self).__init__()\r\n        self.mod_a = create_placeholder_module(ModuleA)\r\n        self.mod_b = create_placeholder_module(ModuleB)\r\n\r\n    def init_params(self, inputs):\r\n        if inputs.shape[0] == 1:\r\n            self.mod_a = ModuleA(inputs.shape[1])  # Use input to create actual module\r\n        elif inputs.shape[0] == 2:\r\n            self.mod_b = ModuleB(inputs.shape[1])  # Use input to create actual module\r\n\r\n    def forward(self, inputs):\r\n        if inputs.shape[0] == 1:\r\n            return self.mod_a(inputs)\r\n        elif inputs.shape[0] == 2:\r\n            return self.mod_b(inputs)\r\n\r\nm = TestModule()\r\nm.init_params(torch.randn(1, 3))  # only `self.mod_a` is initialized\r\nm_scripted = torch.jit.script(m)\r\n\r\nm_scripted(torch.randn(1, 3))  # behave as expected\r\nm_scripted(torch.randn(2, 3))  # TODO: we want to throw error in this case\r\n```\r\n\r\nThis design works for us, but we do want to error out when user calls into a placeholder module (i.e. the `inputs.shape[0] == 2` branch). We believe one way to support this is to add a forward pre-hook to all placeholder modules, and we are curious about the progress on https://github.com/pytorch/pytorch/issues/29037 and https://github.com/pytorch/pytorch/pull/36183. **This will make PyPer scripted models much easier to use and gives better error messages when users pass in an unsupported input**.\r\n\r\nThanks!\r\n\r\ncc. @wanchaol @suo\r\n\r\ncc @suo @gmagogsfm",
        "closed_by": {
            "login": "Lilyjjo",
            "id": 35852084,
            "node_id": "MDQ6VXNlcjM1ODUyMDg0",
            "avatar_url": "https://avatars.githubusercontent.com/u/35852084?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Lilyjjo",
            "html_url": "https://github.com/Lilyjjo",
            "followers_url": "https://api.github.com/users/Lilyjjo/followers",
            "following_url": "https://api.github.com/users/Lilyjjo/following{/other_user}",
            "gists_url": "https://api.github.com/users/Lilyjjo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Lilyjjo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Lilyjjo/subscriptions",
            "organizations_url": "https://api.github.com/users/Lilyjjo/orgs",
            "repos_url": "https://api.github.com/users/Lilyjjo/repos",
            "events_url": "https://api.github.com/users/Lilyjjo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Lilyjjo/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/42600/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/42600/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/42462",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/42462/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/42462/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/42462/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/42462",
        "id": 672178571,
        "node_id": "MDU6SXNzdWU2NzIxNzg1NzE=",
        "number": 42462,
        "title": "ASAN failure on module freezing",
        "user": {
            "login": "vkuzo",
            "id": 1622561,
            "node_id": "MDQ6VXNlcjE2MjI1NjE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1622561?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vkuzo",
            "html_url": "https://github.com/vkuzo",
            "followers_url": "https://api.github.com/users/vkuzo/followers",
            "following_url": "https://api.github.com/users/vkuzo/following{/other_user}",
            "gists_url": "https://api.github.com/users/vkuzo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vkuzo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vkuzo/subscriptions",
            "organizations_url": "https://api.github.com/users/vkuzo/orgs",
            "repos_url": "https://api.github.com/users/vkuzo/repos",
            "events_url": "https://api.github.com/users/vkuzo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vkuzo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "bzinodev",
            "id": 55170918,
            "node_id": "MDQ6VXNlcjU1MTcwOTE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/55170918?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bzinodev",
            "html_url": "https://github.com/bzinodev",
            "followers_url": "https://api.github.com/users/bzinodev/followers",
            "following_url": "https://api.github.com/users/bzinodev/following{/other_user}",
            "gists_url": "https://api.github.com/users/bzinodev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bzinodev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bzinodev/subscriptions",
            "organizations_url": "https://api.github.com/users/bzinodev/orgs",
            "repos_url": "https://api.github.com/users/bzinodev/repos",
            "events_url": "https://api.github.com/users/bzinodev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bzinodev/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "bzinodev",
                "id": 55170918,
                "node_id": "MDQ6VXNlcjU1MTcwOTE4",
                "avatar_url": "https://avatars.githubusercontent.com/u/55170918?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/bzinodev",
                "html_url": "https://github.com/bzinodev",
                "followers_url": "https://api.github.com/users/bzinodev/followers",
                "following_url": "https://api.github.com/users/bzinodev/following{/other_user}",
                "gists_url": "https://api.github.com/users/bzinodev/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/bzinodev/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bzinodev/subscriptions",
                "organizations_url": "https://api.github.com/users/bzinodev/orgs",
                "repos_url": "https://api.github.com/users/bzinodev/repos",
                "events_url": "https://api.github.com/users/bzinodev/events{/privacy}",
                "received_events_url": "https://api.github.com/users/bzinodev/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-08-03T15:59:34Z",
        "updated_at": "2020-08-11T15:46:18Z",
        "closed_at": "2020-08-11T15:46:18Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\nASAN failures on master when calling module freezing on optimize_for_mobile on a module which has a child module.\r\n\r\nFor context, this is blocking full testing of https://github.com/pytorch/pytorch/pull/42041\r\n\r\n## To Reproduce\r\n\r\n1. patch this PR (https://github.com/pytorch/pytorch/pull/42461)\r\n2. build with ASAN and run the test case, it will fail:\r\n\r\n```\r\nUSE_ASAN=1 USE_CUDA=0 python setup.py develop\r\nLD_PRELOAD=/usr/lib64/libasan.so.4 python test/test_mobile_optimizer.py TestOptimizer.test_optimize_for_mobile_asan\r\n\r\n// output tail: https://gist.github.com/vkuzo/7a0018b9e10ffe64dab0ac7381479f23\r\n```\r\n\r\n## Expected behavior\r\n\r\nno ASAN failures\r\n\r\n\r\n\n\ncc @suo @gmagogsfm",
        "closed_by": {
            "login": "vkuzo",
            "id": 1622561,
            "node_id": "MDQ6VXNlcjE2MjI1NjE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1622561?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vkuzo",
            "html_url": "https://github.com/vkuzo",
            "followers_url": "https://api.github.com/users/vkuzo/followers",
            "following_url": "https://api.github.com/users/vkuzo/following{/other_user}",
            "gists_url": "https://api.github.com/users/vkuzo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vkuzo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vkuzo/subscriptions",
            "organizations_url": "https://api.github.com/users/vkuzo/orgs",
            "repos_url": "https://api.github.com/users/vkuzo/repos",
            "events_url": "https://api.github.com/users/vkuzo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vkuzo/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/42462/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/42462/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/42375",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/42375/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/42375/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/42375/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/42375",
        "id": 670088918,
        "node_id": "MDU6SXNzdWU2NzAwODg5MTg=",
        "number": 42375,
        "title": "Torchscript missing `sorted` support for str",
        "user": {
            "login": "ailzhang",
            "id": 5248122,
            "node_id": "MDQ6VXNlcjUyNDgxMjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5248122?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ailzhang",
            "html_url": "https://github.com/ailzhang",
            "followers_url": "https://api.github.com/users/ailzhang/followers",
            "following_url": "https://api.github.com/users/ailzhang/following{/other_user}",
            "gists_url": "https://api.github.com/users/ailzhang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ailzhang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ailzhang/subscriptions",
            "organizations_url": "https://api.github.com/users/ailzhang/orgs",
            "repos_url": "https://api.github.com/users/ailzhang/repos",
            "events_url": "https://api.github.com/users/ailzhang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ailzhang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "gmagogsfm",
            "id": 1817752,
            "node_id": "MDQ6VXNlcjE4MTc3NTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1817752?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gmagogsfm",
            "html_url": "https://github.com/gmagogsfm",
            "followers_url": "https://api.github.com/users/gmagogsfm/followers",
            "following_url": "https://api.github.com/users/gmagogsfm/following{/other_user}",
            "gists_url": "https://api.github.com/users/gmagogsfm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gmagogsfm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gmagogsfm/subscriptions",
            "organizations_url": "https://api.github.com/users/gmagogsfm/orgs",
            "repos_url": "https://api.github.com/users/gmagogsfm/repos",
            "events_url": "https://api.github.com/users/gmagogsfm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gmagogsfm/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "gmagogsfm",
                "id": 1817752,
                "node_id": "MDQ6VXNlcjE4MTc3NTI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/1817752?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/gmagogsfm",
                "html_url": "https://github.com/gmagogsfm",
                "followers_url": "https://api.github.com/users/gmagogsfm/followers",
                "following_url": "https://api.github.com/users/gmagogsfm/following{/other_user}",
                "gists_url": "https://api.github.com/users/gmagogsfm/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/gmagogsfm/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gmagogsfm/subscriptions",
                "organizations_url": "https://api.github.com/users/gmagogsfm/orgs",
                "repos_url": "https://api.github.com/users/gmagogsfm/repos",
                "events_url": "https://api.github.com/users/gmagogsfm/events{/privacy}",
                "received_events_url": "https://api.github.com/users/gmagogsfm/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 3,
        "created_at": "2020-07-31T18:23:18Z",
        "updated_at": "2020-08-04T22:28:06Z",
        "closed_at": "2020-08-04T22:28:06Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "\r\n```\r\nclass TestModule(torch.nn.Module):\r\n    def __init__(self):\r\n        super(TestModule, self).__init__()\r\n        \r\n    def forward(self, list_of_str: List[str]):\r\n        return sorted(list_of_str)\r\n\r\nm = TestModule()\r\nm_scripted = torch.jit.script(m)\r\n# gives runtime error\r\nm_scripted([\"str3\", \"str2\", \"str1\"]) \r\n```\r\n\r\nRuntimeError: To sort a list of str must be of Tensors, ints, floats, bools or a User Defined Class that defines the __lt__ compare method, got list of str\n\ncc @suo @gmagogsfm",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/42375/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/42375/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/42354",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/42354/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/42354/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/42354/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/42354",
        "id": 669507526,
        "node_id": "MDU6SXNzdWU2Njk1MDc1MjY=",
        "number": 42354,
        "title": "%-based string format should be supported in TorchScript",
        "user": {
            "login": "gmagogsfm",
            "id": 1817752,
            "node_id": "MDQ6VXNlcjE4MTc3NTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1817752?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gmagogsfm",
            "html_url": "https://github.com/gmagogsfm",
            "followers_url": "https://api.github.com/users/gmagogsfm/followers",
            "following_url": "https://api.github.com/users/gmagogsfm/following{/other_user}",
            "gists_url": "https://api.github.com/users/gmagogsfm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gmagogsfm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gmagogsfm/subscriptions",
            "organizations_url": "https://api.github.com/users/gmagogsfm/orgs",
            "repos_url": "https://api.github.com/users/gmagogsfm/repos",
            "events_url": "https://api.github.com/users/gmagogsfm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gmagogsfm/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1027606656,
                "node_id": "MDU6TGFiZWwxMDI3NjA2NjU2",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20bootcamp",
                "name": "module: bootcamp",
                "color": "f7e101",
                "default": false,
                "description": "We plan to do a full writeup on the issue, and then get someone to do it for onboarding"
            },
            {
                "id": 2203967632,
                "node_id": "MDU6TGFiZWwyMjAzOTY3NjMy",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/weeks",
                "name": "weeks",
                "color": "e5808f",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "ansley",
            "id": 59447410,
            "node_id": "MDQ6VXNlcjU5NDQ3NDEw",
            "avatar_url": "https://avatars.githubusercontent.com/u/59447410?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ansley",
            "html_url": "https://github.com/ansley",
            "followers_url": "https://api.github.com/users/ansley/followers",
            "following_url": "https://api.github.com/users/ansley/following{/other_user}",
            "gists_url": "https://api.github.com/users/ansley/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ansley/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ansley/subscriptions",
            "organizations_url": "https://api.github.com/users/ansley/orgs",
            "repos_url": "https://api.github.com/users/ansley/repos",
            "events_url": "https://api.github.com/users/ansley/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ansley/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "ansley",
                "id": 59447410,
                "node_id": "MDQ6VXNlcjU5NDQ3NDEw",
                "avatar_url": "https://avatars.githubusercontent.com/u/59447410?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ansley",
                "html_url": "https://github.com/ansley",
                "followers_url": "https://api.github.com/users/ansley/followers",
                "following_url": "https://api.github.com/users/ansley/following{/other_user}",
                "gists_url": "https://api.github.com/users/ansley/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ansley/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ansley/subscriptions",
                "organizations_url": "https://api.github.com/users/ansley/orgs",
                "repos_url": "https://api.github.com/users/ansley/repos",
                "events_url": "https://api.github.com/users/ansley/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ansley/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 2,
        "created_at": "2020-07-31T07:27:48Z",
        "updated_at": "2020-10-21T02:10:39Z",
        "closed_at": "2020-10-21T02:10:39Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "## \ud83d\ude80 Feature\r\nSupport %-based string formatting in TorchScript.\r\n\r\n## Motivation\r\n\r\nIt is commonly used to construct strings in Python, even though there is easy workaround of using \"str.format\", it is still nice to have.\r\n\r\n## Pitch\r\n\r\n%-based string formatting should work in TorchScript\r\n\r\n```\r\n@torch.jit.script\r\ndef format_str(s: str) -> str:\r\n    return \"This is my %s in template\" % s\r\n```\r\n\n\ncc @suo @gmagogsfm",
        "closed_by": {
            "login": "ansley",
            "id": 59447410,
            "node_id": "MDQ6VXNlcjU5NDQ3NDEw",
            "avatar_url": "https://avatars.githubusercontent.com/u/59447410?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ansley",
            "html_url": "https://github.com/ansley",
            "followers_url": "https://api.github.com/users/ansley/followers",
            "following_url": "https://api.github.com/users/ansley/following{/other_user}",
            "gists_url": "https://api.github.com/users/ansley/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ansley/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ansley/subscriptions",
            "organizations_url": "https://api.github.com/users/ansley/orgs",
            "repos_url": "https://api.github.com/users/ansley/repos",
            "events_url": "https://api.github.com/users/ansley/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ansley/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/42354/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/42354/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/41882",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/41882/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/41882/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/41882/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/41882",
        "id": 664086323,
        "node_id": "MDU6SXNzdWU2NjQwODYzMjM=",
        "number": 41882,
        "title": "[JIT] Module cloning fails with certain hierarchies involving module interfaces",
        "user": {
            "login": "SplitInfinity",
            "id": 4392003,
            "node_id": "MDQ6VXNlcjQzOTIwMDM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4392003?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SplitInfinity",
            "html_url": "https://github.com/SplitInfinity",
            "followers_url": "https://api.github.com/users/SplitInfinity/followers",
            "following_url": "https://api.github.com/users/SplitInfinity/following{/other_user}",
            "gists_url": "https://api.github.com/users/SplitInfinity/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SplitInfinity/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SplitInfinity/subscriptions",
            "organizations_url": "https://api.github.com/users/SplitInfinity/orgs",
            "repos_url": "https://api.github.com/users/SplitInfinity/repos",
            "events_url": "https://api.github.com/users/SplitInfinity/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SplitInfinity/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 443484135,
                "node_id": "MDU6TGFiZWw0NDM0ODQxMzU=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/high%20priority",
                "name": "high priority",
                "color": "F22613",
                "default": false,
                "description": null
            },
            {
                "id": 466131885,
                "node_id": "MDU6TGFiZWw0NjYxMzE4ODU=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triage%20review",
                "name": "triage review",
                "color": "cc317c",
                "default": false,
                "description": ""
            },
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "wanchaol",
            "id": 9443650,
            "node_id": "MDQ6VXNlcjk0NDM2NTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9443650?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wanchaol",
            "html_url": "https://github.com/wanchaol",
            "followers_url": "https://api.github.com/users/wanchaol/followers",
            "following_url": "https://api.github.com/users/wanchaol/following{/other_user}",
            "gists_url": "https://api.github.com/users/wanchaol/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wanchaol/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wanchaol/subscriptions",
            "organizations_url": "https://api.github.com/users/wanchaol/orgs",
            "repos_url": "https://api.github.com/users/wanchaol/repos",
            "events_url": "https://api.github.com/users/wanchaol/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wanchaol/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "wanchaol",
                "id": 9443650,
                "node_id": "MDQ6VXNlcjk0NDM2NTA=",
                "avatar_url": "https://avatars.githubusercontent.com/u/9443650?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/wanchaol",
                "html_url": "https://github.com/wanchaol",
                "followers_url": "https://api.github.com/users/wanchaol/followers",
                "following_url": "https://api.github.com/users/wanchaol/following{/other_user}",
                "gists_url": "https://api.github.com/users/wanchaol/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/wanchaol/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wanchaol/subscriptions",
                "organizations_url": "https://api.github.com/users/wanchaol/orgs",
                "repos_url": "https://api.github.com/users/wanchaol/repos",
                "events_url": "https://api.github.com/users/wanchaol/events{/privacy}",
                "received_events_url": "https://api.github.com/users/wanchaol/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-07-22T22:23:43Z",
        "updated_at": "2020-07-31T17:26:41Z",
        "closed_at": "2020-07-31T17:26:41Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\n<!-- A clear and concise description of what the bug is. -->\r\n\r\n## To Reproduce\r\n**Python**\r\n```\r\nimport torch\r\nimport torch.nn as nn\r\n\r\n        \r\n@torch.jit.interface\r\nclass OperatorIf(nn.Module):\r\n    def forward(self, inp: torch.Tensor) -> torch.Tensor:\r\n        pass\r\n\r\n\r\nclass Operator(nn.Module):\r\n    def __init__(self, a):\r\n        super().__init__()\r\n        self.a = a\r\n        \r\n    def forward(self, inp: torch.Tensor) -> torch.Tensor:\r\n        return self.a * (inp + self.a)\r\n        \r\n\r\nclass Inner(nn.Module):\r\n    op: OperatorIf\r\n    def __init__(self, op):\r\n        super().__init__()\r\n        self.op = op\r\n        \r\n    def forward(self, inp):\r\n        return self.op(inp)\r\n\r\n\r\nclass Outer(nn.Module):\r\n    def __init__(self):\r\n        super().__init__()\r\n        self.inner_a = Inner(Operator(1))\r\n        self.inner_b = Inner(Operator(3.0))\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    s = torch.jit.script(Outer())\r\n    torch.jit.save(s, \"/tmp/s.pt\")\r\n```\r\n\r\n**C++**\r\n```\r\n  std::ifstream in(\"/tmp/s.pt\");\r\n  auto m = torch::jit::load(in);\r\n  auto cloned = m.clone();\r\n```\r\n## Expected behavior\r\nModule clones successfully or a clear error message is shown explaining the problem.\r\n\r\n## Actual behaviour\r\nException is thrown:\r\n```\r\nterminate called after throwing an instance of 'c10::Error'\r\n  what():  __torch__.___torch_mangle_3.Operator is not compatible with the type __torch__.___torch_mangle_2.Operator for the field 'op'\r\n```\r\n\r\ncc @ezyang @gchanan @zou3519 @suo @gmagogsfm",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/41882/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/41882/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/41865",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/41865/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/41865/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/41865/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/41865",
        "id": 664011650,
        "node_id": "MDU6SXNzdWU2NjQwMTE2NTA=",
        "number": 41865,
        "title": "Poor performance of dynamic quantazation",
        "user": {
            "login": "estrulyov",
            "id": 51928006,
            "node_id": "MDQ6VXNlcjUxOTI4MDA2",
            "avatar_url": "https://avatars.githubusercontent.com/u/51928006?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/estrulyov",
            "html_url": "https://github.com/estrulyov",
            "followers_url": "https://api.github.com/users/estrulyov/followers",
            "following_url": "https://api.github.com/users/estrulyov/following{/other_user}",
            "gists_url": "https://api.github.com/users/estrulyov/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/estrulyov/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/estrulyov/subscriptions",
            "organizations_url": "https://api.github.com/users/estrulyov/orgs",
            "repos_url": "https://api.github.com/users/estrulyov/repos",
            "events_url": "https://api.github.com/users/estrulyov/events{/privacy}",
            "received_events_url": "https://api.github.com/users/estrulyov/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 443484135,
                "node_id": "MDU6TGFiZWw0NDM0ODQxMzU=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/high%20priority",
                "name": "high priority",
                "color": "F22613",
                "default": false,
                "description": null
            },
            {
                "id": 466131885,
                "node_id": "MDU6TGFiZWw0NjYxMzE4ODU=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triage%20review",
                "name": "triage review",
                "color": "cc317c",
                "default": false,
                "description": ""
            },
            {
                "id": 679952992,
                "node_id": "MDU6TGFiZWw2Nzk5NTI5OTI=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20performance",
                "name": "module: performance",
                "color": "f7e101",
                "default": false,
                "description": "Issues related to performance, either of kernel code or framework glue"
            },
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 912691507,
                "node_id": "MDU6TGFiZWw5MTI2OTE1MDc=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20internals",
                "name": "module: internals",
                "color": "f7e101",
                "default": false,
                "description": "Related to internal abstractions in c10 and ATen"
            },
            {
                "id": 1031340614,
                "node_id": "MDU6TGFiZWwxMDMxMzQwNjE0",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20quantization",
                "name": "oncall: quantization",
                "color": "f7e101",
                "default": false,
                "description": "Quantization support in PyTorch"
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            },
            {
                "id": 2203967172,
                "node_id": "MDU6TGFiZWwyMjAzOTY3MTcy",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/days",
                "name": "days",
                "color": "77f497",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "wconstab",
            "id": 4984825,
            "node_id": "MDQ6VXNlcjQ5ODQ4MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4984825?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wconstab",
            "html_url": "https://github.com/wconstab",
            "followers_url": "https://api.github.com/users/wconstab/followers",
            "following_url": "https://api.github.com/users/wconstab/following{/other_user}",
            "gists_url": "https://api.github.com/users/wconstab/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wconstab/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wconstab/subscriptions",
            "organizations_url": "https://api.github.com/users/wconstab/orgs",
            "repos_url": "https://api.github.com/users/wconstab/repos",
            "events_url": "https://api.github.com/users/wconstab/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wconstab/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "wconstab",
                "id": 4984825,
                "node_id": "MDQ6VXNlcjQ5ODQ4MjU=",
                "avatar_url": "https://avatars.githubusercontent.com/u/4984825?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/wconstab",
                "html_url": "https://github.com/wconstab",
                "followers_url": "https://api.github.com/users/wconstab/followers",
                "following_url": "https://api.github.com/users/wconstab/following{/other_user}",
                "gists_url": "https://api.github.com/users/wconstab/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/wconstab/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wconstab/subscriptions",
                "organizations_url": "https://api.github.com/users/wconstab/orgs",
                "repos_url": "https://api.github.com/users/wconstab/repos",
                "events_url": "https://api.github.com/users/wconstab/events{/privacy}",
                "received_events_url": "https://api.github.com/users/wconstab/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 22,
        "created_at": "2020-07-22T19:55:37Z",
        "updated_at": "2020-08-06T20:08:25Z",
        "closed_at": "2020-08-05T18:53:21Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\nI am experimenting with dynamic quantization as described here:\r\nhttps://pytorch.org/blog/introduction-to-quantization-on-pytorch/\r\n\r\nI got a pretty good speedup when running with a single thread. (This is a GRPC server application that serves pytorch models). However, I do not see any improvement when using multiple threads and processing multiple concurrent requests. This does not happen when dynamic quantization is not being used: I see pretty good scaling up to about 10 threads. The CPU utilization when running with 10 threads but without quantization is well over 700%. However, when dynamic quantization is enabled, CPU load peaks around 150%, meaning that most of the cores sit idle.\r\n\r\nThis leads me to believe that python's GIL is the culprit. I noticed that in many parts of the code, pytorch does the following:\r\n\r\npybind11::gil_scoped_release no_gil;\r\n\r\nBut this does not happen in qlinear_dynamic.cpp which runs on dynamic quantization. This again implies that when dynamic quantization is used, GIL does not get released. This would certainly explain why we see improved performance with one thread but not with multiple threads.\r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior:\r\n\r\n1. Set OMP_NUM_THREADS=1 environment variable.\r\n\r\n2. Load any model and apply dynamic quantization:\r\n\r\nmodel = torch.quantization.quantize_dynamic(model, {torch.nn.Linear}, dtype=torch.qint8)\r\n\r\n3. Use threadpool to make multiple concurrent calls to to the model.\r\n\r\n## Expected behavior\r\n\r\nThroughput should scale with the number of threads in the threadpool.\r\n\r\n## Environment\r\n\r\nCollecting environment information...\r\nPyTorch version: 1.5.1\r\nIs debug build: No\r\nCUDA used to build PyTorch: None\r\n\r\nOS: Mac OSX 10.15.5\r\nGCC version: Could not collect\r\nCMake version: version 3.15.0\r\n\r\nPython version: 3.8\r\nIs CUDA available: No\r\nCUDA runtime version: No CUDA\r\nGPU models and configuration: No CUDA\r\nNvidia driver version: No CUDA\r\ncuDNN version: No CUDA\r\n\r\nVersions of relevant libraries:\r\n[pip3] msgpack-numpy==0.4.1\r\n[pip3] numpy==1.18.4\r\n[pip3] pytorch-pretrained-bert==0.6.2\r\n[pip3] torch==1.5.1\r\n[pip3] torchvision==0.6.1\r\n[conda] Could not collect\r\n\r\n## Additional context\r\n\r\nIf you remove the dynamic quantization line, single-thread performance is slower but throughput does scale properly with the number of threads in the threadpool.\r\n\n\ncc @ezyang @gchanan @zou3519 @suo @gmagogsfm @bhosmer @smessmer @ljk53 @jerryzh168 @jianyuh @dzhulgakov @raghuramank100 @jamesr66a @vkuzo @VitalyFedyunin @ngimel",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/41865/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/41865/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/41773",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/41773/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/41773/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/41773/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/41773",
        "id": 662477662,
        "node_id": "MDU6SXNzdWU2NjI0Nzc2NjI=",
        "number": 41773,
        "title": "[JIT] Support partially specified sizes/strides in IRParser",
        "user": {
            "login": "ZolotukhinM",
            "id": 4588111,
            "node_id": "MDQ6VXNlcjQ1ODgxMTE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4588111?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ZolotukhinM",
            "html_url": "https://github.com/ZolotukhinM",
            "followers_url": "https://api.github.com/users/ZolotukhinM/followers",
            "following_url": "https://api.github.com/users/ZolotukhinM/following{/other_user}",
            "gists_url": "https://api.github.com/users/ZolotukhinM/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ZolotukhinM/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ZolotukhinM/subscriptions",
            "organizations_url": "https://api.github.com/users/ZolotukhinM/orgs",
            "repos_url": "https://api.github.com/users/ZolotukhinM/repos",
            "events_url": "https://api.github.com/users/ZolotukhinM/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ZolotukhinM/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1027606656,
                "node_id": "MDU6TGFiZWwxMDI3NjA2NjU2",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20bootcamp",
                "name": "module: bootcamp",
                "color": "f7e101",
                "default": false,
                "description": "We plan to do a full writeup on the issue, and then get someone to do it for onboarding"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "Lilyjjo",
            "id": 35852084,
            "node_id": "MDQ6VXNlcjM1ODUyMDg0",
            "avatar_url": "https://avatars.githubusercontent.com/u/35852084?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Lilyjjo",
            "html_url": "https://github.com/Lilyjjo",
            "followers_url": "https://api.github.com/users/Lilyjjo/followers",
            "following_url": "https://api.github.com/users/Lilyjjo/following{/other_user}",
            "gists_url": "https://api.github.com/users/Lilyjjo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Lilyjjo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Lilyjjo/subscriptions",
            "organizations_url": "https://api.github.com/users/Lilyjjo/orgs",
            "repos_url": "https://api.github.com/users/Lilyjjo/repos",
            "events_url": "https://api.github.com/users/Lilyjjo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Lilyjjo/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "Lilyjjo",
                "id": 35852084,
                "node_id": "MDQ6VXNlcjM1ODUyMDg0",
                "avatar_url": "https://avatars.githubusercontent.com/u/35852084?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/Lilyjjo",
                "html_url": "https://github.com/Lilyjjo",
                "followers_url": "https://api.github.com/users/Lilyjjo/followers",
                "following_url": "https://api.github.com/users/Lilyjjo/following{/other_user}",
                "gists_url": "https://api.github.com/users/Lilyjjo/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/Lilyjjo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Lilyjjo/subscriptions",
                "organizations_url": "https://api.github.com/users/Lilyjjo/orgs",
                "repos_url": "https://api.github.com/users/Lilyjjo/repos",
                "events_url": "https://api.github.com/users/Lilyjjo/events{/privacy}",
                "received_events_url": "https://api.github.com/users/Lilyjjo/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 5,
        "created_at": "2020-07-21T02:07:43Z",
        "updated_at": "2020-09-22T16:04:53Z",
        "closed_at": "2020-09-22T16:04:53Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## \ud83d\ude80 Feature\r\nCurrently IRParser only supports types where all sizes/strides are known or none of them is known. E.g. the following types are supported:\r\n```\r\nFloat(10, 20)\r\nFloat(*, *)\r\n```\r\nBut the following type currently can not be parsed:\r\n```\r\nFloat(10, *)\r\n```\r\n\r\nTechnically it is possible to have such type, and hence IRParser should be able to parse it too.\r\n\r\n## Test Case\r\n```\r\nimport torch\r\ntest =  '''\r\n    graph(%x : Float(20, *)):\r\n        return (%x)\r\n'''\r\ngraph = torch._C.parse_ir(test)\r\n```\r\n\r\nCurrently it fails with the following error message:\r\n```\r\nRuntimeError: expected number but found '*' here:\r\n        graph(%x : Float(20, *)):\r\n                             ~ <--- HERE\r\n            return (%x)\r\n```\r\n\r\n## Implementation pointers\r\n#41507 could be used as an example of a IRParser change.\n\ncc @suo @gmagogsfm",
        "closed_by": {
            "login": "Lilyjjo",
            "id": 35852084,
            "node_id": "MDQ6VXNlcjM1ODUyMDg0",
            "avatar_url": "https://avatars.githubusercontent.com/u/35852084?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Lilyjjo",
            "html_url": "https://github.com/Lilyjjo",
            "followers_url": "https://api.github.com/users/Lilyjjo/followers",
            "following_url": "https://api.github.com/users/Lilyjjo/following{/other_user}",
            "gists_url": "https://api.github.com/users/Lilyjjo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Lilyjjo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Lilyjjo/subscriptions",
            "organizations_url": "https://api.github.com/users/Lilyjjo/orgs",
            "repos_url": "https://api.github.com/users/Lilyjjo/repos",
            "events_url": "https://api.github.com/users/Lilyjjo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Lilyjjo/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/41773/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/41773/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/41772",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/41772/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/41772/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/41772/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/41772",
        "id": 662474721,
        "node_id": "MDU6SXNzdWU2NjI0NzQ3MjE=",
        "number": 41772,
        "title": "[JIT] Change the way strides are printed in types",
        "user": {
            "login": "ZolotukhinM",
            "id": 4588111,
            "node_id": "MDQ6VXNlcjQ1ODgxMTE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4588111?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ZolotukhinM",
            "html_url": "https://github.com/ZolotukhinM",
            "followers_url": "https://api.github.com/users/ZolotukhinM/followers",
            "following_url": "https://api.github.com/users/ZolotukhinM/following{/other_user}",
            "gists_url": "https://api.github.com/users/ZolotukhinM/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ZolotukhinM/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ZolotukhinM/subscriptions",
            "organizations_url": "https://api.github.com/users/ZolotukhinM/orgs",
            "repos_url": "https://api.github.com/users/ZolotukhinM/repos",
            "events_url": "https://api.github.com/users/ZolotukhinM/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ZolotukhinM/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1027606656,
                "node_id": "MDU6TGFiZWwxMDI3NjA2NjU2",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20bootcamp",
                "name": "module: bootcamp",
                "color": "f7e101",
                "default": false,
                "description": "We plan to do a full writeup on the issue, and then get someone to do it for onboarding"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "ansley",
            "id": 59447410,
            "node_id": "MDQ6VXNlcjU5NDQ3NDEw",
            "avatar_url": "https://avatars.githubusercontent.com/u/59447410?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ansley",
            "html_url": "https://github.com/ansley",
            "followers_url": "https://api.github.com/users/ansley/followers",
            "following_url": "https://api.github.com/users/ansley/following{/other_user}",
            "gists_url": "https://api.github.com/users/ansley/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ansley/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ansley/subscriptions",
            "organizations_url": "https://api.github.com/users/ansley/orgs",
            "repos_url": "https://api.github.com/users/ansley/repos",
            "events_url": "https://api.github.com/users/ansley/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ansley/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "ansley",
                "id": 59447410,
                "node_id": "MDQ6VXNlcjU5NDQ3NDEw",
                "avatar_url": "https://avatars.githubusercontent.com/u/59447410?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ansley",
                "html_url": "https://github.com/ansley",
                "followers_url": "https://api.github.com/users/ansley/followers",
                "following_url": "https://api.github.com/users/ansley/following{/other_user}",
                "gists_url": "https://api.github.com/users/ansley/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ansley/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ansley/subscriptions",
                "organizations_url": "https://api.github.com/users/ansley/orgs",
                "repos_url": "https://api.github.com/users/ansley/repos",
                "events_url": "https://api.github.com/users/ansley/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ansley/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-07-21T02:03:07Z",
        "updated_at": "2020-10-09T17:53:39Z",
        "closed_at": "2020-10-09T17:53:39Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## \ud83d\ude80 Feature\r\nThe current format for strides in types in JIT IR is the following: `Dtype(size1:stride1, size2:stride2, ..., size_n:stride_n)`, so it looks like, e.g. `Float(30:200, 20:10, 10:1)`. People are often confused by this format, and probably something like `Float(30,20,10, strides=[200,10,1])` would be more user-friendly.\r\n\r\n## Test case\r\n```\r\nimport torch\r\n\r\ndef foo():\r\n    current =  '''\r\n        graph(%x : Float(20:10, 10:1)):\r\n            return (%x)\r\n    '''\r\n    graph = torch._C.parse_ir(current)\r\n    print(graph)\r\n\r\n    desired =  '''\r\n        graph(%x : Float(20, 10, strides=[10, 1])):\r\n            return (%x)\r\n    '''\r\n```\r\n\r\n## Implementation pointers\r\nThe change should be made in both IRPrinter and IRParser, since there are tests checking that we can parse what we print. It is expected that such change would break lots of tests, for instance `test/test_jit.py` - we will need to update all the failing tests as well.\r\n\r\n#41507 could be used as an example of a similar change.\n\ncc @suo @gmagogsfm",
        "closed_by": {
            "login": "ansley",
            "id": 59447410,
            "node_id": "MDQ6VXNlcjU5NDQ3NDEw",
            "avatar_url": "https://avatars.githubusercontent.com/u/59447410?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ansley",
            "html_url": "https://github.com/ansley",
            "followers_url": "https://api.github.com/users/ansley/followers",
            "following_url": "https://api.github.com/users/ansley/following{/other_user}",
            "gists_url": "https://api.github.com/users/ansley/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ansley/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ansley/subscriptions",
            "organizations_url": "https://api.github.com/users/ansley/orgs",
            "repos_url": "https://api.github.com/users/ansley/repos",
            "events_url": "https://api.github.com/users/ansley/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ansley/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/41772/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/41772/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/41761",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/41761/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/41761/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/41761/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/41761",
        "id": 662367794,
        "node_id": "MDU6SXNzdWU2NjIzNjc3OTQ=",
        "number": 41761,
        "title": "Replace blacklist/whitelist in torch/csrc/jit/passes/lower_tuples.cpp",
        "user": {
            "login": "SplitInfinity",
            "id": 4392003,
            "node_id": "MDQ6VXNlcjQzOTIwMDM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4392003?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SplitInfinity",
            "html_url": "https://github.com/SplitInfinity",
            "followers_url": "https://api.github.com/users/SplitInfinity/followers",
            "following_url": "https://api.github.com/users/SplitInfinity/following{/other_user}",
            "gists_url": "https://api.github.com/users/SplitInfinity/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SplitInfinity/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SplitInfinity/subscriptions",
            "organizations_url": "https://api.github.com/users/SplitInfinity/orgs",
            "repos_url": "https://api.github.com/users/SplitInfinity/repos",
            "events_url": "https://api.github.com/users/SplitInfinity/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SplitInfinity/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1150417147,
                "node_id": "MDU6TGFiZWwxMTUwNDE3MTQ3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/good%20first%20issue",
                "name": "good first issue",
                "color": "34c182",
                "default": true,
                "description": ""
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            },
            {
                "id": 1447309924,
                "node_id": "MDU6TGFiZWwxNDQ3MzA5OTI0",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/better-engineering",
                "name": "better-engineering",
                "color": "94f76a",
                "default": false,
                "description": "Relatively self-contained tasks for better engineering contributors"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-07-20T23:21:20Z",
        "updated_at": "2020-07-20T23:43:50Z",
        "closed_at": "2020-07-20T23:43:50Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "The goal of this issue is to replace all instances of *whitelist* and *blacklist* in `torch/csrc/jit/passes/lower_tuples.cpp`. See issue #41443 for more information.\n\ncc @suo @gmagogsfm",
        "closed_by": {
            "login": "SplitInfinity",
            "id": 4392003,
            "node_id": "MDQ6VXNlcjQzOTIwMDM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4392003?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SplitInfinity",
            "html_url": "https://github.com/SplitInfinity",
            "followers_url": "https://api.github.com/users/SplitInfinity/followers",
            "following_url": "https://api.github.com/users/SplitInfinity/following{/other_user}",
            "gists_url": "https://api.github.com/users/SplitInfinity/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SplitInfinity/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SplitInfinity/subscriptions",
            "organizations_url": "https://api.github.com/users/SplitInfinity/orgs",
            "repos_url": "https://api.github.com/users/SplitInfinity/repos",
            "events_url": "https://api.github.com/users/SplitInfinity/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SplitInfinity/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/41761/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/41761/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/41759",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/41759/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/41759/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/41759/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/41759",
        "id": 662367777,
        "node_id": "MDU6SXNzdWU2NjIzNjc3Nzc=",
        "number": 41759,
        "title": "Replace blacklist/whitelist in torch/csrc/jit/passes/quantization/helper.cpp",
        "user": {
            "login": "SplitInfinity",
            "id": 4392003,
            "node_id": "MDQ6VXNlcjQzOTIwMDM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4392003?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SplitInfinity",
            "html_url": "https://github.com/SplitInfinity",
            "followers_url": "https://api.github.com/users/SplitInfinity/followers",
            "following_url": "https://api.github.com/users/SplitInfinity/following{/other_user}",
            "gists_url": "https://api.github.com/users/SplitInfinity/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SplitInfinity/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SplitInfinity/subscriptions",
            "organizations_url": "https://api.github.com/users/SplitInfinity/orgs",
            "repos_url": "https://api.github.com/users/SplitInfinity/repos",
            "events_url": "https://api.github.com/users/SplitInfinity/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SplitInfinity/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1150417147,
                "node_id": "MDU6TGFiZWwxMTUwNDE3MTQ3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/good%20first%20issue",
                "name": "good first issue",
                "color": "34c182",
                "default": true,
                "description": ""
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            },
            {
                "id": 1447309924,
                "node_id": "MDU6TGFiZWwxNDQ3MzA5OTI0",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/better-engineering",
                "name": "better-engineering",
                "color": "94f76a",
                "default": false,
                "description": "Relatively self-contained tasks for better engineering contributors"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-07-20T23:21:19Z",
        "updated_at": "2020-07-20T23:43:37Z",
        "closed_at": "2020-07-20T23:43:37Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "The goal of this issue is to replace all instances of *whitelist* and *blacklist* in `torch/csrc/jit/passes/quantization/helper.cpp`. See issue #41443 for more information.\n\ncc @suo @gmagogsfm",
        "closed_by": {
            "login": "SplitInfinity",
            "id": 4392003,
            "node_id": "MDQ6VXNlcjQzOTIwMDM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4392003?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SplitInfinity",
            "html_url": "https://github.com/SplitInfinity",
            "followers_url": "https://api.github.com/users/SplitInfinity/followers",
            "following_url": "https://api.github.com/users/SplitInfinity/following{/other_user}",
            "gists_url": "https://api.github.com/users/SplitInfinity/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SplitInfinity/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SplitInfinity/subscriptions",
            "organizations_url": "https://api.github.com/users/SplitInfinity/orgs",
            "repos_url": "https://api.github.com/users/SplitInfinity/repos",
            "events_url": "https://api.github.com/users/SplitInfinity/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SplitInfinity/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/41759/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/41759/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/41755",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/41755/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/41755/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/41755/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/41755",
        "id": 662367728,
        "node_id": "MDU6SXNzdWU2NjIzNjc3Mjg=",
        "number": 41755,
        "title": "Replace blacklist/whitelist in torch/jit/_script.py",
        "user": {
            "login": "SplitInfinity",
            "id": 4392003,
            "node_id": "MDQ6VXNlcjQzOTIwMDM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4392003?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SplitInfinity",
            "html_url": "https://github.com/SplitInfinity",
            "followers_url": "https://api.github.com/users/SplitInfinity/followers",
            "following_url": "https://api.github.com/users/SplitInfinity/following{/other_user}",
            "gists_url": "https://api.github.com/users/SplitInfinity/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SplitInfinity/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SplitInfinity/subscriptions",
            "organizations_url": "https://api.github.com/users/SplitInfinity/orgs",
            "repos_url": "https://api.github.com/users/SplitInfinity/repos",
            "events_url": "https://api.github.com/users/SplitInfinity/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SplitInfinity/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1150417147,
                "node_id": "MDU6TGFiZWwxMTUwNDE3MTQ3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/good%20first%20issue",
                "name": "good first issue",
                "color": "34c182",
                "default": true,
                "description": ""
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            },
            {
                "id": 1447309924,
                "node_id": "MDU6TGFiZWwxNDQ3MzA5OTI0",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/better-engineering",
                "name": "better-engineering",
                "color": "94f76a",
                "default": false,
                "description": "Relatively self-contained tasks for better engineering contributors"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-07-20T23:21:15Z",
        "updated_at": "2020-07-20T23:43:20Z",
        "closed_at": "2020-07-20T23:43:20Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "The goal of this issue is to replace all instances of *whitelist* and *blacklist* in `torch/jit/_script.py`. See issue #41443 for more information.\n\ncc @suo @gmagogsfm",
        "closed_by": {
            "login": "SplitInfinity",
            "id": 4392003,
            "node_id": "MDQ6VXNlcjQzOTIwMDM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4392003?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SplitInfinity",
            "html_url": "https://github.com/SplitInfinity",
            "followers_url": "https://api.github.com/users/SplitInfinity/followers",
            "following_url": "https://api.github.com/users/SplitInfinity/following{/other_user}",
            "gists_url": "https://api.github.com/users/SplitInfinity/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SplitInfinity/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SplitInfinity/subscriptions",
            "organizations_url": "https://api.github.com/users/SplitInfinity/orgs",
            "repos_url": "https://api.github.com/users/SplitInfinity/repos",
            "events_url": "https://api.github.com/users/SplitInfinity/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SplitInfinity/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/41755/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/41755/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/41727",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/41727/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/41727/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/41727/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/41727",
        "id": 662367371,
        "node_id": "MDU6SXNzdWU2NjIzNjczNzE=",
        "number": 41727,
        "title": "Replace blacklist/whitelist in torch/jit/_recursive.py",
        "user": {
            "login": "SplitInfinity",
            "id": 4392003,
            "node_id": "MDQ6VXNlcjQzOTIwMDM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4392003?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SplitInfinity",
            "html_url": "https://github.com/SplitInfinity",
            "followers_url": "https://api.github.com/users/SplitInfinity/followers",
            "following_url": "https://api.github.com/users/SplitInfinity/following{/other_user}",
            "gists_url": "https://api.github.com/users/SplitInfinity/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SplitInfinity/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SplitInfinity/subscriptions",
            "organizations_url": "https://api.github.com/users/SplitInfinity/orgs",
            "repos_url": "https://api.github.com/users/SplitInfinity/repos",
            "events_url": "https://api.github.com/users/SplitInfinity/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SplitInfinity/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1150417147,
                "node_id": "MDU6TGFiZWwxMTUwNDE3MTQ3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/good%20first%20issue",
                "name": "good first issue",
                "color": "34c182",
                "default": true,
                "description": ""
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            },
            {
                "id": 1447309924,
                "node_id": "MDU6TGFiZWwxNDQ3MzA5OTI0",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/better-engineering",
                "name": "better-engineering",
                "color": "94f76a",
                "default": false,
                "description": "Relatively self-contained tasks for better engineering contributors"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-07-20T23:20:48Z",
        "updated_at": "2020-07-20T23:43:04Z",
        "closed_at": "2020-07-20T23:43:04Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "The goal of this issue is to replace all instances of *whitelist* and *blacklist* in `torch/jit/_recursive.py`. See issue #41443 for more information.\n\ncc @suo @gmagogsfm",
        "closed_by": {
            "login": "SplitInfinity",
            "id": 4392003,
            "node_id": "MDQ6VXNlcjQzOTIwMDM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4392003?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SplitInfinity",
            "html_url": "https://github.com/SplitInfinity",
            "followers_url": "https://api.github.com/users/SplitInfinity/followers",
            "following_url": "https://api.github.com/users/SplitInfinity/following{/other_user}",
            "gists_url": "https://api.github.com/users/SplitInfinity/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SplitInfinity/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SplitInfinity/subscriptions",
            "organizations_url": "https://api.github.com/users/SplitInfinity/orgs",
            "repos_url": "https://api.github.com/users/SplitInfinity/repos",
            "events_url": "https://api.github.com/users/SplitInfinity/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SplitInfinity/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/41727/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/41727/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/41724",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/41724/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/41724/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/41724/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/41724",
        "id": 662367342,
        "node_id": "MDU6SXNzdWU2NjIzNjczNDI=",
        "number": 41724,
        "title": "Replace blacklist/whitelist in torch/csrc/jit/passes/xnnpack_rewrite.h",
        "user": {
            "login": "SplitInfinity",
            "id": 4392003,
            "node_id": "MDQ6VXNlcjQzOTIwMDM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4392003?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SplitInfinity",
            "html_url": "https://github.com/SplitInfinity",
            "followers_url": "https://api.github.com/users/SplitInfinity/followers",
            "following_url": "https://api.github.com/users/SplitInfinity/following{/other_user}",
            "gists_url": "https://api.github.com/users/SplitInfinity/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SplitInfinity/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SplitInfinity/subscriptions",
            "organizations_url": "https://api.github.com/users/SplitInfinity/orgs",
            "repos_url": "https://api.github.com/users/SplitInfinity/repos",
            "events_url": "https://api.github.com/users/SplitInfinity/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SplitInfinity/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1150417147,
                "node_id": "MDU6TGFiZWwxMTUwNDE3MTQ3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/good%20first%20issue",
                "name": "good first issue",
                "color": "34c182",
                "default": true,
                "description": ""
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            },
            {
                "id": 1447309924,
                "node_id": "MDU6TGFiZWwxNDQ3MzA5OTI0",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/better-engineering",
                "name": "better-engineering",
                "color": "94f76a",
                "default": false,
                "description": "Relatively self-contained tasks for better engineering contributors"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-07-20T23:20:46Z",
        "updated_at": "2020-07-20T23:42:31Z",
        "closed_at": "2020-07-20T23:42:31Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "The goal of this issue is to replace all instances of *whitelist* and *blacklist* in `torch/csrc/jit/passes/xnnpack_rewrite.h`. See issue #41443 for more information.\n\ncc @suo @gmagogsfm",
        "closed_by": {
            "login": "SplitInfinity",
            "id": 4392003,
            "node_id": "MDQ6VXNlcjQzOTIwMDM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4392003?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SplitInfinity",
            "html_url": "https://github.com/SplitInfinity",
            "followers_url": "https://api.github.com/users/SplitInfinity/followers",
            "following_url": "https://api.github.com/users/SplitInfinity/following{/other_user}",
            "gists_url": "https://api.github.com/users/SplitInfinity/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SplitInfinity/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SplitInfinity/subscriptions",
            "organizations_url": "https://api.github.com/users/SplitInfinity/orgs",
            "repos_url": "https://api.github.com/users/SplitInfinity/repos",
            "events_url": "https://api.github.com/users/SplitInfinity/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SplitInfinity/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/41724/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/41724/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/41725",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/41725/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/41725/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/41725/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/41725",
        "id": 662367351,
        "node_id": "MDU6SXNzdWU2NjIzNjczNTE=",
        "number": 41725,
        "title": "Replace blacklist/whitelist in torch/csrc/jit/python/init.cpp",
        "user": {
            "login": "SplitInfinity",
            "id": 4392003,
            "node_id": "MDQ6VXNlcjQzOTIwMDM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4392003?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SplitInfinity",
            "html_url": "https://github.com/SplitInfinity",
            "followers_url": "https://api.github.com/users/SplitInfinity/followers",
            "following_url": "https://api.github.com/users/SplitInfinity/following{/other_user}",
            "gists_url": "https://api.github.com/users/SplitInfinity/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SplitInfinity/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SplitInfinity/subscriptions",
            "organizations_url": "https://api.github.com/users/SplitInfinity/orgs",
            "repos_url": "https://api.github.com/users/SplitInfinity/repos",
            "events_url": "https://api.github.com/users/SplitInfinity/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SplitInfinity/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1150417147,
                "node_id": "MDU6TGFiZWwxMTUwNDE3MTQ3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/good%20first%20issue",
                "name": "good first issue",
                "color": "34c182",
                "default": true,
                "description": ""
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            },
            {
                "id": 1447309924,
                "node_id": "MDU6TGFiZWwxNDQ3MzA5OTI0",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/better-engineering",
                "name": "better-engineering",
                "color": "94f76a",
                "default": false,
                "description": "Relatively self-contained tasks for better engineering contributors"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-07-20T23:20:46Z",
        "updated_at": "2020-07-20T23:42:47Z",
        "closed_at": "2020-07-20T23:42:47Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "The goal of this issue is to replace all instances of *whitelist* and *blacklist* in `torch/csrc/jit/python/init.cpp`. See issue #41443 for more information.\n\ncc @suo @gmagogsfm",
        "closed_by": {
            "login": "SplitInfinity",
            "id": 4392003,
            "node_id": "MDQ6VXNlcjQzOTIwMDM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4392003?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SplitInfinity",
            "html_url": "https://github.com/SplitInfinity",
            "followers_url": "https://api.github.com/users/SplitInfinity/followers",
            "following_url": "https://api.github.com/users/SplitInfinity/following{/other_user}",
            "gists_url": "https://api.github.com/users/SplitInfinity/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SplitInfinity/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SplitInfinity/subscriptions",
            "organizations_url": "https://api.github.com/users/SplitInfinity/orgs",
            "repos_url": "https://api.github.com/users/SplitInfinity/repos",
            "events_url": "https://api.github.com/users/SplitInfinity/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SplitInfinity/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/41725/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/41725/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/41723",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/41723/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/41723/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/41723/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/41723",
        "id": 662367328,
        "node_id": "MDU6SXNzdWU2NjIzNjczMjg=",
        "number": 41723,
        "title": "Replace blacklist/whitelist in torch/csrc/jit/passes/xnnpack_rewrite.cpp",
        "user": {
            "login": "SplitInfinity",
            "id": 4392003,
            "node_id": "MDQ6VXNlcjQzOTIwMDM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4392003?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SplitInfinity",
            "html_url": "https://github.com/SplitInfinity",
            "followers_url": "https://api.github.com/users/SplitInfinity/followers",
            "following_url": "https://api.github.com/users/SplitInfinity/following{/other_user}",
            "gists_url": "https://api.github.com/users/SplitInfinity/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SplitInfinity/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SplitInfinity/subscriptions",
            "organizations_url": "https://api.github.com/users/SplitInfinity/orgs",
            "repos_url": "https://api.github.com/users/SplitInfinity/repos",
            "events_url": "https://api.github.com/users/SplitInfinity/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SplitInfinity/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1150417147,
                "node_id": "MDU6TGFiZWwxMTUwNDE3MTQ3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/good%20first%20issue",
                "name": "good first issue",
                "color": "34c182",
                "default": true,
                "description": ""
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            },
            {
                "id": 1447309924,
                "node_id": "MDU6TGFiZWwxNDQ3MzA5OTI0",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/better-engineering",
                "name": "better-engineering",
                "color": "94f76a",
                "default": false,
                "description": "Relatively self-contained tasks for better engineering contributors"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-07-20T23:20:44Z",
        "updated_at": "2020-07-20T23:42:22Z",
        "closed_at": "2020-07-20T23:42:22Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "The goal of this issue is to replace all instances of *whitelist* and *blacklist* in `torch/csrc/jit/passes/xnnpack_rewrite.cpp`. See issue #41443 for more information.\n\ncc @suo @gmagogsfm",
        "closed_by": {
            "login": "SplitInfinity",
            "id": 4392003,
            "node_id": "MDQ6VXNlcjQzOTIwMDM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4392003?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SplitInfinity",
            "html_url": "https://github.com/SplitInfinity",
            "followers_url": "https://api.github.com/users/SplitInfinity/followers",
            "following_url": "https://api.github.com/users/SplitInfinity/following{/other_user}",
            "gists_url": "https://api.github.com/users/SplitInfinity/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SplitInfinity/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SplitInfinity/subscriptions",
            "organizations_url": "https://api.github.com/users/SplitInfinity/orgs",
            "repos_url": "https://api.github.com/users/SplitInfinity/repos",
            "events_url": "https://api.github.com/users/SplitInfinity/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SplitInfinity/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/41723/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/41723/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/41721",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/41721/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/41721/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/41721/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/41721",
        "id": 662367289,
        "node_id": "MDU6SXNzdWU2NjIzNjcyODk=",
        "number": 41721,
        "title": "Replace blacklist/whitelist in tools/jit/gen_unboxing_wrappers.py",
        "user": {
            "login": "SplitInfinity",
            "id": 4392003,
            "node_id": "MDQ6VXNlcjQzOTIwMDM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4392003?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SplitInfinity",
            "html_url": "https://github.com/SplitInfinity",
            "followers_url": "https://api.github.com/users/SplitInfinity/followers",
            "following_url": "https://api.github.com/users/SplitInfinity/following{/other_user}",
            "gists_url": "https://api.github.com/users/SplitInfinity/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SplitInfinity/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SplitInfinity/subscriptions",
            "organizations_url": "https://api.github.com/users/SplitInfinity/orgs",
            "repos_url": "https://api.github.com/users/SplitInfinity/repos",
            "events_url": "https://api.github.com/users/SplitInfinity/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SplitInfinity/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1150417147,
                "node_id": "MDU6TGFiZWwxMTUwNDE3MTQ3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/good%20first%20issue",
                "name": "good first issue",
                "color": "34c182",
                "default": true,
                "description": ""
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            },
            {
                "id": 1447309924,
                "node_id": "MDU6TGFiZWwxNDQ3MzA5OTI0",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/better-engineering",
                "name": "better-engineering",
                "color": "94f76a",
                "default": false,
                "description": "Relatively self-contained tasks for better engineering contributors"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-07-20T23:20:42Z",
        "updated_at": "2020-07-20T23:42:04Z",
        "closed_at": "2020-07-20T23:42:04Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "The goal of this issue is to replace all instances of *whitelist* and *blacklist* in `tools/jit/gen_unboxing_wrappers.py`. See issue #41443 for more information.\n\ncc @suo @gmagogsfm",
        "closed_by": {
            "login": "SplitInfinity",
            "id": 4392003,
            "node_id": "MDQ6VXNlcjQzOTIwMDM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4392003?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SplitInfinity",
            "html_url": "https://github.com/SplitInfinity",
            "followers_url": "https://api.github.com/users/SplitInfinity/followers",
            "following_url": "https://api.github.com/users/SplitInfinity/following{/other_user}",
            "gists_url": "https://api.github.com/users/SplitInfinity/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SplitInfinity/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SplitInfinity/subscriptions",
            "organizations_url": "https://api.github.com/users/SplitInfinity/orgs",
            "repos_url": "https://api.github.com/users/SplitInfinity/repos",
            "events_url": "https://api.github.com/users/SplitInfinity/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SplitInfinity/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/41721/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/41721/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/41717",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/41717/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/41717/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/41717/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/41717",
        "id": 662367238,
        "node_id": "MDU6SXNzdWU2NjIzNjcyMzg=",
        "number": 41717,
        "title": "Replace blacklist/whitelist in test/test_jit.py",
        "user": {
            "login": "SplitInfinity",
            "id": 4392003,
            "node_id": "MDQ6VXNlcjQzOTIwMDM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4392003?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SplitInfinity",
            "html_url": "https://github.com/SplitInfinity",
            "followers_url": "https://api.github.com/users/SplitInfinity/followers",
            "following_url": "https://api.github.com/users/SplitInfinity/following{/other_user}",
            "gists_url": "https://api.github.com/users/SplitInfinity/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SplitInfinity/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SplitInfinity/subscriptions",
            "organizations_url": "https://api.github.com/users/SplitInfinity/orgs",
            "repos_url": "https://api.github.com/users/SplitInfinity/repos",
            "events_url": "https://api.github.com/users/SplitInfinity/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SplitInfinity/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1150417147,
                "node_id": "MDU6TGFiZWwxMTUwNDE3MTQ3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/good%20first%20issue",
                "name": "good first issue",
                "color": "34c182",
                "default": true,
                "description": ""
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            },
            {
                "id": 1447309924,
                "node_id": "MDU6TGFiZWwxNDQ3MzA5OTI0",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/better-engineering",
                "name": "better-engineering",
                "color": "94f76a",
                "default": false,
                "description": "Relatively self-contained tasks for better engineering contributors"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-07-20T23:20:38Z",
        "updated_at": "2020-07-20T23:41:43Z",
        "closed_at": "2020-07-20T23:41:43Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "The goal of this issue is to replace all instances of *whitelist* and *blacklist* in `test/test_jit.py`. See issue #41443 for more information.\n\ncc @suo @gmagogsfm",
        "closed_by": {
            "login": "SplitInfinity",
            "id": 4392003,
            "node_id": "MDQ6VXNlcjQzOTIwMDM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4392003?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SplitInfinity",
            "html_url": "https://github.com/SplitInfinity",
            "followers_url": "https://api.github.com/users/SplitInfinity/followers",
            "following_url": "https://api.github.com/users/SplitInfinity/following{/other_user}",
            "gists_url": "https://api.github.com/users/SplitInfinity/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SplitInfinity/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SplitInfinity/subscriptions",
            "organizations_url": "https://api.github.com/users/SplitInfinity/orgs",
            "repos_url": "https://api.github.com/users/SplitInfinity/repos",
            "events_url": "https://api.github.com/users/SplitInfinity/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SplitInfinity/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/41717/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/41717/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/41617",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/41617/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/41617/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/41617/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/41617",
        "id": 659775542,
        "node_id": "MDU6SXNzdWU2NTk3NzU1NDI=",
        "number": 41617,
        "title": "Only first line of a multi-line source range is highlighted",
        "user": {
            "login": "gmagogsfm",
            "id": 1817752,
            "node_id": "MDQ6VXNlcjE4MTc3NTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1817752?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gmagogsfm",
            "html_url": "https://github.com/gmagogsfm",
            "followers_url": "https://api.github.com/users/gmagogsfm/followers",
            "following_url": "https://api.github.com/users/gmagogsfm/following{/other_user}",
            "gists_url": "https://api.github.com/users/gmagogsfm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gmagogsfm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gmagogsfm/subscriptions",
            "organizations_url": "https://api.github.com/users/gmagogsfm/orgs",
            "repos_url": "https://api.github.com/users/gmagogsfm/repos",
            "events_url": "https://api.github.com/users/gmagogsfm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gmagogsfm/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 2203967172,
                "node_id": "MDU6TGFiZWwyMjAzOTY3MTcy",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/days",
                "name": "days",
                "color": "77f497",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "Lilyjjo",
            "id": 35852084,
            "node_id": "MDQ6VXNlcjM1ODUyMDg0",
            "avatar_url": "https://avatars.githubusercontent.com/u/35852084?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Lilyjjo",
            "html_url": "https://github.com/Lilyjjo",
            "followers_url": "https://api.github.com/users/Lilyjjo/followers",
            "following_url": "https://api.github.com/users/Lilyjjo/following{/other_user}",
            "gists_url": "https://api.github.com/users/Lilyjjo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Lilyjjo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Lilyjjo/subscriptions",
            "organizations_url": "https://api.github.com/users/Lilyjjo/orgs",
            "repos_url": "https://api.github.com/users/Lilyjjo/repos",
            "events_url": "https://api.github.com/users/Lilyjjo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Lilyjjo/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "Lilyjjo",
                "id": 35852084,
                "node_id": "MDQ6VXNlcjM1ODUyMDg0",
                "avatar_url": "https://avatars.githubusercontent.com/u/35852084?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/Lilyjjo",
                "html_url": "https://github.com/Lilyjjo",
                "followers_url": "https://api.github.com/users/Lilyjjo/followers",
                "following_url": "https://api.github.com/users/Lilyjjo/following{/other_user}",
                "gists_url": "https://api.github.com/users/Lilyjjo/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/Lilyjjo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Lilyjjo/subscriptions",
                "organizations_url": "https://api.github.com/users/Lilyjjo/orgs",
                "repos_url": "https://api.github.com/users/Lilyjjo/repos",
                "events_url": "https://api.github.com/users/Lilyjjo/events{/privacy}",
                "received_events_url": "https://api.github.com/users/Lilyjjo/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-07-18T00:41:56Z",
        "updated_at": "2020-09-01T21:06:18Z",
        "closed_at": "2020-09-01T21:06:18Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "Show cased in [another issue](https://github.com/pytorch/pytorch/issues/41536) \r\n\r\nBasically, an entire if-else statement is supposed to be source of error. However, only first line is highlighted, leading users to think that the if condition is culprit:\r\n\r\n```\r\n def forward(self, my_bool: bool, x=EMPTY_FLOAT):\r\n        if my_bool:\r\n        ~~~~~~~~~~~...  <--- HERE\r\n            y = x\r\n        else:\r\n```\r\n\r\nIn fact it is the else block that's causing problem.\r\n\r\nThere are two ways of addressing it:\r\n1) I think most cases of multi-line source range error are results of insufficient pinpointing. In this particular case, the first statement of else block should be highlighted instead of entire if-else statement.\r\n2) Support multiple-line highlighting properly.\r\n\n\ncc @suo @gmagogsfm",
        "closed_by": {
            "login": "Lilyjjo",
            "id": 35852084,
            "node_id": "MDQ6VXNlcjM1ODUyMDg0",
            "avatar_url": "https://avatars.githubusercontent.com/u/35852084?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Lilyjjo",
            "html_url": "https://github.com/Lilyjjo",
            "followers_url": "https://api.github.com/users/Lilyjjo/followers",
            "following_url": "https://api.github.com/users/Lilyjjo/following{/other_user}",
            "gists_url": "https://api.github.com/users/Lilyjjo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Lilyjjo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Lilyjjo/subscriptions",
            "organizations_url": "https://api.github.com/users/Lilyjjo/orgs",
            "repos_url": "https://api.github.com/users/Lilyjjo/repos",
            "events_url": "https://api.github.com/users/Lilyjjo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Lilyjjo/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/41617/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/41617/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/41449",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/41449/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/41449/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/41449/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/41449",
        "id": 657027599,
        "node_id": "MDU6SXNzdWU2NTcwMjc1OTk=",
        "number": 41449,
        "title": "[jit] support boolean in dictionary",
        "user": {
            "login": "chenbohua3",
            "id": 19526090,
            "node_id": "MDQ6VXNlcjE5NTI2MDkw",
            "avatar_url": "https://avatars.githubusercontent.com/u/19526090?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chenbohua3",
            "html_url": "https://github.com/chenbohua3",
            "followers_url": "https://api.github.com/users/chenbohua3/followers",
            "following_url": "https://api.github.com/users/chenbohua3/following{/other_user}",
            "gists_url": "https://api.github.com/users/chenbohua3/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chenbohua3/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chenbohua3/subscriptions",
            "organizations_url": "https://api.github.com/users/chenbohua3/orgs",
            "repos_url": "https://api.github.com/users/chenbohua3/repos",
            "events_url": "https://api.github.com/users/chenbohua3/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chenbohua3/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1027606656,
                "node_id": "MDU6TGFiZWwxMDI3NjA2NjU2",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20bootcamp",
                "name": "module: bootcamp",
                "color": "f7e101",
                "default": false,
                "description": "We plan to do a full writeup on the issue, and then get someone to do it for onboarding"
            },
            {
                "id": 2203967172,
                "node_id": "MDU6TGFiZWwyMjAzOTY3MTcy",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/days",
                "name": "days",
                "color": "77f497",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "asuhan",
            "id": 246815,
            "node_id": "MDQ6VXNlcjI0NjgxNQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/246815?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/asuhan",
            "html_url": "https://github.com/asuhan",
            "followers_url": "https://api.github.com/users/asuhan/followers",
            "following_url": "https://api.github.com/users/asuhan/following{/other_user}",
            "gists_url": "https://api.github.com/users/asuhan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/asuhan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/asuhan/subscriptions",
            "organizations_url": "https://api.github.com/users/asuhan/orgs",
            "repos_url": "https://api.github.com/users/asuhan/repos",
            "events_url": "https://api.github.com/users/asuhan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/asuhan/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "asuhan",
                "id": 246815,
                "node_id": "MDQ6VXNlcjI0NjgxNQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/246815?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/asuhan",
                "html_url": "https://github.com/asuhan",
                "followers_url": "https://api.github.com/users/asuhan/followers",
                "following_url": "https://api.github.com/users/asuhan/following{/other_user}",
                "gists_url": "https://api.github.com/users/asuhan/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/asuhan/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/asuhan/subscriptions",
                "organizations_url": "https://api.github.com/users/asuhan/orgs",
                "repos_url": "https://api.github.com/users/asuhan/repos",
                "events_url": "https://api.github.com/users/asuhan/events{/privacy}",
                "received_events_url": "https://api.github.com/users/asuhan/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-07-15T03:14:17Z",
        "updated_at": "2020-08-12T04:39:19Z",
        "closed_at": "2020-08-12T04:39:19Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Currently jit does not support the case where boolean value is used as dict key:\r\n```\r\nclass MyModule(nn.Module):\r\n    def __init__(self):\r\n        super().__init__()\r\n        self.x = {True: 1}\r\n\r\nmodel = MyModule()\r\nmodel_s = torch.jit.script(model)\r\n```\r\nwe will get:\r\n```\r\nRuntimeError: Cannot create dict for key type 'bool', only int, float, Tensor and string keys are supported\r\n```\r\nwe must convert **boolean** to **int** as a workaround, but it will lose the semantic meanings of the key value and make the codes comfusing which may lead to a bad user experience.\n\ncc @suo @gmagogsfm",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/41449/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/41449/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/41448",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/41448/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/41448/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/41448/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/41448",
        "id": 657022049,
        "node_id": "MDU6SXNzdWU2NTcwMjIwNDk=",
        "number": 41448,
        "title": "[JIT] Support Dict comprehension",
        "user": {
            "login": "chenbohua3",
            "id": 19526090,
            "node_id": "MDQ6VXNlcjE5NTI2MDkw",
            "avatar_url": "https://avatars.githubusercontent.com/u/19526090?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chenbohua3",
            "html_url": "https://github.com/chenbohua3",
            "followers_url": "https://api.github.com/users/chenbohua3/followers",
            "following_url": "https://api.github.com/users/chenbohua3/following{/other_user}",
            "gists_url": "https://api.github.com/users/chenbohua3/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chenbohua3/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chenbohua3/subscriptions",
            "organizations_url": "https://api.github.com/users/chenbohua3/orgs",
            "repos_url": "https://api.github.com/users/chenbohua3/repos",
            "events_url": "https://api.github.com/users/chenbohua3/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chenbohua3/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 2203967632,
                "node_id": "MDU6TGFiZWwyMjAzOTY3NjMy",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/weeks",
                "name": "weeks",
                "color": "e5808f",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "ansley",
            "id": 59447410,
            "node_id": "MDQ6VXNlcjU5NDQ3NDEw",
            "avatar_url": "https://avatars.githubusercontent.com/u/59447410?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ansley",
            "html_url": "https://github.com/ansley",
            "followers_url": "https://api.github.com/users/ansley/followers",
            "following_url": "https://api.github.com/users/ansley/following{/other_user}",
            "gists_url": "https://api.github.com/users/ansley/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ansley/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ansley/subscriptions",
            "organizations_url": "https://api.github.com/users/ansley/orgs",
            "repos_url": "https://api.github.com/users/ansley/repos",
            "events_url": "https://api.github.com/users/ansley/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ansley/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "ansley",
                "id": 59447410,
                "node_id": "MDQ6VXNlcjU5NDQ3NDEw",
                "avatar_url": "https://avatars.githubusercontent.com/u/59447410?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ansley",
                "html_url": "https://github.com/ansley",
                "followers_url": "https://api.github.com/users/ansley/followers",
                "following_url": "https://api.github.com/users/ansley/following{/other_user}",
                "gists_url": "https://api.github.com/users/ansley/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ansley/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ansley/subscriptions",
                "organizations_url": "https://api.github.com/users/ansley/orgs",
                "repos_url": "https://api.github.com/users/ansley/repos",
                "events_url": "https://api.github.com/users/ansley/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ansley/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-07-15T02:56:58Z",
        "updated_at": "2020-12-18T19:15:56Z",
        "closed_at": "2020-12-18T19:15:56Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Currently, dict comprehension is not supported by JIT but it is widely used in python codes. Is there any plans to support it?\r\n\r\n```\r\nclass MyModule(nn.Module):\r\n    def forward(self):\r\n        x = {i: i for i in range(2)}\r\n        return x\r\n\r\nmodel = MyModule()\r\nmodel_s = torch.jit.script(model)\r\n```\r\nwe will get:\r\n```\r\ntorch.jit.frontend.UnsupportedNodeError: DictComp aren't supported:\r\n  File \"main_test.py\", line 6\r\n    def forward(self):\r\n        x = {i: i for i in range(2)}\r\n            ~ <--- HERE\r\n        return x\r\n```\r\nwe may use a `for-loop` to gradually add elements to the dict as a workaround, but it's a pretty bad user experience.\r\n\r\n\n\ncc @suo @gmagogsfm",
        "closed_by": {
            "login": "ansley",
            "id": 59447410,
            "node_id": "MDQ6VXNlcjU5NDQ3NDEw",
            "avatar_url": "https://avatars.githubusercontent.com/u/59447410?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ansley",
            "html_url": "https://github.com/ansley",
            "followers_url": "https://api.github.com/users/ansley/followers",
            "following_url": "https://api.github.com/users/ansley/following{/other_user}",
            "gists_url": "https://api.github.com/users/ansley/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ansley/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ansley/subscriptions",
            "organizations_url": "https://api.github.com/users/ansley/orgs",
            "repos_url": "https://api.github.com/users/ansley/repos",
            "events_url": "https://api.github.com/users/ansley/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ansley/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/41448/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/41448/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/41412",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/41412/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/41412/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/41412/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/41412",
        "id": 656776698,
        "node_id": "MDU6SXNzdWU2NTY3NzY2OTg=",
        "number": 41412,
        "title": "[jit] Support for union types",
        "user": {
            "login": "suo",
            "id": 1617424,
            "node_id": "MDQ6VXNlcjE2MTc0MjQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1617424?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/suo",
            "html_url": "https://github.com/suo",
            "followers_url": "https://api.github.com/users/suo/followers",
            "following_url": "https://api.github.com/users/suo/following{/other_user}",
            "gists_url": "https://api.github.com/users/suo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/suo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/suo/subscriptions",
            "organizations_url": "https://api.github.com/users/suo/orgs",
            "repos_url": "https://api.github.com/users/suo/repos",
            "events_url": "https://api.github.com/users/suo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/suo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 2203968029,
                "node_id": "MDU6TGFiZWwyMjAzOTY4MDI5",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/months",
                "name": "months",
                "color": "b52655",
                "default": false,
                "description": ""
            },
            {
                "id": 2674375683,
                "node_id": "MDU6TGFiZWwyNjc0Mzc1Njgz",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/TSUsability",
                "name": "TSUsability",
                "color": "D4C5F9",
                "default": false,
                "description": ""
            },
            {
                "id": 2677230705,
                "node_id": "MDU6TGFiZWwyNjc3MjMwNzA1",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/TSRootCause:UnsupportedConstructs",
                "name": "TSRootCause:UnsupportedConstructs",
                "color": "A2A3EC",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "ansley",
            "id": 59447410,
            "node_id": "MDQ6VXNlcjU5NDQ3NDEw",
            "avatar_url": "https://avatars.githubusercontent.com/u/59447410?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ansley",
            "html_url": "https://github.com/ansley",
            "followers_url": "https://api.github.com/users/ansley/followers",
            "following_url": "https://api.github.com/users/ansley/following{/other_user}",
            "gists_url": "https://api.github.com/users/ansley/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ansley/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ansley/subscriptions",
            "organizations_url": "https://api.github.com/users/ansley/orgs",
            "repos_url": "https://api.github.com/users/ansley/repos",
            "events_url": "https://api.github.com/users/ansley/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ansley/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "ansley",
                "id": 59447410,
                "node_id": "MDQ6VXNlcjU5NDQ3NDEw",
                "avatar_url": "https://avatars.githubusercontent.com/u/59447410?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ansley",
                "html_url": "https://github.com/ansley",
                "followers_url": "https://api.github.com/users/ansley/followers",
                "following_url": "https://api.github.com/users/ansley/following{/other_user}",
                "gists_url": "https://api.github.com/users/ansley/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ansley/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ansley/subscriptions",
                "organizations_url": "https://api.github.com/users/ansley/orgs",
                "repos_url": "https://api.github.com/users/ansley/repos",
                "events_url": "https://api.github.com/users/ansley/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ansley/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 18,
        "created_at": "2020-07-14T17:26:22Z",
        "updated_at": "2021-10-08T17:20:10Z",
        "closed_at": "2021-10-08T17:20:10Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "[PEP 484](https://www.python.org/dev/peps/pep-0484/) specifies Unions as part of the type system. We should consider supporting them in the TorchScript type system, as they are a common pattern in Python code. This is a low-pri request from PyPER as well.\n\ncc @suo @gmagogsfm",
        "closed_by": {
            "login": "neginraoof",
            "id": 16928382,
            "node_id": "MDQ6VXNlcjE2OTI4Mzgy",
            "avatar_url": "https://avatars.githubusercontent.com/u/16928382?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/neginraoof",
            "html_url": "https://github.com/neginraoof",
            "followers_url": "https://api.github.com/users/neginraoof/followers",
            "following_url": "https://api.github.com/users/neginraoof/following{/other_user}",
            "gists_url": "https://api.github.com/users/neginraoof/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/neginraoof/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neginraoof/subscriptions",
            "organizations_url": "https://api.github.com/users/neginraoof/orgs",
            "repos_url": "https://api.github.com/users/neginraoof/repos",
            "events_url": "https://api.github.com/users/neginraoof/events{/privacy}",
            "received_events_url": "https://api.github.com/users/neginraoof/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/41412/reactions",
            "total_count": 12,
            "+1": 8,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 4,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/41412/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/41288",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/41288/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/41288/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/41288/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/41288",
        "id": 655092027,
        "node_id": "MDU6SXNzdWU2NTUwOTIwMjc=",
        "number": 41288,
        "title": "python value of type 'str' cannot be used as a value",
        "user": {
            "login": "gmagogsfm",
            "id": 1817752,
            "node_id": "MDQ6VXNlcjE4MTc3NTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1817752?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gmagogsfm",
            "html_url": "https://github.com/gmagogsfm",
            "followers_url": "https://api.github.com/users/gmagogsfm/followers",
            "following_url": "https://api.github.com/users/gmagogsfm/following{/other_user}",
            "gists_url": "https://api.github.com/users/gmagogsfm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gmagogsfm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gmagogsfm/subscriptions",
            "organizations_url": "https://api.github.com/users/gmagogsfm/orgs",
            "repos_url": "https://api.github.com/users/gmagogsfm/repos",
            "events_url": "https://api.github.com/users/gmagogsfm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gmagogsfm/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "gmagogsfm",
            "id": 1817752,
            "node_id": "MDQ6VXNlcjE4MTc3NTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1817752?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gmagogsfm",
            "html_url": "https://github.com/gmagogsfm",
            "followers_url": "https://api.github.com/users/gmagogsfm/followers",
            "following_url": "https://api.github.com/users/gmagogsfm/following{/other_user}",
            "gists_url": "https://api.github.com/users/gmagogsfm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gmagogsfm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gmagogsfm/subscriptions",
            "organizations_url": "https://api.github.com/users/gmagogsfm/orgs",
            "repos_url": "https://api.github.com/users/gmagogsfm/repos",
            "events_url": "https://api.github.com/users/gmagogsfm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gmagogsfm/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "gmagogsfm",
                "id": 1817752,
                "node_id": "MDQ6VXNlcjE4MTc3NTI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/1817752?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/gmagogsfm",
                "html_url": "https://github.com/gmagogsfm",
                "followers_url": "https://api.github.com/users/gmagogsfm/followers",
                "following_url": "https://api.github.com/users/gmagogsfm/following{/other_user}",
                "gists_url": "https://api.github.com/users/gmagogsfm/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/gmagogsfm/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gmagogsfm/subscriptions",
                "organizations_url": "https://api.github.com/users/gmagogsfm/orgs",
                "repos_url": "https://api.github.com/users/gmagogsfm/repos",
                "events_url": "https://api.github.com/users/gmagogsfm/events{/privacy}",
                "received_events_url": "https://api.github.com/users/gmagogsfm/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 4,
        "created_at": "2020-07-11T00:02:50Z",
        "updated_at": "2020-09-18T18:04:14Z",
        "closed_at": "2020-09-18T18:04:13Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "From common errors in ParityBench\r\n\r\n```\r\ncompile,58,RuntimeError: python value of type 'str' cannot be used as a value:,\"RuntimeError: \r\npython value of type 'str' cannot be used as a value:\r\n  File \"\"/tmp/paritybenchydc_9oju/pbg51yh9q6.py\"\", line 51\r\n    def forward(self, x):\r\n        x = functional.batch_norm(x, self.running_mean, self.running_var, self.weight, self.bias, self.training, self.momentum, self.eps)\r\n        if self.activation == ACT_RELU:\r\n                              ~~~~~~~~ <--- HERE\r\n            return functional.relu(x, inplace=True)\r\n        elif self.activation == ACT_LEAKY_RELU:\r\n```\r\n\r\nCode example is [here](https://github.com/jansel/pytorch-jit-paritybench/blob/6c23f5bcbed5ad85ac21573024748b335b8019eb/generated/test_zllrunning_face_parsing_PyTorch.py#L533)\n\ncc @suo @gmagogsfm",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/41288/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/41288/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/41095",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/41095/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/41095/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/41095/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/41095",
        "id": 652680647,
        "node_id": "MDU6SXNzdWU2NTI2ODA2NDc=",
        "number": 41095,
        "title": "Support Enum in TorchScript",
        "user": {
            "login": "gmagogsfm",
            "id": 1817752,
            "node_id": "MDQ6VXNlcjE4MTc3NTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1817752?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gmagogsfm",
            "html_url": "https://github.com/gmagogsfm",
            "followers_url": "https://api.github.com/users/gmagogsfm/followers",
            "following_url": "https://api.github.com/users/gmagogsfm/following{/other_user}",
            "gists_url": "https://api.github.com/users/gmagogsfm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gmagogsfm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gmagogsfm/subscriptions",
            "organizations_url": "https://api.github.com/users/gmagogsfm/orgs",
            "repos_url": "https://api.github.com/users/gmagogsfm/repos",
            "events_url": "https://api.github.com/users/gmagogsfm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gmagogsfm/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "gmagogsfm",
            "id": 1817752,
            "node_id": "MDQ6VXNlcjE4MTc3NTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1817752?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gmagogsfm",
            "html_url": "https://github.com/gmagogsfm",
            "followers_url": "https://api.github.com/users/gmagogsfm/followers",
            "following_url": "https://api.github.com/users/gmagogsfm/following{/other_user}",
            "gists_url": "https://api.github.com/users/gmagogsfm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gmagogsfm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gmagogsfm/subscriptions",
            "organizations_url": "https://api.github.com/users/gmagogsfm/orgs",
            "repos_url": "https://api.github.com/users/gmagogsfm/repos",
            "events_url": "https://api.github.com/users/gmagogsfm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gmagogsfm/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "gmagogsfm",
                "id": 1817752,
                "node_id": "MDQ6VXNlcjE4MTc3NTI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/1817752?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/gmagogsfm",
                "html_url": "https://github.com/gmagogsfm",
                "followers_url": "https://api.github.com/users/gmagogsfm/followers",
                "following_url": "https://api.github.com/users/gmagogsfm/following{/other_user}",
                "gists_url": "https://api.github.com/users/gmagogsfm/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/gmagogsfm/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gmagogsfm/subscriptions",
                "organizations_url": "https://api.github.com/users/gmagogsfm/orgs",
                "repos_url": "https://api.github.com/users/gmagogsfm/repos",
                "events_url": "https://api.github.com/users/gmagogsfm/events{/privacy}",
                "received_events_url": "https://api.github.com/users/gmagogsfm/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-07-07T22:01:50Z",
        "updated_at": "2020-09-16T18:48:21Z",
        "closed_at": "2020-09-16T18:48:21Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "Enum is widely used in Python but not yet supported in TorchScript. Opening this issue to track effort of adding Enum support.\n\ncc @suo @gmagogsfm",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/41095/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/41095/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/40874",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/40874/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/40874/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/40874/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/40874",
        "id": 649202952,
        "node_id": "MDU6SXNzdWU2NDkyMDI5NTI=",
        "number": 40874,
        "title": "Inconsistent behavior when tracing dictionaries",
        "user": {
            "login": "suo",
            "id": 1617424,
            "node_id": "MDQ6VXNlcjE2MTc0MjQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1617424?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/suo",
            "html_url": "https://github.com/suo",
            "followers_url": "https://api.github.com/users/suo/followers",
            "following_url": "https://api.github.com/users/suo/following{/other_user}",
            "gists_url": "https://api.github.com/users/suo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/suo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/suo/subscriptions",
            "organizations_url": "https://api.github.com/users/suo/orgs",
            "repos_url": "https://api.github.com/users/suo/repos",
            "events_url": "https://api.github.com/users/suo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/suo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "suo",
            "id": 1617424,
            "node_id": "MDQ6VXNlcjE2MTc0MjQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1617424?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/suo",
            "html_url": "https://github.com/suo",
            "followers_url": "https://api.github.com/users/suo/followers",
            "following_url": "https://api.github.com/users/suo/following{/other_user}",
            "gists_url": "https://api.github.com/users/suo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/suo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/suo/subscriptions",
            "organizations_url": "https://api.github.com/users/suo/orgs",
            "repos_url": "https://api.github.com/users/suo/repos",
            "events_url": "https://api.github.com/users/suo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/suo/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "suo",
                "id": 1617424,
                "node_id": "MDQ6VXNlcjE2MTc0MjQ=",
                "avatar_url": "https://avatars.githubusercontent.com/u/1617424?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/suo",
                "html_url": "https://github.com/suo",
                "followers_url": "https://api.github.com/users/suo/followers",
                "following_url": "https://api.github.com/users/suo/following{/other_user}",
                "gists_url": "https://api.github.com/users/suo/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/suo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/suo/subscriptions",
                "organizations_url": "https://api.github.com/users/suo/orgs",
                "repos_url": "https://api.github.com/users/suo/repos",
                "events_url": "https://api.github.com/users/suo/events{/privacy}",
                "received_events_url": "https://api.github.com/users/suo/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-07-01T18:40:11Z",
        "updated_at": "2020-07-06T04:27:53Z",
        "closed_at": "2020-07-06T04:27:53Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "\r\n\r\nhttps://gist.github.com/suo/16a961731de67e6db1e4b36976946d5e\n\ncc @suo @gmagogsfm",
        "closed_by": {
            "login": "suo",
            "id": 1617424,
            "node_id": "MDQ6VXNlcjE2MTc0MjQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1617424?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/suo",
            "html_url": "https://github.com/suo",
            "followers_url": "https://api.github.com/users/suo/followers",
            "following_url": "https://api.github.com/users/suo/following{/other_user}",
            "gists_url": "https://api.github.com/users/suo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/suo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/suo/subscriptions",
            "organizations_url": "https://api.github.com/users/suo/orgs",
            "repos_url": "https://api.github.com/users/suo/repos",
            "events_url": "https://api.github.com/users/suo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/suo/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/40874/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/40874/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/40869",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/40869/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/40869/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/40869/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/40869",
        "id": 649159204,
        "node_id": "MDU6SXNzdWU2NDkxNTkyMDQ=",
        "number": 40869,
        "title": "[JIT] list() builtin doesn't work on tensors",
        "user": {
            "login": "ezyang",
            "id": 13564,
            "node_id": "MDQ6VXNlcjEzNTY0",
            "avatar_url": "https://avatars.githubusercontent.com/u/13564?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ezyang",
            "html_url": "https://github.com/ezyang",
            "followers_url": "https://api.github.com/users/ezyang/followers",
            "following_url": "https://api.github.com/users/ezyang/following{/other_user}",
            "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions",
            "organizations_url": "https://api.github.com/users/ezyang/orgs",
            "repos_url": "https://api.github.com/users/ezyang/repos",
            "events_url": "https://api.github.com/users/ezyang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ezyang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 2203967172,
                "node_id": "MDU6TGFiZWwyMjAzOTY3MTcy",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/days",
                "name": "days",
                "color": "77f497",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "eellison",
            "id": 11477974,
            "node_id": "MDQ6VXNlcjExNDc3OTc0",
            "avatar_url": "https://avatars.githubusercontent.com/u/11477974?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eellison",
            "html_url": "https://github.com/eellison",
            "followers_url": "https://api.github.com/users/eellison/followers",
            "following_url": "https://api.github.com/users/eellison/following{/other_user}",
            "gists_url": "https://api.github.com/users/eellison/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eellison/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eellison/subscriptions",
            "organizations_url": "https://api.github.com/users/eellison/orgs",
            "repos_url": "https://api.github.com/users/eellison/repos",
            "events_url": "https://api.github.com/users/eellison/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eellison/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "eellison",
                "id": 11477974,
                "node_id": "MDQ6VXNlcjExNDc3OTc0",
                "avatar_url": "https://avatars.githubusercontent.com/u/11477974?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/eellison",
                "html_url": "https://github.com/eellison",
                "followers_url": "https://api.github.com/users/eellison/followers",
                "following_url": "https://api.github.com/users/eellison/following{/other_user}",
                "gists_url": "https://api.github.com/users/eellison/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/eellison/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eellison/subscriptions",
                "organizations_url": "https://api.github.com/users/eellison/orgs",
                "repos_url": "https://api.github.com/users/eellison/repos",
                "events_url": "https://api.github.com/users/eellison/events{/privacy}",
                "received_events_url": "https://api.github.com/users/eellison/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-07-01T17:43:02Z",
        "updated_at": "2020-11-06T09:29:24Z",
        "closed_at": "2020-11-06T09:29:24Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "Workaround is to call `tolist()` on the Tensor, but it would be better if `list(tensor)` worked directly.\n\ncc @suo @gmagogsfm",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/40869/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/40869/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/40771",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/40771/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/40771/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/40771/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/40771",
        "id": 648167041,
        "node_id": "MDU6SXNzdWU2NDgxNjcwNDE=",
        "number": 40771,
        "title": "[jit] round not equivalent between python and torchscript",
        "user": {
            "login": "fmassa",
            "id": 9110200,
            "node_id": "MDQ6VXNlcjkxMTAyMDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9110200?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fmassa",
            "html_url": "https://github.com/fmassa",
            "followers_url": "https://api.github.com/users/fmassa/followers",
            "following_url": "https://api.github.com/users/fmassa/following{/other_user}",
            "gists_url": "https://api.github.com/users/fmassa/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fmassa/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fmassa/subscriptions",
            "organizations_url": "https://api.github.com/users/fmassa/orgs",
            "repos_url": "https://api.github.com/users/fmassa/repos",
            "events_url": "https://api.github.com/users/fmassa/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fmassa/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-06-30T13:18:51Z",
        "updated_at": "2020-07-16T03:15:13Z",
        "closed_at": "2020-07-16T03:15:13Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\nOriginally reported by @vfdev-5  in https://github.com/pytorch/vision/pull/2342#discussion_r447587088\r\n\r\nThe behavior of `round` is not the same between torchscript and Python.\r\n```python\r\nimport torch\r\n\r\ndef foo():    \r\n    return round(2.5)\r\n\r\nsfoo = torch.jit.script(foo)\r\nprint(foo(), sfoo())\r\n# gives\r\n# 2, 3.0\r\n```\r\nThere are two differences: the value is different, but the returned type as well (float instead of int).\r\n\r\nI'm using PyTorch version `'1.6.0.dev20200617'`\n\ncc @suo @gmagogsfm",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/40771/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/40771/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/40713",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/40713/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/40713/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/40713/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/40713",
        "id": 647572684,
        "node_id": "MDU6SXNzdWU2NDc1NzI2ODQ=",
        "number": 40713,
        "title": "Optional[Module] usage in TorchScript causes ASAN null-deref error",
        "user": {
            "login": "yf225",
            "id": 4063635,
            "node_id": "MDQ6VXNlcjQwNjM2MzU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4063635?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yf225",
            "html_url": "https://github.com/yf225",
            "followers_url": "https://api.github.com/users/yf225/followers",
            "following_url": "https://api.github.com/users/yf225/following{/other_user}",
            "gists_url": "https://api.github.com/users/yf225/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yf225/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yf225/subscriptions",
            "organizations_url": "https://api.github.com/users/yf225/orgs",
            "repos_url": "https://api.github.com/users/yf225/repos",
            "events_url": "https://api.github.com/users/yf225/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yf225/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "wconstab",
            "id": 4984825,
            "node_id": "MDQ6VXNlcjQ5ODQ4MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4984825?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wconstab",
            "html_url": "https://github.com/wconstab",
            "followers_url": "https://api.github.com/users/wconstab/followers",
            "following_url": "https://api.github.com/users/wconstab/following{/other_user}",
            "gists_url": "https://api.github.com/users/wconstab/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wconstab/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wconstab/subscriptions",
            "organizations_url": "https://api.github.com/users/wconstab/orgs",
            "repos_url": "https://api.github.com/users/wconstab/repos",
            "events_url": "https://api.github.com/users/wconstab/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wconstab/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "wconstab",
                "id": 4984825,
                "node_id": "MDQ6VXNlcjQ5ODQ4MjU=",
                "avatar_url": "https://avatars.githubusercontent.com/u/4984825?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/wconstab",
                "html_url": "https://github.com/wconstab",
                "followers_url": "https://api.github.com/users/wconstab/followers",
                "following_url": "https://api.github.com/users/wconstab/following{/other_user}",
                "gists_url": "https://api.github.com/users/wconstab/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/wconstab/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wconstab/subscriptions",
                "organizations_url": "https://api.github.com/users/wconstab/orgs",
                "repos_url": "https://api.github.com/users/wconstab/repos",
                "events_url": "https://api.github.com/users/wconstab/events{/privacy}",
                "received_events_url": "https://api.github.com/users/wconstab/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-06-29T18:17:52Z",
        "updated_at": "2020-07-17T14:25:58Z",
        "closed_at": "2020-07-17T14:25:58Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "The following TorchScript program seems to cause null-deref error in ASAN:\r\n```python\r\nimport torch\r\nfrom typing import Optional\r\n\r\nclass MyModule(torch.nn.Module):\r\n    submod: Optional[torch.nn.Linear]\r\n\r\n    def __init__(self):\r\n        super(MyModule, self).__init__()\r\n        self.submod = None\r\n\r\n    def init_params(self, input):\r\n        # NOTE: This function is called *before* forward (by another caller function),\r\n        # not *by* forward, so it's not scripted.\r\n        # In fact, you can remove this `init_params` function and see the same segfault.\r\n        self.submod = torch.nn.Linear(input[-1], 5)\r\n    \r\n    def forward(self, input):\r\n        submod = self.submod\r\n        assert submod is not None\r\n        return submod(input)\r\n    \r\nm = MyModule()\r\nprint(torch.jit.script(m))\r\n```\r\nError:\r\n```\r\n> AddressSanitizer:DEADLYSIGNAL\r\n> =================================================================\r\n> ==920756==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000018 (pc 0x7f8b08065f17 bp 0x7ffec7afec30 sp 0x7ffec7afec10 T0)\r\n> === How to use this, how to get the raw stack trace, and more: fburl.com/ASAN ===\r\n> ==920756==The signal is caused by a READ memory access.\r\n> ==920756==Hint: address points to the zero page.\r\n> SCARINESS: 10 (null-deref)\r\n>      #0 caffe2/aten/src/ATen/core/jit_type.h:137 c10::Type::kind() const\r\n>      #1 caffe2/aten/src/ATen/core/jit_type.h:153 std::shared_ptr<...> c10::Type::cast<...>()\r\n>      #2 caffe2/aten/src/ATen/core/jit_type.h:282 c10::OptionalType::create(std::shared_ptr<...>)\r\n>     #3 0x7f8b08cb7d59 in torch::jit::initPythonIRBindings(_object*)::$_89::operator()(std::shared_ptr<...>) const caffe2/torch/csrc/jit/python/python_ir.cpp:761:23:14:14:19:14:19:14:19:14:14:19:14:14:19:14:16\r\n>     #164 python3.7+0x400689                       _start\r\n> \r\n> AddressSanitizer can not provide additional info.\r\n> SUMMARY: AddressSanitizer: SEGV caffe2/aten/src/ATen/core/jit_type.h:137 in c10::Type::kind() const\r\n> ==920756==ABORTING\r\n```\r\nCurious is there a way to perform the same logic without causing ASAN null-deref error? Thanks!\r\n\r\ncc @suo @gmagogsfm",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/40713/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/40713/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/40529",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/40529/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/40529/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/40529/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/40529",
        "id": 644898982,
        "node_id": "MDU6SXNzdWU2NDQ4OTg5ODI=",
        "number": 40529,
        "title": "[jit] tracer treat dict inputs as static, and new dynamic dict input will fail",
        "user": {
            "login": "wanchaol",
            "id": 9443650,
            "node_id": "MDQ6VXNlcjk0NDM2NTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9443650?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wanchaol",
            "html_url": "https://github.com/wanchaol",
            "followers_url": "https://api.github.com/users/wanchaol/followers",
            "following_url": "https://api.github.com/users/wanchaol/following{/other_user}",
            "gists_url": "https://api.github.com/users/wanchaol/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wanchaol/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wanchaol/subscriptions",
            "organizations_url": "https://api.github.com/users/wanchaol/orgs",
            "repos_url": "https://api.github.com/users/wanchaol/repos",
            "events_url": "https://api.github.com/users/wanchaol/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wanchaol/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 443484135,
                "node_id": "MDU6TGFiZWw0NDM0ODQxMzU=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/high%20priority",
                "name": "high priority",
                "color": "F22613",
                "default": false,
                "description": null
            },
            {
                "id": 466131885,
                "node_id": "MDU6TGFiZWw0NjYxMzE4ODU=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triage%20review",
                "name": "triage review",
                "color": "cc317c",
                "default": false,
                "description": ""
            },
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "suo",
            "id": 1617424,
            "node_id": "MDQ6VXNlcjE2MTc0MjQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1617424?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/suo",
            "html_url": "https://github.com/suo",
            "followers_url": "https://api.github.com/users/suo/followers",
            "following_url": "https://api.github.com/users/suo/following{/other_user}",
            "gists_url": "https://api.github.com/users/suo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/suo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/suo/subscriptions",
            "organizations_url": "https://api.github.com/users/suo/orgs",
            "repos_url": "https://api.github.com/users/suo/repos",
            "events_url": "https://api.github.com/users/suo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/suo/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "suo",
                "id": 1617424,
                "node_id": "MDQ6VXNlcjE2MTc0MjQ=",
                "avatar_url": "https://avatars.githubusercontent.com/u/1617424?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/suo",
                "html_url": "https://github.com/suo",
                "followers_url": "https://api.github.com/users/suo/followers",
                "following_url": "https://api.github.com/users/suo/following{/other_user}",
                "gists_url": "https://api.github.com/users/suo/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/suo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/suo/subscriptions",
                "organizations_url": "https://api.github.com/users/suo/orgs",
                "repos_url": "https://api.github.com/users/suo/repos",
                "events_url": "https://api.github.com/users/suo/events{/privacy}",
                "received_events_url": "https://api.github.com/users/suo/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-06-24T19:57:39Z",
        "updated_at": "2020-06-30T23:52:12Z",
        "closed_at": "2020-06-30T23:52:12Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "originated from discussion in https://github.com/pytorch/pytorch/pull/39601, see https://github.com/pytorch/pytorch/pull/39601#issuecomment-649025166\r\n\r\nSo basically when we trace, we encode the dict input as static dict input, and when we use the trace with a dynamic dict, it will fail:\r\n\r\nsimple script\r\n\r\n```python\r\nimport torch\r\n\r\nfrom typing import Dict\r\n\r\nclass TestModule(torch.nn.Module):\r\n    def __init__(self):\r\n        super(TestModule, self).__init__()\r\n\r\n    def forward(self, dict_input):\r\n       return dict_input['x']\r\n\r\ninput_1 = {'x': torch.tensor(1)}\r\ninput_2 = {'x': torch.tensor(2), 'y': torch.tensor(3)}\r\n\r\nm = TestModule()\r\nm_traced = torch.jit.trace(m, (input_1, ))\r\nprint(m_traced.graph)\r\nprint(m_traced(input_1))\r\nprint(m_traced(input_2))\r\n```\r\n\r\nfailure:\r\n```\r\ngraph(%self : __torch__.TestModule,\r\n      %2 : Dict(str, Tensor)):\r\n  %3 : Long()[] = aten::values(%2)\r\n  %4 : Long() = prim::ListUnpack(%3)\r\n  return (%4)\r\n\r\ntensor(1)\r\nTraceback (most recent call last):\r\n  File \"/home/wanchaol/test_trace.py\", line 24, in <module>\r\n    print(m_traced(input_2))\r\n  File \"/home/wanchaol/pytorch/torch/nn/modules/module.py\", line 722, in _call_impl\r\n    result = self.forward(*input, **kwargs)\r\nRuntimeError: The following operation failed in the TorchScript interpreter.\r\nTraceback of TorchScript (most recent call last):\r\nRuntimeError: Expected 1 elements in a list but found 2\r\n```\r\n\r\n\r\ncc @ezyang @gchanan @zou3519 @suo @gmagogsfm",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/40529/reactions",
            "total_count": 4,
            "+1": 3,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/40529/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/40350",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/40350/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/40350/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/40350/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/40350",
        "id": 642456815,
        "node_id": "MDU6SXNzdWU2NDI0NTY4MTU=",
        "number": 40350,
        "title": "Type strings of torch.jit.trace and torch.onnx.export forbid torch.Tensor as argument",
        "user": {
            "login": "JBamberger",
            "id": 4966935,
            "node_id": "MDQ6VXNlcjQ5NjY5MzU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4966935?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JBamberger",
            "html_url": "https://github.com/JBamberger",
            "followers_url": "https://api.github.com/users/JBamberger/followers",
            "following_url": "https://api.github.com/users/JBamberger/following{/other_user}",
            "gists_url": "https://api.github.com/users/JBamberger/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JBamberger/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JBamberger/subscriptions",
            "organizations_url": "https://api.github.com/users/JBamberger/orgs",
            "repos_url": "https://api.github.com/users/JBamberger/repos",
            "events_url": "https://api.github.com/users/JBamberger/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JBamberger/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2020-06-20T22:32:41Z",
        "updated_at": "2020-07-11T03:09:56Z",
        "closed_at": "2020-07-11T03:09:56Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\nThe type annotations for the  `example_input` and `args` arguments of `torch.jit.trace` and `torch.onnx.export` respectively are too restrictive. They only allow a tuple as input but the doc string explicitly mentions that a `torch.Tensor` object is also a valid input (which matches the actual behavior). In IDEs that use these annotations for type-checking (e.g. PyCharm) this leads to a warning `Expected type 'tuple',  got 'Tensor' instead` when a tensor is used as argument. The code works fine nevertheless.\r\n\r\n## To Reproduce\r\n\r\nAdd the following script to a new PyCharm project and then run the code inspection tool (or look for the yellow highlights in the code).\r\n\r\n```python\r\nimport torch\r\n\r\nnet = torch.nn.Identity()\r\nx = torch.tensor([1, 2, 3])\r\n\r\n# these two lines create warnings in PyCharm (i.e. example_inputs=x and args=x are highlighted in yellow\r\n# and the code inspection lists the warnings \"Expected type 'tuple',  got 'Tensor' instead\")\r\ntorch.jit.trace(func=net, example_inputs=x)\r\ntorch.onnx.export(model=net, args=x, f=\"test.onnx\")\r\n\r\n# these two don't\r\ntorch.jit.trace(func=net, example_inputs=(x,))\r\ntorch.onnx.export(model=net, args=(x,), f=\"test2.onnx\")\r\n```\r\n\r\n## Expected behavior\r\n\r\nNo warnings are produced for a `torch.Tensor` object as input.\r\n\r\n## Environment\r\n\r\n - PyTorch Version (e.g., 1.0): 1.5.0\r\n - OS (e.g., Linux): Microsoft Windows 10 Pro\r\n - How you installed PyTorch (`conda`, `pip`, source): pip\r\n - Python version: 3.7\r\n - CUDA/cuDNN version: 10.2.89 / v7.6.5.32\r\n - GPU models and configuration: NVIDIA RTX 2070 SUPER\r\n - Any other relevant information: Also happens with PyTorch 1.6.0a0+c73095e built from source\r\n\r\n## Additional context\r\n\r\nThe expected behavior can be created by replacing `(tuple)` with `(tuple or torch.Tensor)` in the type annotation of the doc comments of the functions.\r\nI could create a PR with these changes if desired.\r\n\r\n\r\n\n\ncc @suo",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/40350/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/40350/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/40260",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/40260/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/40260/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/40260/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/40260",
        "id": 641638550,
        "node_id": "MDU6SXNzdWU2NDE2Mzg1NTA=",
        "number": 40260,
        "title": "[JIT] Support `with torch.autograd.profiler.record_function`",
        "user": {
            "login": "SplitInfinity",
            "id": 4392003,
            "node_id": "MDQ6VXNlcjQzOTIwMDM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4392003?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SplitInfinity",
            "html_url": "https://github.com/SplitInfinity",
            "followers_url": "https://api.github.com/users/SplitInfinity/followers",
            "following_url": "https://api.github.com/users/SplitInfinity/following{/other_user}",
            "gists_url": "https://api.github.com/users/SplitInfinity/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SplitInfinity/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SplitInfinity/subscriptions",
            "organizations_url": "https://api.github.com/users/SplitInfinity/orgs",
            "repos_url": "https://api.github.com/users/SplitInfinity/repos",
            "events_url": "https://api.github.com/users/SplitInfinity/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SplitInfinity/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2020-06-19T01:17:57Z",
        "updated_at": "2020-09-18T07:22:46Z",
        "closed_at": "2020-09-18T07:22:46Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Now that #34705 has landed, we need to add support for `with torch.autograd.profiler.record_function()`.\n\ncc @suo",
        "closed_by": {
            "login": "SplitInfinity",
            "id": 4392003,
            "node_id": "MDQ6VXNlcjQzOTIwMDM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4392003?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SplitInfinity",
            "html_url": "https://github.com/SplitInfinity",
            "followers_url": "https://api.github.com/users/SplitInfinity/followers",
            "following_url": "https://api.github.com/users/SplitInfinity/following{/other_user}",
            "gists_url": "https://api.github.com/users/SplitInfinity/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SplitInfinity/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SplitInfinity/subscriptions",
            "organizations_url": "https://api.github.com/users/SplitInfinity/orgs",
            "repos_url": "https://api.github.com/users/SplitInfinity/repos",
            "events_url": "https://api.github.com/users/SplitInfinity/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SplitInfinity/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/40260/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/40260/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/40067",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/40067/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/40067/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/40067/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/40067",
        "id": 639291606,
        "node_id": "MDU6SXNzdWU2MzkyOTE2MDY=",
        "number": 40067,
        "title": "[JIT][to-backend] Move test backend to test code",
        "user": {
            "login": "SplitInfinity",
            "id": 4392003,
            "node_id": "MDQ6VXNlcjQzOTIwMDM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4392003?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SplitInfinity",
            "html_url": "https://github.com/SplitInfinity",
            "followers_url": "https://api.github.com/users/SplitInfinity/followers",
            "following_url": "https://api.github.com/users/SplitInfinity/following{/other_user}",
            "gists_url": "https://api.github.com/users/SplitInfinity/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SplitInfinity/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SplitInfinity/subscriptions",
            "organizations_url": "https://api.github.com/users/SplitInfinity/orgs",
            "repos_url": "https://api.github.com/users/SplitInfinity/repos",
            "events_url": "https://api.github.com/users/SplitInfinity/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SplitInfinity/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "SplitInfinity",
            "id": 4392003,
            "node_id": "MDQ6VXNlcjQzOTIwMDM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4392003?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SplitInfinity",
            "html_url": "https://github.com/SplitInfinity",
            "followers_url": "https://api.github.com/users/SplitInfinity/followers",
            "following_url": "https://api.github.com/users/SplitInfinity/following{/other_user}",
            "gists_url": "https://api.github.com/users/SplitInfinity/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SplitInfinity/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SplitInfinity/subscriptions",
            "organizations_url": "https://api.github.com/users/SplitInfinity/orgs",
            "repos_url": "https://api.github.com/users/SplitInfinity/repos",
            "events_url": "https://api.github.com/users/SplitInfinity/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SplitInfinity/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "SplitInfinity",
                "id": 4392003,
                "node_id": "MDQ6VXNlcjQzOTIwMDM=",
                "avatar_url": "https://avatars.githubusercontent.com/u/4392003?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/SplitInfinity",
                "html_url": "https://github.com/SplitInfinity",
                "followers_url": "https://api.github.com/users/SplitInfinity/followers",
                "following_url": "https://api.github.com/users/SplitInfinity/following{/other_user}",
                "gists_url": "https://api.github.com/users/SplitInfinity/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/SplitInfinity/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/SplitInfinity/subscriptions",
                "organizations_url": "https://api.github.com/users/SplitInfinity/orgs",
                "repos_url": "https://api.github.com/users/SplitInfinity/repos",
                "events_url": "https://api.github.com/users/SplitInfinity/events{/privacy}",
                "received_events_url": "https://api.github.com/users/SplitInfinity/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-06-16T00:57:55Z",
        "updated_at": "2020-07-08T04:00:59Z",
        "closed_at": "2020-07-08T04:00:59Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "At the moment, the `TestBackend` used for the `to_backend` extension resides in the main source tree. It should live in the test directory.\n\ncc @suo",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/40067/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/40067/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/39772",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/39772/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/39772/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/39772/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/39772",
        "id": 635894108,
        "node_id": "MDU6SXNzdWU2MzU4OTQxMDg=",
        "number": 39772,
        "title": "[JIT] Type inferred from empty annotation should be `Tensor` with `inferred=true`",
        "user": {
            "login": "SplitInfinity",
            "id": 4392003,
            "node_id": "MDQ6VXNlcjQzOTIwMDM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4392003?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SplitInfinity",
            "html_url": "https://github.com/SplitInfinity",
            "followers_url": "https://api.github.com/users/SplitInfinity/followers",
            "following_url": "https://api.github.com/users/SplitInfinity/following{/other_user}",
            "gists_url": "https://api.github.com/users/SplitInfinity/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SplitInfinity/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SplitInfinity/subscriptions",
            "organizations_url": "https://api.github.com/users/SplitInfinity/orgs",
            "repos_url": "https://api.github.com/users/SplitInfinity/repos",
            "events_url": "https://api.github.com/users/SplitInfinity/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SplitInfinity/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1027606656,
                "node_id": "MDU6TGFiZWwxMDI3NjA2NjU2",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20bootcamp",
                "name": "module: bootcamp",
                "color": "f7e101",
                "default": false,
                "description": "We plan to do a full writeup on the issue, and then get someone to do it for onboarding"
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "ansley",
            "id": 59447410,
            "node_id": "MDQ6VXNlcjU5NDQ3NDEw",
            "avatar_url": "https://avatars.githubusercontent.com/u/59447410?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ansley",
            "html_url": "https://github.com/ansley",
            "followers_url": "https://api.github.com/users/ansley/followers",
            "following_url": "https://api.github.com/users/ansley/following{/other_user}",
            "gists_url": "https://api.github.com/users/ansley/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ansley/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ansley/subscriptions",
            "organizations_url": "https://api.github.com/users/ansley/orgs",
            "repos_url": "https://api.github.com/users/ansley/repos",
            "events_url": "https://api.github.com/users/ansley/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ansley/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "ansley",
                "id": 59447410,
                "node_id": "MDQ6VXNlcjU5NDQ3NDEw",
                "avatar_url": "https://avatars.githubusercontent.com/u/59447410?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ansley",
                "html_url": "https://github.com/ansley",
                "followers_url": "https://api.github.com/users/ansley/followers",
                "following_url": "https://api.github.com/users/ansley/following{/other_user}",
                "gists_url": "https://api.github.com/users/ansley/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ansley/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ansley/subscriptions",
                "organizations_url": "https://api.github.com/users/ansley/orgs",
                "repos_url": "https://api.github.com/users/ansley/repos",
                "events_url": "https://api.github.com/users/ansley/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ansley/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-06-10T03:16:12Z",
        "updated_at": "2020-10-06T10:54:35Z",
        "closed_at": "2020-10-06T10:54:35Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n`try_ann_to_type` in `torch.jit.annotations` should return a `TensorType` with `inferred=true` for a missing or empty annotation.\n\ncc @suo",
        "closed_by": {
            "login": "ansley",
            "id": 59447410,
            "node_id": "MDQ6VXNlcjU5NDQ3NDEw",
            "avatar_url": "https://avatars.githubusercontent.com/u/59447410?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ansley",
            "html_url": "https://github.com/ansley",
            "followers_url": "https://api.github.com/users/ansley/followers",
            "following_url": "https://api.github.com/users/ansley/following{/other_user}",
            "gists_url": "https://api.github.com/users/ansley/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ansley/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ansley/subscriptions",
            "organizations_url": "https://api.github.com/users/ansley/orgs",
            "repos_url": "https://api.github.com/users/ansley/repos",
            "events_url": "https://api.github.com/users/ansley/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ansley/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/39772/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/39772/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/39566",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/39566/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/39566/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/39566/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/39566",
        "id": 631441470,
        "node_id": "MDU6SXNzdWU2MzE0NDE0NzA=",
        "number": 39566,
        "title": "[JIT] typing.Final not working on python 3.8",
        "user": {
            "login": "zasdfgbnm",
            "id": 1032377,
            "node_id": "MDQ6VXNlcjEwMzIzNzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1032377?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zasdfgbnm",
            "html_url": "https://github.com/zasdfgbnm",
            "followers_url": "https://api.github.com/users/zasdfgbnm/followers",
            "following_url": "https://api.github.com/users/zasdfgbnm/following{/other_user}",
            "gists_url": "https://api.github.com/users/zasdfgbnm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zasdfgbnm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zasdfgbnm/subscriptions",
            "organizations_url": "https://api.github.com/users/zasdfgbnm/orgs",
            "repos_url": "https://api.github.com/users/zasdfgbnm/repos",
            "events_url": "https://api.github.com/users/zasdfgbnm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zasdfgbnm/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-06-05T09:14:25Z",
        "updated_at": "2020-08-11T15:53:52Z",
        "closed_at": "2020-08-11T15:53:52Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "```python\r\nimport torch\r\nfrom typing import Final\r\n\r\nclass M(torch.nn.Module):\r\n    y: Final[float]\r\n\r\n    def __init__(self):\r\n        super().__init__()\r\n        self.y = 0.0\r\n\r\n    def forward(self, x):\r\n        return x + self.y\r\n\r\ntorch.jit.script(M())\r\n```\r\nthe code above gives error:\r\n```\r\nTraceback (most recent call last):\r\n  File \"final.py\", line 14, in <module>\r\n    torch.jit.script(M())\r\n  File \"/home/gaoxiang/.local/lib/python3.8/site-packages/torch/jit/__init__.py\", line 1304, in script\r\n    return torch.jit._recursive.create_script_module(obj, torch.jit._recursive.infer_methods_to_compile)\r\n  File \"/home/gaoxiang/.local/lib/python3.8/site-packages/torch/jit/_recursive.py\", line 305, in create_script_module\r\n    concrete_type = concrete_type_store.get_or_create_concrete_type(nn_module)\r\n  File \"/home/gaoxiang/.local/lib/python3.8/site-packages/torch/jit/_recursive.py\", line 264, in get_or_create_concrete_type\r\n    concrete_type_builder = infer_concrete_type_builder(nn_module)\r\n  File \"/home/gaoxiang/.local/lib/python3.8/site-packages/torch/jit/_recursive.py\", line 226, in infer_concrete_type_builder\r\n    attr_type = infer_type(name, value)\r\n  File \"/home/gaoxiang/.local/lib/python3.8/site-packages/torch/jit/_recursive.py\", line 94, in infer_type\r\n    attr_type = torch.jit.annotations.ann_to_type(class_annotations[name], _jit_internal.fake_range())\r\n  File \"/home/gaoxiang/.local/lib/python3.8/site-packages/torch/jit/annotations.py\", line 302, in ann_to_type\r\n    raise ValueError(\"Unknown type annotation: '{}'\".format(ann))\r\nValueError: Unknown type annotation: 'typing.Final[float]'\r\n```\r\n\r\nBut the following code works on python 3.7 (but not 3.8 either):\r\n```python\r\nimport torch\r\n#from typing import Final\r\nfrom torch.jit import Final\r\n\r\nclass M(torch.nn.Module):\r\n    y: Final[float]\r\n\r\n    def __init__(self):\r\n        super().__init__()\r\n        self.y = 0.0\r\n\r\n    def forward(self, x):\r\n        return x + self.y\r\n\r\ntorch.jit.script(M())\r\n```\r\n\r\ncc @suo",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/39566/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/39566/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/39449",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/39449/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/39449/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/39449/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/39449",
        "id": 630119082,
        "node_id": "MDU6SXNzdWU2MzAxMTkwODI=",
        "number": 39449,
        "title": "[JIT] Inferred Tensor string representation should include the fact that it is inferred",
        "user": {
            "login": "SplitInfinity",
            "id": 4392003,
            "node_id": "MDQ6VXNlcjQzOTIwMDM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4392003?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SplitInfinity",
            "html_url": "https://github.com/SplitInfinity",
            "followers_url": "https://api.github.com/users/SplitInfinity/followers",
            "following_url": "https://api.github.com/users/SplitInfinity/following{/other_user}",
            "gists_url": "https://api.github.com/users/SplitInfinity/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SplitInfinity/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SplitInfinity/subscriptions",
            "organizations_url": "https://api.github.com/users/SplitInfinity/orgs",
            "repos_url": "https://api.github.com/users/SplitInfinity/repos",
            "events_url": "https://api.github.com/users/SplitInfinity/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SplitInfinity/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1027606656,
                "node_id": "MDU6TGFiZWwxMDI3NjA2NjU2",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20bootcamp",
                "name": "module: bootcamp",
                "color": "f7e101",
                "default": false,
                "description": "We plan to do a full writeup on the issue, and then get someone to do it for onboarding"
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "gmagogsfm",
            "id": 1817752,
            "node_id": "MDQ6VXNlcjE4MTc3NTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1817752?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gmagogsfm",
            "html_url": "https://github.com/gmagogsfm",
            "followers_url": "https://api.github.com/users/gmagogsfm/followers",
            "following_url": "https://api.github.com/users/gmagogsfm/following{/other_user}",
            "gists_url": "https://api.github.com/users/gmagogsfm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gmagogsfm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gmagogsfm/subscriptions",
            "organizations_url": "https://api.github.com/users/gmagogsfm/orgs",
            "repos_url": "https://api.github.com/users/gmagogsfm/repos",
            "events_url": "https://api.github.com/users/gmagogsfm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gmagogsfm/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "gmagogsfm",
                "id": 1817752,
                "node_id": "MDQ6VXNlcjE4MTc3NTI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/1817752?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/gmagogsfm",
                "html_url": "https://github.com/gmagogsfm",
                "followers_url": "https://api.github.com/users/gmagogsfm/followers",
                "following_url": "https://api.github.com/users/gmagogsfm/following{/other_user}",
                "gists_url": "https://api.github.com/users/gmagogsfm/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/gmagogsfm/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gmagogsfm/subscriptions",
                "organizations_url": "https://api.github.com/users/gmagogsfm/orgs",
                "repos_url": "https://api.github.com/users/gmagogsfm/repos",
                "events_url": "https://api.github.com/users/gmagogsfm/events{/privacy}",
                "received_events_url": "https://api.github.com/users/gmagogsfm/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-06-03T15:53:35Z",
        "updated_at": "2021-09-03T02:56:46Z",
        "closed_at": "2020-06-10T19:03:40Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "In #38527, a boolean member `is_inferred_` was removed from `Argument` and added to `TensorType` and a separate singleton with this property set to `true` was created for use in all cases when a `TensorType` is inferred. However, the string representation of a `TensorType` with `is_inferred` still `\"Tensor\"`, which can lead to confusing error messages. An example is given below.\r\n\r\n*Code*\r\n```\r\ndef foo(x: torch.Tensor, y):  # Missing \"y: int\"\r\n    for _ in range(y):\r\n        x = x + 1\r\n    return x\r\n        \r\nx = torch.ones(())\r\n\r\nfoo_script = torch.jit.script(foo)\r\nprint(foo_script(x, 2))\r\n```\r\n*Error*\r\n```\r\nRuntimeError: \r\nall inputs of range must be ints, found Tensor in argument 0:\r\n  File \"<ipython-input-13-8c4279680b35>\", line 2\r\ndef foo(x: torch.Tensor, y):  # Missing \"y: int\"\r\n    for _ in range(y):\r\n             ~~~~~~~ <--- HERE\r\n        x = x + 1\r\n    return x\r\n```\r\n\r\nThis error message should include the fact that the type of `y` was inferred.\r\n\n\ncc @suo",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/39449/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/39449/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/39328",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/39328/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/39328/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/39328/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/39328",
        "id": 628482192,
        "node_id": "MDU6SXNzdWU2Mjg0ODIxOTI=",
        "number": 39328,
        "title": "`torch.jit.trace_module`  documentation refers `example_inputs` as an argument. ",
        "user": {
            "login": "DNXie",
            "id": 24580222,
            "node_id": "MDQ6VXNlcjI0NTgwMjIy",
            "avatar_url": "https://avatars.githubusercontent.com/u/24580222?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/DNXie",
            "html_url": "https://github.com/DNXie",
            "followers_url": "https://api.github.com/users/DNXie/followers",
            "following_url": "https://api.github.com/users/DNXie/following{/other_user}",
            "gists_url": "https://api.github.com/users/DNXie/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/DNXie/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/DNXie/subscriptions",
            "organizations_url": "https://api.github.com/users/DNXie/orgs",
            "repos_url": "https://api.github.com/users/DNXie/repos",
            "events_url": "https://api.github.com/users/DNXie/events{/privacy}",
            "received_events_url": "https://api.github.com/users/DNXie/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 897287230,
                "node_id": "MDU6TGFiZWw4OTcyODcyMzA=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20docs",
                "name": "module: docs",
                "color": "f7e101",
                "default": false,
                "description": "Related to our documentation, both in docs/ and docblocks"
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2020-06-01T14:30:15Z",
        "updated_at": "2020-08-24T16:07:52Z",
        "closed_at": "2020-06-24T14:34:14Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "## \ud83d\udcda Documentation\r\n\r\n#### Link\r\n\r\nhttps://pytorch.org/docs/stable/jit.html#torch.jit.trace_module\r\n\r\n#### API\r\n\r\n`torch.jit.trace_module`\r\n\r\n#### Issue\r\n\r\nIn the \"Parameters\" section, there is an input `example_inputs`, but it is not in the signature, and it is not accepted by the function. It should be `inputs`\r\n\r\nRunning the example code from the document:\r\n\r\n~~~python\r\nimport torch.nn as nn\r\n\r\nclass Net(nn.Module):\r\n    def __init__(self):\r\n        super(Net, self).__init__()\r\n        self.conv = nn.Conv2d(1, 1, 3)\r\n\r\n    def forward(self, x):\r\n        return self.conv(x)\r\n\r\n    def weighted_kernel_sum(self, weight):\r\n        return weight * self.conv.weight\r\n\r\n\r\nn = Net()\r\nexample_weight = torch.rand(1, 1, 3, 3)\r\nexample_forward_input = torch.rand(1, 1, 3, 3)\r\n\r\n# Trace a specific method and construct `ScriptModule` with\r\n# a single `forward` method\r\nmodule = torch.jit.trace(n.forward, example_forward_input)\r\n\r\n# Trace a module (implicitly traces `forward`) and construct a\r\n# `ScriptModule` with a single `forward` method\r\nmodule = torch.jit.trace(n, example_forward_input)\r\n\r\n# Trace specific methods on a module (specified in `inputs`), constructs\r\n# a `ScriptModule` with `forward` and `weighted_kernel_sum` methods\r\ninputs = {'forward' : example_forward_input, 'weighted_kernel_sum' : example_weight}\r\n~~~\r\n\r\nand calls the function: \r\n\r\n~~~python\r\nmodule = torch.jit.trace_module(n, example_inputs=inputs)\r\n~~~\r\n\r\ngives exception \r\n\r\n~~~python\r\nTypeError: trace_module() got an unexpected keyword argument 'example_inputs'\r\n~~~\r\n\r\n\r\n\r\n#### **System information**\r\n\r\n- OS: macOS Mojave 10.14\r\n- PyTorch version:  1.5.0\r\n- Python version: 3.8.2\r\n\r\n\r\ncc @suo",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/39328/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/39328/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/39394",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/39394/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/39394/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/39394/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/39394",
        "id": 629046785,
        "node_id": "MDU6SXNzdWU2MjkwNDY3ODU=",
        "number": 39394,
        "title": "member \"torch::jit::detail::AttributePolicy::all_slots\" may not be initialized",
        "user": {
            "login": "williamlzw",
            "id": 11348670,
            "node_id": "MDQ6VXNlcjExMzQ4Njcw",
            "avatar_url": "https://avatars.githubusercontent.com/u/11348670?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/williamlzw",
            "html_url": "https://github.com/williamlzw",
            "followers_url": "https://api.github.com/users/williamlzw/followers",
            "following_url": "https://api.github.com/users/williamlzw/following{/other_user}",
            "gists_url": "https://api.github.com/users/williamlzw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/williamlzw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/williamlzw/subscriptions",
            "organizations_url": "https://api.github.com/users/williamlzw/orgs",
            "repos_url": "https://api.github.com/users/williamlzw/repos",
            "events_url": "https://api.github.com/users/williamlzw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/williamlzw/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 466131885,
                "node_id": "MDU6TGFiZWw0NjYxMzE4ODU=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triage%20review",
                "name": "triage review",
                "color": "cc317c",
                "default": false,
                "description": ""
            },
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2020-05-29T02:33:45Z",
        "updated_at": "2020-06-30T08:26:35Z",
        "closed_at": "2020-06-30T08:26:34Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "win10 64 ,libtorch 1.5 release\r\nI tried to run the `psroiales.cu` file to report an error.\r\n\r\n```\r\nmember of \"the torch: : jit: : detail: : AttributePolicy: : all_slots\" may not be initialized\r\nmember \"torch::jit::detail::BufferPolicy::all_slots\" may not be initialized  \r\nmember \"torch::jit::detail::ModulePolicy::all_slots\" may not be initialized\t\r\nmember \"torch::jit::detail::ParameterPolicy::all_slots\" may not be initialized\t\r\nD:\\deeplearning\\deeplearning\\learn\\libtorch\\include\\torch\\csrc\\jit\\api\\module.h\t501\t\r\n\u9519\u8bef\tMSB3721\t\u547d\u4ee4\u201c\"C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v10.2\\bin\\nvcc.exe\"  --use-local-env -ccbin \"D:\\vs2019\\VC\\Tools\\MSVC\\14.26.28801\\bin\\HostX64\\x64\" -x cu  -I\"C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v10.2\\include\" -I\"C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v10.2\\include\"     --keep-dir x64\\Release -maxrregcount=0  --machine 64 --compile -cudart static     -DNDEBUG -D_CONSOLE -D_UNICODE -DUNICODE -Xcompiler \"/EHsc /W3 /nologo /O2 /FdD:\\deeplearning\\x64\\Release\\dir\\vc142.pdb /FS /Zi  /MD /GR\" -o D:\\deeplearning\\x64\\Release\\dir\\PSROIAlign_cuda.cu.obj \"D:\\deeplearning\\deeplearning\\PSROIAlign_cuda.cu\"\u201d\u5df2\u9000\u51fa\uff0c\u8fd4\u56de\u4ee3\u7801\u4e3a 1\u3002\tdeeplearning\tD:\\vs2019\\MSBuild\\Microsoft\\VC\\v160\\BuildCustomizations\\CUDA 10.2.targets\t764\t\r\n```\r\n\r\n<details>\r\n<summary>PSROIAlign_cuda.cu</summary>\r\n\r\n```c\r\n#include <ATen/cuda/CUDAApplyUtils.cuh>\r\n#include \"PSROIAlign_cuda.h\"\r\n\r\n\r\ntemplate <typename T>\r\n__device__ T bilinear_interpolate(\r\n    const T* input,\r\n    const int height,\r\n    const int width,\r\n    T y,\r\n    T x,\r\n    const int index /* index for debug only*/) {\r\n  // deal with cases that inverse elements are out of feature map boundary\r\n  if (y < -1.0 || y > height || x < -1.0 || x > width) {\r\n    // empty\r\n    return 0;\r\n  }\r\n\r\n  if (y <= 0)\r\n    y = 0;\r\n  if (x <= 0)\r\n    x = 0;\r\n\r\n  int y_low = (int)y;\r\n  int x_low = (int)x;\r\n  int y_high;\r\n  int x_high;\r\n\r\n  if (y_low >= height - 1) {\r\n    y_high = y_low = height - 1;\r\n    y = (T)y_low;\r\n  } else {\r\n    y_high = y_low + 1;\r\n  }\r\n\r\n  if (x_low >= width - 1) {\r\n    x_high = x_low = width - 1;\r\n    x = (T)x_low;\r\n  } else {\r\n    x_high = x_low + 1;\r\n  }\r\n\r\n  T ly = y - y_low;\r\n  T lx = x - x_low;\r\n  T hy = 1. - ly, hx = 1. - lx;\r\n\r\n  // do bilinear interpolation\r\n  T v1 = input[y_low * width + x_low];\r\n  T v2 = input[y_low * width + x_high];\r\n  T v3 = input[y_high * width + x_low];\r\n  T v4 = input[y_high * width + x_high];\r\n  T w1 = hy * hx, w2 = hy * lx, w3 = ly * hx, w4 = ly * lx;\r\n\r\n  T val = (w1 * v1 + w2 * v2 + w3 * v3 + w4 * v4);\r\n\r\n  return val;\r\n}\r\n\r\ntemplate <typename T>\r\n__global__ void PSROIAlignForwardCUDA(\r\n    const int nthreads,\r\n    const T* input,\r\n    const T spatial_scale,\r\n    const int channels,\r\n    const int height,\r\n    const int width,\r\n    const int pooled_height,\r\n    const int pooled_width,\r\n    const int sampling_ratio,\r\n    const T* rois,\r\n    const int channels_out,\r\n    T* output,\r\n    int* channel_mapping) {\r\n  CUDA_1D_KERNEL_LOOP(index, nthreads) {\r\n    // (n, c_out, ph, pw) is an element in the pooled output\r\n    int pw = index % pooled_width;\r\n    int ph = (index / pooled_width) % pooled_height;\r\n    int c_out = (index / pooled_width / pooled_height) % channels_out;\r\n    int n = index / pooled_width / pooled_height / channels_out;\r\n\r\n    // (n, c_in, ph, pw) is the associated element in the input\r\n    int c_in = (c_out * pooled_height + ph) * pooled_width + pw;\r\n\r\n    // [start, end) interval for spatial sampling\r\n    const T* offset_rois = rois + n * 5;\r\n    int roi_batch_ind = offset_rois[0];\r\n\r\n    // Do not using rounding; this implementation detail is critical\r\n    T roi_start_w = offset_rois[1] * spatial_scale - static_cast<T>(0.5);\r\n    T roi_start_h = offset_rois[2] * spatial_scale - static_cast<T>(0.5);\r\n    T roi_end_w = offset_rois[3] * spatial_scale - static_cast<T>(0.5);\r\n    T roi_end_h = offset_rois[4] * spatial_scale - static_cast<T>(0.5);\r\n\r\n    T roi_width = roi_end_w - roi_start_w;\r\n    T roi_height = roi_end_h - roi_start_h;\r\n    T bin_size_h = static_cast<T>(roi_height) / static_cast<T>(pooled_height);\r\n    T bin_size_w = static_cast<T>(roi_width) / static_cast<T>(pooled_width);\r\n\r\n    // Do not using floor/ceil; this implementation detail is critical\r\n    T hstart = static_cast<T>(ph) * bin_size_h + roi_start_h;\r\n    T wstart = static_cast<T>(pw) * bin_size_w + roi_start_w;\r\n\r\n    // We use roi_bin_grid to sample the grid and mimic integral\r\n    int roi_bin_grid_h = (sampling_ratio > 0)\r\n        ? sampling_ratio\r\n        : ceil(roi_height / pooled_height);\r\n    int roi_bin_grid_w =\r\n        (sampling_ratio > 0) ? sampling_ratio : ceil(roi_width / pooled_width);\r\n    const T count = roi_bin_grid_h * roi_bin_grid_w;\r\n\r\n    const T* offset_input =\r\n        input + (roi_batch_ind * channels + c_in) * height * width;\r\n    T out_sum = 0;\r\n    for (int iy = 0; iy < roi_bin_grid_h; iy++) {\r\n      const T y = hstart +\r\n          static_cast<T>(iy + .5f) * bin_size_h /\r\n              static_cast<T>(roi_bin_grid_h);\r\n      for (int ix = 0; ix < roi_bin_grid_w; ix++) {\r\n        const T x = wstart +\r\n            static_cast<T>(ix + .5f) * bin_size_w /\r\n                static_cast<T>(roi_bin_grid_w);\r\n        T val = bilinear_interpolate(offset_input, height, width, y, x, index);\r\n        out_sum += val;\r\n      }\r\n    }\r\n\r\n    out_sum /= count;\r\n    output[index] = out_sum;\r\n    channel_mapping[index] = c_in;\r\n  }\r\n}\r\n\r\ntemplate <typename T>\r\n__device__ void bilinear_interpolate_gradient(\r\n    const int height,\r\n    const int width,\r\n    T y,\r\n    T x,\r\n    T& w1,\r\n    T& w2,\r\n    T& w3,\r\n    T& w4,\r\n    int& x_low,\r\n    int& x_high,\r\n    int& y_low,\r\n    int& y_high,\r\n    const int index /* index for debug only*/) {\r\n  // deal with cases that inverse elements are out of feature map boundary\r\n  if (y < -1.0 || y > height || x < -1.0 || x > width) {\r\n    // empty\r\n    w1 = w2 = w3 = w4 = 0.;\r\n    x_low = x_high = y_low = y_high = -1;\r\n    return;\r\n  }\r\n\r\n  if (y <= 0)\r\n    y = 0;\r\n  if (x <= 0)\r\n    x = 0;\r\n\r\n  y_low = (int)y;\r\n  x_low = (int)x;\r\n\r\n  if (y_low >= height - 1) {\r\n    y_high = y_low = height - 1;\r\n    y = (T)y_low;\r\n  } else {\r\n    y_high = y_low + 1;\r\n  }\r\n\r\n  if (x_low >= width - 1) {\r\n    x_high = x_low = width - 1;\r\n    x = (T)x_low;\r\n  } else {\r\n    x_high = x_low + 1;\r\n  }\r\n\r\n  T ly = y - y_low;\r\n  T lx = x - x_low;\r\n  T hy = 1. - ly, hx = 1. - lx;\r\n\r\n  // reference in forward\r\n  // T v1 = input[y_low * width + x_low];\r\n  // T v2 = input[y_low * width + x_high];\r\n  // T v3 = input[y_high * width + x_low];\r\n  // T v4 = input[y_high * width + x_high];\r\n  // T val = (w1 * v1 + w2 * v2 + w3 * v3 + w4 * v4);\r\n\r\n  w1 = hy * hx, w2 = hy * lx, w3 = ly * hx, w4 = ly * lx;\r\n\r\n  return;\r\n}\r\n\r\ntemplate <typename T>\r\n__global__ void PSROIAlignBackwardCUDA(\r\n    const int nthreads,\r\n    const T* grad_output,\r\n    const int* channel_mapping,\r\n    const int num_rois,\r\n    const T spatial_scale,\r\n    const int channels,\r\n    const int height,\r\n    const int width,\r\n    const int pooled_height,\r\n    const int pooled_width,\r\n    const int sampling_ratio,\r\n    const int channels_out,\r\n    T* grad_input,\r\n    const T* rois) {\r\n  CUDA_1D_KERNEL_LOOP(index, nthreads) {\r\n    // (n, *, ph, pw) is an element in the pooled output\r\n    int pw = index % pooled_width;\r\n    int ph = (index / pooled_width) % pooled_height;\r\n    int n = index / pooled_width / pooled_height / channels_out;\r\n\r\n    const T* offset_rois = rois + n * 5;\r\n    int roi_batch_ind = offset_rois[0];\r\n\r\n    // Do not using rounding; this implementation detail is critical\r\n    T roi_start_w = offset_rois[1] * spatial_scale - static_cast<T>(0.5);\r\n    T roi_start_h = offset_rois[2] * spatial_scale - static_cast<T>(0.5);\r\n    T roi_end_w = offset_rois[3] * spatial_scale - static_cast<T>(0.5);\r\n    T roi_end_h = offset_rois[4] * spatial_scale - static_cast<T>(0.5);\r\n\r\n    // Force too small ROIs to be 1x1\r\n    T roi_width = roi_end_w - roi_start_w;\r\n    T roi_height = roi_end_h - roi_start_h;\r\n    T bin_size_h = roi_height / static_cast<T>(pooled_height);\r\n    T bin_size_w = roi_width / static_cast<T>(pooled_width);\r\n\r\n    int c_in = channel_mapping[index];\r\n    T* grad_input_offset =\r\n        grad_input + (roi_batch_ind * channels + c_in) * height * width;\r\n\r\n    // Do not using floor/ceil; this implementation detail is critical\r\n    T hstart = static_cast<T>(ph) * bin_size_h + roi_start_h;\r\n    T wstart = static_cast<T>(pw) * bin_size_w + roi_start_w;\r\n\r\n    const T grad_output_this_bin = grad_output[index];\r\n\r\n    // We use roi_bin_grid to sample the grid and mimic integral\r\n    int roi_bin_grid_h = (sampling_ratio > 0)\r\n        ? sampling_ratio\r\n        : ceil(roi_height / pooled_height); // e.g., = 2\r\n    int roi_bin_grid_w =\r\n        (sampling_ratio > 0) ? sampling_ratio : ceil(roi_width / pooled_width);\r\n    const T count = roi_bin_grid_h * roi_bin_grid_w;\r\n\r\n    for (int iy = 0; iy < roi_bin_grid_h; iy++) {\r\n      const T y = hstart +\r\n          static_cast<T>(iy + .5f) * bin_size_h /\r\n              static_cast<T>(roi_bin_grid_h);\r\n      for (int ix = 0; ix < roi_bin_grid_w; ix++) {\r\n        const T x = wstart +\r\n            static_cast<T>(ix + .5f) * bin_size_w /\r\n                static_cast<T>(roi_bin_grid_w);\r\n\r\n        T w1, w2, w3, w4;\r\n        int x_low, x_high, y_low, y_high;\r\n\r\n        bilinear_interpolate_gradient(\r\n            height,\r\n            width,\r\n            y,\r\n            x,\r\n            w1,\r\n            w2,\r\n            w3,\r\n            w4,\r\n            x_low,\r\n            x_high,\r\n            y_low,\r\n            y_high,\r\n            index);\r\n\r\n        T g1 = grad_output_this_bin * w1 / count;\r\n        T g2 = grad_output_this_bin * w2 / count;\r\n        T g3 = grad_output_this_bin * w3 / count;\r\n        T g4 = grad_output_this_bin * w4 / count;\r\n\r\n        if (x_low >= 0 && x_high >= 0 && y_low >= 0 && y_high >= 0) {\r\n          atomicAdd(grad_input_offset + y_low * width + x_low, g1);\r\n          atomicAdd(grad_input_offset + y_low * width + x_high, g2);\r\n          atomicAdd(grad_input_offset + y_high * width + x_low, g3);\r\n          atomicAdd(grad_input_offset + y_high * width + x_high, g4);\r\n        } // if\r\n      } // ix\r\n    } // iy\r\n  }\r\n}\r\n\r\nstd::tuple<at::Tensor, at::Tensor> PSROIAlign_forward_cuda(\r\n    const at::Tensor& input,\r\n    const at::Tensor& rois,\r\n    const float spatial_scale,\r\n    const int pooled_height,\r\n    const int pooled_width,\r\n    const int sampling_ratio) {\r\n  // Check if input tensors are CUDA tensors\r\n  AT_ASSERTM(input.type().is_cuda(), \"input must be a CUDA tensor\");\r\n  AT_ASSERTM(rois.type().is_cuda(), \"rois must be a CUDA tensor\");\r\n\r\n  at::TensorArg input_t{input, \"input\", 1}, rois_t{rois, \"rois\", 2};\r\n\r\n  at::CheckedFrom c = \"PSROIAlign_forward_cuda\";\r\n  at::checkAllSameGPU(c, {input_t, rois_t});\r\n  at::checkAllSameType(c, {input_t, rois_t});\r\n\r\n  at::cuda::CUDAGuard device_guard(input.device());\r\n\r\n  auto num_rois = rois.size(0);\r\n  auto channels = input.size(1);\r\n  auto height = input.size(2);\r\n  auto width = input.size(3);\r\n\r\n  AT_ASSERTM(\r\n      channels % (pooled_height * pooled_width) == 0,\r\n      \"input channels must be a multiple of pooling height * pooling width\");\r\n  int channels_out = channels / (pooled_height * pooled_width);\r\n\r\n  auto output = at::zeros(\r\n      {num_rois, channels_out, pooled_height, pooled_width}, input.options());\r\n  auto channel_mapping =\r\n      at::zeros(output.sizes(), input.options().dtype(at::kInt));\r\n\r\n  auto output_size = output.numel();\r\n  if (output_size == 0) {\r\n    AT_CUDA_CHECK(cudaGetLastError());\r\n    return std::make_tuple(output, channel_mapping);\r\n  }\r\n\r\n  cudaStream_t stream = at::cuda::getCurrentCUDAStream();\r\n\r\n  dim3 grid(std::min(\r\n      at::cuda::ATenCeilDiv(\r\n          static_cast<int64_t>(output_size), static_cast<int64_t>(512)),\r\n      static_cast<int64_t>(4096)));\r\n  dim3 block(512);\r\n\r\n  AT_DISPATCH_FLOATING_TYPES_AND_HALF(\r\n      input.scalar_type(), \"PSROIAlign_forward\", [&] {\r\n        PSROIAlignForwardCUDA<scalar_t><<<grid, block, 0, stream>>>(\r\n            output_size,\r\n            input.contiguous().data_ptr<scalar_t>(),\r\n            spatial_scale,\r\n            channels,\r\n            height,\r\n            width,\r\n            pooled_height,\r\n            pooled_width,\r\n            sampling_ratio,\r\n            rois.contiguous().data_ptr<scalar_t>(),\r\n            channels_out,\r\n            output.data_ptr<scalar_t>(),\r\n            channel_mapping.data_ptr<int>());\r\n      });\r\n  AT_CUDA_CHECK(cudaGetLastError());\r\n  cudaDeviceSynchronize();\r\n  return std::make_tuple(output, channel_mapping);\r\n}\r\n\r\nat::Tensor PSROIAlign_backward_cuda(\r\n    const at::Tensor& grad,\r\n    const at::Tensor& rois,\r\n    const at::Tensor& channel_mapping,\r\n    const float spatial_scale,\r\n    const int pooled_height,\r\n    const int pooled_width,\r\n    const int sampling_ratio,\r\n    const int batch_size,\r\n    const int channels,\r\n    const int height,\r\n    const int width) {\r\n  // Check if input tensors are CUDA tensors\r\n  AT_ASSERTM(grad.type().is_cuda(), \"grad must be a CUDA tensor\");\r\n  AT_ASSERTM(rois.type().is_cuda(), \"rois must be a CUDA tensor\");\r\n  AT_ASSERTM(\r\n      channel_mapping.type().is_cuda(),\r\n      \"channel_mapping must be a CUDA tensor\");\r\n\r\n  at::TensorArg grad_t{grad, \"grad\", 1}, rois_t{rois, \"rois\", 2},\r\n      channel_mapping_t{channel_mapping, \"channel_mapping\", 3};\r\n\r\n  at::CheckedFrom c = \"PSROIAlign_backward_cuda\";\r\n  at::checkAllSameGPU(c, {grad_t, rois_t, channel_mapping_t});\r\n  at::checkAllSameType(c, {grad_t, rois_t});\r\n\r\n  at::cuda::CUDAGuard device_guard(grad.device());\r\n\r\n  auto num_rois = rois.size(0);\r\n  auto grad_input =\r\n      at::zeros({batch_size, channels, height, width}, grad.options());\r\n\r\n  cudaStream_t stream = at::cuda::getCurrentCUDAStream();\r\n\r\n  dim3 grid(std::min(\r\n      at::cuda::ATenCeilDiv(\r\n          static_cast<int64_t>(grad.numel()), static_cast<int64_t>(512)),\r\n      static_cast<int64_t>(4096)));\r\n  dim3 block(512);\r\n\r\n  // handle possibly empty gradients\r\n  if (grad.numel() == 0) {\r\n    AT_CUDA_CHECK(cudaGetLastError());\r\n    return grad_input;\r\n  }\r\n\r\n  int channels_out = channels / (pooled_height * pooled_width);\r\n\r\n  AT_DISPATCH_FLOATING_TYPES_AND_HALF(\r\n      grad.scalar_type(), \"PSROIAlign_backward\", [&] {\r\n        PSROIAlignBackwardCUDA<scalar_t><<<grid, block, 0, stream>>>(\r\n            grad.numel(),\r\n            grad.contiguous().data_ptr<scalar_t>(),\r\n            channel_mapping.data_ptr<int>(),\r\n            num_rois,\r\n            spatial_scale,\r\n            channels,\r\n            height,\r\n            width,\r\n            pooled_height,\r\n            pooled_width,\r\n            sampling_ratio,\r\n            channels_out,\r\n            grad_input.data_ptr<scalar_t>(),\r\n            rois.contiguous().data_ptr<scalar_t>());\r\n      });\r\n  AT_CUDA_CHECK(cudaGetLastError());\r\n  return grad_input;\r\n}\r\n```\r\n</details>\r\n\r\n<details>\r\n<summary> PSROIAlign_cuda.h </summary>\r\n\r\n```c\r\n#pragma once\r\n#include <torch/torch.h>\r\n#include <c10/cuda/CUDAGuard.h>\r\n\r\n#define CUDA_1D_KERNEL_LOOP(i, n)                                \\\r\n  for (int i = (blockIdx.x * blockDim.x) + threadIdx.x; i < (n); \\\r\n       i += (blockDim.x * gridDim.x))\r\n\r\n\r\nstd::tuple<at::Tensor, at::Tensor> PSROIAlign_forward_cuda(\r\n    const at::Tensor& input,\r\n    const at::Tensor& rois,\r\n    const float spatial_scale,\r\n    const int pooled_height,\r\n    const int pooled_width,\r\n    const int sampling_ratio);\r\n\r\nat::Tensor PSROIAlign_backward_cuda(\r\n    const at::Tensor& grad,\r\n    const at::Tensor& rois,\r\n    const at::Tensor& mapping_channel,\r\n    const float spatial_scale,\r\n    const int pooled_height,\r\n    const int pooled_width,\r\n    const int sampling_ratio,\r\n    const int batch_size,\r\n    const int channels,\r\n    const int height,\r\n    const int width);\r\n```\r\n\r\n</details>\r\n\r\n<details>\r\n  <summary> PSROIAlign_cpu.cpp </summary>\r\n\r\n```c\r\n#include \"PSROIAlign.h\"\r\n\r\ntemplate <typename T>\r\nT bilinear_interpolate(\r\n    const T* input,\r\n    const int height,\r\n    const int width,\r\n    T y,\r\n    T x,\r\n    const int index /* index for debug only*/) {\r\n  // deal with cases that inverse elements are out of feature map boundary\r\n  if (y < -1.0 || y > height || x < -1.0 || x > width) {\r\n    // empty\r\n    return 0;\r\n  }\r\n\r\n  if (y <= 0)\r\n    y = 0;\r\n  if (x <= 0)\r\n    x = 0;\r\n\r\n  int y_low = (int)y;\r\n  int x_low = (int)x;\r\n  int y_high;\r\n  int x_high;\r\n\r\n  if (y_low >= height - 1) {\r\n    y_high = y_low = height - 1;\r\n    y = (T)y_low;\r\n  } else {\r\n    y_high = y_low + 1;\r\n  }\r\n\r\n  if (x_low >= width - 1) {\r\n    x_high = x_low = width - 1;\r\n    x = (T)x_low;\r\n  } else {\r\n    x_high = x_low + 1;\r\n  }\r\n\r\n  T ly = y - y_low;\r\n  T lx = x - x_low;\r\n  T hy = 1. - ly, hx = 1. - lx;\r\n\r\n  // do bilinear interpolation\r\n  T v1 = input[y_low * width + x_low];\r\n  T v2 = input[y_low * width + x_high];\r\n  T v3 = input[y_high * width + x_low];\r\n  T v4 = input[y_high * width + x_high];\r\n  T w1 = hy * hx, w2 = hy * lx, w3 = ly * hx, w4 = ly * lx;\r\n\r\n  T val = (w1 * v1 + w2 * v2 + w3 * v3 + w4 * v4);\r\n\r\n  return val;\r\n}\r\n\r\ntemplate <typename T>\r\nvoid PSROIAlignForwardCPU(\r\n    const int nthreads,\r\n    const T* input,\r\n    const T spatial_scale,\r\n    const int channels,\r\n    const int height,\r\n    const int width,\r\n    const int pooled_height,\r\n    const int pooled_width,\r\n    const int sampling_ratio,\r\n    const T* rois,\r\n    const int channels_out,\r\n    T* output,\r\n    int* channel_mapping) {\r\n  int num_rois = nthreads / channels_out / pooled_width / pooled_height;\r\n  for (int n = 0; n < num_rois; n++) {\r\n    // [start, end) interval for spatial sampling\r\n    const T* offset_rois = rois + n * 5;\r\n    int roi_batch_ind = offset_rois[0];\r\n\r\n    // Do not using rounding; this implementation detail is critical\r\n    T roi_start_w = offset_rois[1] * spatial_scale - static_cast<T>(0.5);\r\n    T roi_start_h = offset_rois[2] * spatial_scale - static_cast<T>(0.5);\r\n    T roi_end_w = offset_rois[3] * spatial_scale - static_cast<T>(0.5);\r\n    T roi_end_h = offset_rois[4] * spatial_scale - static_cast<T>(0.5);\r\n\r\n    T roi_width = roi_end_w - roi_start_w;\r\n    T roi_height = roi_end_h - roi_start_h;\r\n    T bin_size_h = static_cast<T>(roi_height) / static_cast<T>(pooled_height);\r\n    T bin_size_w = static_cast<T>(roi_width) / static_cast<T>(pooled_width);\r\n\r\n    int c_in = 0;\r\n    for (int c_out = 0; c_out < channels_out; ++c_out) {\r\n      for (int ph = 0; ph < pooled_height; ++ph) {\r\n        for (int pw = 0; pw < pooled_width; ++pw) {\r\n          int index =\r\n              ((n * channels_out + c_out) * pooled_height + ph) * pooled_width +\r\n              pw;\r\n\r\n          // Do not using floor/ceil; this implementation detail is critical\r\n          T hstart = static_cast<T>(ph) * bin_size_h + roi_start_h;\r\n          T wstart = static_cast<T>(pw) * bin_size_w + roi_start_w;\r\n\r\n          // We use roi_bin_grid to sample the grid and mimic integral\r\n          int roi_bin_grid_h = (sampling_ratio > 0)\r\n              ? sampling_ratio\r\n              : ceil(roi_height / pooled_height);\r\n          int roi_bin_grid_w = (sampling_ratio > 0)\r\n              ? sampling_ratio\r\n              : ceil(roi_width / pooled_width);\r\n          const T count = roi_bin_grid_h * roi_bin_grid_w;\r\n\r\n          const T* offset_input =\r\n              input + (roi_batch_ind * channels + c_in) * height * width;\r\n\r\n          T out_sum = 0;\r\n          for (int iy = 0; iy < roi_bin_grid_h; iy++) {\r\n            const T y = hstart +\r\n                static_cast<T>(iy + .5f) * bin_size_h /\r\n                    static_cast<T>(roi_bin_grid_h);\r\n            for (int ix = 0; ix < roi_bin_grid_w; ix++) {\r\n              const T x = wstart +\r\n                  static_cast<T>(ix + .5f) * bin_size_w /\r\n                      static_cast<T>(roi_bin_grid_w);\r\n              T val = bilinear_interpolate(\r\n                  offset_input, height, width, y, x, index);\r\n              out_sum += val;\r\n            }\r\n          }\r\n\r\n          out_sum /= count;\r\n          output[index] = out_sum;\r\n          channel_mapping[index] = c_in;\r\n          c_in++;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\ntemplate <typename T>\r\nvoid bilinear_interpolate_gradient(\r\n    const int height,\r\n    const int width,\r\n    T y,\r\n    T x,\r\n    T& w1,\r\n    T& w2,\r\n    T& w3,\r\n    T& w4,\r\n    int& x_low,\r\n    int& x_high,\r\n    int& y_low,\r\n    int& y_high,\r\n    const int index /* index for debug only*/) {\r\n  // deal with cases that inverse elements are out of feature map boundary\r\n  if (y < -1.0 || y > height || x < -1.0 || x > width) {\r\n    // empty\r\n    w1 = w2 = w3 = w4 = 0.;\r\n    x_low = x_high = y_low = y_high = -1;\r\n    return;\r\n  }\r\n\r\n  if (y <= 0)\r\n    y = 0;\r\n  if (x <= 0)\r\n    x = 0;\r\n\r\n  y_low = (int)y;\r\n  x_low = (int)x;\r\n\r\n  if (y_low >= height - 1) {\r\n    y_high = y_low = height - 1;\r\n    y = (T)y_low;\r\n  } else {\r\n    y_high = y_low + 1;\r\n  }\r\n\r\n  if (x_low >= width - 1) {\r\n    x_high = x_low = width - 1;\r\n    x = (T)x_low;\r\n  } else {\r\n    x_high = x_low + 1;\r\n  }\r\n\r\n  T ly = y - y_low;\r\n  T lx = x - x_low;\r\n  T hy = 1. - ly, hx = 1. - lx;\r\n\r\n  // reference in forward\r\n  // T v1 = input[y_low * width + x_low];\r\n  // T v2 = input[y_low * width + x_high];\r\n  // T v3 = input[y_high * width + x_low];\r\n  // T v4 = input[y_high * width + x_high];\r\n  // T val = (w1 * v1 + w2 * v2 + w3 * v3 + w4 * v4);\r\n\r\n  w1 = hy * hx, w2 = hy * lx, w3 = ly * hx, w4 = ly * lx;\r\n\r\n  return;\r\n}\r\n\r\ntemplate <class T>\r\ninline void add(T* address, const T& val) {\r\n  *address += val;\r\n}\r\n\r\ntemplate <typename T>\r\nvoid PSROIAlignBackwardCPU(\r\n    const int nthreads,\r\n    const T* grad_output,\r\n    const int* channel_mapping,\r\n    const int num_rois,\r\n    const T spatial_scale,\r\n    const int channels,\r\n    const int height,\r\n    const int width,\r\n    const int pooled_height,\r\n    const int pooled_width,\r\n    const int sampling_ratio,\r\n    const int channels_out,\r\n    T* grad_input,\r\n    const T* rois) {\r\n  for (int index = 0; index < nthreads; index++) {\r\n    int pw = index % pooled_width;\r\n    int ph = (index / pooled_width) % pooled_height;\r\n    int n = index / pooled_width / pooled_height / channels_out;\r\n\r\n    const T* offset_rois = rois + n * 5;\r\n    int roi_batch_ind = offset_rois[0];\r\n\r\n    // Do not using rounding; this implementation detail is critical\r\n    T roi_start_w = offset_rois[1] * spatial_scale - static_cast<T>(0.5);\r\n    T roi_start_h = offset_rois[2] * spatial_scale - static_cast<T>(0.5);\r\n    T roi_end_w = offset_rois[3] * spatial_scale - static_cast<T>(0.5);\r\n    T roi_end_h = offset_rois[4] * spatial_scale - static_cast<T>(0.5);\r\n\r\n    // Force too small ROIs to be 1x1\r\n    T roi_width = roi_end_w - roi_start_w;\r\n    T roi_height = roi_end_h - roi_start_h;\r\n    T bin_size_h = roi_height / static_cast<T>(pooled_height);\r\n    T bin_size_w = roi_width / static_cast<T>(pooled_width);\r\n\r\n    int c_in = channel_mapping[index];\r\n    T* grad_input_offset =\r\n        grad_input + (roi_batch_ind * channels + c_in) * height * width;\r\n\r\n    // Do not using floor/ceil; this implementation detail is critical\r\n    T hstart = static_cast<T>(ph) * bin_size_h + roi_start_h;\r\n    T wstart = static_cast<T>(pw) * bin_size_w + roi_start_w;\r\n\r\n    const T grad_output_this_bin = grad_output[index];\r\n\r\n    // We use roi_bin_grid to sample the grid and mimic integral\r\n    int roi_bin_grid_h = (sampling_ratio > 0)\r\n        ? sampling_ratio\r\n        : ceil(roi_height / pooled_height); // e.g., = 2\r\n    int roi_bin_grid_w =\r\n        (sampling_ratio > 0) ? sampling_ratio : ceil(roi_width / pooled_width);\r\n    const T count = roi_bin_grid_h * roi_bin_grid_w;\r\n\r\n    for (int iy = 0; iy < roi_bin_grid_h; iy++) {\r\n      const T y = hstart +\r\n          static_cast<T>(iy + .5f) * bin_size_h /\r\n              static_cast<T>(roi_bin_grid_h);\r\n      for (int ix = 0; ix < roi_bin_grid_w; ix++) {\r\n        const T x = wstart +\r\n            static_cast<T>(ix + .5f) * bin_size_w /\r\n                static_cast<T>(roi_bin_grid_w);\r\n\r\n        T w1, w2, w3, w4;\r\n        int x_low, x_high, y_low, y_high;\r\n\r\n        bilinear_interpolate_gradient(\r\n            height,\r\n            width,\r\n            y,\r\n            x,\r\n            w1,\r\n            w2,\r\n            w3,\r\n            w4,\r\n            x_low,\r\n            x_high,\r\n            y_low,\r\n            y_high,\r\n            index);\r\n\r\n        T g1 = grad_output_this_bin * w1 / count;\r\n        T g2 = grad_output_this_bin * w2 / count;\r\n        T g3 = grad_output_this_bin * w3 / count;\r\n        T g4 = grad_output_this_bin * w4 / count;\r\n\r\n        if (x_low >= 0 && x_high >= 0 && y_low >= 0 && y_high >= 0) {\r\n          add(grad_input_offset + y_low * width + x_low, g1);\r\n          add(grad_input_offset + y_low * width + x_high, g2);\r\n          add(grad_input_offset + y_high * width + x_low, g3);\r\n          add(grad_input_offset + y_high * width + x_high, g4);\r\n        } // if\r\n      } // ix\r\n    } // iy\r\n  }\r\n}\r\n\r\nstd::tuple<at::Tensor, at::Tensor> PSROIAlign_forward_cpu(\r\n    const at::Tensor& input,\r\n    const at::Tensor& rois,\r\n    const float spatial_scale,\r\n    const int pooled_height,\r\n    const int pooled_width,\r\n    const int sampling_ratio) {\r\n  // Check if input tensors are CPU tensors\r\n  AT_ASSERTM(input.device().is_cpu(), \"input must be a CPU tensor\");\r\n  AT_ASSERTM(rois.device().is_cpu(), \"rois must be a CPU tensor\");\r\n\r\n  at::TensorArg input_t{input, \"input\", 1}, rois_t{rois, \"rois\", 2};\r\n\r\n  at::CheckedFrom c = \"PSROIAlign_forward_cpu\";\r\n  at::checkAllSameType(c, {input_t, rois_t});\r\n\r\n  int num_rois = rois.size(0);\r\n  int channels = input.size(1);\r\n  int height = input.size(2);\r\n  int width = input.size(3);\r\n\r\n  AT_ASSERTM(\r\n      channels % (pooled_height * pooled_width) == 0,\r\n      \"input channels must be a multiple of pooling height * pooling width\");\r\n  int channels_out = channels / (pooled_height * pooled_width);\r\n\r\n  auto output = at::zeros(\r\n      {num_rois, channels_out, pooled_height, pooled_width}, input.options());\r\n  auto channel_mapping =\r\n      at::zeros(output.sizes(), input.options().dtype(at::kInt));\r\n\r\n  auto output_size = output.numel();\r\n  if (output_size == 0) {\r\n    return std::make_tuple(output, channel_mapping);\r\n  }\r\n\r\n  AT_DISPATCH_FLOATING_TYPES_AND_HALF(\r\n      input.scalar_type(), \"PSROIAlign_forward\", [&] {\r\n        PSROIAlignForwardCPU<scalar_t>(\r\n            output_size,\r\n            input.contiguous().data_ptr<scalar_t>(),\r\n            spatial_scale,\r\n            channels,\r\n            height,\r\n            width,\r\n            pooled_height,\r\n            pooled_width,\r\n            sampling_ratio,\r\n            rois.contiguous().data_ptr<scalar_t>(),\r\n            channels_out,\r\n            output.data_ptr<scalar_t>(),\r\n            channel_mapping.data_ptr<int>());\r\n      });\r\n  return std::make_tuple(output, channel_mapping);\r\n}\r\n\r\nat::Tensor PSROIAlign_backward_cpu(\r\n    const at::Tensor& grad,\r\n    const at::Tensor& rois,\r\n    const at::Tensor& channel_mapping,\r\n    const float spatial_scale,\r\n    const int pooled_height,\r\n    const int pooled_width,\r\n    const int sampling_ratio,\r\n    const int batch_size,\r\n    const int channels,\r\n    const int height,\r\n    const int width) {\r\n  // Check if input tensors are CPU tensors\r\n  AT_ASSERTM(grad.device().is_cpu(), \"grad must be a CPU tensor\");\r\n  AT_ASSERTM(rois.device().is_cpu(), \"rois must be a CPU tensor\");\r\n  AT_ASSERTM(\r\n      channel_mapping.device().is_cpu(),\r\n      \"channel_mapping must be a CPU tensor\");\r\n\r\n  at::TensorArg grad_t{grad, \"grad\", 1}, rois_t{rois, \"rois\", 2},\r\n      channel_mapping_t{channel_mapping, \"channel_mapping\", 3};\r\n\r\n  at::CheckedFrom c = \"PSROIAlign_backward_cpu\";\r\n  at::checkAllSameType(c, {grad_t, rois_t});\r\n\r\n  auto num_rois = rois.size(0);\r\n  auto grad_input =\r\n      at::zeros({batch_size, channels, height, width}, grad.options());\r\n\r\n  // handle possibly empty gradients\r\n  if (grad.numel() == 0) {\r\n    return grad_input;\r\n  }\r\n\r\n  int channels_out = channels / (pooled_height * pooled_width);\r\n\r\n  AT_DISPATCH_FLOATING_TYPES_AND_HALF(\r\n      grad.scalar_type(), \"PSROIAlign_backward\", [&] {\r\n        PSROIAlignBackwardCPU<scalar_t>(\r\n            grad.numel(),\r\n            grad.contiguous().data_ptr<scalar_t>(),\r\n            channel_mapping.data_ptr<int>(),\r\n            num_rois,\r\n            spatial_scale,\r\n            channels,\r\n            height,\r\n            width,\r\n            pooled_height,\r\n            pooled_width,\r\n            sampling_ratio,\r\n            channels_out,\r\n            grad_input.data_ptr<scalar_t>(),\r\n            rois.contiguous().data_ptr<scalar_t>());\r\n      });\r\n  return grad_input;\r\n}\r\n```\r\n\r\n</details>\r\n\r\n<details>\r\n<summary>\r\nPSROIAlign.h\r\n</summary>\r\n\r\n```c\r\n#pragma once\r\n\r\n#include \"torch/torch.h\"\r\n#include \"PSROIAlign_cuda.h\"\r\n\r\n#include <iostream>\r\n\r\n\r\n\r\nstd::tuple<at::Tensor, at::Tensor> PSROIAlign_forward_cpu(\r\n    const at::Tensor & input,\r\n    const at::Tensor & rois,\r\n    const float spatial_scale,\r\n    const int pooled_height,\r\n    const int pooled_width,\r\n    const int sampling_ratio);\r\n\r\nat::Tensor PSROIAlign_backward_cpu(\r\n    const at::Tensor & grad,\r\n    const at::Tensor & rois,\r\n    const at::Tensor & mapping_channel,\r\n    const float spatial_scale,\r\n    const int pooled_height,\r\n    const int pooled_width,\r\n    const int sampling_ratio,\r\n    const int batch_size,\r\n    const int channels,\r\n    const int height,\r\n    const int width);\r\n\r\nstd::tuple<at::Tensor, at::Tensor> PSROIAlign_forward(\r\n    const at::Tensor& input,\r\n    const at::Tensor& rois,\r\n    const float spatial_scale,\r\n    const int pooled_height,\r\n    const int pooled_width,\r\n    const int sampling_ratio) {\r\n  if (input.type().is_cuda()) {\r\n\r\n    return PSROIAlign_forward_cuda(\r\n        input,\r\n        rois,\r\n        spatial_scale,\r\n        pooled_height,\r\n        pooled_width,\r\n        sampling_ratio);\r\n  }\r\n  return PSROIAlign_forward_cpu(\r\n      input, rois, spatial_scale, pooled_height, pooled_width, sampling_ratio);\r\n}\r\n\r\nat::Tensor PSROIAlign_backward(\r\n    const at::Tensor& grad,\r\n    const at::Tensor& rois,\r\n    const at::Tensor& mapping_channel,\r\n    const float spatial_scale,\r\n    const int pooled_height,\r\n    const int pooled_width,\r\n    const int sampling_ratio,\r\n    const int batch_size,\r\n    const int channels,\r\n    const int height,\r\n    const int width) {\r\n  if (grad.type().is_cuda()) {\r\n\r\n    return PSROIAlign_backward_cuda(\r\n        grad,\r\n        rois,\r\n        mapping_channel,\r\n        spatial_scale,\r\n        pooled_height,\r\n        pooled_width,\r\n        sampling_ratio,\r\n        batch_size,\r\n        channels,\r\n        height,\r\n        width);\r\n  }\r\n  return PSROIAlign_backward_cpu(\r\n      grad,\r\n      rois,\r\n      mapping_channel,\r\n      spatial_scale,\r\n      pooled_height,\r\n      pooled_width,\r\n      sampling_ratio,\r\n      batch_size,\r\n      channels,\r\n      height,\r\n      width);\r\n}\r\n\r\nusing namespace at;\r\nusing torch::Tensor;\r\nusing torch::autograd::AutogradContext;\r\nusing torch::autograd::Variable;\r\nusing torch::autograd::variable_list;\r\n\r\nclass PSROIAlignFunction\r\n    : public torch::autograd::Function<PSROIAlignFunction> {\r\n public:\r\n  static variable_list forward(\r\n      AutogradContext* ctx,\r\n      Variable input,\r\n      Variable rois,\r\n      const double spatial_scale,\r\n      const int64_t pooled_height,\r\n      const int64_t pooled_width,\r\n      const int64_t sampling_ratio) {\r\n    ctx->saved_data[\"spatial_scale\"] = spatial_scale;\r\n    ctx->saved_data[\"pooled_height\"] = pooled_height;\r\n    ctx->saved_data[\"pooled_width\"] = pooled_width;\r\n    ctx->saved_data[\"sampling_ratio\"] = sampling_ratio;\r\n    ctx->saved_data[\"input_shape\"] = input.sizes();\r\n    auto result = PSROIAlign_forward(\r\n        input,\r\n        rois,\r\n        spatial_scale,\r\n        pooled_height,\r\n        pooled_width,\r\n        sampling_ratio);\r\n    auto output = std::get<0>(result);\r\n    auto channel_mapping = std::get<1>(result);\r\n    ctx->save_for_backward({rois, channel_mapping});\r\n    ctx->mark_non_differentiable({channel_mapping});\r\n    return {output, channel_mapping};\r\n  }\r\n\r\n  static variable_list backward(\r\n      AutogradContext* ctx,\r\n      variable_list grad_output) {\r\n    // Use data saved in forward\r\n    auto saved = ctx->get_saved_variables();\r\n    auto rois = saved[0];\r\n    auto channel_mapping = saved[1];\r\n    auto input_shape = ctx->saved_data[\"input_shape\"].toIntList();\r\n    auto grad_in = PSROIAlign_backward(\r\n        grad_output[0],\r\n        rois,\r\n        channel_mapping,\r\n        ctx->saved_data[\"spatial_scale\"].toDouble(),\r\n        ctx->saved_data[\"pooled_height\"].toInt(),\r\n        ctx->saved_data[\"pooled_width\"].toInt(),\r\n        ctx->saved_data[\"sampling_ratio\"].toInt(),\r\n        input_shape[0],\r\n        input_shape[1],\r\n        input_shape[2],\r\n        input_shape[3]);\r\n    return {\r\n        grad_in, Variable(), Variable(), Variable(), Variable(), Variable()};\r\n  }\r\n};\r\n\r\nstd::tuple<Tensor, Tensor> ps_roi_align(\r\n    const Tensor& input,\r\n    const torch::Tensor& rois,\r\n    const double spatial_scale,\r\n    const int64_t pooled_height,\r\n    const int64_t pooled_width,\r\n    const int64_t sampling_ratio) {\r\n  auto result = PSROIAlignFunction::apply(\r\n      input, rois, spatial_scale, pooled_height, pooled_width, sampling_ratio);\r\n  return std::tuple<Tensor, Tensor>(result[0], result[1]);\r\n}\r\n```\r\n\r\n</details>\r\n\n\ncc @suo",
        "closed_by": {
            "login": "peterjc123",
            "id": 9998726,
            "node_id": "MDQ6VXNlcjk5OTg3MjY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9998726?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/peterjc123",
            "html_url": "https://github.com/peterjc123",
            "followers_url": "https://api.github.com/users/peterjc123/followers",
            "following_url": "https://api.github.com/users/peterjc123/following{/other_user}",
            "gists_url": "https://api.github.com/users/peterjc123/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/peterjc123/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/peterjc123/subscriptions",
            "organizations_url": "https://api.github.com/users/peterjc123/orgs",
            "repos_url": "https://api.github.com/users/peterjc123/repos",
            "events_url": "https://api.github.com/users/peterjc123/events{/privacy}",
            "received_events_url": "https://api.github.com/users/peterjc123/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/39394/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/39394/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/39210",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/39210/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/39210/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/39210/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/39210",
        "id": 626911584,
        "node_id": "MDU6SXNzdWU2MjY5MTE1ODQ=",
        "number": 39210,
        "title": "[jit] ScriptModules cannot call `index()` on Lists.",
        "user": {
            "login": "HapeMask",
            "id": 1616684,
            "node_id": "MDQ6VXNlcjE2MTY2ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1616684?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/HapeMask",
            "html_url": "https://github.com/HapeMask",
            "followers_url": "https://api.github.com/users/HapeMask/followers",
            "following_url": "https://api.github.com/users/HapeMask/following{/other_user}",
            "gists_url": "https://api.github.com/users/HapeMask/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/HapeMask/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/HapeMask/subscriptions",
            "organizations_url": "https://api.github.com/users/HapeMask/orgs",
            "repos_url": "https://api.github.com/users/HapeMask/repos",
            "events_url": "https://api.github.com/users/HapeMask/events{/privacy}",
            "received_events_url": "https://api.github.com/users/HapeMask/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            },
            {
                "id": 1301447942,
                "node_id": "MDU6TGFiZWwxMzAxNDQ3OTQy",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/enhancement",
                "name": "enhancement",
                "color": "ffc6f4",
                "default": true,
                "description": "Not as big of a feature, but technically not a bug. Should be easy to fix"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "firstprayer",
            "id": 2390732,
            "node_id": "MDQ6VXNlcjIzOTA3MzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2390732?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/firstprayer",
            "html_url": "https://github.com/firstprayer",
            "followers_url": "https://api.github.com/users/firstprayer/followers",
            "following_url": "https://api.github.com/users/firstprayer/following{/other_user}",
            "gists_url": "https://api.github.com/users/firstprayer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/firstprayer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/firstprayer/subscriptions",
            "organizations_url": "https://api.github.com/users/firstprayer/orgs",
            "repos_url": "https://api.github.com/users/firstprayer/repos",
            "events_url": "https://api.github.com/users/firstprayer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/firstprayer/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "firstprayer",
                "id": 2390732,
                "node_id": "MDQ6VXNlcjIzOTA3MzI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/2390732?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/firstprayer",
                "html_url": "https://github.com/firstprayer",
                "followers_url": "https://api.github.com/users/firstprayer/followers",
                "following_url": "https://api.github.com/users/firstprayer/following{/other_user}",
                "gists_url": "https://api.github.com/users/firstprayer/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/firstprayer/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/firstprayer/subscriptions",
                "organizations_url": "https://api.github.com/users/firstprayer/orgs",
                "repos_url": "https://api.github.com/users/firstprayer/repos",
                "events_url": "https://api.github.com/users/firstprayer/events{/privacy}",
                "received_events_url": "https://api.github.com/users/firstprayer/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 5,
        "created_at": "2020-05-29T00:13:50Z",
        "updated_at": "2020-08-04T04:41:21Z",
        "closed_at": "2020-08-04T04:41:21Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\nTrying to script a module which finds the index of an element in a list fails:\r\n\r\n```python\r\nfrom typing import List\r\n\r\nimport torch as th\r\n\r\nclass Mod(th.nn.Module):                                                                                                                                                                                                                    \r\n    def __init__(self):\r\n        super().__init__()\r\n\r\n    def forward(self, s: str, l: List[str]):\r\n        return l.index(s)\r\n\r\nmod = Mod()\r\nth.jit.script(mod)\r\n```\r\n\r\nwith the following error:\r\n\r\n```\r\nFile \".../lib/python3.7/site-packages/torch/jit/_recursive.py\", line 279, in create_methods_from_stubs\r\n    concrete_type._create_methods(defs, rcbs, defaults)\r\nRuntimeError:\r\nTried to access nonexistent attribute or method 'index' of type 'List[str]'.:\r\n  File \"test.py\", line 11\r\n    def forward(self, s: str, l: List[str]):\r\n        return l.index(s)\r\n               ~~~~~~~ <--- HERE\r\n```\r\n\r\nPyTorch 1.5.0 stable from Anaconda.\n\ncc @suo",
        "closed_by": {
            "login": "firstprayer",
            "id": 2390732,
            "node_id": "MDQ6VXNlcjIzOTA3MzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2390732?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/firstprayer",
            "html_url": "https://github.com/firstprayer",
            "followers_url": "https://api.github.com/users/firstprayer/followers",
            "following_url": "https://api.github.com/users/firstprayer/following{/other_user}",
            "gists_url": "https://api.github.com/users/firstprayer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/firstprayer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/firstprayer/subscriptions",
            "organizations_url": "https://api.github.com/users/firstprayer/orgs",
            "repos_url": "https://api.github.com/users/firstprayer/repos",
            "events_url": "https://api.github.com/users/firstprayer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/firstprayer/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/39210/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/39210/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/39020",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/39020/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/39020/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/39020/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/39020",
        "id": 625108148,
        "node_id": "MDU6SXNzdWU2MjUxMDgxNDg=",
        "number": 39020,
        "title": "Interpreter crashes if default args are not type-hinted in C++ TorchScript frontend",
        "user": {
            "login": "lantiga",
            "id": 191033,
            "node_id": "MDQ6VXNlcjE5MTAzMw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/191033?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lantiga",
            "html_url": "https://github.com/lantiga",
            "followers_url": "https://api.github.com/users/lantiga/followers",
            "following_url": "https://api.github.com/users/lantiga/following{/other_user}",
            "gists_url": "https://api.github.com/users/lantiga/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lantiga/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lantiga/subscriptions",
            "organizations_url": "https://api.github.com/users/lantiga/orgs",
            "repos_url": "https://api.github.com/users/lantiga/repos",
            "events_url": "https://api.github.com/users/lantiga/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lantiga/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "lantiga",
            "id": 191033,
            "node_id": "MDQ6VXNlcjE5MTAzMw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/191033?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lantiga",
            "html_url": "https://github.com/lantiga",
            "followers_url": "https://api.github.com/users/lantiga/followers",
            "following_url": "https://api.github.com/users/lantiga/following{/other_user}",
            "gists_url": "https://api.github.com/users/lantiga/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lantiga/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lantiga/subscriptions",
            "organizations_url": "https://api.github.com/users/lantiga/orgs",
            "repos_url": "https://api.github.com/users/lantiga/repos",
            "events_url": "https://api.github.com/users/lantiga/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lantiga/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "lantiga",
                "id": 191033,
                "node_id": "MDQ6VXNlcjE5MTAzMw==",
                "avatar_url": "https://avatars.githubusercontent.com/u/191033?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/lantiga",
                "html_url": "https://github.com/lantiga",
                "followers_url": "https://api.github.com/users/lantiga/followers",
                "following_url": "https://api.github.com/users/lantiga/following{/other_user}",
                "gists_url": "https://api.github.com/users/lantiga/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/lantiga/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lantiga/subscriptions",
                "organizations_url": "https://api.github.com/users/lantiga/orgs",
                "repos_url": "https://api.github.com/users/lantiga/repos",
                "events_url": "https://api.github.com/users/lantiga/events{/privacy}",
                "received_events_url": "https://api.github.com/users/lantiga/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-05-26T18:50:25Z",
        "updated_at": "2020-05-28T08:44:25Z",
        "closed_at": "2020-05-28T08:44:25Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\nCompiling TorchScript source (from C++) that uses default function arguments without type-hints causes the interpreter to crash.\r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior:\r\n\r\n1. Create a TorchScript with a function using default arguments without type hints\r\n1. Compile it using the C++ frontend (`torch::jit::compile`)\r\n1. Run -> crash\r\n\r\n```\r\n#include \"torch/jit.h\"\r\n\r\nint main() {\r\n\r\n  const auto text = R\"(\r\ndef a(x, y=1):\r\n    print(\"a1\")\r\n    print(\"a2\")\r\n    return x\r\n  )\";\r\n\r\n  torch::jit::compile(text);\r\n  return 0;\r\n}\r\n```\r\n\r\nRunning the above leads to a segfault with stack trace:\r\n\r\n```\r\n3   libtorch_cpu.dylib                  0x0000000107310000 __dso_handle + 0\r\n4   libtorch_cpu.dylib                  0x000000010a02f223 _ZN5torch3jit16ScriptTypeParser17parseArgsFromDeclERKNS0_4DeclEb + 547\r\n5   libtorch_cpu.dylib                  0x000000010a03179e _ZN5torch3jit16ScriptTypeParser18parseSchemaFromDefERKNS0_3DefEb + 270\r\n6   libtorch_cpu.dylib                  0x0000000109fbd060 _ZN5torch3jit5to_ir7emitDefERKNS0_3DefEPKNS0_4SelfEPNS0_5BlockE + 80\r\n7   libtorch_cpu.dylib                  0x0000000109fbc6b4 _ZN5torch3jit5to_irC2ERKNS0_3DefENSt3__110shared_ptrINS0_8ResolverEEEPKNS0_4SelfERNS0_8FunctionE + 756\r\n8   libtorch_cpu.dylib                  0x0000000109fbc0e5 _ZNSt3__110__function6__funcIZNK5torch3jit15CompilationUnit6defineERKN3c108optionalINS5_13QualifiedNameEEERKNS3_3DefERKNS_10shared_ptrINS3_8ResolverEEEPKNS3_4SelfERKNS_13unordered_mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPNS3_8FunctionENS_4hashISS_EENS_8equal_toISS_EENSQ_INS_4pairIKSS_SU_EEEEEEbE3$_0NSQ_IS16_EEFvRNS3_13GraphFunctionEEEclES19_ + 517\r\n9   libtorch_cpu.dylib                  0x000000010a0adc1b _ZN5torch3jit13GraphFunction14ensure_definedEv + 171\r\n10  libtorch_cpu.dylib                  0x0000000109fb81a9 _ZN5torch3jit15CompilationUnit6defineERKN3c108optionalINS2_13QualifiedNameEEERKNSt3__16vectorINS0_3DefENS8_9allocatorISA_EEEERKNS9_INS8_10shared_ptrINS0_8ResolverEEENSB_ISI_EEEEPKNS0_4SelfEb + 169\r\n11  libtorch_cpu.dylib                  0x0000000109fb58c3 _ZN5torch3jit15CompilationUnit6defineERKN3c108optionalINS2_13QualifiedNameEEERKNSt3__112basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEERKNS8_10shared_ptrINS0_8ResolverEEEPKNS0_4SelfE + 627\r\n12  libtorch_cpu.dylib                  0x000000010a14b9b2 _ZN5torch3jit7compileERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE + 418\r\n```\r\n\r\nOn the other hand, this works\r\n\r\n```\r\n#include \"torch/jit.h\"\r\n\r\nint main() {\r\n\r\n  const auto text = R\"(\r\ndef a(x, y:int=1):\r\n    print(\"a1\")\r\n    print(\"a2\")\r\n    return x\r\n  )\";\r\n\r\n  torch::jit::compile(text);\r\n  return 0;\r\n}\r\n```\r\n\r\n## Expected behavior\r\n\r\nEither type is inferred or an exception is raised requiring type hinting.\r\n\r\n## Environment\r\n```\r\nPyTorch version: 1.6.0a0+d035d05\r\nIs debug build: No\r\nCUDA used to build PyTorch: None\r\n\r\nOS: Mac OSX 10.15.4\r\nGCC version: Could not collect\r\nCMake version: version 3.14.0\r\n\r\nPython version: 3.8\r\nIs CUDA available: No\r\nCUDA runtime version: No CUDA\r\nGPU models and configuration: No CUDA\r\nNvidia driver version: No CUDA\r\ncuDNN version: No CUDA\r\n\r\nVersions of relevant libraries:\r\n[pip] numpy==1.18.1\r\n[pip] torch==1.6.0a0+d035d05\r\n[conda] mkl                       2020.1                      216  \r\n[conda] mkl-include               2020.1                      216  \r\n[conda] numpy                     1.18.1           py38h0c13f30_0  \r\n[conda] numpy-base                1.18.1           py38hc72aeb7_1  \r\n[conda] torch                     1.6.0a0+d035d05           dev_0    <develop>\r\n```\r\n## Additional context\r\n\r\nI have a fix and will submit a PR shortly (will link this issue from there).\n\ncc @suo",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/39020/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/39020/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/38731",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/38731/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/38731/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/38731/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/38731",
        "id": 621214288,
        "node_id": "MDU6SXNzdWU2MjEyMTQyODg=",
        "number": 38731,
        "title": "[JIT] Bad alias annotations",
        "user": {
            "login": "eellison",
            "id": 11477974,
            "node_id": "MDQ6VXNlcjExNDc3OTc0",
            "avatar_url": "https://avatars.githubusercontent.com/u/11477974?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eellison",
            "html_url": "https://github.com/eellison",
            "followers_url": "https://api.github.com/users/eellison/followers",
            "following_url": "https://api.github.com/users/eellison/following{/other_user}",
            "gists_url": "https://api.github.com/users/eellison/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eellison/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eellison/subscriptions",
            "organizations_url": "https://api.github.com/users/eellison/orgs",
            "repos_url": "https://api.github.com/users/eellison/repos",
            "events_url": "https://api.github.com/users/eellison/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eellison/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1027606656,
                "node_id": "MDU6TGFiZWwxMDI3NjA2NjU2",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20bootcamp",
                "name": "module: bootcamp",
                "color": "f7e101",
                "default": false,
                "description": "We plan to do a full writeup on the issue, and then get someone to do it for onboarding"
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            },
            {
                "id": 2073380856,
                "node_id": "MDU6TGFiZWwyMDczMzgwODU2",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/medium",
                "name": "medium",
                "color": "e6a6ea",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "rahuln32",
            "id": 2838795,
            "node_id": "MDQ6VXNlcjI4Mzg3OTU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2838795?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rahuln32",
            "html_url": "https://github.com/rahuln32",
            "followers_url": "https://api.github.com/users/rahuln32/followers",
            "following_url": "https://api.github.com/users/rahuln32/following{/other_user}",
            "gists_url": "https://api.github.com/users/rahuln32/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rahuln32/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rahuln32/subscriptions",
            "organizations_url": "https://api.github.com/users/rahuln32/orgs",
            "repos_url": "https://api.github.com/users/rahuln32/repos",
            "events_url": "https://api.github.com/users/rahuln32/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rahuln32/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "rahuln32",
                "id": 2838795,
                "node_id": "MDQ6VXNlcjI4Mzg3OTU=",
                "avatar_url": "https://avatars.githubusercontent.com/u/2838795?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/rahuln32",
                "html_url": "https://github.com/rahuln32",
                "followers_url": "https://api.github.com/users/rahuln32/followers",
                "following_url": "https://api.github.com/users/rahuln32/following{/other_user}",
                "gists_url": "https://api.github.com/users/rahuln32/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/rahuln32/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rahuln32/subscriptions",
                "organizations_url": "https://api.github.com/users/rahuln32/orgs",
                "repos_url": "https://api.github.com/users/rahuln32/repos",
                "events_url": "https://api.github.com/users/rahuln32/events{/privacy}",
                "received_events_url": "https://api.github.com/users/rahuln32/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-05-19T19:02:19Z",
        "updated_at": "2020-10-22T13:53:25Z",
        "closed_at": "2020-10-22T13:53:24Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\nThere are at least a few schemas in `native_functions.yaml` which have incorrect alias annotations, such as `func: view_as(Tensor self, Tensor other) -> Tensor`. \r\n\r\nWe currently have a couple different bits of test machinery that could have caught this bug.\r\n\r\n- a [test registry](https://github.com/pytorch/pytorch/blob/master/torch/testing/_internal/common_methods_invocations.py#L117) of tensor methods with representative inputs. These get compiled and run in `add_autograd_test` in test_jit.py - (the autograd tests may or may not be helpful).\r\n- a utility for [checking alias annotations](https://github.com/pytorch/pytorch/blob/master/torch/csrc/jit/passes/utils/check_alias_annotation.cpp)\r\n\r\n\r\nThe task here would be to set up testing so that the bad alias annotation in `view_as` would fail our tests (and to fix any bad schemas discovered along the way).\r\n\r\n\r\ncc @suo",
        "closed_by": {
            "login": "rahuln32",
            "id": 2838795,
            "node_id": "MDQ6VXNlcjI4Mzg3OTU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2838795?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rahuln32",
            "html_url": "https://github.com/rahuln32",
            "followers_url": "https://api.github.com/users/rahuln32/followers",
            "following_url": "https://api.github.com/users/rahuln32/following{/other_user}",
            "gists_url": "https://api.github.com/users/rahuln32/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rahuln32/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rahuln32/subscriptions",
            "organizations_url": "https://api.github.com/users/rahuln32/orgs",
            "repos_url": "https://api.github.com/users/rahuln32/repos",
            "events_url": "https://api.github.com/users/rahuln32/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rahuln32/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/38731/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/38731/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/38728",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/38728/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/38728/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/38728/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/38728",
        "id": 621188821,
        "node_id": "MDU6SXNzdWU2MjExODg4MjE=",
        "number": 38728,
        "title": "[JIT] Finish Resolving Python Types By Value",
        "user": {
            "login": "eellison",
            "id": 11477974,
            "node_id": "MDQ6VXNlcjExNDc3OTc0",
            "avatar_url": "https://avatars.githubusercontent.com/u/11477974?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eellison",
            "html_url": "https://github.com/eellison",
            "followers_url": "https://api.github.com/users/eellison/followers",
            "following_url": "https://api.github.com/users/eellison/following{/other_user}",
            "gists_url": "https://api.github.com/users/eellison/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eellison/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eellison/subscriptions",
            "organizations_url": "https://api.github.com/users/eellison/orgs",
            "repos_url": "https://api.github.com/users/eellison/repos",
            "events_url": "https://api.github.com/users/eellison/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eellison/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1027606656,
                "node_id": "MDU6TGFiZWwxMDI3NjA2NjU2",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20bootcamp",
                "name": "module: bootcamp",
                "color": "f7e101",
                "default": false,
                "description": "We plan to do a full writeup on the issue, and then get someone to do it for onboarding"
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            },
            {
                "id": 1405155021,
                "node_id": "MDU6TGFiZWwxNDA1MTU1MDIx",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/large",
                "name": "large",
                "color": "ef6bca",
                "default": false,
                "description": "We think that this is a pretty chunky piece of work"
            },
            {
                "id": 2073380856,
                "node_id": "MDU6TGFiZWwyMDczMzgwODU2",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/medium",
                "name": "medium",
                "color": "e6a6ea",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "wconstab",
            "id": 4984825,
            "node_id": "MDQ6VXNlcjQ5ODQ4MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4984825?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wconstab",
            "html_url": "https://github.com/wconstab",
            "followers_url": "https://api.github.com/users/wconstab/followers",
            "following_url": "https://api.github.com/users/wconstab/following{/other_user}",
            "gists_url": "https://api.github.com/users/wconstab/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wconstab/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wconstab/subscriptions",
            "organizations_url": "https://api.github.com/users/wconstab/orgs",
            "repos_url": "https://api.github.com/users/wconstab/repos",
            "events_url": "https://api.github.com/users/wconstab/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wconstab/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "wconstab",
                "id": 4984825,
                "node_id": "MDQ6VXNlcjQ5ODQ4MjU=",
                "avatar_url": "https://avatars.githubusercontent.com/u/4984825?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/wconstab",
                "html_url": "https://github.com/wconstab",
                "followers_url": "https://api.github.com/users/wconstab/followers",
                "following_url": "https://api.github.com/users/wconstab/following{/other_user}",
                "gists_url": "https://api.github.com/users/wconstab/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/wconstab/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wconstab/subscriptions",
                "organizations_url": "https://api.github.com/users/wconstab/orgs",
                "repos_url": "https://api.github.com/users/wconstab/repos",
                "events_url": "https://api.github.com/users/wconstab/events{/privacy}",
                "received_events_url": "https://api.github.com/users/wconstab/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-05-19T18:20:30Z",
        "updated_at": "2020-06-10T20:32:07Z",
        "closed_at": "2020-06-10T20:32:07Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\nTo recursively compile python programs, we need to recursively look up the python types that are used. We do this in many locations currently, but not all. \r\n\r\nSomething like:\r\n```\r\nclass X(object):\r\n    def __init__(self):\r\n        pass\r\n\r\n@torch.jit.script\r\ndef foo():\r\n    return X()\r\n    pass\r\n```\r\nWill correctly resolve `X()` and compile , but if you modify the function to be:\r\n```\r\n@torch.jit.script\r\ndef foo(out: X):\r\n    return out\r\n```\r\n \r\nit will fail with `Unknown type name 'X':`. This is because in many locations in the compiler we try to resolve the code textually (e.g. [here](https://github.com/pytorch/pytorch/blob/master/torch/csrc/jit/frontend/ir_emitter.cpp#L1545)).  The textual resolution is needed for compilation in C++, but when the python environment is available we should search it using `resolveType` [here](https://github.com/pytorch/pytorch/blob/master/torch/csrc/jit/frontend/ir_emitter.cpp#L503). We will need to handle cases that use `.` and `[]`, such as `List[int]`, and `namespace.X`. \r\n\r\nThis has been an issue for a number of users, and is a particular issue with `torch.jit.Future`. `torch.jit.Future` is the runtime type value,  but if users use `torch.jit.Future` as an inline type annotation it will fail.\r\n\r\nThe first part of this issue was https://github.com/pytorch/pytorch/pull/29623/files. This issue may require multiple PRs to completely fix, and you may run into other issues when doing it.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\ncc @suo",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/38728/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/38728/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/38698",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/38698/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/38698/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/38698/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/38698",
        "id": 620600253,
        "node_id": "MDU6SXNzdWU2MjA2MDAyNTM=",
        "number": 38698,
        "title": "[JIT] Add test infra for checking that source ranges in error messages are in the right place",
        "user": {
            "login": "SplitInfinity",
            "id": 4392003,
            "node_id": "MDQ6VXNlcjQzOTIwMDM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4392003?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SplitInfinity",
            "html_url": "https://github.com/SplitInfinity",
            "followers_url": "https://api.github.com/users/SplitInfinity/followers",
            "following_url": "https://api.github.com/users/SplitInfinity/following{/other_user}",
            "gists_url": "https://api.github.com/users/SplitInfinity/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SplitInfinity/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SplitInfinity/subscriptions",
            "organizations_url": "https://api.github.com/users/SplitInfinity/orgs",
            "repos_url": "https://api.github.com/users/SplitInfinity/repos",
            "events_url": "https://api.github.com/users/SplitInfinity/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SplitInfinity/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1027606656,
                "node_id": "MDU6TGFiZWwxMDI3NjA2NjU2",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20bootcamp",
                "name": "module: bootcamp",
                "color": "f7e101",
                "default": false,
                "description": "We plan to do a full writeup on the issue, and then get someone to do it for onboarding"
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            },
            {
                "id": 1301447942,
                "node_id": "MDU6TGFiZWwxMzAxNDQ3OTQy",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/enhancement",
                "name": "enhancement",
                "color": "ffc6f4",
                "default": true,
                "description": "Not as big of a feature, but technically not a bug. Should be easy to fix"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "gmagogsfm",
            "id": 1817752,
            "node_id": "MDQ6VXNlcjE4MTc3NTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1817752?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gmagogsfm",
            "html_url": "https://github.com/gmagogsfm",
            "followers_url": "https://api.github.com/users/gmagogsfm/followers",
            "following_url": "https://api.github.com/users/gmagogsfm/following{/other_user}",
            "gists_url": "https://api.github.com/users/gmagogsfm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gmagogsfm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gmagogsfm/subscriptions",
            "organizations_url": "https://api.github.com/users/gmagogsfm/orgs",
            "repos_url": "https://api.github.com/users/gmagogsfm/repos",
            "events_url": "https://api.github.com/users/gmagogsfm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gmagogsfm/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "gmagogsfm",
                "id": 1817752,
                "node_id": "MDQ6VXNlcjE4MTc3NTI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/1817752?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/gmagogsfm",
                "html_url": "https://github.com/gmagogsfm",
                "followers_url": "https://api.github.com/users/gmagogsfm/followers",
                "following_url": "https://api.github.com/users/gmagogsfm/following{/other_user}",
                "gists_url": "https://api.github.com/users/gmagogsfm/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/gmagogsfm/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gmagogsfm/subscriptions",
                "organizations_url": "https://api.github.com/users/gmagogsfm/orgs",
                "repos_url": "https://api.github.com/users/gmagogsfm/repos",
                "events_url": "https://api.github.com/users/gmagogsfm/events{/privacy}",
                "received_events_url": "https://api.github.com/users/gmagogsfm/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-05-19T01:08:39Z",
        "updated_at": "2020-06-12T06:49:05Z",
        "closed_at": "2020-06-12T06:49:05Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## \ud83d\ude80 Feature\r\nJIT has test infrastructure to allow engineers to check that the string representation of an exception matches a given regular expression. This is often used to make sure that the expected error message is thrown when compiling/executing a piece of code. Depending on the cause, these error messages can include snippets of the source code with the problematic parts highlighted. However, there is currently no way to check that the right part of the source code part is highlighted. I propose that we add some small test infra code to allow test writers to assert that the range of the source highlighted in an error message is somewhat in the right place.\r\n\r\n## Motivation\r\nIt is important that the source ranges highlighted by error messages are in the right place. That is, it is important that they refer to the parts of the source code that have resulted in the error. If this is not the case, users may find it frustrating or even difficult to write and run TorchScript. While in itself a minor annoyance, I think that this can be one of the proverbial \"one thousand cuts\" that amount to a poor user experience. \r\n\r\nHere is an example of a case in which the wrong portion of the source is highlighted:\r\n\r\n```\r\nExpected type hint for result of tolist():\r\ndef to_list_missing_type_annotation(x):\r\n    # type: (torch.Tensor) -> List[float]\r\n    li = x.tolist()\r\n         ~~~~~~~~~ <--- HERE\r\n    return li\r\n```\r\n\r\nWhile the solution may be easy to figure out based on the error message itself, I think that in this case, `li` should be highlighted, not `x.tolist()`, because that is where the annotation should appear:\r\n\r\n```\r\nExpected type hint for result of tolist():\r\ndef to_list_missing_type_annotation(x):\r\n    # type: (torch.Tensor) -> List[float]\r\n    li = x.tolist()\r\n    ~~~ <--- HERE\r\n    return li\r\n```\r\nIf this feature existed, we could check this as part of the test itself.\r\n\r\n## Pitch\r\nI propose that we augment our `FileCheck` tool with a new type of check, say `CHECK_SOURCE_RANGE` (name suggestions welcome), that would be used like so:\r\n```\r\nFileCheck().check_source_range(source_token).run(error_message)\r\n```\r\nThis check will search `error_message` for `source_token`, and make sure that the next line has a highlight string (i.e. `~~~~~~~~~ <--- HERE`) that highlights `source_token`, and not some other part of the previous line.\r\n\r\n## Alternatives\r\nThe only realistic alternative is to do this same thing in `jit_utils.py` using Python string functions, but what this proposal contains is a slightly modified version of `CHECK-NEXT`, so I think FileCheck is the right tool for this job.\r\n\r\n\r\ncc @suo",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/38698/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/38698/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/38555",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/38555/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/38555/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/38555/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/38555",
        "id": 619134158,
        "node_id": "MDU6SXNzdWU2MTkxMzQxNTg=",
        "number": 38555,
        "title": "Inconsistent behavior of .reshape() and .flatten() in JIT",
        "user": {
            "login": "kuynzereb",
            "id": 28061164,
            "node_id": "MDQ6VXNlcjI4MDYxMTY0",
            "avatar_url": "https://avatars.githubusercontent.com/u/28061164?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kuynzereb",
            "html_url": "https://github.com/kuynzereb",
            "followers_url": "https://api.github.com/users/kuynzereb/followers",
            "following_url": "https://api.github.com/users/kuynzereb/following{/other_user}",
            "gists_url": "https://api.github.com/users/kuynzereb/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kuynzereb/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kuynzereb/subscriptions",
            "organizations_url": "https://api.github.com/users/kuynzereb/orgs",
            "repos_url": "https://api.github.com/users/kuynzereb/repos",
            "events_url": "https://api.github.com/users/kuynzereb/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kuynzereb/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 443484135,
                "node_id": "MDU6TGFiZWw0NDM0ODQxMzU=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/high%20priority",
                "name": "high priority",
                "color": "F22613",
                "default": false,
                "description": null
            },
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "robieta",
            "id": 13089297,
            "node_id": "MDQ6VXNlcjEzMDg5Mjk3",
            "avatar_url": "https://avatars.githubusercontent.com/u/13089297?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/robieta",
            "html_url": "https://github.com/robieta",
            "followers_url": "https://api.github.com/users/robieta/followers",
            "following_url": "https://api.github.com/users/robieta/following{/other_user}",
            "gists_url": "https://api.github.com/users/robieta/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/robieta/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/robieta/subscriptions",
            "organizations_url": "https://api.github.com/users/robieta/orgs",
            "repos_url": "https://api.github.com/users/robieta/repos",
            "events_url": "https://api.github.com/users/robieta/events{/privacy}",
            "received_events_url": "https://api.github.com/users/robieta/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "robieta",
                "id": 13089297,
                "node_id": "MDQ6VXNlcjEzMDg5Mjk3",
                "avatar_url": "https://avatars.githubusercontent.com/u/13089297?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/robieta",
                "html_url": "https://github.com/robieta",
                "followers_url": "https://api.github.com/users/robieta/followers",
                "following_url": "https://api.github.com/users/robieta/following{/other_user}",
                "gists_url": "https://api.github.com/users/robieta/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/robieta/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/robieta/subscriptions",
                "organizations_url": "https://api.github.com/users/robieta/orgs",
                "repos_url": "https://api.github.com/users/robieta/repos",
                "events_url": "https://api.github.com/users/robieta/events{/privacy}",
                "received_events_url": "https://api.github.com/users/robieta/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-05-15T17:36:53Z",
        "updated_at": "2020-06-26T16:27:33Z",
        "closed_at": "2020-06-26T16:27:33Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\nThe behavior of `.reshape()` and `.flatten()` differ in pytorch and jit.\r\n\r\n## To Reproduce\r\n\r\nIf we run the following code:\r\n\r\n```\r\nimport torch\r\n\r\n\r\ndef reshape_test(t: torch.Tensor):\r\n    t.reshape(-1)[0] = torch.tensor(1, dtype=t.dtype, device=t.device)\r\n\r\n    return t\r\n\r\n\r\nt = torch.zeros([2, 2])\r\nprint('PyTorch function result')\r\nprint(reshape_test(t))\r\nprint()\r\n\r\nreshape_test = torch.jit.script(reshape_test)\r\nt = torch.zeros([2, 2])\r\nprint('TorchScript function result')\r\nprint(reshape_test(t))\r\nprint()\r\n\r\nprint('TorchScript function graph')\r\nprint(reshape_test.graph)\r\n\r\n```\r\n\r\nWe will get:\r\n```\r\nPyTorch function result\r\ntensor([[1., 0.],\r\n        [0., 0.]])\r\n\r\nTorchScript function result\r\ntensor([[0., 0.],\r\n        [0., 0.]])\r\n\r\nTorchScript function graph\r\ngraph(%t.1 : Tensor):\r\n  return (%t.1)\r\n\r\n```\r\nThe same behavior holds true if we change `.reshape(-1)` to `.flatten()`, whereas `.view(-1)` works as expected.\r\n\r\n<!-- If you have a code sample, error messages, stack traces, please provide it here as well -->\r\n\r\n## Expected behavior\r\n\r\nThe results should be consistent or at least there should be some warnings that they can be inconsistent.\r\n\r\n## Environment\r\nPyTorch version: 1.6.0.dev20200515\r\n\r\n\r\n\n\ncc @ezyang @gchanan @zou3519 @suo",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/38555/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/38555/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/38431",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/38431/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/38431/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/38431/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/38431",
        "id": 617752184,
        "node_id": "MDU6SXNzdWU2MTc3NTIxODQ=",
        "number": 38431,
        "title": "[JIT][to_backend] Move code that is not related to the user-facing API out of `jit/backends/backend.h` ",
        "user": {
            "login": "SplitInfinity",
            "id": 4392003,
            "node_id": "MDQ6VXNlcjQzOTIwMDM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4392003?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SplitInfinity",
            "html_url": "https://github.com/SplitInfinity",
            "followers_url": "https://api.github.com/users/SplitInfinity/followers",
            "following_url": "https://api.github.com/users/SplitInfinity/following{/other_user}",
            "gists_url": "https://api.github.com/users/SplitInfinity/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SplitInfinity/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SplitInfinity/subscriptions",
            "organizations_url": "https://api.github.com/users/SplitInfinity/orgs",
            "repos_url": "https://api.github.com/users/SplitInfinity/repos",
            "events_url": "https://api.github.com/users/SplitInfinity/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SplitInfinity/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1027606656,
                "node_id": "MDU6TGFiZWwxMDI3NjA2NjU2",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20bootcamp",
                "name": "module: bootcamp",
                "color": "f7e101",
                "default": false,
                "description": "We plan to do a full writeup on the issue, and then get someone to do it for onboarding"
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "jansel",
            "id": 533820,
            "node_id": "MDQ6VXNlcjUzMzgyMA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/533820?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jansel",
            "html_url": "https://github.com/jansel",
            "followers_url": "https://api.github.com/users/jansel/followers",
            "following_url": "https://api.github.com/users/jansel/following{/other_user}",
            "gists_url": "https://api.github.com/users/jansel/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jansel/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jansel/subscriptions",
            "organizations_url": "https://api.github.com/users/jansel/orgs",
            "repos_url": "https://api.github.com/users/jansel/repos",
            "events_url": "https://api.github.com/users/jansel/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jansel/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "jansel",
                "id": 533820,
                "node_id": "MDQ6VXNlcjUzMzgyMA==",
                "avatar_url": "https://avatars.githubusercontent.com/u/533820?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/jansel",
                "html_url": "https://github.com/jansel",
                "followers_url": "https://api.github.com/users/jansel/followers",
                "following_url": "https://api.github.com/users/jansel/following{/other_user}",
                "gists_url": "https://api.github.com/users/jansel/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/jansel/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jansel/subscriptions",
                "organizations_url": "https://api.github.com/users/jansel/orgs",
                "repos_url": "https://api.github.com/users/jansel/repos",
                "events_url": "https://api.github.com/users/jansel/events{/privacy}",
                "received_events_url": "https://api.github.com/users/jansel/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-05-13T21:01:50Z",
        "updated_at": "2020-05-18T23:32:29Z",
        "closed_at": "2020-05-18T23:32:29Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## Background\r\nJIT recently added a feature that allows a `Module` to be lowered for execution on a non-JIT specialized backend, such as Glow. The API for declaring specialized backends is in `torch/csrc/jit/backends/backend.h`. However, there is code in there that is not templated (e.g. `getPreprocessSchema`) and does not need to be in that header. Its continued presence can be confusing for end-users.\r\n\r\n## The Task\r\nMove this code that does not need to be in `backend.h` into a `detail` namespace in a separate header or into a separate cpp file.\r\n\r\n## How to Test\r\n```\r\npython test/test_jit.py TestBackends\r\n```\n\ncc @suo",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/38431/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/38431/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/38411",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/38411/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/38411/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/38411/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/38411",
        "id": 617643983,
        "node_id": "MDU6SXNzdWU2MTc2NDM5ODM=",
        "number": 38411,
        "title": "Switch `c10::optional<ShapeSymbol>` with just `ShapeSymbol`.",
        "user": {
            "login": "Krovatkin",
            "id": 5086322,
            "node_id": "MDQ6VXNlcjUwODYzMjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5086322?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Krovatkin",
            "html_url": "https://github.com/Krovatkin",
            "followers_url": "https://api.github.com/users/Krovatkin/followers",
            "following_url": "https://api.github.com/users/Krovatkin/following{/other_user}",
            "gists_url": "https://api.github.com/users/Krovatkin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Krovatkin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Krovatkin/subscriptions",
            "organizations_url": "https://api.github.com/users/Krovatkin/orgs",
            "repos_url": "https://api.github.com/users/Krovatkin/repos",
            "events_url": "https://api.github.com/users/Krovatkin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Krovatkin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1027606656,
                "node_id": "MDU6TGFiZWwxMDI3NjA2NjU2",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20bootcamp",
                "name": "module: bootcamp",
                "color": "f7e101",
                "default": false,
                "description": "We plan to do a full writeup on the issue, and then get someone to do it for onboarding"
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "gmagogsfm",
            "id": 1817752,
            "node_id": "MDQ6VXNlcjE4MTc3NTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1817752?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gmagogsfm",
            "html_url": "https://github.com/gmagogsfm",
            "followers_url": "https://api.github.com/users/gmagogsfm/followers",
            "following_url": "https://api.github.com/users/gmagogsfm/following{/other_user}",
            "gists_url": "https://api.github.com/users/gmagogsfm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gmagogsfm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gmagogsfm/subscriptions",
            "organizations_url": "https://api.github.com/users/gmagogsfm/orgs",
            "repos_url": "https://api.github.com/users/gmagogsfm/repos",
            "events_url": "https://api.github.com/users/gmagogsfm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gmagogsfm/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "gmagogsfm",
                "id": 1817752,
                "node_id": "MDQ6VXNlcjE4MTc3NTI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/1817752?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/gmagogsfm",
                "html_url": "https://github.com/gmagogsfm",
                "followers_url": "https://api.github.com/users/gmagogsfm/followers",
                "following_url": "https://api.github.com/users/gmagogsfm/following{/other_user}",
                "gists_url": "https://api.github.com/users/gmagogsfm/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/gmagogsfm/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gmagogsfm/subscriptions",
                "organizations_url": "https://api.github.com/users/gmagogsfm/orgs",
                "repos_url": "https://api.github.com/users/gmagogsfm/repos",
                "events_url": "https://api.github.com/users/gmagogsfm/events{/privacy}",
                "received_events_url": "https://api.github.com/users/gmagogsfm/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-05-13T17:57:13Z",
        "updated_at": "2020-06-04T17:48:38Z",
        "closed_at": "2020-06-04T17:48:38Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "## \ud83d\ude80 Feature\r\n* Simplify the `symbolic_sizes_` property of TensorType API. `TensorType` is a class to represent a tensor type in TorchScript IR. `TensorType` tracks various properties of a tensor such as tensor shape, strides, device, requires_grad, etc.  TorchScript IR consists mostly of `Node` and `Value` . `Node`s denote operations that produce outputs (`Value`s) . Each value is statically typed with `Type` and that type can be `TensorType` .\r\n*  Currently, an unknown size is expressed with [VaryingShape](https://github.com/pytorch/pytorch/blob/master/aten/src/ATen/core/jit_type.h#L423) that wraps around a vector of `c10::optional<int64_t>`s\r\n* We recently added `ShapeSymbol` class to represent `size` and values and it has its own way of expressing unknown values`\r\n    * ShapeSymbol now provides a special symbol (`-1`) which we can use to denote unknown symbols (https://github.com/pytorch/pytorch/blob/master/aten/src/ATen/core/jit_type.h#L389) \r\n * In short, we would like to switch from using optionals to denote unknown symbols to using that special symbol.\r\n## Motivation\r\n\r\n* The outcomes we hope for\r\n    * The reduction in the amount of boxing/unboxing\r\n    * Avoiding having more than one way to express the same thing.\r\n\r\n## Pitch\r\n* We would like to add `unknownSymbol` to denote unknown/varying shape\r\n* We would like to use `unknownSymbol` in lieu of `c10::optional<ShapeSymbol>`\r\n* We would like to replace `VaryingShape<ShapeSymbol>` with just `c10::optional<std::vector<ShapeSymbol>>` \r\n\r\n## Alternatives\r\n\r\nDo nothing n and suffer from the current design.\r\n\r\n## Additional context\r\n\r\nFor questions, ping @Krovatkin \r\n\n\ncc @suo",
        "closed_by": {
            "login": "gmagogsfm",
            "id": 1817752,
            "node_id": "MDQ6VXNlcjE4MTc3NTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1817752?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gmagogsfm",
            "html_url": "https://github.com/gmagogsfm",
            "followers_url": "https://api.github.com/users/gmagogsfm/followers",
            "following_url": "https://api.github.com/users/gmagogsfm/following{/other_user}",
            "gists_url": "https://api.github.com/users/gmagogsfm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gmagogsfm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gmagogsfm/subscriptions",
            "organizations_url": "https://api.github.com/users/gmagogsfm/orgs",
            "repos_url": "https://api.github.com/users/gmagogsfm/repos",
            "events_url": "https://api.github.com/users/gmagogsfm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gmagogsfm/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/38411/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/38411/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/38336",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/38336/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/38336/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/38336/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/38336",
        "id": 616848403,
        "node_id": "MDU6SXNzdWU2MTY4NDg0MDM=",
        "number": 38336,
        "title": "a %= b not supported in TorchScript",
        "user": {
            "login": "ghost",
            "id": 10137,
            "node_id": "MDQ6VXNlcjEwMTM3",
            "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ghost",
            "html_url": "https://github.com/ghost",
            "followers_url": "https://api.github.com/users/ghost/followers",
            "following_url": "https://api.github.com/users/ghost/following{/other_user}",
            "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
            "organizations_url": "https://api.github.com/users/ghost/orgs",
            "repos_url": "https://api.github.com/users/ghost/repos",
            "events_url": "https://api.github.com/users/ghost/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ghost/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1027606656,
                "node_id": "MDU6TGFiZWwxMDI3NjA2NjU2",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20bootcamp",
                "name": "module: bootcamp",
                "color": "f7e101",
                "default": false,
                "description": "We plan to do a full writeup on the issue, and then get someone to do it for onboarding"
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-05-12T17:56:55Z",
        "updated_at": "2020-05-31T19:54:18Z",
        "closed_at": "2020-05-31T19:54:18Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\nAn attempt to jit script `a %= b` results in an error `unsupported kind of augumented assignment`\r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior:\r\n\r\nIn interactive Python run\r\n```bash\r\n@torch.jit.script\r\ndef mm(a,b):\r\n    a %= b\r\n    return a\r\n```\r\nthis will throw an error: \r\n```bash\r\nNotSupportedError: unsupported kind of augumented assignment: Mod:\r\n  File \"<ipython-input-5-dcecdbcf8ec0>\", line 3\r\n@torch.jit.script\r\ndef mm(a,b):\r\n    a %= b\r\n      ~~ <--- HERE\r\n    return a\r\n```\r\nan alternative with `fmod_` works as expected:\r\n```bash\r\n@torch.jit.script \r\ndef mm(a,b): \r\n    a.fmod_(b) \r\n    return a \r\n```\r\n\r\n## Expected behavior\r\n\r\nSuccessful compilation of the scripted function.\r\n\n\ncc @suo",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/38336/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/38336/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/38237",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/38237/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/38237/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/38237/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/38237",
        "id": 615980060,
        "node_id": "MDU6SXNzdWU2MTU5ODAwNjA=",
        "number": 38237,
        "title": "torch._C._jit_tree_views.SourceRange should print more descriptively by default",
        "user": {
            "login": "ezyang",
            "id": 13564,
            "node_id": "MDQ6VXNlcjEzNTY0",
            "avatar_url": "https://avatars.githubusercontent.com/u/13564?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ezyang",
            "html_url": "https://github.com/ezyang",
            "followers_url": "https://api.github.com/users/ezyang/followers",
            "following_url": "https://api.github.com/users/ezyang/following{/other_user}",
            "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions",
            "organizations_url": "https://api.github.com/users/ezyang/orgs",
            "repos_url": "https://api.github.com/users/ezyang/repos",
            "events_url": "https://api.github.com/users/ezyang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ezyang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1027606656,
                "node_id": "MDU6TGFiZWwxMDI3NjA2NjU2",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20bootcamp",
                "name": "module: bootcamp",
                "color": "f7e101",
                "default": false,
                "description": "We plan to do a full writeup on the issue, and then get someone to do it for onboarding"
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            },
            {
                "id": 1301447942,
                "node_id": "MDU6TGFiZWwxMzAxNDQ3OTQy",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/enhancement",
                "name": "enhancement",
                "color": "ffc6f4",
                "default": true,
                "description": "Not as big of a feature, but technically not a bug. Should be easy to fix"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "zhxchen17",
            "id": 4945294,
            "node_id": "MDQ6VXNlcjQ5NDUyOTQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4945294?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zhxchen17",
            "html_url": "https://github.com/zhxchen17",
            "followers_url": "https://api.github.com/users/zhxchen17/followers",
            "following_url": "https://api.github.com/users/zhxchen17/following{/other_user}",
            "gists_url": "https://api.github.com/users/zhxchen17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zhxchen17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zhxchen17/subscriptions",
            "organizations_url": "https://api.github.com/users/zhxchen17/orgs",
            "repos_url": "https://api.github.com/users/zhxchen17/repos",
            "events_url": "https://api.github.com/users/zhxchen17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zhxchen17/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "zhxchen17",
                "id": 4945294,
                "node_id": "MDQ6VXNlcjQ5NDUyOTQ=",
                "avatar_url": "https://avatars.githubusercontent.com/u/4945294?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/zhxchen17",
                "html_url": "https://github.com/zhxchen17",
                "followers_url": "https://api.github.com/users/zhxchen17/followers",
                "following_url": "https://api.github.com/users/zhxchen17/following{/other_user}",
                "gists_url": "https://api.github.com/users/zhxchen17/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/zhxchen17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zhxchen17/subscriptions",
                "organizations_url": "https://api.github.com/users/zhxchen17/orgs",
                "repos_url": "https://api.github.com/users/zhxchen17/repos",
                "events_url": "https://api.github.com/users/zhxchen17/events{/privacy}",
                "received_events_url": "https://api.github.com/users/zhxchen17/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 3,
        "created_at": "2020-05-11T15:36:05Z",
        "updated_at": "2021-10-14T22:03:57Z",
        "closed_at": "2021-10-14T22:03:57Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "By default you get something like `<torch._C._jit_tree_views.SourceRange object at 0x7f263a771ab0>` even if you run `str()` on it. This is not very nice. You should print something more descriptive.\n\ncc @suo",
        "closed_by": {
            "login": "gmagogsfm",
            "id": 1817752,
            "node_id": "MDQ6VXNlcjE4MTc3NTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1817752?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gmagogsfm",
            "html_url": "https://github.com/gmagogsfm",
            "followers_url": "https://api.github.com/users/gmagogsfm/followers",
            "following_url": "https://api.github.com/users/gmagogsfm/following{/other_user}",
            "gists_url": "https://api.github.com/users/gmagogsfm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gmagogsfm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gmagogsfm/subscriptions",
            "organizations_url": "https://api.github.com/users/gmagogsfm/orgs",
            "repos_url": "https://api.github.com/users/gmagogsfm/repos",
            "events_url": "https://api.github.com/users/gmagogsfm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gmagogsfm/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/38237/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/38237/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/38235",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/38235/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/38235/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/38235/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/38235",
        "id": 615965686,
        "node_id": "MDU6SXNzdWU2MTU5NjU2ODY=",
        "number": 38235,
        "title": "Parameter is not a valid type annotation on TorchScripted modules",
        "user": {
            "login": "ezyang",
            "id": 13564,
            "node_id": "MDQ6VXNlcjEzNTY0",
            "avatar_url": "https://avatars.githubusercontent.com/u/13564?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ezyang",
            "html_url": "https://github.com/ezyang",
            "followers_url": "https://api.github.com/users/ezyang/followers",
            "following_url": "https://api.github.com/users/ezyang/following{/other_user}",
            "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions",
            "organizations_url": "https://api.github.com/users/ezyang/orgs",
            "repos_url": "https://api.github.com/users/ezyang/repos",
            "events_url": "https://api.github.com/users/ezyang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ezyang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 466131885,
                "node_id": "MDU6TGFiZWw0NjYxMzE4ODU=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triage%20review",
                "name": "triage review",
                "color": "cc317c",
                "default": false,
                "description": ""
            },
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1027606656,
                "node_id": "MDU6TGFiZWwxMDI3NjA2NjU2",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20bootcamp",
                "name": "module: bootcamp",
                "color": "f7e101",
                "default": false,
                "description": "We plan to do a full writeup on the issue, and then get someone to do it for onboarding"
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "gmagogsfm",
            "id": 1817752,
            "node_id": "MDQ6VXNlcjE4MTc3NTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1817752?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gmagogsfm",
            "html_url": "https://github.com/gmagogsfm",
            "followers_url": "https://api.github.com/users/gmagogsfm/followers",
            "following_url": "https://api.github.com/users/gmagogsfm/following{/other_user}",
            "gists_url": "https://api.github.com/users/gmagogsfm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gmagogsfm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gmagogsfm/subscriptions",
            "organizations_url": "https://api.github.com/users/gmagogsfm/orgs",
            "repos_url": "https://api.github.com/users/gmagogsfm/repos",
            "events_url": "https://api.github.com/users/gmagogsfm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gmagogsfm/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "gmagogsfm",
                "id": 1817752,
                "node_id": "MDQ6VXNlcjE4MTc3NTI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/1817752?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/gmagogsfm",
                "html_url": "https://github.com/gmagogsfm",
                "followers_url": "https://api.github.com/users/gmagogsfm/followers",
                "following_url": "https://api.github.com/users/gmagogsfm/following{/other_user}",
                "gists_url": "https://api.github.com/users/gmagogsfm/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/gmagogsfm/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gmagogsfm/subscriptions",
                "organizations_url": "https://api.github.com/users/gmagogsfm/orgs",
                "repos_url": "https://api.github.com/users/gmagogsfm/repos",
                "events_url": "https://api.github.com/users/gmagogsfm/events{/privacy}",
                "received_events_url": "https://api.github.com/users/gmagogsfm/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-05-11T15:16:11Z",
        "updated_at": "2020-06-05T19:00:24Z",
        "closed_at": "2020-06-05T19:00:24Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "Workaround is to use Tensor instead. But it should be valid to declare things as Parameter.\n\ncc @suo",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/38235/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/38235/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/38207",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/38207/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/38207/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/38207/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/38207",
        "id": 615430028,
        "node_id": "MDU6SXNzdWU2MTU0MzAwMjg=",
        "number": 38207,
        "title": "[JIT] Inconsistent results of string `split` func on JIT mode",
        "user": {
            "login": "zhangguanheng66",
            "id": 6156351,
            "node_id": "MDQ6VXNlcjYxNTYzNTE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6156351?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zhangguanheng66",
            "html_url": "https://github.com/zhangguanheng66",
            "followers_url": "https://api.github.com/users/zhangguanheng66/followers",
            "following_url": "https://api.github.com/users/zhangguanheng66/following{/other_user}",
            "gists_url": "https://api.github.com/users/zhangguanheng66/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zhangguanheng66/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zhangguanheng66/subscriptions",
            "organizations_url": "https://api.github.com/users/zhangguanheng66/orgs",
            "repos_url": "https://api.github.com/users/zhangguanheng66/repos",
            "events_url": "https://api.github.com/users/zhangguanheng66/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zhangguanheng66/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1027606656,
                "node_id": "MDU6TGFiZWwxMDI3NjA2NjU2",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20bootcamp",
                "name": "module: bootcamp",
                "color": "f7e101",
                "default": false,
                "description": "We plan to do a full writeup on the issue, and then get someone to do it for onboarding"
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            },
            {
                "id": 1304335025,
                "node_id": "MDU6TGFiZWwxMzA0MzM1MDI1",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/small",
                "name": "small",
                "color": "fbca04",
                "default": false,
                "description": "We think this is a small issue to fix. Consider knocking off high priority small issues"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2020-05-10T16:44:14Z",
        "updated_at": "2021-10-18T17:26:53Z",
        "closed_at": "2021-10-18T17:26:53Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\nThe string `split` func on JIT mode has different results with the python mode, when the strings have multiple spaces.\r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior:\r\n\r\n1. Run the following code sample\r\n\r\n```\r\nimport torch\r\nfrom typing import List\r\ndef simple_split(txt: str) -> List[str]:\r\n\treturn txt.split()\r\nss = simple_split\r\njit_ss = torch.jit.script(ss)\r\nss('simple     split example') == jit_ss('simple     split example')\r\n```\r\n\r\n## Expected behavior\r\n\r\nThe python and JIT modes are expected to return same results.\r\n\r\n## Environment\r\n\r\nPlease copy and paste the output from our\r\n[environment collection script](https://raw.githubusercontent.com/pytorch/pytorch/master/torch/utils/collect_env.py)\r\n(or fill out the checklist below manually).\r\n\r\nYou can get the script and run it with:\r\n```\r\nwget https://raw.githubusercontent.com/pytorch/pytorch/master/torch/utils/collect_env.py\r\n# For security purposes, please check the contents of collect_env.py before running it.\r\npython collect_env.py\r\n```\r\n\r\n - PyTorch Version (e.g., 1.0):\r\n - OS (e.g., Linux):\r\n - How you installed PyTorch (`conda`, `pip`, source):\r\n - Build command you used (if compiling from source):\r\n - Python version:\r\n - CUDA/cuDNN version:\r\n - GPU models and configuration:\r\n - Any other relevant information:\r\n\r\n## Additional context\r\n\r\n<!-- Add any other context about the problem here. -->\r\n\n\ncc @suo",
        "closed_by": {
            "login": "gmagogsfm",
            "id": 1817752,
            "node_id": "MDQ6VXNlcjE4MTc3NTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1817752?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gmagogsfm",
            "html_url": "https://github.com/gmagogsfm",
            "followers_url": "https://api.github.com/users/gmagogsfm/followers",
            "following_url": "https://api.github.com/users/gmagogsfm/following{/other_user}",
            "gists_url": "https://api.github.com/users/gmagogsfm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gmagogsfm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gmagogsfm/subscriptions",
            "organizations_url": "https://api.github.com/users/gmagogsfm/orgs",
            "repos_url": "https://api.github.com/users/gmagogsfm/repos",
            "events_url": "https://api.github.com/users/gmagogsfm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gmagogsfm/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/38207/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/38207/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/38111",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/38111/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/38111/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/38111/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/38111",
        "id": 614529833,
        "node_id": "MDU6SXNzdWU2MTQ1Mjk4MzM=",
        "number": 38111,
        "title": "GCC 5.5 compilation error on master",
        "user": {
            "login": "cloudhan",
            "id": 1279292,
            "node_id": "MDQ6VXNlcjEyNzkyOTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1279292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cloudhan",
            "html_url": "https://github.com/cloudhan",
            "followers_url": "https://api.github.com/users/cloudhan/followers",
            "following_url": "https://api.github.com/users/cloudhan/following{/other_user}",
            "gists_url": "https://api.github.com/users/cloudhan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cloudhan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cloudhan/subscriptions",
            "organizations_url": "https://api.github.com/users/cloudhan/orgs",
            "repos_url": "https://api.github.com/users/cloudhan/repos",
            "events_url": "https://api.github.com/users/cloudhan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cloudhan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 778855555,
                "node_id": "MDU6TGFiZWw3Nzg4NTU1NTU=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20build",
                "name": "module: build",
                "color": "f7e101",
                "default": false,
                "description": "Build system issues"
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-05-08T06:14:24Z",
        "updated_at": "2020-05-08T20:25:28Z",
        "closed_at": "2020-05-08T20:25:28Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\n<!-- A clear and concise description of what the bug is. -->\r\n\r\n```\r\n    [1/3] Building CXX object caffe2/CMakeFiles/torch_cuda.dir/__/torch/csrc/jit/codegen/cuda/type.cpp.o\r\n    FAILED: caffe2/CMakeFiles/torch_cuda.dir/__/torch/csrc/jit/codegen/cuda/type.cpp.o\r\n    /home/cloudhan/ccache/lib/c++  -DAT_PARALLEL_OPENMP=1 -DHAVE_MALLOC_USABLE_SIZE=1 -DHAVE_MMAP=1 -DHAVE_SHM_OPEN=1 -DHAVE_SHM_UNLINK=1 -DMINIZ_DISABLE_ZIP_READER_CRC32_CHECKS -DONNXIFI_ENABLE_EXT=1 -DONNX_ML=1 -DONNX_NAMESPACE=onnx_torch -DTORCH_CUDA_BUILD_MAIN_LIB -DUSE_NCCL -D_FILE_OFFSET_BITS=64 -Dtorch_cuda_EXPORTS -Iaten/src -I../aten/src -I. -I../ -I../third_party/onnx -Ithird_party/onnx -I../third_party/foxi -Ithird_party/foxi -Icaffe2/aten/src/TH -I../aten/src/TH -Icaffe2/aten/src/THC -I../aten/src/THC -I../aten/src/THCUNN -I../aten/src/ATen/cuda -Icaffe2/aten/src -I../aten/../third_party/catch/single_include -I../aten/src/ATen/.. -Icaffe2/aten/src/ATen -Inccl/include -I../c10/cuda/../.. -I../c10/.. -I../caffe2/../torch/csrc/api -I../caffe2/../torch/csrc/api/include -isystem ../third_party/protobuf/src -isystem ../third_party/XNNPACK/include -isystem ../cmake/../third_party/eigen -isystem /home/cloudhan/miniconda3/include/python3.7m -isystem /home/cloudhan/miniconda3/lib/python3.7/site-packages/numpy/core/include -isystem ../cmake/../third_party/pybind11/include -isystem ../cmake/../third_party/cub -isystem /usr/local/cuda-10.0/include -fvisibility-inlines-hidden -fopenmp -DUSE_XNNPACK -DUSE_INTERNAL_THREADPOOL_IMPL -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -DHAVE_AVX_CPU_DEFINITION -DHAVE_AVX2_CPU_DEFINITION -O2 -g -DNDEBUG -fPIC   -DCUDA_HAS_FP16=1 -DHAVE_GCC_GET_CPUID -DUSE_AVX -DUSE_AVX2 -DTH_HAVE_THREAD -Wall -Wextra -Wno-unused-parameter -Wno-missing-field-initializers -Wno-write-strings -Wno-unknown-pragmas -Wno-missing-braces -Wno-maybe-uninitialized -fvisibility=hidden -O2 -DTORCH_CUDA_BUILD_MAIN_LIB -fopenmp -pthread -std=gnu++14 -MD -MT caffe2/CMakeFiles/torch_cuda.dir/__/torch/csrc/jit/codegen/cuda/type.cpp.o -MF caffe2/CMakeFiles/torch_cuda.dir/__/torch/csrc/jit/codegen/cuda/type.cpp.o.d -o caffe2/CMakeFiles/torch_cuda.dir/__/torch/csrc/jit/codegen/cuda/type.cpp.o -c ../torch/csrc/jit/codegen/cuda/type.cpp\r\n    In file included from /usr/include/c++/5/bits/hashtable.h:35:0,\r\n                     from /usr/include/c++/5/unordered_map:47,\r\n                     from ../c10/util/typeid.h:11,\r\n                     from ../c10/core/ScalarType.h:8,\r\n                     from ../torch/csrc/jit/codegen/cuda/type.h:3,\r\n                     from ../torch/csrc/jit/codegen/cuda/type.cpp:1:\r\n    /usr/include/c++/5/bits/hashtable_policy.h: In instantiation of \u2018struct std::__detail::__is_noexcept_hash<torch::jit::fuser::BinaryOpType, std::hash<torch::jit::fuser::BinaryOpType> >\u2019:\r\n    /usr/include/c++/5/type_traits:137:12:   required from \u2018struct std::__and_<std::__is_fast_hash<std::hash<torch::jit::fuser::BinaryOpType> >, std::__detail::__is_noexcept_hash<torch::jit::fuser::BinaryOpType, std::hash<torch::jit::fuser::BinaryOpType> > >\u2019\r\n    /usr/include/c++/5/type_traits:148:38:   required from \u2018struct std::__not_<std::__and_<std::__is_fast_hash<std::hash<torch::jit::fuser::BinaryOpType> >, std::__detail::__is_noexcept_hash<torch::jit::fuser::BinaryOpType, std::hash<torch::jit::fuser::BinaryOpType> > > >\u2019\r\n    /usr/include/c++/5/bits/unordered_set.h:95:63:   required from \u2018class std::unordered_set<torch::jit::fuser::BinaryOpType>\u2019\r\n    ../torch/csrc/jit/codegen/cuda/type.cpp:185:41:   required from here\r\n    /usr/include/c++/5/bits/hashtable_policy.h:85:34: error: no match for call to \u2018(const std::hash<torch::jit::fuser::BinaryOpType>) (const torch::jit::fuser::BinaryOpType&)\u2019\r\n      noexcept(declval<const _Hash&>()(declval<const _Key&>()))>\r\n                                      ^\r\n    In file included from /usr/include/c++/5/bits/move.h:57:0,\r\n                     from /usr/include/c++/5/bits/stl_pair.h:59,\r\n                     from /usr/include/c++/5/bits/stl_algobase.h:64,\r\n                     from /usr/include/c++/5/bits/char_traits.h:39,\r\n                     from /usr/include/c++/5/ios:40,\r\n                     from /usr/include/c++/5/istream:38,\r\n                     from /usr/include/c++/5/sstream:38,\r\n                     from ../c10/macros/Macros.h:150,\r\n                     from ../c10/util/SmallVector.h:24,\r\n                     from ../c10/util/ArrayRef.h:18,\r\n                     from ../c10/core/ScalarType.h:3,\r\n                     from ../torch/csrc/jit/codegen/cuda/type.h:3,\r\n                     from ../torch/csrc/jit/codegen/cuda/type.cpp:1:\r\n    /usr/include/c++/5/type_traits: In instantiation of \u2018struct std::__not_<std::__and_<std::__is_fast_hash<std::hash<torch::jit::fuser::BinaryOpType> >, std::__detail::__is_noexcept_hash<torch::jit::fuser::BinaryOpType, std::hash<torch::jit::fuser::BinaryOpType> > > >\u2019:\r\n    /usr/include/c++/5/bits/unordered_set.h:95:63:   required from \u2018class std::unordered_set<torch::jit::fuser::BinaryOpType>\u2019\r\n    ../torch/csrc/jit/codegen/cuda/type.cpp:185:41:   required from here\r\n    /usr/include/c++/5/type_traits:148:38: error: \u2018value\u2019 is not a member of \u2018std::__and_<std::__is_fast_hash<std::hash<torch::jit::fuser::BinaryOpType> >, std::__detail::__is_noexcept_hash<torch::jit::fuser::BinaryOpType, std::hash<torch::jit::fuser::BinaryOpType> > >\u2019\r\n         : public integral_constant<bool, !_Pp::value>\r\n                                          ^\r\n    In file included from /usr/include/c++/5/unordered_set:48:0,\r\n                     from ../c10/util/typeid.h:12,\r\n                     from ../c10/core/ScalarType.h:8,\r\n                     from ../torch/csrc/jit/codegen/cuda/type.h:3,\r\n                     from ../torch/csrc/jit/codegen/cuda/type.cpp:1:\r\n    /usr/include/c++/5/bits/unordered_set.h: In instantiation of \u2018class std::unordered_set<torch::jit::fuser::BinaryOpType>\u2019:\r\n    ../torch/csrc/jit/codegen/cuda/type.cpp:185:41:   required from here\r\n    /usr/include/c++/5/bits/unordered_set.h:95:63: error: \u2018value\u2019 is not a member of \u2018std::__not_<std::__and_<std::__is_fast_hash<std::hash<torch::jit::fuser::BinaryOpType> >, std::__detail::__is_noexcept_hash<torch::jit::fuser::BinaryOpType, std::hash<torch::jit::fuser::BinaryOpType> > > >\u2019\r\n           typedef __uset_hashtable<_Value, _Hash, _Pred, _Alloc>  _Hashtable;\r\n                                                                   ^\r\n    /usr/include/c++/5/bits/unordered_set.h:102:45: error: \u2018value\u2019 is not a member of \u2018std::__not_<std::__and_<std::__is_fast_hash<std::hash<torch::jit::fuser::BinaryOpType> >, std::__detail::__is_noexcept_hash<torch::jit::fuser::BinaryOpType, std::hash<torch::jit::fuser::BinaryOpType> > > >\u2019\r\n           typedef typename _Hashtable::key_type key_type;\r\n                                                 ^\r\n    /usr/include/c++/5/bits/unordered_set.h:103:47: error: \u2018value\u2019 is not a member of \u2018std::__not_<std::__and_<std::__is_fast_hash<std::hash<torch::jit::fuser::BinaryOpType> >, std::__detail::__is_noexcept_hash<torch::jit::fuser::BinaryOpType, std::hash<torch::jit::fuser::BinaryOpType> > > >\u2019\r\n           typedef typename _Hashtable::value_type value_type;\r\n                                                   ^\r\n    /usr/include/c++/5/bits/unordered_set.h:104:43: error: \u2018value\u2019 is not a member of \u2018std::__not_<std::__and_<std::__is_fast_hash<std::hash<torch::jit::fuser::BinaryOpType> >, std::__detail::__is_noexcept_hash<torch::jit::fuser::BinaryOpType, std::hash<torch::jit::fuser::BinaryOpType> > > >\u2019\r\n           typedef typename _Hashtable::hasher hasher;\r\n                                               ^\r\n    /usr/include/c++/5/bits/unordered_set.h:105:46: error: \u2018value\u2019 is not a member of \u2018std::__not_<std::__and_<std::__is_fast_hash<std::hash<torch::jit::fuser::BinaryOpType> >, std::__detail::__is_noexcept_hash<torch::jit::fuser::BinaryOpType, std::hash<torch::jit::fuser::BinaryOpType> > > >\u2019\r\n           typedef typename _Hashtable::key_equal key_equal;\r\n                                                  ^\r\n    /usr/include/c++/5/bits/unordered_set.h:106:51: error: \u2018value\u2019 is not a member of \u2018std::__not_<std::__and_<std::__is_fast_hash<std::hash<torch::jit::fuser::BinaryOpType> >, std::__detail::__is_noexcept_hash<torch::jit::fuser::BinaryOpType, std::hash<torch::jit::fuser::BinaryOpType> > > >\u2019\r\n           typedef typename _Hashtable::allocator_type allocator_type;\r\n                                                       ^\r\n    /usr/include/c++/5/bits/unordered_set.h:111:45: error: \u2018value\u2019 is not a member of \u2018std::__not_<std::__and_<std::__is_fast_hash<std::hash<torch::jit::fuser::BinaryOpType> >, std::__detail::__is_noexcept_hash<torch::jit::fuser::BinaryOpType, std::hash<torch::jit::fuser::BinaryOpType> > > >\u2019\r\n           typedef typename _Hashtable::pointer  pointer;\r\n                                                 ^\r\n    /usr/include/c++/5/bits/unordered_set.h:112:50: error: \u2018value\u2019 is not a member of \u2018std::__not_<std::__and_<std::__is_fast_hash<std::hash<torch::jit::fuser::BinaryOpType> >, std::__detail::__is_noexcept_hash<torch::jit::fuser::BinaryOpType, std::hash<torch::jit::fuser::BinaryOpType> > > >\u2019\r\n           typedef typename _Hashtable::const_pointer const_pointer;\r\n                                                      ^\r\n    /usr/include/c++/5/bits/unordered_set.h:113:47: error: \u2018value\u2019 is not a member of \u2018std::__not_<std::__and_<std::__is_fast_hash<std::hash<torch::jit::fuser::BinaryOpType> >, std::__detail::__is_noexcept_hash<torch::jit::fuser::BinaryOpType, std::hash<torch::jit::fuser::BinaryOpType> > > >\u2019\r\n           typedef typename _Hashtable::reference  reference;\r\n                                                   ^\r\n    /usr/include/c++/5/bits/unordered_set.h:114:52: error: \u2018value\u2019 is not a member of \u2018std::__not_<std::__and_<std::__is_fast_hash<std::hash<torch::jit::fuser::BinaryOpType> >, std::__detail::__is_noexcept_hash<torch::jit::fuser::BinaryOpType, std::hash<torch::jit::fuser::BinaryOpType> > > >\u2019\r\n           typedef typename _Hashtable::const_reference const_reference;\r\n                                                        ^\r\n    /usr/include/c++/5/bits/unordered_set.h:115:46: error: \u2018value\u2019 is not a member of \u2018std::__not_<std::__and_<std::__is_fast_hash<std::hash<torch::jit::fuser::BinaryOpType> >, std::__detail::__is_noexcept_hash<torch::jit::fuser::BinaryOpType, std::hash<torch::jit::fuser::BinaryOpType> > > >\u2019\r\n           typedef typename _Hashtable::iterator  iterator;\r\n                                                  ^\r\n    /usr/include/c++/5/bits/unordered_set.h:116:51: error: \u2018value\u2019 is not a member of \u2018std::__not_<std::__and_<std::__is_fast_hash<std::hash<torch::jit::fuser::BinaryOpType> >, std::__detail::__is_noexcept_hash<torch::jit::fuser::BinaryOpType, std::hash<torch::jit::fuser::BinaryOpType> > > >\u2019\r\n           typedef typename _Hashtable::const_iterator const_iterator;\r\n                                                       ^\r\n    /usr/include/c++/5/bits/unordered_set.h:117:51: error: \u2018value\u2019 is not a member of \u2018std::__not_<std::__and_<std::__is_fast_hash<std::hash<torch::jit::fuser::BinaryOpType> >, std::__detail::__is_noexcept_hash<torch::jit::fuser::BinaryOpType, std::hash<torch::jit::fuser::BinaryOpType> > > >\u2019\r\n           typedef typename _Hashtable::local_iterator local_iterator;\r\n                                                       ^\r\n    /usr/include/c++/5/bits/unordered_set.h:118:57: error: \u2018value\u2019 is not a member of \u2018std::__not_<std::__and_<std::__is_fast_hash<std::hash<torch::jit::fuser::BinaryOpType> >, std::__detail::__is_noexcept_hash<torch::jit::fuser::BinaryOpType, std::hash<torch::jit::fuser::BinaryOpType> > > >\u2019\r\n           typedef typename _Hashtable::const_local_iterator const_local_iterator;\r\n                                                             ^\r\n    /usr/include/c++/5/bits/unordered_set.h:119:47: error: \u2018value\u2019 is not a member of \u2018std::__not_<std::__and_<std::__is_fast_hash<std::hash<torch::jit::fuser::BinaryOpType> >, std::__detail::__is_noexcept_hash<torch::jit::fuser::BinaryOpType, std::hash<torch::jit::fuser::BinaryOpType> > > >\u2019\r\n           typedef typename _Hashtable::size_type  size_type;\r\n                                                   ^\r\n    /usr/include/c++/5/bits/unordered_set.h:120:52: error: \u2018value\u2019 is not a member of \u2018std::__not_<std::__and_<std::__is_fast_hash<std::hash<torch::jit::fuser::BinaryOpType> >, std::__detail::__is_noexcept_hash<torch::jit::fuser::BinaryOpType, std::hash<torch::jit::fuser::BinaryOpType> > > >\u2019\r\n           typedef typename _Hashtable::difference_type difference_type;\r\n                                                        ^\r\n    /usr/include/c++/5/bits/unordered_set.h:274:7: error: \u2018value\u2019 is not a member of \u2018std::__not_<std::__and_<std::__is_fast_hash<std::hash<torch::jit::fuser::BinaryOpType> >, std::__detail::__is_noexcept_hash<torch::jit::fuser::BinaryOpType, std::hash<torch::jit::fuser::BinaryOpType> > > >\u2019\r\n           operator=(initializer_list<value_type> __l)\r\n           ^\r\n    /usr/include/c++/5/bits/unordered_set.h:368:2: error: \u2018value\u2019 is not a member of \u2018std::__not_<std::__and_<std::__is_fast_hash<std::hash<torch::jit::fuser::BinaryOpType> >, std::__detail::__is_noexcept_hash<torch::jit::fuser::BinaryOpType, std::hash<torch::jit::fuser::BinaryOpType> > > >\u2019\r\n      emplace(_Args&&... __args)\r\n      ^\r\n    /usr/include/c++/5/bits/unordered_set.h:412:7: error: \u2018value\u2019 is not a member of \u2018std::__not_<std::__and_<std::__is_fast_hash<std::hash<torch::jit::fuser::BinaryOpType> >, std::__detail::__is_noexcept_hash<torch::jit::fuser::BinaryOpType, std::hash<torch::jit::fuser::BinaryOpType> > > >\u2019\r\n           insert(const value_type& __x)\r\n           ^\r\n    /usr/include/c++/5/bits/unordered_set.h:416:7: error: \u2018value\u2019 is not a member of \u2018std::__not_<std::__and_<std::__is_fast_hash<std::hash<torch::jit::fuser::BinaryOpType> >, std::__detail::__is_noexcept_hash<torch::jit::fuser::BinaryOpType, std::hash<torch::jit::fuser::BinaryOpType> > > >\u2019\r\n           insert(value_type&& __x)\r\n           ^\r\n    /usr/include/c++/5/bits/unordered_set.h:471:7: error: \u2018value\u2019 is not a member of \u2018std::__not_<std::__and_<std::__is_fast_hash<std::hash<torch::jit::fuser::BinaryOpType> >, std::__detail::__is_noexcept_hash<torch::jit::fuser::BinaryOpType, std::hash<torch::jit::fuser::BinaryOpType> > > >\u2019\r\n           insert(initializer_list<value_type> __l)\r\n           ^\r\n    /usr/include/c++/5/bits/unordered_set.h:616:7: error: \u2018value\u2019 is not a member of \u2018std::__not_<std::__and_<std::__is_fast_hash<std::hash<torch::jit::fuser::BinaryOpType> >, std::__detail::__is_noexcept_hash<torch::jit::fuser::BinaryOpType, std::hash<torch::jit::fuser::BinaryOpType> > > >\u2019\r\n           equal_range(const key_type& __x)\r\n           ^\r\n    /usr/include/c++/5/bits/unordered_set.h:620:7: error: \u2018value\u2019 is not a member of \u2018std::__not_<std::__and_<std::__is_fast_hash<std::hash<torch::jit::fuser::BinaryOpType> >, std::__detail::__is_noexcept_hash<torch::jit::fuser::BinaryOpType, std::hash<torch::jit::fuser::BinaryOpType> > > >\u2019\r\n           equal_range(const key_type& __x) const\r\n           ^\r\n    ../torch/csrc/jit/codegen/cuda/type.cpp:191:76: error: too many initializers for \u2018std::unordered_set<torch::jit::fuser::BinaryOpType>\u2019\r\n                                                                BinaryOpType::NE};\r\n                                                                                ^\r\n    ../torch/csrc/jit/codegen/cuda/type.cpp: In function \u2018bool torch::jit::fuser::is_logical_op(const torch::jit::fuser::BinaryOpType&)\u2019:\r\n    ../torch/csrc/jit/codegen/cuda/type.cpp:194:29: error: \u2018class std::unordered_set<torch::jit::fuser::BinaryOpType>\u2019 has no member named \u2018count\u2019\r\n       return logical_binary_ops.count(bot) > 0;\r\n                                 ^\r\n\r\n```\r\n\r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior:\r\n\r\nshould be reproducible on 2b41b9bceb01851df83d40c1280b3d3b09e1395b\r\n\r\n1. just compile with gcc 5.5\r\n```\r\nexport MAX_JOBS=1\r\n\r\nexport PATH=/usr/local/cuda-10.0/bin:~/ccache/lib:$PATH\r\nexport CUDA_NVCC_EXECUTABLE=~/ccache/cuda/nvcc\r\n\r\nexport REL_WITH_DEB_INFO=1\r\nexport USE_CUDA=1\r\nexport TORCH_CUDA_ARCH_LIST=7.5\r\n\r\nexport BUILD_TEST=0\r\nexport BUILD_BINARY=0\r\nexport BUILD_CAFFE2_OPS=0\r\nexport USE_MKLDNN=0\r\nexport USE_FBGEMM=0\r\nexport USE_NNPACK=0\r\nexport USE_QNNPACK=0\r\nexport USE_XNNPACK=1\r\nexport USE_PYTORCH_QNNPACK=0\r\n\r\nexport USE_DISTRIBUTED=0\r\nexport USE_TENSORPIPE=0\r\n\r\npip install -e . -v\r\n```\r\n\r\n<!-- If you have a code sample, error messages, stack traces, please provide it here as well -->\r\n\r\n## Expected behavior\r\n\r\n<!-- A clear and concise description of what you expected to happen. -->\r\n\r\n## Environment\r\n\r\nPlease copy and paste the output from our\r\n[environment collection script](https://raw.githubusercontent.com/pytorch/pytorch/master/torch/utils/collect_env.py)\r\n(or fill out the checklist below manually).\r\n\r\nYou can get the script and run it with:\r\n```\r\nwget https://raw.githubusercontent.com/pytorch/pytorch/master/torch/utils/collect_env.py\r\n# For security purposes, please check the contents of collect_env.py before running it.\r\npython collect_env.py\r\n```\r\n\r\n - PyTorch Version (e.g., 1.0):\r\n - OS (e.g., Linux):\r\n - How you installed PyTorch (`conda`, `pip`, source):\r\n - Build command you used (if compiling from source):\r\n - Python version:\r\n - CUDA/cuDNN version:\r\n - GPU models and configuration:\r\n - Any other relevant information:\r\n\r\n## Additional context\r\n\r\n<!-- Add any other context about the problem here. -->\r\n\n\ncc @suo @malfet",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/38111/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/38111/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/37668",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/37668/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/37668/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/37668/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/37668",
        "id": 610836349,
        "node_id": "MDU6SXNzdWU2MTA4MzYzNDk=",
        "number": 37668,
        "title": "[JIT] Error accessing NamedTuple field by name in module's forward",
        "user": {
            "login": "stas-sl",
            "id": 4602302,
            "node_id": "MDQ6VXNlcjQ2MDIzMDI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4602302?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/stas-sl",
            "html_url": "https://github.com/stas-sl",
            "followers_url": "https://api.github.com/users/stas-sl/followers",
            "following_url": "https://api.github.com/users/stas-sl/following{/other_user}",
            "gists_url": "https://api.github.com/users/stas-sl/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/stas-sl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/stas-sl/subscriptions",
            "organizations_url": "https://api.github.com/users/stas-sl/orgs",
            "repos_url": "https://api.github.com/users/stas-sl/repos",
            "events_url": "https://api.github.com/users/stas-sl/events{/privacy}",
            "received_events_url": "https://api.github.com/users/stas-sl/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            },
            {
                "id": 1301447942,
                "node_id": "MDU6TGFiZWwxMzAxNDQ3OTQy",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/enhancement",
                "name": "enhancement",
                "color": "ffc6f4",
                "default": true,
                "description": "Not as big of a feature, but technically not a bug. Should be easy to fix"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "SplitInfinity",
            "id": 4392003,
            "node_id": "MDQ6VXNlcjQzOTIwMDM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4392003?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SplitInfinity",
            "html_url": "https://github.com/SplitInfinity",
            "followers_url": "https://api.github.com/users/SplitInfinity/followers",
            "following_url": "https://api.github.com/users/SplitInfinity/following{/other_user}",
            "gists_url": "https://api.github.com/users/SplitInfinity/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SplitInfinity/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SplitInfinity/subscriptions",
            "organizations_url": "https://api.github.com/users/SplitInfinity/orgs",
            "repos_url": "https://api.github.com/users/SplitInfinity/repos",
            "events_url": "https://api.github.com/users/SplitInfinity/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SplitInfinity/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "SplitInfinity",
                "id": 4392003,
                "node_id": "MDQ6VXNlcjQzOTIwMDM=",
                "avatar_url": "https://avatars.githubusercontent.com/u/4392003?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/SplitInfinity",
                "html_url": "https://github.com/SplitInfinity",
                "followers_url": "https://api.github.com/users/SplitInfinity/followers",
                "following_url": "https://api.github.com/users/SplitInfinity/following{/other_user}",
                "gists_url": "https://api.github.com/users/SplitInfinity/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/SplitInfinity/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/SplitInfinity/subscriptions",
                "organizations_url": "https://api.github.com/users/SplitInfinity/orgs",
                "repos_url": "https://api.github.com/users/SplitInfinity/repos",
                "events_url": "https://api.github.com/users/SplitInfinity/events{/privacy}",
                "received_events_url": "https://api.github.com/users/SplitInfinity/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 8,
        "created_at": "2020-05-01T16:20:45Z",
        "updated_at": "2020-06-17T20:59:47Z",
        "closed_at": "2020-06-17T20:59:47Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\nWhen I try to access NamedTuple field by name like this:\r\n\r\n```python\r\nimport torch\r\nfrom typing import NamedTuple\r\n\r\nclass Params(NamedTuple):\r\n    p1: float\r\n    p2: int\r\n\r\nclass MyModule(torch.nn.Module):\r\n    def __init__(self, params):\r\n        super().__init__()\r\n        self.params = params\r\n\r\n    def forward(self):\r\n        print(self.params.p1)\r\n\r\nparams = Params(1.0, 2)\r\nm = torch.jit.script(MyModule(params))\r\nm()\r\n```\r\nThe following error is raised:\r\n```\r\nRuntimeError: \r\nTried to access nonexistent attribute or method 'p1' of type 'Tuple[float, int]'.:\r\n  File \"test_torch_script.py\", line 72\r\n    def forward(self):\r\n        print(self.params.p1)\r\n              ~~~~~~~~~~~~~~ <--- HERE\r\n```\r\nThough if accessing by index `self.params[0]` it works.\r\n\r\nAlso I tried to pass NamedTuple directly to `forward` method\r\n```python\r\nimport torch\r\nfrom typing import NamedTuple\r\n\r\nclass Params(NamedTuple):\r\n    p1: float\r\n    p2: int\r\n\r\nclass MyModule(torch.nn.Module):\r\n    def __init__(self, params):\r\n        super().__init__()\r\n        self.params = params\r\n\r\n    def forward(self, params: Params):\r\n        print(params.p1)\r\n\r\nparams = Params(1.0, 2)\r\nm = torch.jit.script(MyModule(params))\r\nm(params)\r\n```\r\nAnd it also raises an error (though the type in the message is different):\r\n```\r\nRuntimeError: \r\nTried to access nonexistent attribute or method 'name' of type '__torch__.Params'.:\r\n  File \"test_torch_script.py\", line 72\r\n    def forward(self, params: Params):\r\n        print(params.name)\r\n              ~~~~~~~~~~~ <--- HERE\r\n```\r\nAs in the first case `params[0]` also works here.\r\n\r\nThe last thing I tried is standalone function:\r\n```python\r\nimport torch\r\nfrom typing import NamedTuple\r\n\r\nclass Params(NamedTuple):\r\n    p1: float\r\n    p2: int\r\n\r\nparams = Params(1.0, 2)\r\n\r\n@torch.jit.script\r\ndef f(params: Params):\r\n    print(params.p1)\r\n\r\nf(params)\r\n```\r\nAnd surprisingly it worked as expected.\r\n\r\n## Expected behavior\r\n\r\nIt should be able to access NamedTuple fields by name in all the cases above.\r\n\r\n## Environment\r\n\r\n```\r\nCollecting environment information...\r\nPyTorch version: 1.5.0\r\nIs debug build: No\r\nCUDA used to build PyTorch: 10.2\r\n\r\nOS: Ubuntu 18.04.3 LTS\r\nGCC version: (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0\r\nCMake version: version 3.10.2\r\n\r\nPython version: 3.7\r\nIs CUDA available: Yes\r\nCUDA runtime version: Could not collect\r\nGPU models and configuration: GPU 0: GeForce GTX 1080\r\nNvidia driver version: 430.26\r\ncuDNN version: /usr/lib/x86_64-linux-gnu/libcudnn.so.7.6.2\r\n\r\nVersions of relevant libraries:\r\n[pip] numpy==1.18.1\r\n[pip] numpydoc==0.9.2\r\n[pip] torch==1.5.0\r\n[pip] torch-model-archiver==0.1.0b20200409\r\n[pip] torchserve==0.0.1b20200409\r\n[pip] torchtext==0.6.0\r\n[pip] torchvision==0.6.0a0+82fd1c8\r\n[conda] blas                      1.0                         mkl\r\n[conda] cudatoolkit               10.2.89              hfd86e86_0\r\n[conda] mkl                       2020.0                      166\r\n[conda] mkl-service               2.3.0            py37he904b0f_0\r\n[conda] mkl_fft                   1.0.15           py37ha843d7b_0\r\n[conda] mkl_random                1.1.0            py37hd6b4f25_0\r\n[conda] numpy                     1.18.1           py37h4f9e942_0\r\n[conda] numpy-base                1.18.1           py37hde5b4d6_1\r\n[conda] numpydoc                  0.9.2                      py_0\r\n[conda] pytorch                   1.5.0           py3.7_cuda10.2.89_cudnn7.6.5_0    pytorch\r\n[conda] torch-model-archiver      0.1.0b20200409           pypi_0    pypi\r\n[conda] torchserve                0.0.1b20200409           pypi_0    pypi\r\n[conda] torchtext                 0.6.0                      py_1    pytorch\r\n[conda] torchvision               0.6.0                py37_cu102    pytorch\r\n```\n\ncc @suo",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/37668/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/37668/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/37579",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/37579/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/37579/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/37579/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/37579",
        "id": 610050184,
        "node_id": "MDU6SXNzdWU2MTAwNTAxODQ=",
        "number": 37579,
        "title": "Port torch/csrc/jit/runtime/register_distributed_ops.cpp to new operator registration API",
        "user": {
            "login": "RockingJavaBean",
            "id": 40605299,
            "node_id": "MDQ6VXNlcjQwNjA1Mjk5",
            "avatar_url": "https://avatars.githubusercontent.com/u/40605299?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RockingJavaBean",
            "html_url": "https://github.com/RockingJavaBean",
            "followers_url": "https://api.github.com/users/RockingJavaBean/followers",
            "following_url": "https://api.github.com/users/RockingJavaBean/following{/other_user}",
            "gists_url": "https://api.github.com/users/RockingJavaBean/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RockingJavaBean/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RockingJavaBean/subscriptions",
            "organizations_url": "https://api.github.com/users/RockingJavaBean/orgs",
            "repos_url": "https://api.github.com/users/RockingJavaBean/repos",
            "events_url": "https://api.github.com/users/RockingJavaBean/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RockingJavaBean/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            },
            {
                "id": 1301447942,
                "node_id": "MDU6TGFiZWwxMzAxNDQ3OTQy",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/enhancement",
                "name": "enhancement",
                "color": "ffc6f4",
                "default": true,
                "description": "Not as big of a feature, but technically not a bug. Should be easy to fix"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "xush6528",
            "id": 7608630,
            "node_id": "MDQ6VXNlcjc2MDg2MzA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7608630?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xush6528",
            "html_url": "https://github.com/xush6528",
            "followers_url": "https://api.github.com/users/xush6528/followers",
            "following_url": "https://api.github.com/users/xush6528/following{/other_user}",
            "gists_url": "https://api.github.com/users/xush6528/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xush6528/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xush6528/subscriptions",
            "organizations_url": "https://api.github.com/users/xush6528/orgs",
            "repos_url": "https://api.github.com/users/xush6528/repos",
            "events_url": "https://api.github.com/users/xush6528/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xush6528/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "xush6528",
                "id": 7608630,
                "node_id": "MDQ6VXNlcjc2MDg2MzA=",
                "avatar_url": "https://avatars.githubusercontent.com/u/7608630?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/xush6528",
                "html_url": "https://github.com/xush6528",
                "followers_url": "https://api.github.com/users/xush6528/followers",
                "following_url": "https://api.github.com/users/xush6528/following{/other_user}",
                "gists_url": "https://api.github.com/users/xush6528/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/xush6528/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/xush6528/subscriptions",
                "organizations_url": "https://api.github.com/users/xush6528/orgs",
                "repos_url": "https://api.github.com/users/xush6528/repos",
                "events_url": "https://api.github.com/users/xush6528/events{/privacy}",
                "received_events_url": "https://api.github.com/users/xush6528/received_events",
                "type": "User",
                "site_admin": false
            },
            {
                "login": "RockingJavaBean",
                "id": 40605299,
                "node_id": "MDQ6VXNlcjQwNjA1Mjk5",
                "avatar_url": "https://avatars.githubusercontent.com/u/40605299?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/RockingJavaBean",
                "html_url": "https://github.com/RockingJavaBean",
                "followers_url": "https://api.github.com/users/RockingJavaBean/followers",
                "following_url": "https://api.github.com/users/RockingJavaBean/following{/other_user}",
                "gists_url": "https://api.github.com/users/RockingJavaBean/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/RockingJavaBean/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/RockingJavaBean/subscriptions",
                "organizations_url": "https://api.github.com/users/RockingJavaBean/orgs",
                "repos_url": "https://api.github.com/users/RockingJavaBean/repos",
                "events_url": "https://api.github.com/users/RockingJavaBean/events{/privacy}",
                "received_events_url": "https://api.github.com/users/RockingJavaBean/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-04-30T14:15:53Z",
        "updated_at": "2020-05-14T17:05:07Z",
        "closed_at": "2020-05-13T02:16:29Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "This issue is similar to #37348 and #37008, handling the registrations in torch/csrc/jit/runtime/register_distributed_ops.cpp with new API.\n\ncc @suo",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/37579/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/37579/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/37530",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/37530/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/37530/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/37530/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/37530",
        "id": 609349141,
        "node_id": "MDU6SXNzdWU2MDkzNDkxNDE=",
        "number": 37530,
        "title": "torch.jit.script segfault",
        "user": {
            "login": "ppwwyyxx",
            "id": 1381301,
            "node_id": "MDQ6VXNlcjEzODEzMDE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1381301?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ppwwyyxx",
            "html_url": "https://github.com/ppwwyyxx",
            "followers_url": "https://api.github.com/users/ppwwyyxx/followers",
            "following_url": "https://api.github.com/users/ppwwyyxx/following{/other_user}",
            "gists_url": "https://api.github.com/users/ppwwyyxx/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ppwwyyxx/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ppwwyyxx/subscriptions",
            "organizations_url": "https://api.github.com/users/ppwwyyxx/orgs",
            "repos_url": "https://api.github.com/users/ppwwyyxx/repos",
            "events_url": "https://api.github.com/users/ppwwyyxx/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ppwwyyxx/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 443484135,
                "node_id": "MDU6TGFiZWw0NDM0ODQxMzU=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/high%20priority",
                "name": "high priority",
                "color": "F22613",
                "default": false,
                "description": null
            },
            {
                "id": 466131885,
                "node_id": "MDU6TGFiZWw0NjYxMzE4ODU=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triage%20review",
                "name": "triage review",
                "color": "cc317c",
                "default": false,
                "description": ""
            },
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "SplitInfinity",
            "id": 4392003,
            "node_id": "MDQ6VXNlcjQzOTIwMDM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4392003?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SplitInfinity",
            "html_url": "https://github.com/SplitInfinity",
            "followers_url": "https://api.github.com/users/SplitInfinity/followers",
            "following_url": "https://api.github.com/users/SplitInfinity/following{/other_user}",
            "gists_url": "https://api.github.com/users/SplitInfinity/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SplitInfinity/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SplitInfinity/subscriptions",
            "organizations_url": "https://api.github.com/users/SplitInfinity/orgs",
            "repos_url": "https://api.github.com/users/SplitInfinity/repos",
            "events_url": "https://api.github.com/users/SplitInfinity/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SplitInfinity/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "SplitInfinity",
                "id": 4392003,
                "node_id": "MDQ6VXNlcjQzOTIwMDM=",
                "avatar_url": "https://avatars.githubusercontent.com/u/4392003?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/SplitInfinity",
                "html_url": "https://github.com/SplitInfinity",
                "followers_url": "https://api.github.com/users/SplitInfinity/followers",
                "following_url": "https://api.github.com/users/SplitInfinity/following{/other_user}",
                "gists_url": "https://api.github.com/users/SplitInfinity/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/SplitInfinity/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/SplitInfinity/subscriptions",
                "organizations_url": "https://api.github.com/users/SplitInfinity/orgs",
                "repos_url": "https://api.github.com/users/SplitInfinity/repos",
                "events_url": "https://api.github.com/users/SplitInfinity/events{/privacy}",
                "received_events_url": "https://api.github.com/users/SplitInfinity/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 5,
        "created_at": "2020-04-29T20:47:42Z",
        "updated_at": "2020-05-11T21:17:35Z",
        "closed_at": "2020-05-11T21:17:35Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\n## To Reproduce\r\n```\r\nimport torch\r\nfrom typing import List\r\nclass Boxes():\r\n    def __init__(self, tensor):\r\n        self.tensor = tensor\r\n    @classmethod\r\n    def cat(cls, box_lists: List):\r\n        return cls(torch.cat([x.tensor for x in box_lists]))\r\n\r\ndef f(t: torch.Tensor):\r\n    b = Boxes(t)\r\n    c = Boxes(torch.tensor([3, 4]))\r\n    return Boxes.cat([b, c])\r\n\r\nif __name__ == \"__main__\":\r\n    f_script = torch.jit.script(f)\r\n```\r\nsegfaults in `torch.jit.script`.\r\nThe signature is perhaps wrong, but I don't expect a segfault.\r\n\r\nstack traces:\r\n```\r\nProgram received signal SIGSEGV, Segmentation fault.         \r\n0x00007fffbb68d0de in ?? () from /usr/lib/python3.8/site-packages/torch/lib/libtorch_cpu.so\r\n(gdb) bt                                                                                          \r\n#0  0x00007fffbb68d0de in  () at /usr/lib/python3.8/site-packages/torch/lib/libtorch_cpu.so\r\n#1  0x00007fffbb67c882 in c10::Type::isSubtypeOfExt(std::shared_ptr<c10::Type>, std::ostream*) const () at /usr/lib/python3.8/site-packages/torch/lib/libtorch_cpu.so\r\n#2  0x00007fffbb67c967 in c10::ListType::isSubtypeOfExt(std::shared_ptr<c10::Type>, std::ostream*) const () at /usr/lib/python3.8/site-packages/torch/lib/libtorch_cpu.so\r\n#3  0x00007fffbb68af88 in  () at /usr/lib/python3.8/site-packages/torch/lib/libtorch_cpu.so\r\n#4  0x00007fffbdb3a2b4 in  () at /usr/lib/python3.8/site-packages/torch/lib/libtorch_cpu.so\r\n#5  0x00007fffbdb60d52 in  () at /usr/lib/python3.8/site-packages/torch/lib/libtorch_cpu.so\r\n#6  0x00007fffbdb6277f in  () at /usr/lib/python3.8/site-packages/torch/lib/libtorch_cpu.so\r\n#7  0x00007fffbdb6414c in  () at /usr/lib/python3.8/site-packages/torch/lib/libtorch_cpu.so\r\n#8  0x00007fffbdb233eb in  () at /usr/lib/python3.8/site-packages/torch/lib/libtorch_cpu.so\r\n#9  0x00007fffbdbf3f4c in torch::jit::GraphFunction::ensure_defined() () at /usr/lib/python3.8/site-packages/torch/lib/libtorch_cpu.so\r\n#10 0x00007fffbdb223f1 in torch::jit::CompilationUnit::define(c10::optional<c10::QualifiedName> const&, std::vector<torch::jit::Def, std::allocator<torch::jit::Def> > const&, std::vector<std::shar\r\ned_ptr<torch::jit::Resolver>, std::allocator<std::shared_ptr<torch::jit::Resolver> > > const&, torch::jit::Self const*, bool) () at /usr/lib/python3.8/site-packages/torch/lib/libtorch_cpu.so\r\n#11 0x00007fffc0b093bb in  () at /usr/lib/python3.8/site-packages/torch/lib/libtorch_python.so\r\n#12 0x00007fffc0b0981c in  () at /usr/lib/python3.8/site-packages/torch/lib/libtorch_python.so\r\n#13 0x00007fffc0800576 in  () at /usr/lib/python3.8/site-packages/torch/lib/libtorch_python.so\r\n#14 0x00007ffff7b28ff6 in PyCFunction_Call () at /usr/lib/libpython3.8.so.1.0\r\n#15 0x00007ffff7b1c3d2 in _PyObject_MakeTpCall () at /usr/lib/libpython3.8.so.1.0\r\n#16 0x00007ffff7bd979c in _PyEval_EvalFrameDefault () at /usr/lib/libpython3.8.so.1.0\r\n#17 0x00007ffff7bc6a9d in _PyFunction_Vectorcall () at /usr/lib/libpython3.8.so.1.0\r\n#18 0x00007ffff7b223fd in PyObject_Call () at /usr/lib/libpython3.8.so.1.0\r\n#19 0x00007fffc0b5f91d in  () at /usr/lib/python3.8/site-packages/torch/lib/libtorch_python.so\r\n#20 0x00007fffc0af5bdc in  () at /usr/lib/python3.8/site-packages/torch/lib/libtorch_python.so\r\n#21 0x00007fffbdb400b6 in  () at /usr/lib/python3.8/site-packages/torch/lib/libtorch_cpu.so\r\n#22 0x00007fffbdb3af72 in  () at /usr/lib/python3.8/site-packages/torch/lib/libtorch_cpu.so\r\n#23 0x00007fffbdb437c1 in  () at /usr/lib/python3.8/site-packages/torch/lib/libtorch_cpu.so\r\n#24 0x00007fffbdb431d7 in  () at /usr/lib/python3.8/site-packages/torch/lib/libtorch_cpu.so\r\n#25 0x00007fffbdb436f5 in  () at /usr/lib/python3.8/site-packages/torch/lib/libtorch_cpu.so\r\n#26 0x00007fffbdb5441d in  () at /usr/lib/python3.8/site-packages/torch/lib/libtorch_cpu.so\r\n#27 0x00007fffbdb555eb in  () at /usr/lib/python3.8/site-packages/torch/lib/libtorch_cpu.so\r\n#28 0x00007fffbdb5c97a in  () at /usr/lib/python3.8/site-packages/torch/lib/libtorch_cpu.so\r\n#29 0x00007fffbdb627d1 in  () at /usr/lib/python3.8/site-packages/torch/lib/libtorch_cpu.so\r\n#30 0x00007fffbdb6414c in  () at /usr/lib/python3.8/site-packages/torch/lib/libtorch_cpu.so\r\n#31 0x00007fffbdb233eb in  () at /usr/lib/python3.8/site-packages/torch/lib/libtorch_cpu.so\r\n#32 0x00007fffbdbf3f4c in torch::jit::GraphFunction::ensure_defined() () at /usr/lib/python3.8/site-packages/torch/lib/libtorch_cpu.so\r\n#33 0x00007fffbdb223f1 in torch::jit::CompilationUnit::define(c10::optional<c10::QualifiedName> const&, std::vector<torch::jit::Def, std::allocator<torch::jit::Def> > const&, std::vector<std::shar\r\ned_ptr<torch::jit::Resolver>, std::allocator<std::shared_ptr<torch::jit::Resolver> > > const&, torch::jit::Self const*, bool) () at /usr/lib/python3.8/site-packages/torch/lib/libtorch_cpu.so\r\n#34 0x00007fffc0b0c783 in  () at /usr/lib/python3.8/site-packages/torch/lib/libtorch_python.so\r\n#35 0x00007fffc0800576 in  () at /usr/lib/python3.8/site-packages/torch/lib/libtorch_python.so\r\n```\r\n\r\n## Environment\r\n```\r\nPyTorch version: 1.5.0\r\nIs debug build: No\r\nCUDA used to build PyTorch: 10.2\r\n\r\nOS: Arch Linux\r\nGCC version: (Arch Linux 9.3.0-1) 9.3.0\r\nCMake version: version 3.17.2\r\n\r\nPython version: 3.8\r\nIs CUDA available: Yes\r\nCUDA runtime version: 10.2.89\r\nGPU models and configuration: GPU 0: GeForce GTX 1070\r\nNvidia driver version: 440.82\r\ncuDNN version: /usr/lib/libcudnn.so.7.6.5\r\n\r\nVersions of relevant libraries:\r\n[pip3] numpy==1.18.3\r\n[pip3] torch==1.5.0\r\n[pip3] torchvision==0.5.0a0+85b8fbf\r\n[conda] Could not collect\r\n```\r\n\r\ncc @ezyang @gchanan @zou3519 @suo",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/37530/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/37530/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/37516",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/37516/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/37516/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/37516/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/37516",
        "id": 609292803,
        "node_id": "MDU6SXNzdWU2MDkyOTI4MDM=",
        "number": 37516,
        "title": "[jit] support `isinstance(foo, dict)`",
        "user": {
            "login": "suo",
            "id": 1617424,
            "node_id": "MDQ6VXNlcjE2MTc0MjQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1617424?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/suo",
            "html_url": "https://github.com/suo",
            "followers_url": "https://api.github.com/users/suo/followers",
            "following_url": "https://api.github.com/users/suo/following{/other_user}",
            "gists_url": "https://api.github.com/users/suo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/suo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/suo/subscriptions",
            "organizations_url": "https://api.github.com/users/suo/orgs",
            "repos_url": "https://api.github.com/users/suo/repos",
            "events_url": "https://api.github.com/users/suo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/suo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1027606656,
                "node_id": "MDU6TGFiZWwxMDI3NjA2NjU2",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20bootcamp",
                "name": "module: bootcamp",
                "color": "f7e101",
                "default": false,
                "description": "We plan to do a full writeup on the issue, and then get someone to do it for onboarding"
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            },
            {
                "id": 1301447942,
                "node_id": "MDU6TGFiZWwxMzAxNDQ3OTQy",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/enhancement",
                "name": "enhancement",
                "color": "ffc6f4",
                "default": true,
                "description": "Not as big of a feature, but technically not a bug. Should be easy to fix"
            },
            {
                "id": 2203967172,
                "node_id": "MDU6TGFiZWwyMjAzOTY3MTcy",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/days",
                "name": "days",
                "color": "77f497",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "Lilyjjo",
            "id": 35852084,
            "node_id": "MDQ6VXNlcjM1ODUyMDg0",
            "avatar_url": "https://avatars.githubusercontent.com/u/35852084?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Lilyjjo",
            "html_url": "https://github.com/Lilyjjo",
            "followers_url": "https://api.github.com/users/Lilyjjo/followers",
            "following_url": "https://api.github.com/users/Lilyjjo/following{/other_user}",
            "gists_url": "https://api.github.com/users/Lilyjjo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Lilyjjo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Lilyjjo/subscriptions",
            "organizations_url": "https://api.github.com/users/Lilyjjo/orgs",
            "repos_url": "https://api.github.com/users/Lilyjjo/repos",
            "events_url": "https://api.github.com/users/Lilyjjo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Lilyjjo/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "Lilyjjo",
                "id": 35852084,
                "node_id": "MDQ6VXNlcjM1ODUyMDg0",
                "avatar_url": "https://avatars.githubusercontent.com/u/35852084?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/Lilyjjo",
                "html_url": "https://github.com/Lilyjjo",
                "followers_url": "https://api.github.com/users/Lilyjjo/followers",
                "following_url": "https://api.github.com/users/Lilyjjo/following{/other_user}",
                "gists_url": "https://api.github.com/users/Lilyjjo/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/Lilyjjo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Lilyjjo/subscriptions",
                "organizations_url": "https://api.github.com/users/Lilyjjo/orgs",
                "repos_url": "https://api.github.com/users/Lilyjjo/repos",
                "events_url": "https://api.github.com/users/Lilyjjo/events{/privacy}",
                "received_events_url": "https://api.github.com/users/Lilyjjo/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 10,
        "created_at": "2020-04-29T19:12:30Z",
        "updated_at": "2020-12-01T19:00:04Z",
        "closed_at": "2020-12-01T19:00:04Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "Today doing something like:\r\n\r\n```\r\n@torch.jit.script\r\ndef foo(s: Any):\r\n    if isinstance(s, dict):\r\n        print(s.items())\r\n```\r\ngives:\r\n```\r\nRuntimeError: Unknown type name 'dict':\r\n```\r\nAnd capitalizing \"`dict`\" will produce a segfault. Yikes!\r\n\r\nA related issue is that doing something like:\r\n```\r\nisinstance(foo, Dict[str, Tensor])\r\n```\r\nis not actually possible in Python, since the type annotations are mostly static constructs that the interpreter doesn't know anything about.\r\n\r\nA potential compromise is to have `isinstance(foo, dict)` refine the type of `foo` to `Dict[Any, Any]`. And then the user can further type refine to get an actual things they want. So:\r\n```\r\nif isinstance(foo, dict):\r\n    for k, v in foo.items():\r\n        assert isinstance(k, str)\r\n        assert isinstance(v, Tensor)\r\n```\r\n\r\nAnother potential solution is to have a `torch.jit.isinstance(foo, Dict[str, tensor])` that boils down to `isinstance(foo, dict)` in Python but performs the correct type refinement in TS.\r\n\r\ncc @suo @gmagogsfm",
        "closed_by": {
            "login": "Lilyjjo",
            "id": 35852084,
            "node_id": "MDQ6VXNlcjM1ODUyMDg0",
            "avatar_url": "https://avatars.githubusercontent.com/u/35852084?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Lilyjjo",
            "html_url": "https://github.com/Lilyjjo",
            "followers_url": "https://api.github.com/users/Lilyjjo/followers",
            "following_url": "https://api.github.com/users/Lilyjjo/following{/other_user}",
            "gists_url": "https://api.github.com/users/Lilyjjo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Lilyjjo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Lilyjjo/subscriptions",
            "organizations_url": "https://api.github.com/users/Lilyjjo/orgs",
            "repos_url": "https://api.github.com/users/Lilyjjo/repos",
            "events_url": "https://api.github.com/users/Lilyjjo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Lilyjjo/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/37516/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/37516/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/37286",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/37286/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/37286/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/37286/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/37286",
        "id": 606698440,
        "node_id": "MDU6SXNzdWU2MDY2OTg0NDA=",
        "number": 37286,
        "title": "torch.jit.script issue: RuntimeError: select() cannot be applied to a 0-dim tensor.",
        "user": {
            "login": "n2cholas",
            "id": 12474257,
            "node_id": "MDQ6VXNlcjEyNDc0MjU3",
            "avatar_url": "https://avatars.githubusercontent.com/u/12474257?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/n2cholas",
            "html_url": "https://github.com/n2cholas",
            "followers_url": "https://api.github.com/users/n2cholas/followers",
            "following_url": "https://api.github.com/users/n2cholas/following{/other_user}",
            "gists_url": "https://api.github.com/users/n2cholas/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/n2cholas/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/n2cholas/subscriptions",
            "organizations_url": "https://api.github.com/users/n2cholas/orgs",
            "repos_url": "https://api.github.com/users/n2cholas/repos",
            "events_url": "https://api.github.com/users/n2cholas/events{/privacy}",
            "received_events_url": "https://api.github.com/users/n2cholas/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 443484135,
                "node_id": "MDU6TGFiZWw0NDM0ODQxMzU=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/high%20priority",
                "name": "high priority",
                "color": "F22613",
                "default": false,
                "description": null
            },
            {
                "id": 466131885,
                "node_id": "MDU6TGFiZWw0NjYxMzE4ODU=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triage%20review",
                "name": "triage review",
                "color": "cc317c",
                "default": false,
                "description": ""
            },
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "ailzhang",
            "id": 5248122,
            "node_id": "MDQ6VXNlcjUyNDgxMjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5248122?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ailzhang",
            "html_url": "https://github.com/ailzhang",
            "followers_url": "https://api.github.com/users/ailzhang/followers",
            "following_url": "https://api.github.com/users/ailzhang/following{/other_user}",
            "gists_url": "https://api.github.com/users/ailzhang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ailzhang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ailzhang/subscriptions",
            "organizations_url": "https://api.github.com/users/ailzhang/orgs",
            "repos_url": "https://api.github.com/users/ailzhang/repos",
            "events_url": "https://api.github.com/users/ailzhang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ailzhang/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "ailzhang",
                "id": 5248122,
                "node_id": "MDQ6VXNlcjUyNDgxMjI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/5248122?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ailzhang",
                "html_url": "https://github.com/ailzhang",
                "followers_url": "https://api.github.com/users/ailzhang/followers",
                "following_url": "https://api.github.com/users/ailzhang/following{/other_user}",
                "gists_url": "https://api.github.com/users/ailzhang/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ailzhang/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ailzhang/subscriptions",
                "organizations_url": "https://api.github.com/users/ailzhang/orgs",
                "repos_url": "https://api.github.com/users/ailzhang/repos",
                "events_url": "https://api.github.com/users/ailzhang/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ailzhang/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 2,
        "created_at": "2020-04-25T05:55:54Z",
        "updated_at": "2020-05-06T17:46:43Z",
        "closed_at": "2020-05-06T17:46:42Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\nThe following code should run but does not:\r\n\r\n```\r\nimport torch\r\n\r\n@torch.jit.script\r\ndef f(x):  # ? x 6\r\n    return x.t()[[0, 1, 5]]  # 3 x ?\r\n\r\nprint(f(torch.zeros((2, 6))))\r\n```\r\n\r\nHere is the error produced when running the above code:\r\n\r\n```\r\nRuntimeError: The following operation failed in the TorchScript interpreter.\r\nTraceback of TorchScript (most recent call last):\r\n  File \"<ipython-input-11-c4a594a6d126>\", line 3, in f\r\n@torch.jit.script\r\ndef f(x):  # ? x 6\r\n    return x.t()[[0, 1, 5]]  # 3 x ?\r\n           ~~~~~~~~~~~~~~ <--- HERE\r\nRuntimeError: select() cannot be applied to a 0-dim tensor.\r\n```\r\n\r\n## Expected behavior\r\n\r\nThe code without the `@torch.jit.script` decorator prints:\r\n\r\n```\r\ntensor([[0., 0.],\r\n        [0., 0.],\r\n        [0., 0.]])\r\n```\r\n\r\n## Environment\r\nI tried this on Google Colab with PyTorch 1.4.0 and 1.5.0\r\n\r\n - PyTorch Version (e.g., 1.0): 1.4.0 and 1.5.0\r\n - OS (e.g., Linux): Linux\r\n - How you installed PyTorch (`conda`, `pip`, source): pip\r\n - Build command you used (if compiling from source): pip install torch==1.5\r\n - Python version: 3.6.9\r\n\r\n\r\ncc @ezyang @gchanan @zou3519 @suo",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/37286/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/37286/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/36902",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/36902/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/36902/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/36902/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/36902",
        "id": 602775001,
        "node_id": "MDU6SXNzdWU2MDI3NzUwMDE=",
        "number": 36902,
        "title": "type annotation `-> (List[int], List[int])` gives RuntimeError for JIT",
        "user": {
            "login": "rgommers",
            "id": 98330,
            "node_id": "MDQ6VXNlcjk4MzMw",
            "avatar_url": "https://avatars.githubusercontent.com/u/98330?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rgommers",
            "html_url": "https://github.com/rgommers",
            "followers_url": "https://api.github.com/users/rgommers/followers",
            "following_url": "https://api.github.com/users/rgommers/following{/other_user}",
            "gists_url": "https://api.github.com/users/rgommers/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rgommers/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rgommers/subscriptions",
            "organizations_url": "https://api.github.com/users/rgommers/orgs",
            "repos_url": "https://api.github.com/users/rgommers/repos",
            "events_url": "https://api.github.com/users/rgommers/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rgommers/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 466131885,
                "node_id": "MDU6TGFiZWw0NjYxMzE4ODU=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triage%20review",
                "name": "triage review",
                "color": "cc317c",
                "default": false,
                "description": ""
            },
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2020-04-19T17:32:34Z",
        "updated_at": "2020-04-23T14:57:25Z",
        "closed_at": "2020-04-23T14:57:25Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\nThe JIT and MyPy disagree on what a valid type annotation should look like:\r\n```\r\nERROR [0.008s]: test_class_sorting (jit.test_class_type.TestClassType)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\circleci\\project\\test\\jit\\test_class_type.py\", line 394, in test_class_sorting\r\n    self.checkScript(test, ([Foo(2), Foo(1), Foo(3)],))\r\n  File \"C:\\Users\\circleci\\project\\build\\win_tmp\\build\\torch\\testing\\_internal\\jit_utils.py\", line 393, in checkScript\r\n    frames_up=2)\r\n  File \"C:\\Users\\circleci\\project\\build\\win_tmp\\build\\torch\\testing\\_internal\\jit_utils.py\", line 369, in checkScript\r\n    cu = torch.jit.CompilationUnit(script, _frames_up=frames_up)\r\n  File \"C:\\Users\\circleci\\project\\build\\win_tmp\\build\\torch\\jit\\__init__.py\", line 1058, in __init__\r\n    self.define(lang, _frames_up=_frames_up + 1)\r\n  File \"C:\\Users\\circleci\\project\\build\\win_tmp\\build\\torch\\jit\\__init__.py\", line 1063, in define\r\n    self._c.define(lang, rcb)\r\nRuntimeError: \r\nExpression of type tuple-literal cannot be used in a type expression:\r\n  File \"<string>\", line 2\r\ndef test(li, reverse=False):\r\n    # type: (List[Foo], bool) -> (List[int], List[int])\r\n                                  ~~~~~~~~~~~~~~~~~~~ <--- HERE\r\n    li_sorted = sorted(li)\r\n    ret_sorted = torch.jit.annotate(List[int], [])\r\n```\r\nwithout `-> (List[int], List[int])` it's a syntax error for MyPy (and those cannot be handled with `ignore_errors`), with it the JIT gives a `RuntimeError`.\r\n\r\nDiscovered in gh-36584, in that PR (which enables running MyPy in CI over the whole code base) I'll disable this test.\r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior:\r\n\r\n1. Add the missing return type annotation ` -> (List[int], List[int])` in the place indicated by the traceback above.\r\n2. Run the tests in `jit\\test_class_type.py`.\r\n\r\n## Expected behavior\r\n\r\nNo `RuntimeError`.\r\n\r\n## Environment\r\n\r\nReproducible in CI, e.g. in `pytorch_linux_xenial_cuda10_2_cudnn7_py3_ge_config_legacy_test` - see gh-36584.\n\ncc @suo",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/36902/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/36902/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/36625",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/36625/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/36625/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/36625/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/36625",
        "id": 599898912,
        "node_id": "MDU6SXNzdWU1OTk4OTg5MTI=",
        "number": 36625,
        "title": "Add TracedModule attribute for the constants table",
        "user": {
            "login": "ifeherva",
            "id": 3716849,
            "node_id": "MDQ6VXNlcjM3MTY4NDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3716849?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ifeherva",
            "html_url": "https://github.com/ifeherva",
            "followers_url": "https://api.github.com/users/ifeherva/followers",
            "following_url": "https://api.github.com/users/ifeherva/following{/other_user}",
            "gists_url": "https://api.github.com/users/ifeherva/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ifeherva/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ifeherva/subscriptions",
            "organizations_url": "https://api.github.com/users/ifeherva/orgs",
            "repos_url": "https://api.github.com/users/ifeherva/repos",
            "events_url": "https://api.github.com/users/ifeherva/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ifeherva/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 466131885,
                "node_id": "MDU6TGFiZWw0NjYxMzE4ODU=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triage%20review",
                "name": "triage review",
                "color": "cc317c",
                "default": false,
                "description": ""
            },
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1027606656,
                "node_id": "MDU6TGFiZWwxMDI3NjA2NjU2",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20bootcamp",
                "name": "module: bootcamp",
                "color": "f7e101",
                "default": false,
                "description": "We plan to do a full writeup on the issue, and then get someone to do it for onboarding"
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            },
            {
                "id": 1301447942,
                "node_id": "MDU6TGFiZWwxMzAxNDQ3OTQy",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/enhancement",
                "name": "enhancement",
                "color": "ffc6f4",
                "default": true,
                "description": "Not as big of a feature, but technically not a bug. Should be easy to fix"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2020-04-14T22:33:29Z",
        "updated_at": "2020-05-06T01:47:38Z",
        "closed_at": "2020-05-01T03:46:24Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## \ud83d\ude80 Feature\r\n<!-- A clear and concise description of the feature proposal -->\r\nTracedModuel currently returns the compiled code via the .code() member function. This code can possible contain constants (e.g. CONSTANTS.c0), however the value of these are not accessible from python at the moment. It would really useful to surface the constant mapping to python so libraries that interpret the module can get the full picture.\r\n\r\n## Motivation\r\n\r\nI am currently writing a pytorch/torchscript -> mxnet code converter and currently it cannot resolve the constants in the torchscript code.\r\n\r\n## Pitch\r\n\r\ntracedmodule.code -> returns code (done)\r\ntracedmoduel.constants -> returns a mapping between constant name and value (dict)\r\n\r\n## Alternatives\r\n\r\nAny other function from jit that can return the constants of a tracedmodule\r\n\r\n## Additional context\r\n\r\nhttps://discuss.pytorch.org/t/extract-constants-from-torchscript-module/\r\n\n\ncc @suo",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/36625/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/36625/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/36434",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/36434/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/36434/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/36434/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/36434",
        "id": 598281120,
        "node_id": "MDU6SXNzdWU1OTgyODExMjA=",
        "number": 36434,
        "title": "Intermittent hang in BuildLivenessSets after test_svd_cuda_float64 on CUDA 10.1 configurations",
        "user": {
            "login": "ezyang",
            "id": 13564,
            "node_id": "MDQ6VXNlcjEzNTY0",
            "avatar_url": "https://avatars.githubusercontent.com/u/13564?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ezyang",
            "html_url": "https://github.com/ezyang",
            "followers_url": "https://api.github.com/users/ezyang/followers",
            "following_url": "https://api.github.com/users/ezyang/following{/other_user}",
            "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions",
            "organizations_url": "https://api.github.com/users/ezyang/orgs",
            "repos_url": "https://api.github.com/users/ezyang/repos",
            "events_url": "https://api.github.com/users/ezyang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ezyang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 443484135,
                "node_id": "MDU6TGFiZWw0NDM0ODQxMzU=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/high%20priority",
                "name": "high priority",
                "color": "F22613",
                "default": false,
                "description": null
            },
            {
                "id": 466131885,
                "node_id": "MDU6TGFiZWw0NjYxMzE4ODU=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triage%20review",
                "name": "triage review",
                "color": "cc317c",
                "default": false,
                "description": ""
            },
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            },
            {
                "id": 1301397902,
                "node_id": "MDU6TGFiZWwxMzAxMzk3OTAy",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20flaky-tests",
                "name": "module: flaky-tests",
                "color": "f7e101",
                "default": false,
                "description": "Problem is a flaky test in CI"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 11,
        "created_at": "2020-04-11T14:49:58Z",
        "updated_at": "2020-04-17T03:51:49Z",
        "closed_at": "2020-04-17T03:51:49Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "In CI, our CUDA jobs with no AVX configurations intermittently hang. \r\n\r\n```\r\nApr 07 19:57:46   test_sub_cuda_int64 (__main__.TestTorchDeviceTypeCUDA) ... skip (0.029s)\r\nApr 07 19:57:46   test_sub_cuda_int8 (__main__.TestTorchDeviceTypeCUDA) ... skip (0.028s)\r\nApr 07 19:57:46   test_sub_cuda_uint8 (__main__.TestTorchDeviceTypeCUDA) ... skip (0.028s)\r\nApr 07 19:57:46   test_sub_typing_cuda (__main__.TestTorchDeviceTypeCUDA) ... ok (0.077s)\r\nApr 07 19:57:46   test_sum_all_cuda_bool (__main__.TestTorchDeviceTypeCUDA) ... skip (0.029s)\r\nApr 07 19:57:46   test_sum_all_cuda_float64 (__main__.TestTorchDeviceTypeCUDA) ... skip (0.029s)\r\nApr 07 19:57:46   test_sum_out_cuda_float64 (__main__.TestTorchDeviceTypeCUDA) ... skip (0.029s)\r\nApr 07 19:57:54   test_svd_cuda_float64 (__main__.TestTorchDeviceTypeCUDA) ... ok (8.023s)\r\n```\r\n\r\nIt happens on `pytorch_linux_xenial_cuda10_1_cudnn7_py3_NO_AVX2_test` and `pytorch_linux_xenial_cuda10_1_cudnn7_py3_NO_AVX_NO_AVX2_test` but not `pytorch_linux_xenial_cuda9_cudnn7_py3_test` nor `pytorch_linux_xenial_cuda10_1_cudnn7_py3_gcc7_test` (I confirmed the test is run in all these configurations)\r\n\r\nHere are the backtraces of all threads at the time of hang:\r\n\r\n```\r\n(gdb) thread apply all bt\r\n\r\nThread 14 (Thread 0x7f7876ffd700 (LWP 12731)):\r\n#0  futex_wait (val=785864, addr=0x5563f8bf1be4)\r\n    at /home/nwani/m3/conda-bld/compilers_linux-64_1560109574129/work/.build/x86_64-conda_cos6-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h:44\r\n#1  do_wait (addr=addr@entry=0x5563f8bf1be4, val=val@entry=785864)\r\n    at /home/nwani/m3/conda-bld/compilers_linux-64_1560109574129/work/.build/x86_64-conda_cos6-linux-gnu/src/gcc/libgomp/config/linux/wait.h:67\r\n#2  0x00007f794dfb7623 in gomp_barrier_wait_end (bar=0x5563f8bf1be0, state=785864)\r\n    at /home/nwani/m3/conda-bld/compilers_linux-64_1560109574129/work/.build/x86_64-conda_cos6-linux-gnu/src/gcc/libgomp/config/linux/bar.c:48\r\n#3  0x00007f794dfb56f7 in gomp_simple_barrier_wait (bar=0x5563f8bf1be0)\r\n    at /home/nwani/m3/conda-bld/compilers_linux-64_1560109574129/work/.build/x86_64-conda_cos6-linux-gnu/src/gcc/libgomp/config/posix/simple-bar.h:60\r\n#4  gomp_thread_start (xdata=<optimized out>)\r\n    at /home/nwani/m3/conda-bld/compilers_linux-64_1560109574129/work/.build/x86_64-conda_cos6-linux-gnu/src/gcc/libgomp/team.c:127\r\n#5  0x00007f794ff7a6ba in start_thread (arg=0x7f7876ffd700) at pthread_create.c:333\r\n#6  0x00007f794fcb041d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:109\r\n\r\nThread 13 (Thread 0x7f78777fe700 (LWP 12730)):\r\n#0  futex_wait (val=785864, addr=0x5563f8bf1be4)\r\n    at /home/nwani/m3/conda-bld/compilers_linux-64_1560109574129/work/.build/x86_64-conda_cos6-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h:44\r\n#1  do_wait (addr=addr@entry=0x5563f8bf1be4, val=val@entry=785864)\r\n    at /home/nwani/m3/conda-bld/compilers_linux-64_1560109574129/work/.build/x86_64-conda_cos6-linux-gnu/src/gcc/libgomp/config/linux/wait.h:67\r\n#2  0x00007f794dfb7623 in gomp_barrier_wait_end (bar=0x5563f8bf1be0, state=785864)\r\n    at /home/nwani/m3/conda-bld/compilers_linux-64_1560109574129/work/.build/x86_64-conda_cos6-linux-gnu/src/gcc/libgomp/config/linux/bar.c:48\r\n#3  0x00007f794dfb56f7 in gomp_simple_barrier_wait (bar=0x5563f8bf1be0)\r\n    at /home/nwani/m3/conda-bld/compilers_linux-64_1560109574129/work/.build/x86_64-conda_cos6-linux-gnu/src/gcc/libgomp/config/posix/simple-bar.h:60\r\n#4  gomp_thread_start (xdata=<optimized out>)\r\n    at /home/nwani/m3/conda-bld/compilers_linux-64_1560109574129/work/.build/x86_64-conda_cos6-linux-gnu/src/gcc/libgomp/team.c:127\r\n#5  0x00007f794ff7a6ba in start_thread (arg=0x7f78777fe700) at pthread_create.c:333\r\n--Type <RET> for more, q to quit, c to continue without paging--c\r\n#6  0x00007f794fcb041d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:109\r\n\r\nThread 12 (Thread 0x7f787c8c7700 (LWP 12729)):\r\n#0  futex_wait (val=785864, addr=0x5563f8bf1be4) at /home/nwani/m3/conda-bld/compilers_linux-64_1560109574129/work/.build/x86_64-conda_cos6-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h:44\r\n#1  do_wait (addr=addr@entry=0x5563f8bf1be4, val=val@entry=785864) at /home/nwani/m3/conda-bld/compilers_linux-64_1560109574129/work/.build/x86_64-conda_cos6-linux-gnu/src/gcc/libgomp/config/linux/wait.h:67\r\n#2  0x00007f794dfb7623 in gomp_barrier_wait_end (bar=0x5563f8bf1be0, state=785864) at /home/nwani/m3/conda-bld/compilers_linux-64_1560109574129/work/.build/x86_64-conda_cos6-linux-gnu/src/gcc/libgomp/config/linux/bar.c:48\r\n#3  0x00007f794dfb56f7 in gomp_simple_barrier_wait (bar=0x5563f8bf1be0) at /home/nwani/m3/conda-bld/compilers_linux-64_1560109574129/work/.build/x86_64-conda_cos6-linux-gnu/src/gcc/libgomp/config/posix/simple-bar.h:60\r\n#4  gomp_thread_start (xdata=<optimized out>) at /home/nwani/m3/conda-bld/compilers_linux-64_1560109574129/work/.build/x86_64-conda_cos6-linux-gnu/src/gcc/libgomp/team.c:127\r\n#5  0x00007f794ff7a6ba in start_thread (arg=0x7f787c8c7700) at pthread_create.c:333\r\n#6  0x00007f794fcb041d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:109\r\n\r\nThread 11 (Thread 0x7f7877fff700 (LWP 12728)):\r\n#0  futex_wait (val=785864, addr=0x5563f8bf1be4) at /home/nwani/m3/conda-bld/compilers_linux-64_1560109574129/work/.build/x86_64-conda_cos6-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h:44\r\n#1  do_wait (addr=addr@entry=0x5563f8bf1be4, val=val@entry=785864) at /home/nwani/m3/conda-bld/compilers_linux-64_1560109574129/work/.build/x86_64-conda_cos6-linux-gnu/src/gcc/libgomp/config/linux/wait.h:67\r\n#2  0x00007f794dfb7623 in gomp_barrier_wait_end (bar=0x5563f8bf1be0, state=785864) at /home/nwani/m3/conda-bld/compilers_linux-64_1560109574129/work/.build/x86_64-conda_cos6-linux-gnu/src/gcc/libgomp/config/linux/bar.c:48\r\n#3  0x00007f794dfb56f7 in gomp_simple_barrier_wait (bar=0x5563f8bf1be0) at /home/nwani/m3/conda-bld/compilers_linux-64_1560109574129/work/.build/x86_64-conda_cos6-linux-gnu/src/gcc/libgomp/config/posix/simple-bar.h:60\r\n#4  gomp_thread_start (xdata=<optimized out>) at /home/nwani/m3/conda-bld/compilers_linux-64_1560109574129/work/.build/x86_64-conda_cos6-linux-gnu/src/gcc/libgomp/team.c:127\r\n#5  0x00007f794ff7a6ba in start_thread (arg=0x7f7877fff700) at pthread_create.c:333\r\n#6  0x00007f794fcb041d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:109\r\n\r\nThread 10 (Thread 0x7f78ca946700 (LWP 12715)):\r\n#0  futex_wait (val=785864, addr=0x5563f8bf1be4) at /home/nwani/m3/conda-bld/compilers_linux-64_1560109574129/work/.build/x86_64-conda_cos6-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h:44\r\n#1  do_wait (addr=addr@entry=0x5563f8bf1be4, val=val@entry=785864) at /home/nwani/m3/conda-bld/compilers_linux-64_1560109574129/work/.build/x86_64-conda_cos6-linux-gnu/src/gcc/libgomp/config/linux/wait.h:67\r\n#2  0x00007f794dfb7623 in gomp_barrier_wait_end (bar=0x5563f8bf1be0, state=785864) at /home/nwani/m3/conda-bld/compilers_linux-64_1560109574129/work/.build/x86_64-conda_cos6-linux-gnu/src/gcc/libgomp/config/linux/bar.c:48\r\n#3  0x00007f794dfb56f7 in gomp_simple_barrier_wait (bar=0x5563f8bf1be0) at /home/nwani/m3/conda-bld/compilers_linux-64_1560109574129/work/.build/x86_64-conda_cos6-linux-gnu/src/gcc/libgomp/config/posix/simple-bar.h:60\r\n#4  gomp_thread_start (xdata=<optimized out>) at /home/nwani/m3/conda-bld/compilers_linux-64_1560109574129/work/.build/x86_64-conda_cos6-linux-gnu/src/gcc/libgomp/team.c:127\r\n#5  0x00007f794ff7a6ba in start_thread (arg=0x7f78ca946700) at pthread_create.c:333\r\n#6  0x00007f794fcb041d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:109\r\n\r\nThread 9 (Thread 0x7f78cb147700 (LWP 12714)):\r\n#0  futex_wait (val=785864, addr=0x5563f8bf1be4) at /home/nwani/m3/conda-bld/compilers_linux-64_1560109574129/work/.build/x86_64-conda_cos6-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h:44\r\n#1  do_wait (addr=addr@entry=0x5563f8bf1be4, val=val@entry=785864) at /home/nwani/m3/conda-bld/compilers_linux-64_1560109574129/work/.build/x86_64-conda_cos6-linux-gnu/src/gcc/libgomp/config/linux/wait.h:67\r\n#2  0x00007f794dfb7623 in gomp_barrier_wait_end (bar=0x5563f8bf1be0, state=785864) at /home/nwani/m3/conda-bld/compilers_linux-64_1560109574129/work/.build/x86_64-conda_cos6-linux-gnu/src/gcc/libgomp/config/linux/bar.c:48\r\n#3  0x00007f794dfb56f7 in gomp_simple_barrier_wait (bar=0x5563f8bf1be0) at /home/nwani/m3/conda-bld/compilers_linux-64_1560109574129/work/.build/x86_64-conda_cos6-linux-gnu/src/gcc/libgomp/config/posix/simple-bar.h:60\r\n#4  gomp_thread_start (xdata=<optimized out>) at /home/nwani/m3/conda-bld/compilers_linux-64_1560109574129/work/.build/x86_64-conda_cos6-linux-gnu/src/gcc/libgomp/team.c:127\r\n#5  0x00007f794ff7a6ba in start_thread (arg=0x7f78cb147700) at pthread_create.c:333\r\n#6  0x00007f794fcb041d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:109\r\n\r\nThread 8 (Thread 0x7f78727f4700 (LWP 1969)):\r\n#0  pthread_cond_wait@@GLIBC_2.3.2 () at ../sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185\r\n#1  0x00007f794def14cb in __gthread_cond_wait (__mutex=<optimized out>, __cond=<optimized out>) at /home/nwani/m3/conda-bld/compilers_linux-64_1560109574129/work/.build/x86_64-conda_cos6-linux-gnu/build/build-cc-gcc-final/x86_64-conda_cos6-linux-gnu/libstdc++-v3/include/x86_64-conda_cos6-linux-gnu/bits/gthr-default.h:878\r\n#2  std::condition_variable::wait (this=<optimized out>, __lock=...) at /home/nwani/m3/conda-bld/compilers_linux-64_1560109574129/work/.build/x86_64-conda_cos6-linux-gnu/src/gcc/libstdc++-v3/src/c++11/condition_variable.cc:53\r\n#3  0x00007f7913cada93 in torch::autograd::ReadyQueue::pop() () from /opt/conda/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so\r\n#4  0x00007f7913cb3e43 in torch::autograd::Engine::thread_main(std::shared_ptr<torch::autograd::GraphTask> const&, bool) () from /opt/conda/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so\r\n#5  0x00007f7913ca9810 in torch::autograd::Engine::thread_init(int, std::shared_ptr<torch::autograd::ReadyQueue> const&) () from /opt/conda/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so\r\n#6  0x00007f79195c5f00 in torch::autograd::python::PythonEngine::thread_init(int, std::shared_ptr<torch::autograd::ReadyQueue> const&) () from /opt/conda/lib/python3.6/site-packages/torch/lib/libtorch_python.so\r\n#7  0x00007f794def519d in std::execute_native_thread_routine (__p=0x5564073e2740) at /home/nwani/m3/conda-bld/compilers_linux-64_1560109574129/work/.build/x86_64-conda_cos6-linux-gnu/src/gcc/libstdc++-v3/src/c++11/thread.cc:80\r\n#8  0x00007f794ff7a6ba in start_thread (arg=0x7f78727f4700) at pthread_create.c:333\r\n#9  0x00007f794fcb041d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:109\r\n\r\nThread 7 (Thread 0x7f7872ff5700 (LWP 1968)):\r\n#0  pthread_cond_wait@@GLIBC_2.3.2 () at ../sysdeps/unix/sysv/linux/x86_64/pthread_cond_wait.S:185\r\n#1  0x00007f794def14cb in __gthread_cond_wait (__mutex=<optimized out>, __cond=<optimized out>) at /home/nwani/m3/conda-bld/compilers_linux-64_1560109574129/work/.build/x86_64-conda_cos6-linux-gnu/build/build-cc-gcc-final/x86_64-conda_cos6-linux-gnu/libstdc++-v3/include/x86_64-conda_cos6-linux-gnu/bits/gthr-default.h:878\r\n#2  std::condition_variable::wait (this=<optimized out>, __lock=...) at /home/nwani/m3/conda-bld/compilers_linux-64_1560109574129/work/.build/x86_64-conda_cos6-linux-gnu/src/gcc/libstdc++-v3/src/c++11/condition_variable.cc:53\r\n#3  0x00007f7913cada93 in torch::autograd::ReadyQueue::pop() () from /opt/conda/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so\r\n#4  0x00007f7913cb3e43 in torch::autograd::Engine::thread_main(std::shared_ptr<torch::autograd::GraphTask> const&, bool) () from /opt/conda/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so\r\n#5  0x00007f7913ca9810 in torch::autograd::Engine::thread_init(int, std::shared_ptr<torch::autograd::ReadyQueue> const&) () from /opt/conda/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so\r\n#6  0x00007f79195c5f00 in torch::autograd::python::PythonEngine::thread_init(int, std::shared_ptr<torch::autograd::ReadyQueue> const&) () from /opt/conda/lib/python3.6/site-packages/torch/lib/libtorch_python.so\r\n#7  0x00007f794def519d in std::execute_native_thread_routine (__p=0x55640a7db640) at /home/nwani/m3/conda-bld/compilers_linux-64_1560109574129/work/.build/x86_64-conda_cos6-linux-gnu/src/gcc/libstdc++-v3/src/c++11/thread.cc:80\r\n#8  0x00007f794ff7a6ba in start_thread (arg=0x7f7872ff5700) at pthread_create.c:333\r\n#9  0x00007f794fcb041d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:109\r\n\r\nThread 6 (Thread 0x7f78737f6700 (LWP 1712)):\r\n#0  0x00007f794fcb18c8 in accept4 (fd=37, addr=..., addr_len=0x7f78737f4f34, flags=524288) at ../sysdeps/unix/sysv/linux/accept4.c:40\r\n#1  0x00007f78f5d19a5b in sock_accept_impl (data=<synthetic pointer>, s=<optimized out>) at /usr/local/src/conda/python-3.6.10/Modules/socketmodule.c:2388\r\n#2  sock_call_ex (timeout=-1000000000, err=0x0, connect=0, data=<synthetic pointer>, sock_func=<optimized out>, writing=0, s=0x7f78d2682048) at /usr/local/src/conda/python-3.6.10/Modules/socketmodule.c:900\r\n#3  sock_call () at /usr/local/src/conda/python-3.6.10/Modules/socketmodule.c:952\r\n#4  sock_accept (s=0x7f78d2682048) at /usr/local/src/conda/python-3.6.10/Modules/socketmodule.c:2430\r\n#5  0x00005563c042057a in _PyCFunction_FastCallDict (func_obj=0x7f78d2677cf0, args=0x7f78d2cff7c0, nargs=0, kwargs=0x0) at /tmp/build/80754af9/python_1585002248360/work/Objects/methodobject.c:192\r\n#6  0x00005563c04a7aac in call_function (pp_stack=0x7f78737f5178, oparg=<optimized out>, kwnames=0x0) at /tmp/build/80754af9/python_1585002248360/work/Python/ceval.c:4851\r\n#7  0x00005563c04ca19a in _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>) at /tmp/build/80754af9/python_1585002248360/work/Python/ceval.c:3335\r\n#8  0x00005563c04a1c6b in _PyFunction_FastCall (globals=<optimized out>, nargs=1, args=<optimized out>, co=<optimized out>) at /tmp/build/80754af9/python_1585002248360/work/Python/ceval.c:4933\r\n#9  fast_function (func=<optimized out>, stack=0x7f78d2683388, nargs=1, kwnames=<optimized out>) at /tmp/build/80754af9/python_1585002248360/work/Python/ceval.c:4968\r\n#10 0x00005563c04a7b85 in call_function (pp_stack=0x7f78737f5328, oparg=<optimized out>, kwnames=0x0) at /tmp/build/80754af9/python_1585002248360/work/Python/ceval.c:4872\r\n#11 0x00005563c04ca19a in _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>) at /tmp/build/80754af9/python_1585002248360/work/Python/ceval.c:3335\r\n#12 0x00005563c04a1c6b in _PyFunction_FastCall (globals=<optimized out>, nargs=1, args=<optimized out>, co=<optimized out>) at /tmp/build/80754af9/python_1585002248360/work/Python/ceval.c:4933\r\n#13 fast_function (func=<optimized out>, stack=0x7f78d20c68d0, nargs=1, kwnames=<optimized out>) at /tmp/build/80754af9/python_1585002248360/work/Python/ceval.c:4968\r\n#14 0x00005563c04a7b85 in call_function (pp_stack=0x7f78737f54d8, oparg=<optimized out>, kwnames=0x0) at /tmp/build/80754af9/python_1585002248360/work/Python/ceval.c:4872\r\n#15 0x00005563c04ca19a in _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>) at /tmp/build/80754af9/python_1585002248360/work/Python/ceval.c:3335\r\n#16 0x00005563c04a1c6b in _PyFunction_FastCall (globals=<optimized out>, nargs=1, args=<optimized out>, co=<optimized out>) at /tmp/build/80754af9/python_1585002248360/work/Python/ceval.c:4933\r\n#17 fast_function (func=<optimized out>, stack=0x7f783c001028, nargs=1, kwnames=<optimized out>) at /tmp/build/80754af9/python_1585002248360/work/Python/ceval.c:4968\r\n#18 0x00005563c04a7b85 in call_function (pp_stack=0x7f78737f5688, oparg=<optimized out>, kwnames=0x0) at /tmp/build/80754af9/python_1585002248360/work/Python/ceval.c:4872\r\n#19 0x00005563c04ca19a in _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>) at /tmp/build/80754af9/python_1585002248360/work/Python/ceval.c:3335\r\n#20 0x00005563c04a22db in _PyFunction_FastCall (globals=<optimized out>, nargs=1, args=<optimized out>, co=<optimized out>) at /tmp/build/80754af9/python_1585002248360/work/Python/ceval.c:4933\r\n#21 _PyFunction_FastCallDict (func=<optimized out>, args=0x7f78737f5810, nargs=1, kwargs=<optimized out>) at /tmp/build/80754af9/python_1585002248360/work/Python/ceval.c:5035\r\n#22 0x00005563c04208ff in _PyObject_FastCallDict (func=0x7f78f5d4a6a8, args=0x7f78737f5810, nargs=<optimized out>, kwargs=0x7f78d2687c60) at /tmp/build/80754af9/python_1585002248360/work/Objects/abstract.c:2310\r\n#23 0x00005563c0425363 in _PyObject_Call_Prepend (func=0x7f78f5d4a6a8, obj=<optimized out>, args=0x7f7950363048, kwargs=0x7f78d2687c60) at /tmp/build/80754af9/python_1585002248360/work/Objects/abstract.c:2373\r\n#24 0x00005563c042033e in PyObject_Call (func=0x7f78d233ac88, args=<optimized out>, kwargs=<optimized out>) at /tmp/build/80754af9/python_1585002248360/work/Objects/abstract.c:2261\r\n#25 0x00005563c04cb7fd in do_call_core (kwdict=0x7f78d2687c60, callargs=0x7f7950363048, func=0x7f78d233ac88) at /tmp/build/80754af9/python_1585002248360/work/Python/ceval.c:5120\r\n#26 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>) at /tmp/build/80754af9/python_1585002248360/work/Python/ceval.c:3404\r\n#27 0x00005563c04a1c6b in _PyFunction_FastCall (globals=<optimized out>, nargs=1, args=<optimized out>, co=<optimized out>) at /tmp/build/80754af9/python_1585002248360/work/Python/ceval.c:4933\r\n#28 fast_function (func=<optimized out>, stack=0x7f783c000a70, nargs=1, kwnames=<optimized out>) at /tmp/build/80754af9/python_1585002248360/work/Python/ceval.c:4968\r\n#29 0x00005563c04a7b85 in call_function (pp_stack=0x7f78737f5b08, oparg=<optimized out>, kwnames=0x0) at /tmp/build/80754af9/python_1585002248360/work/Python/ceval.c:4872\r\n#30 0x00005563c04ca19a in _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>) at /tmp/build/80754af9/python_1585002248360/work/Python/ceval.c:3335\r\n#31 0x00005563c04a1c6b in _PyFunction_FastCall (globals=<optimized out>, nargs=1, args=<optimized out>, co=<optimized out>) at /tmp/build/80754af9/python_1585002248360/work/Python/ceval.c:4933\r\n#32 fast_function (func=<optimized out>, stack=0x7f78d265b968, nargs=1, kwnames=<optimized out>) at /tmp/build/80754af9/python_1585002248360/work/Python/ceval.c:4968\r\n#33 0x00005563c04a7b85 in call_function (pp_stack=0x7f78737f5cb8, oparg=<optimized out>, kwnames=0x0) at /tmp/build/80754af9/python_1585002248360/work/Python/ceval.c:4872\r\n#34 0x00005563c04ca19a in _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>) at /tmp/build/80754af9/python_1585002248360/work/Python/ceval.c:3335\r\n#35 0x00005563c04a22db in _PyFunction_FastCall (globals=<optimized out>, nargs=1, args=<optimized out>, co=<optimized out>) at /tmp/build/80754af9/python_1585002248360/work/Python/ceval.c:4933\r\n#36 _PyFunction_FastCallDict (func=<optimized out>, args=0x7f78737f5e40, nargs=1, kwargs=<optimized out>) at /tmp/build/80754af9/python_1585002248360/work/Python/ceval.c:5035\r\n#37 0x00005563c04208ff in _PyObject_FastCallDict (func=0x7f794dd79ae8, args=0x7f78737f5e40, nargs=<optimized out>, kwargs=0x0) at /tmp/build/80754af9/python_1585002248360/work/Objects/abstract.c:2310\r\n#38 0x00005563c0425363 in _PyObject_Call_Prepend (func=0x7f794dd79ae8, obj=<optimized out>, args=0x7f7950363048, kwargs=0x0) at /tmp/build/80754af9/python_1585002248360/work/Objects/abstract.c:2373\r\n#39 0x00005563c042033e in PyObject_Call (func=0x7f78d233af48, args=<optimized out>, kwargs=<optimized out>) at /tmp/build/80754af9/python_1585002248360/work/Objects/abstract.c:2261\r\n#40 0x00005563c051d8f6 in t_bootstrap (boot_raw=boot_raw@entry=0x7f78d2d4daf8) at /tmp/build/80754af9/python_1585002248360/work/Modules/_threadmodule.c:1000\r\n#41 0x00005563c04d10c8 in pythread_wrapper (arg=<optimized out>) at /tmp/build/80754af9/python_1585002248360/work/Python/thread_pthread.h:205\r\n#42 0x00007f794ff7a6ba in start_thread (arg=0x7f78737f6700) at pthread_create.c:333\r\n#43 0x00007f794fcb041d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:109\r\n\r\nThread 5 (Thread 0x7f78c9fe3700 (LWP 1409)):\r\n#0  futex_wait (val=785864, addr=0x5563f8bf1be4) at /home/nwani/m3/conda-bld/compilers_linux-64_1560109574129/work/.build/x86_64-conda_cos6-linux-gnu/src/gcc/libgomp/config/linux/x86/futex.h:44\r\n#1  do_wait (addr=addr@entry=0x5563f8bf1be4, val=val@entry=785864) at /home/nwani/m3/conda-bld/compilers_linux-64_1560109574129/work/.build/x86_64-conda_cos6-linux-gnu/src/gcc/libgomp/config/linux/wait.h:67\r\n#2  0x00007f794dfb7623 in gomp_barrier_wait_end (bar=0x5563f8bf1be0, state=785864) at /home/nwani/m3/conda-bld/compilers_linux-64_1560109574129/work/.build/x86_64-conda_cos6-linux-gnu/src/gcc/libgomp/config/linux/bar.c:48\r\n#3  0x00007f794dfb56f7 in gomp_simple_barrier_wait (bar=0x5563f8bf1be0) at /home/nwani/m3/conda-bld/compilers_linux-64_1560109574129/work/.build/x86_64-conda_cos6-linux-gnu/src/gcc/libgomp/config/posix/simple-bar.h:60\r\n#4  gomp_thread_start (xdata=<optimized out>) at /home/nwani/m3/conda-bld/compilers_linux-64_1560109574129/work/.build/x86_64-conda_cos6-linux-gnu/src/gcc/libgomp/team.c:127\r\n#5  0x00007f794ff7a6ba in start_thread (arg=0x7f78c9fe3700) at pthread_create.c:333\r\n#6  0x00007f794fcb041d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:109\r\n\r\nThread 4 (Thread 0x7f78c97e2700 (LWP 1408)):\r\n#0  0x00007f794fca474d in poll () at ../sysdeps/unix/syscall-template.S:84\r\n#1  0x00007f78f42ff793 in ?? () from /usr/lib/x86_64-linux-gnu/libcuda.so.1\r\n#2  0x00007f78f43a19ca in ?? () from /usr/lib/x86_64-linux-gnu/libcuda.so.1\r\n#3  0x00007f78f4301e18 in ?? () from /usr/lib/x86_64-linux-gnu/libcuda.so.1\r\n#4  0x00007f794ff7a6ba in start_thread (arg=0x7f78c97e2700) at pthread_create.c:333\r\n#5  0x00007f794fcb041d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:109\r\n\r\nThread 3 (Thread 0x7f78c8fe1700 (LWP 1407)):\r\n#0  0x00007f794fca474d in poll () at ../sysdeps/unix/syscall-template.S:84\r\n#1  0x00007f78f42ff793 in ?? () from /usr/lib/x86_64-linux-gnu/libcuda.so.1\r\n#2  0x00007f78f43a19ca in ?? () from /usr/lib/x86_64-linux-gnu/libcuda.so.1\r\n#3  0x00007f78f4301e18 in ?? () from /usr/lib/x86_64-linux-gnu/libcuda.so.1\r\n#4  0x00007f794ff7a6ba in start_thread (arg=0x7f78c8fe1700) at pthread_create.c:333\r\n#5  0x00007f794fcb041d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:109\r\n\r\nThread 2 (Thread 0x7f78f40d5700 (LWP 1373)):\r\n#0  0x00007f794fcb18c8 in accept4 (fd=12, addr=..., addr_len=0x7f78f40d4e58, flags=524288) at ../sysdeps/unix/sysv/linux/accept4.c:40\r\n#1  0x00007f78f430075a in ?? () from /usr/lib/x86_64-linux-gnu/libcuda.so.1\r\n#2  0x00007f78f42f22bd in ?? () from /usr/lib/x86_64-linux-gnu/libcuda.so.1\r\n#3  0x00007f78f4301e18 in ?? () from /usr/lib/x86_64-linux-gnu/libcuda.so.1\r\n#4  0x00007f794ff7a6ba in start_thread (arg=0x7f78f40d5700) at pthread_create.c:333\r\n#5  0x00007f794fcb041d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:109\r\n\r\nThread 1 (Thread 0x7f79503a4700 (LWP 1369)):\r\n#0  __GI___libc_free (mem=0x5564600851d0) at malloc.c:2934\r\n#1  0x00007f7913e3d920 in torch::jit::LivenessAnalyzer::processBlock(torch::jit::Block*, c10::SparseBitVector<256u>) () from /opt/conda/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so\r\n#2  0x00007f7913e3e574 in torch::jit::LivenessAnalyzer::processBlock(torch::jit::Block*, c10::SparseBitVector<256u>) () from /opt/conda/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so\r\n#3  0x00007f7913e3e574 in torch::jit::LivenessAnalyzer::processBlock(torch::jit::Block*, c10::SparseBitVector<256u>) () from /opt/conda/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so\r\n#4  0x00007f7913e3c851 in torch::jit::BuildLivenessSets(std::shared_ptr<torch::jit::Graph>) () from /opt/conda/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so\r\n#5  0x00007f7913dc1108 in torch::jit::InsertBailOuts(std::shared_ptr<torch::jit::Graph>) () from /opt/conda/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so\r\n#6  0x00007f7913da7dff in torch::jit::ProfilingGraphExecutorImpl::runProfilingOptimizations(std::shared_ptr<torch::jit::Graph>&) () from /opt/conda/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so\r\n#7  0x00007f7913da8cbf in torch::jit::ProfilingGraphExecutorImpl::getPlanFor(std::vector<c10::IValue, std::allocator<c10::IValue> >&, unsigned long) () from /opt/conda/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so\r\n#8  0x00007f7913d1db65 in torch::jit::GraphExecutorImplBase::run(std::vector<c10::IValue, std::allocator<c10::IValue> >&) () from /opt/conda/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so\r\n#9  0x00007f791968279c in torch::jit::runAndInsertCall(torch::jit::Function&, torch::jit::tuple_slice, pybind11::kwargs, c10::optional<c10::IValue>, std::function<torch::jit::Value* (torch::jit::Graph&, torch::jit::MatchedSchema const&)>) () from /opt/conda/lib/python3.6/site-packages/torch/lib/libtorch_python.so\r\n#10 0x00007f79197331bc in torch::jit::invokeScriptFunctionFromPython(torch::jit::Function&, torch::jit::tuple_slice, pybind11::kwargs) () from /opt/conda/lib/python3.6/site-packages/torch/lib/libtorch_python.so\r\n#11 0x00007f79196fa848 in torch::jit::initJitScriptBindings(_object*)::{lambda(pybind11::args, pybind11::kwargs)#23}::operator()(pybind11::args, pybind11::kwargs) const [clone .isra.3432] () from /opt/conda/lib/python3.6/site-packages/torch/lib/libtorch_python.so\r\n#12 0x00007f79196fb025 in pybind11::cpp_function::initialize<torch::jit::initJitScriptBindings(_object*)::{lambda(pybind11::args, pybind11::kwargs)#23}, pybind11::object, pybind11::args, pybind11::kwargs, pybind11::name, pybind11::is_method, pybind11::sibling>(torch::jit::initJitScriptBindings(_object*)::{lambda(pybind11::args, pybind11::kwargs)#23}&&, pybind11::object (*)(pybind11::args, pybind11::kwargs), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&)::{lambda(pybind11::detail::function_call&)#3}::_FUN(pybind11::detail::function_call) () from /opt/conda/lib/python3.6/site-packages/torch/lib/libtorch_python.so\r\n#13 0x00007f79192ebde8 in pybind11::cpp_function::dispatcher(_object*, _object*, _object*) () from /opt/conda/lib/python3.6/site-packages/torch/lib/libtorch_python.so\r\n#14 0x00005563c0423476 in PyCFunction_Call (func=0x7f794d2fe438, args=<optimized out>, kwds=<optimized out>) at /tmp/build/80754af9/python_1585002248360/work/Objects/methodobject.c:98\r\n#15 0x00005563c042033e in PyObject_Call (func=0x7f794d2fe438, args=<optimized out>, kwargs=<optimized out>) at /tmp/build/80754af9/python_1585002248360/work/Objects/abstract.c:2261\r\n#16 0x00005563c042033e in PyObject_Call (func=0x7f794d2fceb8, args=<optimized out>, kwargs=<optimized out>) at /tmp/build/80754af9/python_1585002248360/work/Objects/abstract.c:2261\r\n#17 0x00005563c04cb7fd in do_call_core (kwdict=0x7f78d23db3f0, callargs=0x7f78d2d108c8, func=0x7f794d2fceb8) at /tmp/build/80754af9/python_1585002248360/work/Python/ceval.c:5120\r\n#18 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>) at /tmp/build/80754af9/python_1585002248360/work/Python/ceval.c:3404\r\n#19 0x00005563c04a29b9 in _PyEval_EvalCodeWithName (qualname=0x0, name=<optimized out>, closure=0x0, kwdefs=0x0, defcount=0, defs=0x0, kwstep=2, kwcount=<optimized out>, kwargs=0x7f78d23ed428, kwnames=0x7f78d23ed420, argcount=<optimized out>, args=<optimized out>, locals=<optimized out>, globals=<optimized out>, _co=0x7f78f57cb390) at /tmp/build/80754af9/python_1585002248360/work/Python/ceval.c:4166\r\n#20 PyEval_EvalCodeEx (_co=0x7f78f57cb390, globals=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kws=0x7f78d23ed420, kwcount=1, defs=0x0, defcount=0, kwdefs=0x0, closure=0x0) at /tmp/build/80754af9/python_1585002248360/work/Python/ceval.c:4187\r\n#21 0x00005563c04a38d6 in function_call (func=func@entry=0x7f78f5773950, arg=0x7f78d23f3fc0, kw=0x7f78d23db558) at /tmp/build/80754af9/python_1585002248360/work/Objects/funcobject.c:604\r\n#22 0x00005563c042033e in PyObject_Call (func=0x7f78f5773950, args=<optimized out>, kwargs=<optimized out>) at /tmp/build/80754af9/python_1585002248360/work/Objects/abstract.c:2261\r\n#23 0x00005563c04cb7fd in do_call_core (kwdict=0x7f78d23db558, callargs=0x7f78d23f3fc0, func=0x7f78f5773950) at /tmp/build/80754af9/python_1585002248360/work/Python/ceval.c:5120\r\n#24 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>) at /tmp/build/80754af9/python_1585002248360/work/Python/ceval.c:3404\r\n#25 0x00005563c04a0ff4 in _PyEval_EvalCodeWithName (_co=0x7f78f57cb420, globals=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=0x7f78d2d10a20, kwargs=0x7f78d2d10a28, kwcount=<optimized out>, kwstep=2, defs=0x0, defcount=0, kwdefs=0x0, closure=0x0, name=<optimized out>, qualname=0x7f78f57ca570) at /tmp/build/80754af9/python_1585002248360/work/Python/ceval.c:4166\r\n#26 0x00005563c04a259a in _PyFunction_FastCallDict (func=<optimized out>, args=0x7ffc3abb5c10, nargs=2, kwargs=<optimized out>) at /tmp/build/80754af9/python_1585002248360/work/Python/ceval.c:5084\r\n#27 0x00005563c04208ff in _PyObject_FastCallDict (func=0x7f78f57739d8, args=0x7ffc3abb5c10, nargs=<optimized out>, kwargs=0x7f78d23db990) at /tmp/build/80754af9/python_1585002248360/work/Objects/abstract.c:2310\r\n#28 0x00005563c0425363 in _PyObject_Call_Prepend (func=0x7f78f57739d8, obj=<optimized out>, args=0x7f78d2438cf8, kwargs=0x7f78d23db990) at /tmp/build/80754af9/python_1585002248360/work/Objects/abstract.c:2373\r\n#29 0x00005563c042033e in PyObject_Call (func=0x7f78d24524c8, args=<optimized out>, kwargs=<optimized out>) at /tmp/build/80754af9/python_1585002248360/work/Objects/abstract.c:2261\r\n#30 0x00005563c0479121 in slot_tp_call (self=self@entry=0x7f78d26a5518, args=0x7f78d2438cf8, kwds=0x7f78d23db990) at /tmp/build/80754af9/python_1585002248360/work/Objects/typeobject.c:6207\r\n#31 0x00005563c042033e in PyObject_Call (func=0x7f78d26a5518, args=<optimized out>, kwargs=<optimized out>) at /tmp/build/80754af9/python_1585002248360/work/Objects/abstract.c:2261\r\n#32 0x00005563c04cb7fd in do_call_core (kwdict=0x7f78d23db990, callargs=0x7f78d2438cf8, func=0x7f78d26a5518) at /tmp/build/80754af9/python_1585002248360/work/Python/ceval.c:5120\r\n#33 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>) at /tmp/build/80754af9/python_1585002248360/work/Python/ceval.c:3404\r\n#34 0x00005563c04a1333 in _PyEval_EvalCodeWithName (_co=0x7f794f1c7300, globals=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=0x0, kwargs=0x55640c5163f0, kwcount=<optimized out>, kwstep=1, defs=0x0, defcount=0, kwdefs=0x0, closure=0x7f78d25b5828, name=<optimized out>, qualname=0x7f794f1c0ab0) at /tmp/build/80754af9/python_1585002248360/work/Python/ceval.c:4166\r\n#35 0x00005563c04a1ea1 in fast_function (func=<optimized out>, stack=0x55640c5163c8, nargs=5, kwnames=<optimized out>) at /tmp/build/80754af9/python_1585002248360/work/Python/ceval.c:4992\r\n#36 0x00005563c04a7b85 in call_function (pp_stack=0x7ffc3abb6088, oparg=<optimized out>, kwnames=0x0) at /tmp/build/80754af9/python_1585002248360/work/Python/ceval.c:4872\r\n#37 0x00005563c04ca19a in _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>) at /tmp/build/80754af9/python_1585002248360/work/Python/ceval.c:3335\r\n#38 0x00005563c04a2ff6 in _PyEval_EvalCodeWithName (qualname=0x0, name=<optimized out>, closure=0x0, kwdefs=0x0, defcount=0, defs=0x0, kwstep=2, kwcount=<optimized out>, kwargs=0x7f7950363068, kwnames=0x7f7950363060, argcount=<optimized out>, args=<optimized out>, locals=<optimized out>, globals=<optimized out>, _co=0x7f794f1c7390) at /tmp/build/80754af9/python_1585002248360/work/Python/ceval.c:4166\r\n#39 PyEval_EvalCodeEx (_co=0x7f794f1c7390, globals=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kws=0x7f7950363060, kwcount=0, defs=0x0, defcount=0, kwdefs=0x0, closure=0x0) at /tmp/build/80754af9/python_1585002248360/work/Python/ceval.c:4187\r\n#40 0x00005563c04a38d6 in function_call (func=func@entry=0x7f78d542a378, arg=0x7f78d23f6108, kw=0x7f78d23db678) at /tmp/build/80754af9/python_1585002248360/work/Objects/funcobject.c:604\r\n#41 0x00005563c042033e in PyObject_Call (func=0x7f78d542a378, args=<optimized out>, kwargs=<optimized out>) at /tmp/build/80754af9/python_1585002248360/work/Objects/abstract.c:2261\r\n#42 0x00005563c04cb7fd in do_call_core (kwdict=0x7f78d23db678, callargs=0x7f78d23f6108, func=0x7f78d542a378) at /tmp/build/80754af9/python_1585002248360/work/Python/ceval.c:5120\r\n#43 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>) at /tmp/build/80754af9/python_1585002248360/work/Python/ceval.c:3404\r\n#44 0x00005563c04a2ff6 in _PyEval_EvalCodeWithName (qualname=0x0, name=<optimized out>, closure=0x7f78d5409d48, kwdefs=0x0, defcount=0, defs=0x0, kwstep=2, kwcount=<optimized out>, kwargs=0x7f7950363068, kwnames=0x7f7950363060, argcount=<optimized out>, args=<optimized out>, locals=<optimized out>, globals=<optimized out>, _co=0x7f78f57c0780) at /tmp/build/80754af9/python_1585002248360/work/Python/ceval.c:4166\r\n#45 PyEval_EvalCodeEx (_co=0x7f78f57c0780, globals=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kws=0x7f7950363060, kwcount=0, defs=0x0, defcount=0, kwdefs=0x0, closure=0x7f78d5409d48) at /tmp/build/80754af9/python_1585002248360/work/Python/ceval.c:4187\r\n#46 0x00005563c04a38d6 in function_call (func=func@entry=0x7f78d542a400, arg=0x7f78d23f6908, kw=0x7f78d23dbf30) at /tmp/build/80754af9/python_1585002248360/work/Objects/funcobject.c:604\r\n#47 0x00005563c042033e in PyObject_Call (func=0x7f78d542a400, args=<optimized out>, kwargs=<optimized out>) at /tmp/build/80754af9/python_1585002248360/work/Objects/abstract.c:2261\r\n#48 0x00005563c04cb7fd in do_call_core (kwdict=0x7f78d23dbf30, callargs=0x7f78d23f6908, func=0x7f78d542a400) at /tmp/build/80754af9/python_1585002248360/work/Python/ceval.c:5120\r\n#49 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>) at /tmp/build/80754af9/python_1585002248360/work/Python/ceval.c:3404\r\n#50 0x00005563c04a1333 in _PyEval_EvalCodeWithName (_co=0x7f78f57c0780, globals=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=0x0, kwargs=0x7f78d23535c8, kwcount=<optimized out>, kwstep=1, defs=0x0, defcount=0, kwdefs=0x0, closure=0x7f78d5409d88, name=<optimized out>, qualname=0x7f794f1bd8c8) at /tmp/build/80754af9/python_1585002248360/work/Python/ceval.c:4166\r\n#51 0x00005563c04a1ea1 in fast_function (func=<optimized out>, stack=0x7f78d23535b8, nargs=2, kwnames=<optimized out>) at /tmp/build/80754af9/python_1585002248360/work/Python/ceval.c:4992\r\n#52 0x00005563c04a7b85 in call_function (pp_stack=0x7ffc3abb68c8, oparg=<optimized out>, kwnames=0x0) at /tmp/build/80754af9/python_1585002248360/work/Python/ceval.c:4872\r\n#53 0x00005563c04ca19a in _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>) at /tmp/build/80754af9/python_1585002248360/work/Python/ceval.c:3335\r\n#54 0x00005563c04a1196 in _PyEval_EvalCodeWithName (_co=0x7f78f57aeed0, globals=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=0x7f7950363060, kwargs=0x7f7950363068, kwcount=<optimized out>, kwstep=2, defs=0x7f78d5218450, defcount=1, kwdefs=0x0, closure=0x7f78d52184e0, name=<optimized out>, qualname=0x7f794f1bd8c8) at /tmp/build/80754af9/python_1585002248360/work/Python/ceval.c:4166\r\n#55 0x00005563c04a259a in _PyFunction_FastCallDict (func=<optimized out>, args=0x7ffc3abb6b80, nargs=1, kwargs=<optimized out>) at /tmp/build/80754af9/python_1585002248360/work/Python/ceval.c:5084\r\n#56 0x00005563c04208ff in _PyObject_FastCallDict (func=0x7f78d5216d90, args=0x7ffc3abb6b80, nargs=<optimized out>, kwargs=0x7f78d23dbab0) at /tmp/build/80754af9/python_1585002248360/work/Objects/abstract.c:2310\r\n#57 0x00005563c0425363 in _PyObject_Call_Prepend (func=0x7f78d5216d90, obj=<optimized out>, args=0x7f7950363048, kwargs=0x7f78d23dbab0) at /tmp/build/80754af9/python_1585002248360/work/Objects/abstract.c:2373\r\n#58 0x00005563c042033e in PyObject_Call (func=0x7f78d23fa848, args=<optimized out>, kwargs=<optimized out>) at /tmp/build/80754af9/python_1585002248360/work/Objects/abstract.c:2261\r\n#59 0x00005563c04cb7fd in do_call_core (kwdict=0x7f78d23dbab0, callargs=0x7f7950363048, func=0x7f78d23fa848) at /tmp/build/80754af9/python_1585002248360/work/Python/ceval.c:5120\r\n#60 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>) at /tmp/build/80754af9/python_1585002248360/work/Python/ceval.c:3404\r\n#61 0x00005563c04a1333 in _PyEval_EvalCodeWithName (_co=0x7f78f57d34b0, globals=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=0x0, kwargs=0x5563ecba2528, kwcount=<optimized out>, kwstep=1, defs=0x0, defcount=0, kwdefs=0x0, closure=0x7f78d23fa7c8, name=<optimized out>, qualname=0x7f794f1bd8c8) at /tmp/build/80754af9/python_1585002248360/work/Python/ceval.c:4166\r\n#62 0x00005563c04a1ea1 in fast_function (func=<optimized out>, stack=0x5563ecba2520, nargs=1, kwnames=<optimized out>) at /tmp/build/80754af9/python_1585002248360/work/Python/ceval.c:4992\r\n#63 0x00005563c04a7b85 in call_function (pp_stack=0x7ffc3abb6fa8, oparg=<optimized out>, kwnames=0x0) at /tmp/build/80754af9/python_1585002248360/work/Python/ceval.c:4872\r\n#64 0x00005563c04ca19a in _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>) at /tmp/build/80754af9/python_1585002248360/work/Python/ceval.c:3335\r\n#65 0x00005563c04a0ff4 in _PyEval_EvalCodeWithName (_co=0x7f78fa187c90, globals=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=0x7f7950363060, kwargs=0x7f7950363068, kwcount=<optimized out>, kwstep=2, defs=0x7f78fa191760, defcount=1, kwdefs=0x0, closure=0x0, name=<optimized out>, qualname=0x7f78fa1848f0) at /tmp/build/80754af9/python_1585002248360/work/Python/ceval.c:4166\r\n#66 0x00005563c04a259a in _PyFunction_FastCallDict (func=<optimized out>, args=0x7ffc3abb7260, nargs=2, kwargs=<optimized out>) at /tmp/build/80754af9/python_1585002248360/work/Python/ceval.c:5084\r\n#67 0x00005563c04208ff in _PyObject_FastCallDict (func=0x7f78fa16a1e0, args=0x7ffc3abb7260, nargs=<optimized out>, kwargs=0x7f78d25c4678) at /tmp/build/80754af9/python_1585002248360/work/Objects/abstract.c:2310\r\n#68 0x00005563c0425363 in _PyObject_Call_Prepend (func=0x7f78fa16a1e0, obj=<optimized out>, args=0x7f78d2cf5080, kwargs=0x7f78d25c4678) at /tmp/build/80754af9/python_1585002248360/work/Objects/abstract.c:2373\r\n#69 0x00005563c042033e in PyObject_Call (func=0x7f78d2329e88, args=<optimized out>, kwargs=<optimized out>) at /tmp/build/80754af9/python_1585002248360/work/Objects/abstract.c:2261\r\n#70 0x00005563c04cb7fd in do_call_core (kwdict=0x7f78d25c4678, callargs=0x7f78d2cf5080, func=0x7f78d2329e88) at /tmp/build/80754af9/python_1585002248360/work/Python/ceval.c:5120\r\n#71 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>) at /tmp/build/80754af9/python_1585002248360/work/Python/ceval.c:3404\r\n#72 0x00005563c04a0ff4 in _PyEval_EvalCodeWithName (_co=0x7f78fa187db0, globals=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=0x0, kwargs=0x0, kwcount=<optimized out>, kwstep=2, defs=0x0, defcount=0, kwdefs=0x0, closure=0x0, name=<optimized out>, qualname=0x7f78fa186978) at /tmp/build/80754af9/python_1585002248360/work/Python/ceval.c:4166\r\n#73 0x00005563c04a237c in _PyFunction_FastCallDict (func=<optimized out>, args=0x7ffc3abb7660, nargs=2, kwargs=<optimized out>) at /tmp/build/80754af9/python_1585002248360/work/Python/ceval.c:5084\r\n#74 0x00005563c04208ff in _PyObject_FastCallDict (func=0x7f78fa16a2f0, args=0x7ffc3abb7660, nargs=<optimized out>, kwargs=0x0) at /tmp/build/80754af9/python_1585002248360/work/Objects/abstract.c:2310\r\n#75 0x00005563c0425363 in _PyObject_Call_Prepend (func=0x7f78fa16a2f0, obj=<optimized out>, args=0x7f78d2f79320, kwargs=0x0) at /tmp/build/80754af9/python_1585002248360/work/Objects/abstract.c:2373\r\n#76 0x00005563c042033e in PyObject_Call (func=0x7f7950355ac8, args=<optimized out>, kwargs=<optimized out>) at /tmp/build/80754af9/python_1585002248360/work/Objects/abstract.c:2261\r\n#77 0x00005563c0479121 in slot_tp_call (self=self@entry=0x7f78d23e1b70, args=args@entry=0x7f78d2f79320, kwds=kwds@entry=0x0) at /tmp/build/80754af9/python_1585002248360/work/Objects/typeobject.c:6207\r\n#78 0x00005563c042071b in _PyObject_FastCallDict (func=0x7f78d23e1b70, args=0x7f78d2dfada0, nargs=<optimized out>, kwargs=0x0) at /tmp/build/80754af9/python_1585002248360/work/Objects/abstract.c:2331\r\n#79 0x00005563c04a7bfe in call_function (pp_stack=0x7ffc3abb7868, oparg=<optimized out>, kwnames=0x0) at /tmp/build/80754af9/python_1585002248360/work/Python/ceval.c:4875\r\n#80 0x00005563c04ca19a in _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>) at /tmp/build/80754af9/python_1585002248360/work/Python/ceval.c:3335\r\n#81 0x00005563c04a0ff4 in _PyEval_EvalCodeWithName (_co=0x7f78fa19c4b0, globals=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=0x7f7950363060, kwargs=0x7f7950363068, kwcount=<optimized out>, kwstep=2, defs=0x7f78fa169680, defcount=1, kwdefs=0x0, closure=0x0, name=<optimized out>, qualname=0x7f78fa165930) at /tmp/build/80754af9/python_1585002248360/work/Python/ceval.c:4166\r\n#82 0x00005563c04a259a in _PyFunction_FastCallDict (func=<optimized out>, args=0x7ffc3abb7b20, nargs=2, kwargs=<optimized out>) at /tmp/build/80754af9/python_1585002248360/work/Python/ceval.c:5084\r\n#83 0x00005563c04208ff in _PyObject_FastCallDict (func=0x7f78fa16cea0, args=0x7ffc3abb7b20, nargs=<optimized out>, kwargs=0x7f78d2f8f480) at /tmp/build/80754af9/python_1585002248360/work/Objects/abstract.c:2310\r\n#84 0x00005563c0425363 in _PyObject_Call_Prepend (func=0x7f78fa16cea0, obj=<optimized out>, args=0x7f78d2f79390, kwargs=0x7f78d2f8f480) at /tmp/build/80754af9/python_1585002248360/work/Objects/abstract.c:2373\r\n#85 0x00005563c042033e in PyObject_Call (func=0x7f794d234148, args=<optimized out>, kwargs=<optimized out>) at /tmp/build/80754af9/python_1585002248360/work/Objects/abstract.c:2261\r\n#86 0x00005563c04cb7fd in do_call_core (kwdict=0x7f78d2f8f480, callargs=0x7f78d2f79390, func=0x7f794d234148) at /tmp/build/80754af9/python_1585002248360/work/Python/ceval.c:5120\r\n#87 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>) at /tmp/build/80754af9/python_1585002248360/work/Python/ceval.c:3404\r\n#88 0x00005563c04a0ff4 in _PyEval_EvalCodeWithName (_co=0x7f78fa1949c0, globals=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=0x0, kwargs=0x0, kwcount=<optimized out>, kwstep=2, defs=0x0, defcount=0, kwdefs=0x0, closure=0x0, name=<optimized out>, qualname=0x7f78fa178db0) at /tmp/build/80754af9/python_1585002248360/work/Python/ceval.c:4166\r\n#89 0x00005563c04a237c in _PyFunction_FastCallDict (func=<optimized out>, args=0x7ffc3abb7f20, nargs=2, kwargs=<optimized out>) at /tmp/build/80754af9/python_1585002248360/work/Python/ceval.c:5084\r\n#90 0x00005563c04208ff in _PyObject_FastCallDict (func=0x7f78fa16cd90, args=0x7ffc3abb7f20, nargs=<optimized out>, kwargs=0x0) at /tmp/build/80754af9/python_1585002248360/work/Objects/abstract.c:2310\r\n#91 0x00005563c0425363 in _PyObject_Call_Prepend (func=0x7f78fa16cd90, obj=<optimized out>, args=0x7f78d2f792e8, kwargs=0x0) at /tmp/build/80754af9/python_1585002248360/work/Objects/abstract.c:2373\r\n#92 0x00005563c042033e in PyObject_Call (func=0x7f78f5d5bf48, args=<optimized out>, kwargs=<optimized out>) at /tmp/build/80754af9/python_1585002248360/work/Objects/abstract.c:2261\r\n#93 0x00005563c0479121 in slot_tp_call (self=self@entry=0x7f78d2f79b00, args=args@entry=0x7f78d2f792e8, kwds=kwds@entry=0x0) at /tmp/build/80754af9/python_1585002248360/work/Objects/typeobject.c:6207\r\n#94 0x00005563c042071b in _PyObject_FastCallDict (func=0x7f78d2f79b00, args=0x5563c584c560, nargs=<optimized out>, kwargs=0x0) at /tmp/build/80754af9/python_1585002248360/work/Objects/abstract.c:2331\r\n#95 0x00005563c04a7bfe in call_function (pp_stack=0x7ffc3abb8128, oparg=<optimized out>, kwnames=0x0) at /tmp/build/80754af9/python_1585002248360/work/Python/ceval.c:4875\r\n#96 0x00005563c04ca19a in _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>) at /tmp/build/80754af9/python_1585002248360/work/Python/ceval.c:3335\r\n#97 0x00005563c04a1c6b in _PyFunction_FastCall (globals=<optimized out>, nargs=2, args=<optimized out>, co=<optimized out>) at /tmp/build/80754af9/python_1585002248360/work/Python/ceval.c:4933\r\n#98 fast_function (func=<optimized out>, stack=0x5563ecb6d5d0, nargs=2, kwnames=<optimized out>) at /tmp/build/80754af9/python_1585002248360/work/Python/ceval.c:4968\r\n#99 0x00005563c04a7b85 in call_function (pp_stack=0x7ffc3abb82d8, oparg=<optimized out>, kwnames=0x0) at /tmp/build/80754af9/python_1585002248360/work/Python/ceval.c:4872\r\n#100 0x00005563c04ca19a in _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>) at /tmp/build/80754af9/python_1585002248360/work/Python/ceval.c:3335\r\n#101 0x00005563c04a1c6b in _PyFunction_FastCall (globals=<optimized out>, nargs=1, args=<optimized out>, co=<optimized out>) at /tmp/build/80754af9/python_1585002248360/work/Python/ceval.c:4933\r\n#102 fast_function (func=<optimized out>, stack=0x5563c53f5c60, nargs=1, kwnames=<optimized out>) at /tmp/build/80754af9/python_1585002248360/work/Python/ceval.c:4968\r\n#103 0x00005563c04a7b85 in call_function (pp_stack=0x7ffc3abb8488, oparg=<optimized out>, kwnames=0x0) at /tmp/build/80754af9/python_1585002248360/work/Python/ceval.c:4872\r\n#104 0x00005563c04ca19a in _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>) at /tmp/build/80754af9/python_1585002248360/work/Python/ceval.c:3335\r\n#105 0x00005563c04a147b in _PyEval_EvalCodeWithName (_co=0x7f78fa0fd150, globals=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=0x7f78d53861a0, kwargs=0x7f78d53861a8, kwcount=<optimized out>, kwstep=2, defs=0x7f78fa0dc390, defcount=11, kwdefs=0x7f78fa17ca68, closure=0x0, name=<optimized out>, qualname=0x7f78fa17c4f8) at /tmp/build/80754af9/python_1585002248360/work/Python/ceval.c:4166\r\n#106 0x00005563c04a259a in _PyFunction_FastCallDict (func=<optimized out>, args=0x7ffc3abb8740, nargs=1, kwargs=<optimized out>) at /tmp/build/80754af9/python_1585002248360/work/Python/ceval.c:5084\r\n#107 0x00005563c04208ff in _PyObject_FastCallDict (func=0x7f78fa0dc400, args=0x7ffc3abb8740, nargs=<optimized out>, kwargs=0x7f78d52c96c0) at /tmp/build/80754af9/python_1585002248360/work/Objects/abstract.c:2310\r\n#108 0x00005563c0425363 in _PyObject_Call_Prepend (func=0x7f78fa0dc400, obj=<optimized out>, args=0x7f7950363048, kwargs=0x7f78d52c96c0) at /tmp/build/80754af9/python_1585002248360/work/Objects/abstract.c:2373\r\n#109 0x00005563c042033e in PyObject_Call (func=0x7f794c56a348, args=<optimized out>, kwargs=<optimized out>) at /tmp/build/80754af9/python_1585002248360/work/Objects/abstract.c:2261\r\n#110 0x00005563c047879b in slot_tp_init (self=self@entry=0x7f78d2f793c8, args=args@entry=0x7f7950363048, kwds=kwds@entry=0x7f78d52c96c0) at /tmp/build/80754af9/python_1585002248360/work/Objects/typeobject.c:6420\r\n#111 0x00005563c04a7de7 in type_call (type=<optimized out>, type@entry=0x5563c43fcd58, args=args@entry=0x7f7950363048, kwds=kwds@entry=0x7f78d52c96c0) at /tmp/build/80754af9/python_1585002248360/work/Objects/typeobject.c:915\r\n#112 0x00005563c042071b in _PyObject_FastCallDict (func=0x5563c43fcd58, args=0x5563c57eb428, nargs=<optimized out>, kwargs=0x7f78d52c96c0) at /tmp/build/80754af9/python_1585002248360/work/Objects/abstract.c:2331\r\n#113 0x00005563c04a218a in _PyObject_FastCallKeywords (func=0x5563c43fcd58, stack=0x5563c57eb428, nargs=0, kwnames=<optimized out>) at /tmp/build/80754af9/python_1585002248360/work/Objects/abstract.c:2496\r\n#114 0x00005563c04a7bfe in call_function (pp_stack=0x7ffc3abb89c0, oparg=<optimized out>, kwnames=0x7f78f57cac48) at /tmp/build/80754af9/python_1585002248360/work/Python/ceval.c:4875\r\n#115 0x00005563c04caf5a in _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>) at /tmp/build/80754af9/python_1585002248360/work/Python/ceval.c:3351\r\n#116 0x00005563c04a1333 in _PyEval_EvalCodeWithName (_co=0x7f78f57cb810, globals=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=0x0, kwargs=0x5563c25830f8, kwcount=<optimized out>, kwstep=1, defs=0x7f78f5775b88, defcount=1, kwdefs=0x0, closure=0x0, name=<optimized out>, qualname=0x7f794dd766f0) at /tmp/build/80754af9/python_1585002248360/work/Python/ceval.c:4166\r\n#117 0x00005563c04a1ea1 in fast_function (func=<optimized out>, stack=0x5563c25830f8, nargs=0, kwnames=<optimized out>) at /tmp/build/80754af9/python_1585002248360/work/Python/ceval.c:4992\r\n#118 0x00005563c04a7b85 in call_function (pp_stack=0x7ffc3abb8c98, oparg=<optimized out>, kwnames=0x0) at /tmp/build/80754af9/python_1585002248360/work/Python/ceval.c:4872\r\n#119 0x00005563c04ca19a in _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>) at /tmp/build/80754af9/python_1585002248360/work/Python/ceval.c:3335\r\n#120 0x00005563c04a29b9 in _PyEval_EvalCodeWithName (qualname=0x0, name=<optimized out>, closure=0x0, kwdefs=0x0, defcount=0, defs=0x0, kwstep=2, kwcount=<optimized out>, kwargs=0x0, kwnames=0x0, argcount=<optimized out>, args=<optimized out>, locals=<optimized out>, globals=<optimized out>, _co=0x7f794f0f28a0) at /tmp/build/80754af9/python_1585002248360/work/Python/ceval.c:4166\r\n#121 PyEval_EvalCodeEx (_co=0x7f794f0f28a0, globals=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kws=0x0, kwcount=0, defs=0x0, defcount=0, kwdefs=0x0, closure=0x0) at /tmp/build/80754af9/python_1585002248360/work/Python/ceval.c:4187\r\n#122 0x00005563c04a374c in PyEval_EvalCode (co=co@entry=0x7f794f0f28a0, globals=globals@entry=0x7f795031a168, locals=locals@entry=0x7f795031a168) at /tmp/build/80754af9/python_1585002248360/work/Python/ceval.c:731\r\n#123 0x00005563c0523634 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7f795031a168, locals=0x7f795031a168, flags=<optimized out>, arena=<optimized out>) at /tmp/build/80754af9/python_1585002248360/work/Python/pythonrun.c:1025\r\n#124 0x00005563c0523a31 in PyRun_FileExFlags (fp=0x5563c23fa590, filename_str=<optimized out>, start=<optimized out>, globals=0x7f795031a168, locals=0x7f795031a168, closeit=1, flags=0x7ffc3abb8f3c) at /tmp/build/80754af9/python_1585002248360/work/Python/pythonrun.c:978\r\n#125 0x00005563c0523c33 in PyRun_SimpleFileExFlags (fp=0x5563c23fa590, filename=<optimized out>, closeit=1, flags=0x7ffc3abb8f3c) at /tmp/build/80754af9/python_1585002248360/work/Python/pythonrun.c:419\r\n#126 0x00005563c0527723 in run_file (p_cf=0x7ffc3abb8f3c, filename=0x5563c23690f0 L\"test_torch.py\", fp=0x5563c23fa590) at /tmp/build/80754af9/python_1585002248360/work/Modules/main.c:340\r\n#127 Py_Main (argc=<optimized out>, argv=<optimized out>) at /tmp/build/80754af9/python_1585002248360/work/Modules/main.c:811\r\n#128 0x00005563c03f21fe in main (argc=3, argv=0x7ffc3abb9148) at /tmp/build/80754af9/python_1585002248360/work/Programs/python.c:69\r\n```\n\ncc @ezyang @gchanan @zou3519 @suo",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/36434/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/36434/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/36247",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/36247/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/36247/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/36247/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/36247",
        "id": 596770348,
        "node_id": "MDU6SXNzdWU1OTY3NzAzNDg=",
        "number": 36247,
        "title": "[JIT] Doesn't support dict() ",
        "user": {
            "login": "xush6528",
            "id": 7608630,
            "node_id": "MDQ6VXNlcjc2MDg2MzA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7608630?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xush6528",
            "html_url": "https://github.com/xush6528",
            "followers_url": "https://api.github.com/users/xush6528/followers",
            "following_url": "https://api.github.com/users/xush6528/following{/other_user}",
            "gists_url": "https://api.github.com/users/xush6528/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xush6528/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xush6528/subscriptions",
            "organizations_url": "https://api.github.com/users/xush6528/orgs",
            "repos_url": "https://api.github.com/users/xush6528/repos",
            "events_url": "https://api.github.com/users/xush6528/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xush6528/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            },
            {
                "id": 1301447942,
                "node_id": "MDU6TGFiZWwxMzAxNDQ3OTQy",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/enhancement",
                "name": "enhancement",
                "color": "ffc6f4",
                "default": true,
                "description": "Not as big of a feature, but technically not a bug. Should be easy to fix"
            },
            {
                "id": 2203967632,
                "node_id": "MDU6TGFiZWwyMjAzOTY3NjMy",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/weeks",
                "name": "weeks",
                "color": "e5808f",
                "default": false,
                "description": ""
            },
            {
                "id": 2674375683,
                "node_id": "MDU6TGFiZWwyNjc0Mzc1Njgz",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/TSUsability",
                "name": "TSUsability",
                "color": "D4C5F9",
                "default": false,
                "description": ""
            },
            {
                "id": 2677230705,
                "node_id": "MDU6TGFiZWwyNjc3MjMwNzA1",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/TSRootCause:UnsupportedConstructs",
                "name": "TSRootCause:UnsupportedConstructs",
                "color": "A2A3EC",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "ansley",
            "id": 59447410,
            "node_id": "MDQ6VXNlcjU5NDQ3NDEw",
            "avatar_url": "https://avatars.githubusercontent.com/u/59447410?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ansley",
            "html_url": "https://github.com/ansley",
            "followers_url": "https://api.github.com/users/ansley/followers",
            "following_url": "https://api.github.com/users/ansley/following{/other_user}",
            "gists_url": "https://api.github.com/users/ansley/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ansley/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ansley/subscriptions",
            "organizations_url": "https://api.github.com/users/ansley/orgs",
            "repos_url": "https://api.github.com/users/ansley/repos",
            "events_url": "https://api.github.com/users/ansley/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ansley/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "ansley",
                "id": 59447410,
                "node_id": "MDQ6VXNlcjU5NDQ3NDEw",
                "avatar_url": "https://avatars.githubusercontent.com/u/59447410?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ansley",
                "html_url": "https://github.com/ansley",
                "followers_url": "https://api.github.com/users/ansley/followers",
                "following_url": "https://api.github.com/users/ansley/following{/other_user}",
                "gists_url": "https://api.github.com/users/ansley/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ansley/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ansley/subscriptions",
                "organizations_url": "https://api.github.com/users/ansley/orgs",
                "repos_url": "https://api.github.com/users/ansley/repos",
                "events_url": "https://api.github.com/users/ansley/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ansley/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 5,
        "created_at": "2020-04-08T18:24:17Z",
        "updated_at": "2021-03-02T07:17:44Z",
        "closed_at": "2021-03-02T07:17:27Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "```py\r\nmy_dict : Dict[int, Tensor] = dict()\r\n```\r\nError is it expects one arg.\r\n\r\nHave to work around it.\r\n```py\r\nmy_dict : Dict[int, Tensor] = {}\r\n```\r\n\r\nSame for list,\r\n```py\r\nmy_list : List[int] = list()\r\n```\r\nError is it expects one arg.\r\n\r\nHave to work around it.\r\n```py\r\nmy_list : List[int] = []\r\n```\r\n\r\ncc @suo @gmagogsfm",
        "closed_by": {
            "login": "gmagogsfm",
            "id": 1817752,
            "node_id": "MDQ6VXNlcjE4MTc3NTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1817752?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gmagogsfm",
            "html_url": "https://github.com/gmagogsfm",
            "followers_url": "https://api.github.com/users/gmagogsfm/followers",
            "following_url": "https://api.github.com/users/gmagogsfm/following{/other_user}",
            "gists_url": "https://api.github.com/users/gmagogsfm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gmagogsfm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gmagogsfm/subscriptions",
            "organizations_url": "https://api.github.com/users/gmagogsfm/orgs",
            "repos_url": "https://api.github.com/users/gmagogsfm/repos",
            "events_url": "https://api.github.com/users/gmagogsfm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gmagogsfm/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/36247/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/36247/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/36216",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/36216/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/36216/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/36216/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/36216",
        "id": 596405083,
        "node_id": "MDU6SXNzdWU1OTY0MDUwODM=",
        "number": 36216,
        "title": "[doc] Part of the JIT code is not highlighted ",
        "user": {
            "login": "xwang233",
            "id": 24860335,
            "node_id": "MDQ6VXNlcjI0ODYwMzM1",
            "avatar_url": "https://avatars.githubusercontent.com/u/24860335?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xwang233",
            "html_url": "https://github.com/xwang233",
            "followers_url": "https://api.github.com/users/xwang233/followers",
            "following_url": "https://api.github.com/users/xwang233/following{/other_user}",
            "gists_url": "https://api.github.com/users/xwang233/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xwang233/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xwang233/subscriptions",
            "organizations_url": "https://api.github.com/users/xwang233/orgs",
            "repos_url": "https://api.github.com/users/xwang233/repos",
            "events_url": "https://api.github.com/users/xwang233/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xwang233/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 897287230,
                "node_id": "MDU6TGFiZWw4OTcyODcyMzA=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20docs",
                "name": "module: docs",
                "color": "f7e101",
                "default": false,
                "description": "Related to our documentation, both in docs/ and docblocks"
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-04-08T08:33:47Z",
        "updated_at": "2020-04-27T22:06:13Z",
        "closed_at": "2020-04-27T22:06:13Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "## \ud83d\udcda Documentation\r\n\r\nSee https://pytorch.org/docs/master/jit.html#disable-jit-for-debugging\r\n\r\n![image](https://user-images.githubusercontent.com/24860335/78762631-f42de780-7938-11ea-955e-6992e10bcc2a.png)\r\n\n\ncc @suo",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/36216/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/36216/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/35948",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/35948/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/35948/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/35948/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/35948",
        "id": 593433561,
        "node_id": "MDU6SXNzdWU1OTM0MzM1NjE=",
        "number": 35948,
        "title": "JIT: int(str) fails",
        "user": {
            "login": "IlyaOvodov",
            "id": 34230114,
            "node_id": "MDQ6VXNlcjM0MjMwMTE0",
            "avatar_url": "https://avatars.githubusercontent.com/u/34230114?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/IlyaOvodov",
            "html_url": "https://github.com/IlyaOvodov",
            "followers_url": "https://api.github.com/users/IlyaOvodov/followers",
            "following_url": "https://api.github.com/users/IlyaOvodov/following{/other_user}",
            "gists_url": "https://api.github.com/users/IlyaOvodov/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/IlyaOvodov/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/IlyaOvodov/subscriptions",
            "organizations_url": "https://api.github.com/users/IlyaOvodov/orgs",
            "repos_url": "https://api.github.com/users/IlyaOvodov/repos",
            "events_url": "https://api.github.com/users/IlyaOvodov/events{/privacy}",
            "received_events_url": "https://api.github.com/users/IlyaOvodov/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            },
            {
                "id": 1301447942,
                "node_id": "MDU6TGFiZWwxMzAxNDQ3OTQy",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/enhancement",
                "name": "enhancement",
                "color": "ffc6f4",
                "default": true,
                "description": "Not as big of a feature, but technically not a bug. Should be easy to fix"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "driazati",
            "id": 9407960,
            "node_id": "MDQ6VXNlcjk0MDc5NjA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9407960?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/driazati",
            "html_url": "https://github.com/driazati",
            "followers_url": "https://api.github.com/users/driazati/followers",
            "following_url": "https://api.github.com/users/driazati/following{/other_user}",
            "gists_url": "https://api.github.com/users/driazati/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/driazati/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/driazati/subscriptions",
            "organizations_url": "https://api.github.com/users/driazati/orgs",
            "repos_url": "https://api.github.com/users/driazati/repos",
            "events_url": "https://api.github.com/users/driazati/events{/privacy}",
            "received_events_url": "https://api.github.com/users/driazati/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "driazati",
                "id": 9407960,
                "node_id": "MDQ6VXNlcjk0MDc5NjA=",
                "avatar_url": "https://avatars.githubusercontent.com/u/9407960?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/driazati",
                "html_url": "https://github.com/driazati",
                "followers_url": "https://api.github.com/users/driazati/followers",
                "following_url": "https://api.github.com/users/driazati/following{/other_user}",
                "gists_url": "https://api.github.com/users/driazati/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/driazati/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/driazati/subscriptions",
                "organizations_url": "https://api.github.com/users/driazati/orgs",
                "repos_url": "https://api.github.com/users/driazati/repos",
                "events_url": "https://api.github.com/users/driazati/events{/privacy}",
                "received_events_url": "https://api.github.com/users/driazati/received_events",
                "type": "User",
                "site_admin": false
            },
            {
                "login": "vishwakftw",
                "id": 23639302,
                "node_id": "MDQ6VXNlcjIzNjM5MzAy",
                "avatar_url": "https://avatars.githubusercontent.com/u/23639302?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/vishwakftw",
                "html_url": "https://github.com/vishwakftw",
                "followers_url": "https://api.github.com/users/vishwakftw/followers",
                "following_url": "https://api.github.com/users/vishwakftw/following{/other_user}",
                "gists_url": "https://api.github.com/users/vishwakftw/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/vishwakftw/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/vishwakftw/subscriptions",
                "organizations_url": "https://api.github.com/users/vishwakftw/orgs",
                "repos_url": "https://api.github.com/users/vishwakftw/repos",
                "events_url": "https://api.github.com/users/vishwakftw/events{/privacy}",
                "received_events_url": "https://api.github.com/users/vishwakftw/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 4,
        "created_at": "2020-04-03T14:44:48Z",
        "updated_at": "2020-04-23T21:28:49Z",
        "closed_at": "2020-04-23T21:28:49Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\nint(some_string) fails when doing torch.jit.script:\r\n\r\n## To Reproduce\r\n```\r\ndef f(s: str):\r\n    return int(s)\r\nf = torch.jit.script(f)\r\n```\r\nresults in error:\r\n```\r\n  File \"C:\\Miniconda3\\lib\\site-packages\\torch\\jit\\__init__.py\", line 1281, in script\r\n    fn = torch._C._jit_script_compile(qualified_name, ast, _rcb, get_default_args(obj))\r\nRuntimeError: \r\nArguments for call are not valid.\r\nThe following variants are available:\r\n  \r\n  aten::Int(Tensor a) -> (int):\r\n  Expected a value of type 'Tensor' for argument 'a' but instead found type 'str'.\r\n  \r\n  aten::Int(bool a) -> (int):\r\n  Expected a value of type 'bool' for argument 'a' but instead found type 'str'.\r\n  \r\n  aten::Int(float a) -> (int):\r\n  Expected a value of type 'float' for argument 'a' but instead found type 'str'.\r\n  \r\n  aten::Int(Scalar a) -> (int):\r\n  Expected a value of type 'number' for argument 'a' but instead found type 'str'.\r\n\r\nThe original call is:\r\n  File \"D:/GitHub/yolov3/qwe.py\", line 6\r\ndef f(s: str):\r\n    return int(s)\r\n           ~~~ <--- HERE\r\n```\r\n\r\n - PyTorch Version (e.g., 1.0): 1.4.0 (current stable)\r\n - OS (e.g., Linux): Windows 10\r\n - How you installed PyTorch (`conda`, `pip`, source): pip install torch===1.4.0 torchvision===0.5.0 -f https://download.pytorch.org/whl/torch_stable.html\r\n - Build command you used (if compiling from source): --\r\n - Python version: 3.6.10\r\n - CUDA/cuDNN version: 10.0\r\n - GPU models and configuration: 1050\r\n - Any other relevant information:\r\n\n\ncc @suo",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/35948/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/35948/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/35778",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/35778/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/35778/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/35778/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/35778",
        "id": 591446224,
        "node_id": "MDU6SXNzdWU1OTE0NDYyMjQ=",
        "number": 35778,
        "title": "JIT NoneType object crashes on comparison",
        "user": {
            "login": "dreiss",
            "id": 4121,
            "node_id": "MDQ6VXNlcjQxMjE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4121?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dreiss",
            "html_url": "https://github.com/dreiss",
            "followers_url": "https://api.github.com/users/dreiss/followers",
            "following_url": "https://api.github.com/users/dreiss/following{/other_user}",
            "gists_url": "https://api.github.com/users/dreiss/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dreiss/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dreiss/subscriptions",
            "organizations_url": "https://api.github.com/users/dreiss/orgs",
            "repos_url": "https://api.github.com/users/dreiss/repos",
            "events_url": "https://api.github.com/users/dreiss/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dreiss/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 443484135,
                "node_id": "MDU6TGFiZWw0NDM0ODQxMzU=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/high%20priority",
                "name": "high priority",
                "color": "F22613",
                "default": false,
                "description": null
            },
            {
                "id": 466131885,
                "node_id": "MDU6TGFiZWw0NjYxMzE4ODU=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triage%20review",
                "name": "triage review",
                "color": "cc317c",
                "default": false,
                "description": ""
            },
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "driazati",
            "id": 9407960,
            "node_id": "MDQ6VXNlcjk0MDc5NjA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9407960?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/driazati",
            "html_url": "https://github.com/driazati",
            "followers_url": "https://api.github.com/users/driazati/followers",
            "following_url": "https://api.github.com/users/driazati/following{/other_user}",
            "gists_url": "https://api.github.com/users/driazati/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/driazati/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/driazati/subscriptions",
            "organizations_url": "https://api.github.com/users/driazati/orgs",
            "repos_url": "https://api.github.com/users/driazati/repos",
            "events_url": "https://api.github.com/users/driazati/events{/privacy}",
            "received_events_url": "https://api.github.com/users/driazati/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "driazati",
                "id": 9407960,
                "node_id": "MDQ6VXNlcjk0MDc5NjA=",
                "avatar_url": "https://avatars.githubusercontent.com/u/9407960?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/driazati",
                "html_url": "https://github.com/driazati",
                "followers_url": "https://api.github.com/users/driazati/followers",
                "following_url": "https://api.github.com/users/driazati/following{/other_user}",
                "gists_url": "https://api.github.com/users/driazati/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/driazati/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/driazati/subscriptions",
                "organizations_url": "https://api.github.com/users/driazati/orgs",
                "repos_url": "https://api.github.com/users/driazati/repos",
                "events_url": "https://api.github.com/users/driazati/events{/privacy}",
                "received_events_url": "https://api.github.com/users/driazati/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 4,
        "created_at": "2020-03-31T21:35:22Z",
        "updated_at": "2020-04-03T18:35:20Z",
        "closed_at": "2020-04-03T18:35:20Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\nThe NoneType object from JIT causes a segfault when we try to compare it to Python's `None`.  Also, side note, it's str a\r\n\r\n## To Reproduce\r\n\r\n```\r\nIn [1]: import torch                                                                                                                 \r\n\r\nIn [2]: import torch.utils.collect_env                                                                                               \r\n\r\nIn [3]: torch.utils.collect_env.main()                                                                                               \r\nCollecting environment information...\r\nPyTorch version: 1.5.0+cpu\r\nIs debug build: No\r\nCUDA used to build PyTorch: None\r\n\r\nOS: Fedora release 30 (Thirty)\r\nGCC version: (GCC) 9.1.1 20190503 (Red Hat 9.1.1-1)\r\nCMake version: version 3.14.4\r\n\r\nPython version: 3.7\r\nIs CUDA available: No\r\nCUDA runtime version: No CUDA\r\nGPU models and configuration: No CUDA\r\nNvidia driver version: No CUDA\r\ncuDNN version: No CUDA\r\n\r\nVersions of relevant libraries:\r\n[pip3] numpy==1.17.0\r\n[pip3] pytorch-pretrained-bert==0.6.2\r\n[pip3] torch==1.5.0+cpu\r\n[pip3] torchtext==0.4.0\r\n[pip3] torchvision==0.6.0.dev20200226+cpu\r\n[conda] Could not collect\r\n\r\nIn [4]: @torch.jit.script \r\n   ...: def f(): \r\n   ...:     return None \r\n   ...:                                                                                                                              \r\n\r\nIn [5]: node = list(f.graph.nodes())[0]                                                                                              \r\n\r\nIn [6]: t = node.outputsAt(0).type()                                                                                                                           \r\n\r\nIn [7]: print(t)                                                                                                                                               \r\nNone\r\n\r\nIn [8]: print(str(t))                                                                                                                                          \r\nNone\r\n\r\nIn [9]: print(repr(t))                                                                                                                                         \r\nNone\r\n\r\nIn [10]: print(type(t))                                                                                                                                        \r\n<class 'torch._C.NoneType'>\r\n\r\nIn [11]: # Hrm.  It's not really None.                                                                                                                         \r\n\r\nIn [12]: t is None                                                                                                                                             \r\nOut[12]: False\r\n\r\nIn [13]: t == None                                                                                                                                             \r\nSegmentation fault (core dumped)\r\n```\r\n\r\n## Expected behavior\r\n\r\nComparison should return false instead of crashing.\r\n\r\nstr and repr should probably return `\"NoneType\"`\r\n\r\n## Environment\r\n\r\nSee above.\r\n\r\n## Additional context\r\n\r\nThe JIT Python API is super convenient!\r\n\n\ncc @ezyang @gchanan @zou3519 @suo",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/35778/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/35778/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/35565",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/35565/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/35565/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/35565/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/35565",
        "id": 589394160,
        "node_id": "MDU6SXNzdWU1ODkzOTQxNjA=",
        "number": 35565,
        "title": "TorchScript python_print inlining/un-inlining changes semantics on save+load",
        "user": {
            "login": "dreiss",
            "id": 4121,
            "node_id": "MDQ6VXNlcjQxMjE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4121?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dreiss",
            "html_url": "https://github.com/dreiss",
            "followers_url": "https://api.github.com/users/dreiss/followers",
            "following_url": "https://api.github.com/users/dreiss/following{/other_user}",
            "gists_url": "https://api.github.com/users/dreiss/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dreiss/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dreiss/subscriptions",
            "organizations_url": "https://api.github.com/users/dreiss/orgs",
            "repos_url": "https://api.github.com/users/dreiss/repos",
            "events_url": "https://api.github.com/users/dreiss/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dreiss/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 443484135,
                "node_id": "MDU6TGFiZWw0NDM0ODQxMzU=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/high%20priority",
                "name": "high priority",
                "color": "F22613",
                "default": false,
                "description": null
            },
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "zdevito",
            "id": 370202,
            "node_id": "MDQ6VXNlcjM3MDIwMg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/370202?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zdevito",
            "html_url": "https://github.com/zdevito",
            "followers_url": "https://api.github.com/users/zdevito/followers",
            "following_url": "https://api.github.com/users/zdevito/following{/other_user}",
            "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions",
            "organizations_url": "https://api.github.com/users/zdevito/orgs",
            "repos_url": "https://api.github.com/users/zdevito/repos",
            "events_url": "https://api.github.com/users/zdevito/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zdevito/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "zdevito",
                "id": 370202,
                "node_id": "MDQ6VXNlcjM3MDIwMg==",
                "avatar_url": "https://avatars.githubusercontent.com/u/370202?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/zdevito",
                "html_url": "https://github.com/zdevito",
                "followers_url": "https://api.github.com/users/zdevito/followers",
                "following_url": "https://api.github.com/users/zdevito/following{/other_user}",
                "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions",
                "organizations_url": "https://api.github.com/users/zdevito/orgs",
                "repos_url": "https://api.github.com/users/zdevito/repos",
                "events_url": "https://api.github.com/users/zdevito/events{/privacy}",
                "received_events_url": "https://api.github.com/users/zdevito/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 4,
        "created_at": "2020-03-27T20:24:02Z",
        "updated_at": "2020-05-01T21:25:53Z",
        "closed_at": "2020-05-01T21:25:53Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\nA TorchScript model should always have the same semantics after a save/load cycle.  However, the Python-style printing of TorchScript that happens during saving fails to un-inline expressions in some cases, resulting in a change of order of evaluation, which changes semantics.\r\n\r\n## To Reproduce\r\n\r\n```python\r\nimport torch\r\nimport io\r\nfrom typing import List\r\nimport torch.utils.collect_env\r\ntorch.utils.collect_env.main()\r\n\r\nclass OrderModuleShort(torch.nn.Module):\r\n    def forward(self, arg: List[torch.Tensor]):\r\n        return [(arg[1],), (arg[0].argmax(),)]\r\n\r\nclass OrderModuleLong(torch.nn.Module):\r\n    def forward(self, long_arg_name: List[torch.Tensor]):\r\n        return [(long_arg_name[1],), (long_arg_name[0].argmax(),)]\r\n\r\ndef evaluate(cls):\r\n    om = cls()\r\n    sm = torch.jit.script(om)\r\n    print(sm.code)\r\n    print(sm.graph)\r\n    buffer = io.BytesIO()\r\n    torch.jit.save(sm, buffer)\r\n    buffer.seek(0)\r\n    lm = torch.jit.load(buffer)\r\n\r\n    for name, mod in [\r\n            (\"original\", om),\r\n            (\"scripted\", sm),\r\n            (\"loaded\", lm),\r\n        ]:\r\n        try:\r\n            mod([torch.zeros(0)])\r\n        except Exception as exn:\r\n            print()\r\n            print(name)\r\n            print(exn)\r\n\r\n\r\nprint(\"---short:\")\r\nevaluate(OrderModuleShort)\r\nprint()\r\nprint(\"---long:\")\r\nevaluate(OrderModuleLong)\r\n```\r\n\r\n```\r\n---short:\r\ndef forward(self,\r\n    arg: List[Tensor]) -> List[Tuple[Tensor]]:\r\n  _0 = [(arg[1],), (torch.argmax(arg[0], None, False),)]\r\n  return _0\r\n\r\ngraph(%self : __torch__.___torch_mangle_0.OrderModuleShort,\r\n      %arg.1 : Tensor[]):\r\n  %10 : bool = prim::Constant[value=0]()\r\n  %9 : None = prim::Constant()\r\n  %3 : int = prim::Constant[value=1]() # <ipython-input-2-e60618fa51db>:9:21\r\n  %7 : int = prim::Constant[value=0]() # <ipython-input-2-e60618fa51db>:9:32\r\n  %4 : Tensor = aten::__getitem__(%arg.1, %3) # <ipython-input-2-e60618fa51db>:9:17\r\n  %5 : (Tensor) = prim::TupleConstruct(%4)\r\n  %8 : Tensor = aten::__getitem__(%arg.1, %7) # <ipython-input-2-e60618fa51db>:9:28\r\n  %11 : Tensor = aten::argmax(%8, %9, %10) # <ipython-input-2-e60618fa51db>:9:28\r\n  %12 : (Tensor) = prim::TupleConstruct(%11)\r\n  %13 : (Tensor)[] = prim::ListConstruct(%5, %12)\r\n  return (%13)\r\n\r\n\r\noriginal\r\nlist index out of range\r\n\r\nscripted\r\nThe following operation failed in the TorchScript interpreter.\r\nTraceback of TorchScript (most recent call last):\r\n  File \"<ipython-input-2-e60618fa51db>\", line 9, in forward\r\n    def forward(self, arg: List[torch.Tensor]):\r\n        return [(arg[1],), (arg[0].argmax(),)]\r\n                 ~~~~~ <--- HERE\r\nRuntimeError: list index out of range\r\n\r\n\r\nloaded\r\nThe following operation failed in the TorchScript interpreter.\r\nTraceback of TorchScript, serialized code (most recent call last):\r\n  File \"code/__torch__/___torch_mangle_0.py\", line 6, in forward\r\n  def forward(self: __torch__.___torch_mangle_0.OrderModuleShort,\r\n    arg: List[Tensor]) -> List[Tuple[Tensor]]:\r\n    _0 = (arg[1],)\r\n          ~~~~~ <--- HERE\r\n    _1 = (torch.argmax(arg[0], None, False),)\r\n    return [_0, _1]\r\n\r\nTraceback of TorchScript, original code (most recent call last):\r\n  File \"<ipython-input-2-e60618fa51db>\", line 9, in forward\r\n    def forward(self, arg: List[torch.Tensor]):\r\n        return [(arg[1],), (arg[0].argmax(),)]\r\n                 ~~~~~ <--- HERE\r\nRuntimeError: list index out of range\r\n\r\n\r\n---long:\r\ndef forward(self,\r\n    long_arg_name: List[Tensor]) -> List[Tuple[Tensor]]:\r\n  _0 = torch.argmax(long_arg_name[0], None, False)\r\n  return [(long_arg_name[1],), (_0,)]\r\n\r\ngraph(%self : __torch__.___torch_mangle_1.OrderModuleLong,\r\n      %long_arg_name.1 : Tensor[]):\r\n  %10 : bool = prim::Constant[value=0]()\r\n  %9 : None = prim::Constant()\r\n  %3 : int = prim::Constant[value=1]() # <ipython-input-2-e60618fa51db>:13:31\r\n  %7 : int = prim::Constant[value=0]() # <ipython-input-2-e60618fa51db>:13:52\r\n  %4 : Tensor = aten::__getitem__(%long_arg_name.1, %3) # <ipython-input-2-e60618fa51db>:13:17\r\n  %5 : (Tensor) = prim::TupleConstruct(%4)\r\n  %8 : Tensor = aten::__getitem__(%long_arg_name.1, %7) # <ipython-input-2-e60618fa51db>:13:38\r\n  %11 : Tensor = aten::argmax(%8, %9, %10) # <ipython-input-2-e60618fa51db>:13:38\r\n  %12 : (Tensor) = prim::TupleConstruct(%11)\r\n  %13 : (Tensor)[] = prim::ListConstruct(%5, %12)\r\n  return (%13)\r\n\r\n\r\noriginal\r\nlist index out of range\r\n\r\nscripted\r\nThe following operation failed in the TorchScript interpreter.\r\nTraceback of TorchScript (most recent call last):\r\n  File \"<ipython-input-2-e60618fa51db>\", line 13, in forward\r\n    def forward(self, long_arg_name: List[torch.Tensor]):\r\n        return [(long_arg_name[1],), (long_arg_name[0].argmax(),)]\r\n                 ~~~~~~~~~~~~~~~ <--- HERE\r\nRuntimeError: list index out of range\r\n\r\n\r\nloaded\r\nThe following operation failed in the TorchScript interpreter.\r\nTraceback of TorchScript, serialized code (most recent call last):\r\n  File \"code/__torch__/___torch_mangle_1.py\", line 6, in forward\r\n  def forward(self: __torch__.___torch_mangle_1.OrderModuleLong,\r\n    long_arg_name: List[Tensor]) -> List[Tuple[Tensor]]:\r\n    _0 = torch.argmax(long_arg_name[0], None, False)\r\n         ~~~~~~~~~~~~ <--- HERE\r\n    return [(long_arg_name[1],), (_0,)]\r\n\r\nTraceback of TorchScript, original code (most recent call last):\r\n  File \"<ipython-input-2-e60618fa51db>\", line 13, in forward\r\n    def forward(self, long_arg_name: List[torch.Tensor]):\r\n        return [(long_arg_name[1],), (long_arg_name[0].argmax(),)]\r\n                                      ~~~~~~~~~~~~~~~~~~~~~~ <--- HERE\r\nRuntimeError: cannot perform reduction function argmax on a tensor with no elements because the operation does not have an identity\r\n```\r\n\r\nNote that in the \"short\" case (short argument name), there is no un-inlining.  All three models (eager, scripted, loaded) throw the same list index exception.  In the \"long\" case, the argmax expression is un-inlined, but the `long_arg_name[1]` expression is not.  This causes the order of evaluation to get re-ordered when saved+loaded, so that version of the model throws the argmax exception instead.\r\n\r\n## Expected behavior\r\n\r\nsave+load should have the same behavior (list index exception) as the scripted model.\r\n\r\n## Environment\r\n\r\n```\r\nCollecting environment information...\r\nPyTorch version: 1.5.0a0+c63c82e\r\nIs debug build: Yes\r\nCUDA used to build PyTorch: None\r\n\r\nOS: Fedora release 30 (Thirty)\r\nGCC version: (GCC) 9.1.1 20190503 (Red Hat 9.1.1-1)\r\nCMake version: version 3.14.4\r\n\r\nPython version: 3.7\r\nIs CUDA available: No\r\nCUDA runtime version: No CUDA\r\nGPU models and configuration: No CUDA\r\nNvidia driver version: No CUDA\r\ncuDNN version: No CUDA\r\n\r\nVersions of relevant libraries:\r\n[pip3] numpy==1.17.0\r\n[pip3] pytorch-pretrained-bert==0.6.2\r\n[pip3] torch==1.2.0\r\n[pip3] torchtext==0.4.0\r\n[conda] Could not collect\r\n```\r\n\r\n## Additional context\r\n\r\nJames Reed pointed me at this code: https://github.com/pytorch/pytorch/blob/9e22d15f14a9a5ca4daf88137c25b34900d758ff/torch/csrc/jit/serialization/python_print.cpp#L596\r\n\n\ncc @ezyang @gchanan @zou3519 @suo",
        "closed_by": {
            "login": "suo",
            "id": 1617424,
            "node_id": "MDQ6VXNlcjE2MTc0MjQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1617424?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/suo",
            "html_url": "https://github.com/suo",
            "followers_url": "https://api.github.com/users/suo/followers",
            "following_url": "https://api.github.com/users/suo/following{/other_user}",
            "gists_url": "https://api.github.com/users/suo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/suo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/suo/subscriptions",
            "organizations_url": "https://api.github.com/users/suo/orgs",
            "repos_url": "https://api.github.com/users/suo/repos",
            "events_url": "https://api.github.com/users/suo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/suo/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/35565/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/35565/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/35195",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/35195/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/35195/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/35195/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/35195",
        "id": 585878263,
        "node_id": "MDU6SXNzdWU1ODU4NzgyNjM=",
        "number": 35195,
        "title": "`JitTest.ADFormulas` fails intermittently",
        "user": {
            "login": "malfet",
            "id": 2453524,
            "node_id": "MDQ6VXNlcjI0NTM1MjQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2453524?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/malfet",
            "html_url": "https://github.com/malfet",
            "followers_url": "https://api.github.com/users/malfet/followers",
            "following_url": "https://api.github.com/users/malfet/following{/other_user}",
            "gists_url": "https://api.github.com/users/malfet/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/malfet/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/malfet/subscriptions",
            "organizations_url": "https://api.github.com/users/malfet/orgs",
            "repos_url": "https://api.github.com/users/malfet/repos",
            "events_url": "https://api.github.com/users/malfet/events{/privacy}",
            "received_events_url": "https://api.github.com/users/malfet/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "malfet",
            "id": 2453524,
            "node_id": "MDQ6VXNlcjI0NTM1MjQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2453524?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/malfet",
            "html_url": "https://github.com/malfet",
            "followers_url": "https://api.github.com/users/malfet/followers",
            "following_url": "https://api.github.com/users/malfet/following{/other_user}",
            "gists_url": "https://api.github.com/users/malfet/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/malfet/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/malfet/subscriptions",
            "organizations_url": "https://api.github.com/users/malfet/orgs",
            "repos_url": "https://api.github.com/users/malfet/repos",
            "events_url": "https://api.github.com/users/malfet/events{/privacy}",
            "received_events_url": "https://api.github.com/users/malfet/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "malfet",
                "id": 2453524,
                "node_id": "MDQ6VXNlcjI0NTM1MjQ=",
                "avatar_url": "https://avatars.githubusercontent.com/u/2453524?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/malfet",
                "html_url": "https://github.com/malfet",
                "followers_url": "https://api.github.com/users/malfet/followers",
                "following_url": "https://api.github.com/users/malfet/following{/other_user}",
                "gists_url": "https://api.github.com/users/malfet/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/malfet/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/malfet/subscriptions",
                "organizations_url": "https://api.github.com/users/malfet/orgs",
                "repos_url": "https://api.github.com/users/malfet/repos",
                "events_url": "https://api.github.com/users/malfet/events{/privacy}",
                "received_events_url": "https://api.github.com/users/malfet/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 3,
        "created_at": "2020-03-23T02:13:54Z",
        "updated_at": "2020-03-24T15:44:07Z",
        "closed_at": "2020-03-24T15:44:07Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\nRun `bin/test_jit --gtest_filter=JitTest.ADFormulas --gtest_repeat=1000 --gtest_break_on_failure` will fail with `INTERNAL ASSERT FAILED`\r\n\n\ncc @suo",
        "closed_by": {
            "login": "malfet",
            "id": 2453524,
            "node_id": "MDQ6VXNlcjI0NTM1MjQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2453524?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/malfet",
            "html_url": "https://github.com/malfet",
            "followers_url": "https://api.github.com/users/malfet/followers",
            "following_url": "https://api.github.com/users/malfet/following{/other_user}",
            "gists_url": "https://api.github.com/users/malfet/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/malfet/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/malfet/subscriptions",
            "organizations_url": "https://api.github.com/users/malfet/orgs",
            "repos_url": "https://api.github.com/users/malfet/repos",
            "events_url": "https://api.github.com/users/malfet/events{/privacy}",
            "received_events_url": "https://api.github.com/users/malfet/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/35195/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/35195/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/35110",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/35110/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/35110/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/35110/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/35110",
        "id": 585268036,
        "node_id": "MDU6SXNzdWU1ODUyNjgwMzY=",
        "number": 35110,
        "title": "Consolidate RRef type class and RRef impl class",
        "user": {
            "login": "zzzwen",
            "id": 1835075,
            "node_id": "MDQ6VXNlcjE4MzUwNzU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1835075?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zzzwen",
            "html_url": "https://github.com/zzzwen",
            "followers_url": "https://api.github.com/users/zzzwen/followers",
            "following_url": "https://api.github.com/users/zzzwen/following{/other_user}",
            "gists_url": "https://api.github.com/users/zzzwen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zzzwen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zzzwen/subscriptions",
            "organizations_url": "https://api.github.com/users/zzzwen/orgs",
            "repos_url": "https://api.github.com/users/zzzwen/repos",
            "events_url": "https://api.github.com/users/zzzwen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zzzwen/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            },
            {
                "id": 1536612774,
                "node_id": "MDU6TGFiZWwxNTM2NjEyNzc0",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20rpc",
                "name": "module: rpc",
                "color": "f7e101",
                "default": false,
                "description": "Related to RPC, distributed autograd, RRef, and distributed optimizer"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-03-20T18:56:44Z",
        "updated_at": "2020-06-18T14:45:25Z",
        "closed_at": "2020-06-18T14:45:25Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "Python3 typing for `rpc.RRef` is missing.  If I do `from torch.rpc.distritubed import RRef`, then `rref_module : RRef[nn.Module]` will result in error `'pybind11_type' object is not subscriptable`\r\n\r\ncc @suo @pietern @mrshenli @pritamdamania87 @zhaojuanmao @satgera @gqchen @aazzolini @rohan-varma @xush6528 @jjlilley @osalpekar",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/35110/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/35110/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/35103",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/35103/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/35103/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/35103/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/35103",
        "id": 585218705,
        "node_id": "MDU6SXNzdWU1ODUyMTg3MDU=",
        "number": 35103,
        "title": "`bin/test_jit --gtest_filter=JitTest.CustomOperators --gtest_repeat=2` fails",
        "user": {
            "login": "malfet",
            "id": 2453524,
            "node_id": "MDQ6VXNlcjI0NTM1MjQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2453524?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/malfet",
            "html_url": "https://github.com/malfet",
            "followers_url": "https://api.github.com/users/malfet/followers",
            "following_url": "https://api.github.com/users/malfet/following{/other_user}",
            "gists_url": "https://api.github.com/users/malfet/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/malfet/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/malfet/subscriptions",
            "organizations_url": "https://api.github.com/users/malfet/orgs",
            "repos_url": "https://api.github.com/users/malfet/repos",
            "events_url": "https://api.github.com/users/malfet/events{/privacy}",
            "received_events_url": "https://api.github.com/users/malfet/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2020-03-20T17:23:26Z",
        "updated_at": "2020-03-30T04:02:04Z",
        "closed_at": "2020-03-30T04:02:04Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\nMultiple runs of JitTest.CustomOperators fail with:\r\n```\r\nC++ exception with description \"(ops.size()) == (1) INTERNAL ASSERT FAILED at /home/nshulga/git/pytorch/test/cpp/jit/test_custom_operators.cpp:17, please report a bug to PyTorch.  (testCustomOperators at /home/nshulga/git/pytorch/test/cpp/jit/test_custom_operators.cpp:17)\r\n```\r\n\r\n## To Reproduce\r\n\r\n`cmake /path/to/pytorch -G Ninja;  ninja test_jit; bin/test_jit --gtest_filter=JitTest.CustomOperators --gtest_repeat=2`\n\ncc @suo",
        "closed_by": {
            "login": "suo",
            "id": 1617424,
            "node_id": "MDQ6VXNlcjE2MTc0MjQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1617424?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/suo",
            "html_url": "https://github.com/suo",
            "followers_url": "https://api.github.com/users/suo/followers",
            "following_url": "https://api.github.com/users/suo/following{/other_user}",
            "gists_url": "https://api.github.com/users/suo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/suo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/suo/subscriptions",
            "organizations_url": "https://api.github.com/users/suo/orgs",
            "repos_url": "https://api.github.com/users/suo/repos",
            "events_url": "https://api.github.com/users/suo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/suo/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/35103/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/35103/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/34997",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/34997/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/34997/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/34997/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/34997",
        "id": 584034690,
        "node_id": "MDU6SXNzdWU1ODQwMzQ2OTA=",
        "number": 34997,
        "title": "[Master Plan] Merge c10::ivalue::Future and torch::utils::Future<T>",
        "user": {
            "login": "zhaojuanmao",
            "id": 48731194,
            "node_id": "MDQ6VXNlcjQ4NzMxMTk0",
            "avatar_url": "https://avatars.githubusercontent.com/u/48731194?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zhaojuanmao",
            "html_url": "https://github.com/zhaojuanmao",
            "followers_url": "https://api.github.com/users/zhaojuanmao/followers",
            "following_url": "https://api.github.com/users/zhaojuanmao/following{/other_user}",
            "gists_url": "https://api.github.com/users/zhaojuanmao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zhaojuanmao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zhaojuanmao/subscriptions",
            "organizations_url": "https://api.github.com/users/zhaojuanmao/orgs",
            "repos_url": "https://api.github.com/users/zhaojuanmao/repos",
            "events_url": "https://api.github.com/users/zhaojuanmao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zhaojuanmao/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            },
            {
                "id": 1447309924,
                "node_id": "MDU6TGFiZWwxNDQ3MzA5OTI0",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/better-engineering",
                "name": "better-engineering",
                "color": "94f76a",
                "default": false,
                "description": "Relatively self-contained tasks for better engineering contributors"
            },
            {
                "id": 1536612774,
                "node_id": "MDU6TGFiZWwxNTM2NjEyNzc0",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20rpc",
                "name": "module: rpc",
                "color": "f7e101",
                "default": false,
                "description": "Related to RPC, distributed autograd, RRef, and distributed optimizer"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2020-03-18T22:14:03Z",
        "updated_at": "2021-02-20T00:23:06Z",
        "closed_at": "2021-02-20T00:23:06Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "Ideally we should have one Future abstraction in PyTorch codebase to have unified code paths regarding Future usage. \r\n\r\ntorch::utils::Future<T> is a generic Future, we can specialize it as torch::utils::Future[IValue] and make torch::utils::Future[IValue] to be an IValue. After that, we can kill c10::ivalue::Future implementation\r\n\r\ncc @suo @pietern @mrshenli @pritamdamania87 @zhaojuanmao @satgera @gqchen @aazzolini @rohan-varma @xush6528 @jjlilley @osalpekar @ilia-cher @wanchaol ",
        "closed_by": {
            "login": "rohan-varma",
            "id": 8039770,
            "node_id": "MDQ6VXNlcjgwMzk3NzA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8039770?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rohan-varma",
            "html_url": "https://github.com/rohan-varma",
            "followers_url": "https://api.github.com/users/rohan-varma/followers",
            "following_url": "https://api.github.com/users/rohan-varma/following{/other_user}",
            "gists_url": "https://api.github.com/users/rohan-varma/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rohan-varma/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rohan-varma/subscriptions",
            "organizations_url": "https://api.github.com/users/rohan-varma/orgs",
            "repos_url": "https://api.github.com/users/rohan-varma/repos",
            "events_url": "https://api.github.com/users/rohan-varma/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rohan-varma/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/34997/reactions",
            "total_count": 3,
            "+1": 3,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/34997/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/33912",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/33912/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/33912/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/33912/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/33912",
        "id": 572417197,
        "node_id": "MDU6SXNzdWU1NzI0MTcxOTc=",
        "number": 33912,
        "title": "[jit] inplace `_construct` RecursiveScriptModule",
        "user": {
            "login": "jerryzh168",
            "id": 4958441,
            "node_id": "MDQ6VXNlcjQ5NTg0NDE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4958441?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryzh168",
            "html_url": "https://github.com/jerryzh168",
            "followers_url": "https://api.github.com/users/jerryzh168/followers",
            "following_url": "https://api.github.com/users/jerryzh168/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryzh168/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryzh168/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryzh168/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryzh168/orgs",
            "repos_url": "https://api.github.com/users/jerryzh168/repos",
            "events_url": "https://api.github.com/users/jerryzh168/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryzh168/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "suo",
            "id": 1617424,
            "node_id": "MDQ6VXNlcjE2MTc0MjQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1617424?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/suo",
            "html_url": "https://github.com/suo",
            "followers_url": "https://api.github.com/users/suo/followers",
            "following_url": "https://api.github.com/users/suo/following{/other_user}",
            "gists_url": "https://api.github.com/users/suo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/suo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/suo/subscriptions",
            "organizations_url": "https://api.github.com/users/suo/orgs",
            "repos_url": "https://api.github.com/users/suo/repos",
            "events_url": "https://api.github.com/users/suo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/suo/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "suo",
                "id": 1617424,
                "node_id": "MDQ6VXNlcjE2MTc0MjQ=",
                "avatar_url": "https://avatars.githubusercontent.com/u/1617424?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/suo",
                "html_url": "https://github.com/suo",
                "followers_url": "https://api.github.com/users/suo/followers",
                "following_url": "https://api.github.com/users/suo/following{/other_user}",
                "gists_url": "https://api.github.com/users/suo/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/suo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/suo/subscriptions",
                "organizations_url": "https://api.github.com/users/suo/orgs",
                "repos_url": "https://api.github.com/users/suo/repos",
                "events_url": "https://api.github.com/users/suo/events{/privacy}",
                "received_events_url": "https://api.github.com/users/suo/received_events",
                "type": "User",
                "site_admin": false
            },
            {
                "login": "SplitInfinity",
                "id": 4392003,
                "node_id": "MDQ6VXNlcjQzOTIwMDM=",
                "avatar_url": "https://avatars.githubusercontent.com/u/4392003?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/SplitInfinity",
                "html_url": "https://github.com/SplitInfinity",
                "followers_url": "https://api.github.com/users/SplitInfinity/followers",
                "following_url": "https://api.github.com/users/SplitInfinity/following{/other_user}",
                "gists_url": "https://api.github.com/users/SplitInfinity/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/SplitInfinity/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/SplitInfinity/subscriptions",
                "organizations_url": "https://api.github.com/users/SplitInfinity/orgs",
                "repos_url": "https://api.github.com/users/SplitInfinity/repos",
                "events_url": "https://api.github.com/users/SplitInfinity/events{/privacy}",
                "received_events_url": "https://api.github.com/users/SplitInfinity/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 11,
        "created_at": "2020-02-27T23:07:12Z",
        "updated_at": "2020-06-23T21:44:53Z",
        "closed_at": "2020-06-23T21:44:53Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "**What**: inplace option to construct RecursiveScriptModule \r\n**Why**: This is needed to support inplace option for graph mode quantization, and we want this to be able to align with eager mode quantization API\n\ncc @suo",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/33912/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/33912/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/33500",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/33500/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/33500/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/33500/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/33500",
        "id": 567740766,
        "node_id": "MDU6SXNzdWU1Njc3NDA3NjY=",
        "number": 33500,
        "title": "Use fake nodes in tests that hard code IR",
        "user": {
            "login": "ezyang",
            "id": 13564,
            "node_id": "MDQ6VXNlcjEzNTY0",
            "avatar_url": "https://avatars.githubusercontent.com/u/13564?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ezyang",
            "html_url": "https://github.com/ezyang",
            "followers_url": "https://api.github.com/users/ezyang/followers",
            "following_url": "https://api.github.com/users/ezyang/following{/other_user}",
            "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions",
            "organizations_url": "https://api.github.com/users/ezyang/orgs",
            "repos_url": "https://api.github.com/users/ezyang/repos",
            "events_url": "https://api.github.com/users/ezyang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ezyang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1027606656,
                "node_id": "MDU6TGFiZWwxMDI3NjA2NjU2",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20bootcamp",
                "name": "module: bootcamp",
                "color": "f7e101",
                "default": false,
                "description": "We plan to do a full writeup on the issue, and then get someone to do it for onboarding"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-02-19T18:05:50Z",
        "updated_at": "2020-02-27T21:12:07Z",
        "closed_at": "2020-02-27T21:12:07Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "A number of JIT C++ tests hard-code IR to test aliasing and dce, e.g.,\r\n\r\n```\r\n      script::parseIR(\r\n          R\"IR(\r\n  graph():\r\n    %10 : bool = prim::Constant[value=0]()\r\n    %8 : Device? = prim::Constant()\r\n    %4 : int? = prim::Constant()\r\n    %0 : int = prim::Constant[value=2]()\r\n    %1 : int = prim::Constant[value=3]()\r\n    %2 : int[] = prim::ListConstruct(%0, %1)\r\n    %x : Tensor = aten::rand(%2, %4, %4, %8, %10)\r\n    %12 : int[] = prim::ListConstruct(%0, %1)\r\n    %y : Tensor = aten::rand(%12, %4, %4, %8, %10)\r\n    %22 : int[] = prim::ListConstruct(%0, %1)\r\n    %z : Tensor = aten::rand(%22, %4, %4, %8, %10)\r\n    %32 : int[] = prim::ListConstruct(%0, %1)\r\n    %fresh : Tensor = aten::rand(%32, %4, %4, %8, %10)\r\n    %foo : Tensor[] = prim::ListConstruct(%x, %y)\r\n    %43 : Tensor[] = aten::append(%foo, %z)\r\n    return ()\r\n  )IR\",\r\n```\r\n\r\nin `test/cpp/jit/test_alias_analysis.cpp`\r\n\r\nIR represented at this stage has had all default arguments resolved into explicit arguments in the IR. Unfortunately, this is a major source of test brittleness, because whenever the default arguments of a function change (even if the change is backwards compatible), every IR graph has to be updated (by hand!!) to reflect the default change. That's *really bad*, because it means any developer who wants to work on adding new keyword arguments to our factory functions needs to know about these JIT tests. Also, the error message when you get it wrong is crap:\r\n\r\n```\r\nRuntimeError: hasSpecialCase INTERNAL ASSERT FAILED at ../torch/csrc/jit/passes/alias_analysis.cpp:311,  please report a bug to PyTorch. We don't have an op for aten::ones but it isn't a special case. (analyzeImpl at ../torch/csrc/jit/passes/alias_analysis.cpp:311)\r\n```\r\n\r\nIn the case of the tests here, we don't really need to use `aten::rand`, any factory function would do. So let's create a fake factory function and use that in the tests, instead of directly using real functions which may need to evolve.\r\n\r\nThere are multiple IR tests in this form in the alias analysis tests as well as the DCE tests.\n\ncc @suo",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/33500/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/33500/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/33473",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/33473/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/33473/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/33473/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/33473",
        "id": 567257298,
        "node_id": "MDU6SXNzdWU1NjcyNTcyOTg=",
        "number": 33473,
        "title": "JIT does not support binary operators",
        "user": {
            "login": "twostay",
            "id": 36668182,
            "node_id": "MDQ6VXNlcjM2NjY4MTgy",
            "avatar_url": "https://avatars.githubusercontent.com/u/36668182?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/twostay",
            "html_url": "https://github.com/twostay",
            "followers_url": "https://api.github.com/users/twostay/followers",
            "following_url": "https://api.github.com/users/twostay/following{/other_user}",
            "gists_url": "https://api.github.com/users/twostay/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/twostay/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/twostay/subscriptions",
            "organizations_url": "https://api.github.com/users/twostay/orgs",
            "repos_url": "https://api.github.com/users/twostay/repos",
            "events_url": "https://api.github.com/users/twostay/events{/privacy}",
            "received_events_url": "https://api.github.com/users/twostay/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "tgrlnc",
            "id": 24687680,
            "node_id": "MDQ6VXNlcjI0Njg3Njgw",
            "avatar_url": "https://avatars.githubusercontent.com/u/24687680?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tgrlnc",
            "html_url": "https://github.com/tgrlnc",
            "followers_url": "https://api.github.com/users/tgrlnc/followers",
            "following_url": "https://api.github.com/users/tgrlnc/following{/other_user}",
            "gists_url": "https://api.github.com/users/tgrlnc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tgrlnc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tgrlnc/subscriptions",
            "organizations_url": "https://api.github.com/users/tgrlnc/orgs",
            "repos_url": "https://api.github.com/users/tgrlnc/repos",
            "events_url": "https://api.github.com/users/tgrlnc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tgrlnc/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "tgrlnc",
                "id": 24687680,
                "node_id": "MDQ6VXNlcjI0Njg3Njgw",
                "avatar_url": "https://avatars.githubusercontent.com/u/24687680?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/tgrlnc",
                "html_url": "https://github.com/tgrlnc",
                "followers_url": "https://api.github.com/users/tgrlnc/followers",
                "following_url": "https://api.github.com/users/tgrlnc/following{/other_user}",
                "gists_url": "https://api.github.com/users/tgrlnc/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/tgrlnc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tgrlnc/subscriptions",
                "organizations_url": "https://api.github.com/users/tgrlnc/orgs",
                "repos_url": "https://api.github.com/users/tgrlnc/repos",
                "events_url": "https://api.github.com/users/tgrlnc/events{/privacy}",
                "received_events_url": "https://api.github.com/users/tgrlnc/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 5,
        "created_at": "2020-02-19T01:24:42Z",
        "updated_at": "2020-04-03T21:05:27Z",
        "closed_at": "2020-04-03T21:05:27Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\nI have a code that looks like this\r\n```\r\nimport torch as tc\r\nfrom torch import jit\r\n@jit.script\r\ndef func(inp):\r\n    return inp<<1\r\na = tc.tensor([3,4,5])\r\nfunc(a)\r\n```\r\nwhen I run it, I got the error:\r\n```\r\ntorch.jit.frontend.NotSupportedError: unsupported binary operator: LShift:\r\n  File \"example.py\", line 5\r\n@jit.script\r\ndef func(inp):\r\n    return inp<<1\r\n              ~~ <--- HERE\r\n```\r\nHowever, if I change `inp<<1` to `inp.__lshift__(1)`, it works. This also happens in C++.\r\n\r\n## Expected behavior\r\n\r\nI expect the binary operators to work without changing them to the call to methods.\r\n\r\n## Environment\r\n\r\nPyTorch version: 1.4.0+cpu\r\nIs debug build: No\r\nCUDA used to build PyTorch: None\r\n\r\nOS: Microsoft Windows 10 Home\r\nGCC version: Could not collect\r\nCMake version: Could not collect\r\n\r\nPython version: 3.7\r\nIs CUDA available: No\r\nCUDA runtime version: No CUDA\r\nGPU models and configuration: No CUDA\r\nNvidia driver version: No CUDA\r\ncuDNN version: No CUDA\r\n\r\nVersions of relevant libraries:\r\n[pip3] numpy==1.16.3\r\n[pip3] torch==1.4.0+cpu\r\n[pip3] torchvision==0.5.0+cpu\r\n[conda] Could not collect\r\n## Additional context\r\n\r\nIt is not a very severe problem and I would like to fix it if I know where the source code is located.\r\n\n\ncc @suo",
        "closed_by": {
            "login": "tgrlnc",
            "id": 24687680,
            "node_id": "MDQ6VXNlcjI0Njg3Njgw",
            "avatar_url": "https://avatars.githubusercontent.com/u/24687680?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tgrlnc",
            "html_url": "https://github.com/tgrlnc",
            "followers_url": "https://api.github.com/users/tgrlnc/followers",
            "following_url": "https://api.github.com/users/tgrlnc/following{/other_user}",
            "gists_url": "https://api.github.com/users/tgrlnc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tgrlnc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tgrlnc/subscriptions",
            "organizations_url": "https://api.github.com/users/tgrlnc/orgs",
            "repos_url": "https://api.github.com/users/tgrlnc/repos",
            "events_url": "https://api.github.com/users/tgrlnc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tgrlnc/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/33473/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/33473/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/33447",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/33447/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/33447/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/33447/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/33447",
        "id": 567048834,
        "node_id": "MDU6SXNzdWU1NjcwNDg4MzQ=",
        "number": 33447,
        "title": "TestJitFuser is flaky on windows",
        "user": {
            "login": "ailzhang",
            "id": 5248122,
            "node_id": "MDQ6VXNlcjUyNDgxMjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5248122?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ailzhang",
            "html_url": "https://github.com/ailzhang",
            "followers_url": "https://api.github.com/users/ailzhang/followers",
            "following_url": "https://api.github.com/users/ailzhang/following{/other_user}",
            "gists_url": "https://api.github.com/users/ailzhang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ailzhang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ailzhang/subscriptions",
            "organizations_url": "https://api.github.com/users/ailzhang/orgs",
            "repos_url": "https://api.github.com/users/ailzhang/repos",
            "events_url": "https://api.github.com/users/ailzhang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ailzhang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 443484135,
                "node_id": "MDU6TGFiZWw0NDM0ODQxMzU=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/high%20priority",
                "name": "high priority",
                "color": "F22613",
                "default": false,
                "description": null
            },
            {
                "id": 466131885,
                "node_id": "MDU6TGFiZWw0NjYxMzE4ODU=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triage%20review",
                "name": "triage review",
                "color": "cc317c",
                "default": false,
                "description": ""
            },
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1301397902,
                "node_id": "MDU6TGFiZWwxMzAxMzk3OTAy",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20flaky-tests",
                "name": "module: flaky-tests",
                "color": "f7e101",
                "default": false,
                "description": "Problem is a flaky test in CI"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2020-02-18T17:32:08Z",
        "updated_at": "2020-02-18T17:41:36Z",
        "closed_at": "2020-02-18T17:41:36Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "Error messages are too abstract..\r\nLink to circleci log: https://app.circleci.com/jobs/github/pytorch/pytorch/4513748\r\nPR doesn't seem to be related to the failure: https://github.com/pytorch/pytorch/pull/33409\r\n```\r\n======================================================================\r\nERROR: test_abs_cpu (__main__.TestFuser)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\circleci\\project\\build\\win_tmp\\build\\torch\\testing\\_internal\\jit_utils.py\", line 592, in wrapper\r\n    fn(*args, **kwargs)\r\n  File \"test_jit_fuser.py\", line 79, in test_abs_cpu\r\n    self._test_fused_abs()\r\n  File \"test_jit_fuser.py\", line 74, in _test_fused_abs\r\n    self.assertAllFused(func.graph_for(a))\r\n  File \"C:\\Users\\circleci\\project\\build\\win_tmp\\build\\torch\\jit\\__init__.py\", line 2094, in _graph_for\r\n    self(*args, **kwargs)\r\n  File \"C:\\Users\\circleci\\project\\build\\win_tmp\\build\\torch\\testing\\_internal\\common_utils.py\", line 87, in prof_func_call\r\n    return prof_callable(func_call, *args, **kwargs)\r\n  File \"C:\\Users\\circleci\\project\\build\\win_tmp\\build\\torch\\testing\\_internal\\common_utils.py\", line 84, in prof_callable\r\n    return callable(*args, **kwargs)\r\nRuntimeError: Caught an unknown exception!\r\n\r\n======================================================================\r\n\r\n\r\n```\n\ncc @ezyang @gchanan @zou3519 @suo",
        "closed_by": {
            "login": "ailzhang",
            "id": 5248122,
            "node_id": "MDQ6VXNlcjUyNDgxMjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5248122?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ailzhang",
            "html_url": "https://github.com/ailzhang",
            "followers_url": "https://api.github.com/users/ailzhang/followers",
            "following_url": "https://api.github.com/users/ailzhang/following{/other_user}",
            "gists_url": "https://api.github.com/users/ailzhang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ailzhang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ailzhang/subscriptions",
            "organizations_url": "https://api.github.com/users/ailzhang/orgs",
            "repos_url": "https://api.github.com/users/ailzhang/repos",
            "events_url": "https://api.github.com/users/ailzhang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ailzhang/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/33447/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/33447/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/33412",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/33412/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/33412/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/33412/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/33412",
        "id": 566076858,
        "node_id": "MDU6SXNzdWU1NjYwNzY4NTg=",
        "number": 33412,
        "title": "argsort not found when ONNX exporting [JIT]",
        "user": {
            "login": "Godricly",
            "id": 17567935,
            "node_id": "MDQ6VXNlcjE3NTY3OTM1",
            "avatar_url": "https://avatars.githubusercontent.com/u/17567935?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Godricly",
            "html_url": "https://github.com/Godricly",
            "followers_url": "https://api.github.com/users/Godricly/followers",
            "following_url": "https://api.github.com/users/Godricly/following{/other_user}",
            "gists_url": "https://api.github.com/users/Godricly/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Godricly/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Godricly/subscriptions",
            "organizations_url": "https://api.github.com/users/Godricly/orgs",
            "repos_url": "https://api.github.com/users/Godricly/repos",
            "events_url": "https://api.github.com/users/Godricly/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Godricly/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 693805995,
                "node_id": "MDU6TGFiZWw2OTM4MDU5OTU=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20onnx",
                "name": "module: onnx",
                "color": "f7e101",
                "default": false,
                "description": "Related to torch.onnx"
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2020-02-17T06:06:33Z",
        "updated_at": "2021-07-26T09:13:18Z",
        "closed_at": "2021-07-23T00:59:11Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "# \ud83d\udc1b Bug\r\nThe `Tensor.argsort()` is not supported in onnx export. While the `Tensor.sort()` is supported by topK.\r\n## To Reproduce\r\nSteps to reproduce the behavior:\r\n\r\n1. run the scripts\r\n```python\r\nimport torch\r\nfrom torch import nn\r\nimport numpy as np\r\n\r\nclass Demo(torch.nn.Module):\r\n    def __init__(self):\r\n        super().__init__()\r\n\r\n    def forward(self, x):\r\n        v, inds = x.sort(descending=True)\r\n        # inds = x.argsort(descending=True)\r\n        return inds\r\n\r\nif __name__ == \"__main__\":\r\n    input_tensor = torch.range(20, 80)\r\n    demo = Demo()\r\n    out = demo(input_tensor)\r\n    torch.onnx.export(demo, input_tensor, \"debug.onnx\", verbose=True,\r\n                        input_names=['data'],\r\n                        opset_version=11,\r\n                        do_constant_folding=True,\r\n                        dynamic_axes={'data':{0:'batch'}})\r\n```\r\n## Expected behavior\r\n\r\n  File \"/home/god/python36/lib/python3.6/site-packages/torch/onnx/symbolic_registry.py\", line 91, in get_registered_op\r\n    return _registry[(domain, version)][opname]\r\nKeyError: 'argsort'\r\n\r\n## Environment\r\n\r\nPlease copy and paste the output from our\r\n[environment collection script](https://raw.githubusercontent.com/pytorch/pytorch/master/torch/utils/collect_env.py)\r\n(or fill out the checklist below manually).\r\n\r\nYou can get the script and run it with:\r\nCollecting environment information...\r\nPyTorch version: 1.4.0\r\nIs debug build: No\r\nCUDA used to build PyTorch: 10.1\r\n\r\nOS: Ubuntu 18.04.3 LTS\r\nGCC version: (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0\r\nCMake version: version 3.15.3\r\n\r\nPython version: 3.6\r\nIs CUDA available: Yes\r\nCUDA runtime version: 10.1.243\r\nGPU models and configuration: GPU 0: GeForce GTX 1080\r\nNvidia driver version: 430.50\r\ncuDNN version: /usr/lib/x86_64-linux-gnu/libcudnn.so.7.6.3\r\n\r\nVersions of relevant libraries:\r\n[pip3] numpy==1.17.2\r\n[pip3] torch==1.4.0\r\n[pip3] torchvision==0.5.0\r\n[conda] Could not collect\r\n\r\n\r\n## Additional context\r\nexport result of `Tensor.sort()`\r\n```bash\r\n  input_tensor = torch.range(20, 80)\r\ngraph(%data : Float(61)):\r\n  %1 : Float(61), %2 : Long(61) = onnx::TopK[axis=-1, k=61](%data) # onnx.py:10:0\r\n  return (%2)\r\n```\r\n\n\ncc @suo @houseroad @spandantiwari @lara-hdr @BowenBao @neginraoof",
        "closed_by": {
            "login": "Godricly",
            "id": 17567935,
            "node_id": "MDQ6VXNlcjE3NTY3OTM1",
            "avatar_url": "https://avatars.githubusercontent.com/u/17567935?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Godricly",
            "html_url": "https://github.com/Godricly",
            "followers_url": "https://api.github.com/users/Godricly/followers",
            "following_url": "https://api.github.com/users/Godricly/following{/other_user}",
            "gists_url": "https://api.github.com/users/Godricly/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Godricly/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Godricly/subscriptions",
            "organizations_url": "https://api.github.com/users/Godricly/orgs",
            "repos_url": "https://api.github.com/users/Godricly/repos",
            "events_url": "https://api.github.com/users/Godricly/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Godricly/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/33412/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/33412/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/33401",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/33401/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/33401/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/33401/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/33401",
        "id": 565920741,
        "node_id": "MDU6SXNzdWU1NjU5MjA3NDE=",
        "number": 33401,
        "title": "test_jit_fuser is flaky on Windows",
        "user": {
            "login": "peterjc123",
            "id": 9998726,
            "node_id": "MDQ6VXNlcjk5OTg3MjY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9998726?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/peterjc123",
            "html_url": "https://github.com/peterjc123",
            "followers_url": "https://api.github.com/users/peterjc123/followers",
            "following_url": "https://api.github.com/users/peterjc123/following{/other_user}",
            "gists_url": "https://api.github.com/users/peterjc123/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/peterjc123/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/peterjc123/subscriptions",
            "organizations_url": "https://api.github.com/users/peterjc123/orgs",
            "repos_url": "https://api.github.com/users/peterjc123/repos",
            "events_url": "https://api.github.com/users/peterjc123/events{/privacy}",
            "received_events_url": "https://api.github.com/users/peterjc123/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 443484135,
                "node_id": "MDU6TGFiZWw0NDM0ODQxMzU=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/high%20priority",
                "name": "high priority",
                "color": "F22613",
                "default": false,
                "description": null
            },
            {
                "id": 466131885,
                "node_id": "MDU6TGFiZWw0NjYxMzE4ODU=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triage%20review",
                "name": "triage review",
                "color": "cc317c",
                "default": false,
                "description": ""
            },
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1301397902,
                "node_id": "MDU6TGFiZWwxMzAxMzk3OTAy",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20flaky-tests",
                "name": "module: flaky-tests",
                "color": "f7e101",
                "default": false,
                "description": "Problem is a flaky test in CI"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2020-02-16T15:14:13Z",
        "updated_at": "2020-02-18T19:04:33Z",
        "closed_at": "2020-02-18T19:04:33Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\n<!-- A clear and concise description of what the bug is. -->\r\n\r\nError text:\r\n```pytb\r\n======================================================================\r\nERROR: test_abs_cpu (__main__.TestFuser)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\circleci\\project\\build\\win_tmp\\build\\torch\\testing\\_internal\\jit_utils.py\", line 592, in wrapper\r\n    fn(*args, **kwargs)\r\n  File \"test_jit_fuser.py\", line 79, in test_abs_cpu\r\n    self._test_fused_abs()\r\n  File \"test_jit_fuser.py\", line 74, in _test_fused_abs\r\n    self.assertAllFused(func.graph_for(a))\r\n  File \"C:\\Users\\circleci\\project\\build\\win_tmp\\build\\torch\\jit\\__init__.py\", line 2094, in _graph_for\r\n    self(*args, **kwargs)\r\n  File \"C:\\Users\\circleci\\project\\build\\win_tmp\\build\\torch\\testing\\_internal\\common_utils.py\", line 87, in prof_func_call\r\n    return prof_callable(func_call, *args, **kwargs)\r\n  File \"C:\\Users\\circleci\\project\\build\\win_tmp\\build\\torch\\testing\\_internal\\common_utils.py\", line 84, in prof_callable\r\n    return callable(*args, **kwargs)\r\nRuntimeError: Caught an unknown exception!\r\n\r\n======================================================================\r\nERROR: test_chunk_correctness (__main__.TestFuser)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\circleci\\project\\build\\win_tmp\\build\\torch\\testing\\_internal\\jit_utils.py\", line 592, in wrapper\r\n    fn(*args, **kwargs)\r\n  File \"test_jit_fuser.py\", line 223, in test_chunk_correctness\r\n    return self._test_chunk_correctness(self, 'cpu')\r\n  File \"test_jit_fuser.py\", line 218, in _test_chunk_correctness\r\n    self.checkScript(fn, [tensor])\r\n  File \"C:\\Users\\circleci\\project\\build\\win_tmp\\build\\torch\\testing\\_internal\\jit_utils.py\", line 398, in checkScript\r\n    opt_script_outputs = scripted_fn(*recording_inputs)\r\n  File \"C:\\Users\\circleci\\project\\build\\win_tmp\\build\\torch\\testing\\_internal\\common_utils.py\", line 87, in prof_func_call\r\n    return prof_callable(func_call, *args, **kwargs)\r\n  File \"C:\\Users\\circleci\\project\\build\\win_tmp\\build\\torch\\testing\\_internal\\common_utils.py\", line 84, in prof_callable\r\n    return callable(*args, **kwargs)\r\nRuntimeError: Caught an unknown exception!\r\n\r\n======================================================================\r\nERROR: test_scalar (__main__.TestFuser)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\circleci\\project\\build\\win_tmp\\build\\torch\\testing\\_internal\\jit_utils.py\", line 592, in wrapper\r\n    fn(*args, **kwargs)\r\n  File \"test_jit_fuser.py\", line 851, in test_scalar\r\n    ge = self.checkScript(fn, (x, y))\r\n  File \"C:\\Users\\circleci\\project\\build\\win_tmp\\build\\torch\\testing\\_internal\\jit_utils.py\", line 398, in checkScript\r\n    opt_script_outputs = scripted_fn(*recording_inputs)\r\n  File \"C:\\Users\\circleci\\project\\build\\win_tmp\\build\\torch\\testing\\_internal\\common_utils.py\", line 87, in prof_func_call\r\n    return prof_callable(func_call, *args, **kwargs)\r\n  File \"C:\\Users\\circleci\\project\\build\\win_tmp\\build\\torch\\testing\\_internal\\common_utils.py\", line 84, in prof_callable\r\n    return callable(*args, **kwargs)\r\nRuntimeError: Caught an unknown exception!\r\n\r\n======================================================================\r\nERROR: test_where_and_typing (__main__.TestFuser)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\circleci\\project\\build\\win_tmp\\build\\torch\\testing\\_internal\\jit_utils.py\", line 592, in wrapper\r\n    fn(*args, **kwargs)\r\n  File \"test_jit_fuser.py\", line 906, in test_where_and_typing\r\n    self.assertAllFused(script_f.graph_for(x, y), except_for={'prim::TupleConstruct'})\r\n  File \"C:\\Users\\circleci\\project\\build\\win_tmp\\build\\torch\\jit\\__init__.py\", line 2094, in _graph_for\r\n    self(*args, **kwargs)\r\n  File \"C:\\Users\\circleci\\project\\build\\win_tmp\\build\\torch\\testing\\_internal\\common_utils.py\", line 87, in prof_func_call\r\n    return prof_callable(func_call, *args, **kwargs)\r\n  File \"C:\\Users\\circleci\\project\\build\\win_tmp\\build\\torch\\testing\\_internal\\common_utils.py\", line 84, in prof_callable\r\n    return callable(*args, **kwargs)\r\nRuntimeError: Caught an unknown exception!\r\n\r\n----------------------------------------------------------------------\r\nRan 46 tests in 11.883s\r\n\r\nFAILED (errors=4, skipped=10)\r\nTraceback (most recent call last):\r\n  File \"run_test.py\", line 486, in <module>\r\n    main()\r\n  File \"run_test.py\", line 479, in main\r\n    raise RuntimeError(message)\r\nRuntimeError: test_jit_fuser failed!\r\n```\r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior:\r\n\r\n1. python setup.py build\r\n2. python run_test,py -i jit_fuser\r\n\r\n<!-- If you have a code sample, error messages, stack traces, please provide it here as well -->\r\n\r\n## Expected behavior\r\n\r\n<!-- A clear and concise description of what you expected to happen. -->\r\n\r\n## Environment\r\n\r\nPlease copy and paste the output from our\r\n[environment collection script](https://raw.githubusercontent.com/pytorch/pytorch/master/torch/utils/collect_env.py)\r\n(or fill out the checklist below manually).\r\n\r\nYou can get the script and run it with:\r\n```\r\nwget https://raw.githubusercontent.com/pytorch/pytorch/master/torch/utils/collect_env.py\r\n# For security purposes, please check the contents of collect_env.py before running it.\r\npython collect_env.py\r\n```\r\n\r\n - PyTorch Version (e.g., 1.0): master\r\n - OS (e.g., Linux): Windows\r\n - How you installed PyTorch (`conda`, `pip`, source): source\r\n - Build command you used (if compiling from source): source\r\n - Python version: 3.6\r\n - CUDA/cuDNN version: 10.1\r\n - GPU models and configuration: Tesla P4\r\n - Any other relevant information:\r\n\r\n## Additional context\r\n\r\n<!-- Add any other context about the problem here. -->\r\nThis is likely due to the AVX512 auto vectorizer supported in the latest build of VS 2019. I'll try to figure out how to correctly detect whether it is supported on a client machine.\r\n\r\n\r\ncc @ezyang @gchanan @zou3519 @suo",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/33401/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/33401/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/33258",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/33258/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/33258/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/33258/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/33258",
        "id": 564369798,
        "node_id": "MDU6SXNzdWU1NjQzNjk3OTg=",
        "number": 33258,
        "title": "Freezing TorchScript Modules ",
        "user": {
            "login": "bzinodev",
            "id": 55170918,
            "node_id": "MDQ6VXNlcjU1MTcwOTE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/55170918?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bzinodev",
            "html_url": "https://github.com/bzinodev",
            "followers_url": "https://api.github.com/users/bzinodev/followers",
            "following_url": "https://api.github.com/users/bzinodev/following{/other_user}",
            "gists_url": "https://api.github.com/users/bzinodev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bzinodev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bzinodev/subscriptions",
            "organizations_url": "https://api.github.com/users/bzinodev/orgs",
            "repos_url": "https://api.github.com/users/bzinodev/repos",
            "events_url": "https://api.github.com/users/bzinodev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bzinodev/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "bzinodev",
            "id": 55170918,
            "node_id": "MDQ6VXNlcjU1MTcwOTE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/55170918?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bzinodev",
            "html_url": "https://github.com/bzinodev",
            "followers_url": "https://api.github.com/users/bzinodev/followers",
            "following_url": "https://api.github.com/users/bzinodev/following{/other_user}",
            "gists_url": "https://api.github.com/users/bzinodev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bzinodev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bzinodev/subscriptions",
            "organizations_url": "https://api.github.com/users/bzinodev/orgs",
            "repos_url": "https://api.github.com/users/bzinodev/repos",
            "events_url": "https://api.github.com/users/bzinodev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bzinodev/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "bzinodev",
                "id": 55170918,
                "node_id": "MDQ6VXNlcjU1MTcwOTE4",
                "avatar_url": "https://avatars.githubusercontent.com/u/55170918?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/bzinodev",
                "html_url": "https://github.com/bzinodev",
                "followers_url": "https://api.github.com/users/bzinodev/followers",
                "following_url": "https://api.github.com/users/bzinodev/following{/other_user}",
                "gists_url": "https://api.github.com/users/bzinodev/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/bzinodev/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bzinodev/subscriptions",
                "organizations_url": "https://api.github.com/users/bzinodev/orgs",
                "repos_url": "https://api.github.com/users/bzinodev/repos",
                "events_url": "https://api.github.com/users/bzinodev/events{/privacy}",
                "received_events_url": "https://api.github.com/users/bzinodev/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-02-13T00:48:53Z",
        "updated_at": "2020-10-22T17:59:37Z",
        "closed_at": "2020-10-22T17:59:37Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "PyTorch is a powerful programming language. It provides several attractive features to support ML community. However, it poses significant challenges to optimize and/or to target hardware capabilities. One of the roadblocks is that PyTorch Modules carry global state that can be mutated from outside the module. This limits Torch JIT ability to perform optimizations. \r\n\r\nFreezing allows the assumption all attribute values are **final** which enables the following optimizations: \r\n\r\n- Internalization of all immutable attributes as a constant.\r\n- Aggressively apply Torch JIT optimizations to clean up and lower the graph. \r\n- Enable Post-freezing optimizations, For example: data layout optimizations, quantization and related optimizations, or lowering PyTorch to foreign backend specific IR.\r\n\r\nAt 10.000 feet, freezing works as described below: \r\n\r\n- Clone the original module, including its class type and deep copy its attribute values.\r\n- Inlined attribute values as well as calls to method into forward function.\r\n- Run Torch JIT optimizations.\r\n- Clean up cloned module by deleting all attributes, submodules, and non forward method.\r\n\r\nSee   [PR](https://github.com/pytorch/pytorch/pull/32178). Several tests are included describing the handling of some edge cases. \r\n \r\n## Motivation\r\nFreezing is suitable for inference where all attributes/parameter are final. Freezing provides a safe/sound IR that allows TorchScript to perform aggressive optimizations. The IR is lowered and becomes more suitable to lower to low-level IR for targeting various hardware. \r\n \r\n[optimization pipeline.pdf](https://github.com/pytorch/pytorch/files/4195286/optimization.pipeline.pdf)\r\n\r\n## Proposed API\r\n\r\n```python\r\norig_module = torch.jit.script(MyModel())   # or trace, or load\r\nfrozen_module = torch.jit.freeze(orig_module)   # In current PR torch._C._freeze_module(orig_module)\r\nprint(orig_module.weight) # Works\r\nexpect_throw(print(frozen_module.weight)) # Fails because all attributes are removed\r\n```\r\n\r\nUser can preserve non forward methods using interfaces: \r\n\r\n```python\r\n@torch.jit.interface\r\nclass RequestedIFace(object):\r\n    def one(self, x, y):\r\n        # type: (Tensor, Tensor) -> Tensor\r\n        pass\r\n\r\n    def two(self, x):\r\n        # type: (Tensor) -> Tensor\r\n        pass\r\n      \r\norig_module = torch.jit.script(MyModel()) # or trace, or load\r\nfrozen_module = freeze(orig_module, iface=RequestedIFace)\r\nfrozen_module.two(x,y) # works\r\n```\r\nBefore folding an attribute as a constant value, Freezing is responsible to verify that attributes do not mutate internally. In this case, the attribute is preserved. \r\n\r\n### inplace freezing \r\nOne useful feature is to enable inplace freezing which allows to reuse the data of the original module without copying. To enable such a functionality we need to freeze tensor (make it read only, or deleting tensor so that no other alias outside module can access it). Inplace freezing is beyond the current proposal as it requires further support in Pytorch.\r\n\r\n\r\n### Alternatives\r\n- Tensor freezing? It benefits eager mode too. As discussed above freezing tensors is a useful feature for TorchScript as well. \r\n\r\n\r\ncc @suo",
        "closed_by": {
            "login": "bzinodev",
            "id": 55170918,
            "node_id": "MDQ6VXNlcjU1MTcwOTE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/55170918?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bzinodev",
            "html_url": "https://github.com/bzinodev",
            "followers_url": "https://api.github.com/users/bzinodev/followers",
            "following_url": "https://api.github.com/users/bzinodev/following{/other_user}",
            "gists_url": "https://api.github.com/users/bzinodev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bzinodev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bzinodev/subscriptions",
            "organizations_url": "https://api.github.com/users/bzinodev/orgs",
            "repos_url": "https://api.github.com/users/bzinodev/repos",
            "events_url": "https://api.github.com/users/bzinodev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bzinodev/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/33258/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/33258/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/32973",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/32973/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/32973/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/32973/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/32973",
        "id": 559811814,
        "node_id": "MDU6SXNzdWU1NTk4MTE4MTQ=",
        "number": 32973,
        "title": "[jit] augmented assignment on int attributes doesn't work",
        "user": {
            "login": "alanhdu",
            "id": 1914111,
            "node_id": "MDQ6VXNlcjE5MTQxMTE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1914111?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alanhdu",
            "html_url": "https://github.com/alanhdu",
            "followers_url": "https://api.github.com/users/alanhdu/followers",
            "following_url": "https://api.github.com/users/alanhdu/following{/other_user}",
            "gists_url": "https://api.github.com/users/alanhdu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alanhdu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alanhdu/subscriptions",
            "organizations_url": "https://api.github.com/users/alanhdu/orgs",
            "repos_url": "https://api.github.com/users/alanhdu/repos",
            "events_url": "https://api.github.com/users/alanhdu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alanhdu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-02-04T15:54:50Z",
        "updated_at": "2020-02-21T16:44:27Z",
        "closed_at": "2020-02-21T16:44:27Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "## \ud83d\ude80 Feature\r\n\r\nIt'd be nice of TorchScript could support assigning to fields with simple Python types (e.g. non-tensors). For example:\r\n\r\n```python\r\nimport torch\r\nimport torch.nn as nn\r\n\r\nclass A(nn.Module):\r\n    def __init__(self):\r\n        super().__init__()\r\n        self.x: int = 0    # int field\r\n    def forward(self):\r\n        self.x += 1       # fails to script\r\n        return self.x\r\n```\r\n\r\n## Motivation\r\n\r\nI'm writing a real-time streaming wrapper around some of PyTorch's modules so that they an run online, sample-by-sample. For convolutions, this requires some bookkeeping to buffer up the receptive field that requires incrementing and decrementing various counters, which would be nice to support natively in Torchscript.\r\n\r\n## Alternatives\r\n\r\nCurrently, we're working around this by using 0d \"scalar\" tensors (e.g. `torch.tensor(0)`). This works, but it's not really ideal (it requires verbose `dtype` annotations, it means that these counters could be moved to the GPU unnecessarily, it's requires some amount of boilerplate).\r\n\r\n## Additional context\r\n\r\n<!-- Add any other context or screenshots about the feature request here. -->\r\n\n\ncc @suo",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/32973/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/32973/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/32605",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/32605/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/32605/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/32605/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/32605",
        "id": 555013766,
        "node_id": "MDU6SXNzdWU1NTUwMTM3NjY=",
        "number": 32605,
        "title": "[jit] PackedSequence flips some outputs",
        "user": {
            "login": "driazati",
            "id": 9407960,
            "node_id": "MDQ6VXNlcjk0MDc5NjA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9407960?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/driazati",
            "html_url": "https://github.com/driazati",
            "followers_url": "https://api.github.com/users/driazati/followers",
            "following_url": "https://api.github.com/users/driazati/following{/other_user}",
            "gists_url": "https://api.github.com/users/driazati/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/driazati/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/driazati/subscriptions",
            "organizations_url": "https://api.github.com/users/driazati/orgs",
            "repos_url": "https://api.github.com/users/driazati/repos",
            "events_url": "https://api.github.com/users/driazati/events{/privacy}",
            "received_events_url": "https://api.github.com/users/driazati/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "driazati",
            "id": 9407960,
            "node_id": "MDQ6VXNlcjk0MDc5NjA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9407960?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/driazati",
            "html_url": "https://github.com/driazati",
            "followers_url": "https://api.github.com/users/driazati/followers",
            "following_url": "https://api.github.com/users/driazati/following{/other_user}",
            "gists_url": "https://api.github.com/users/driazati/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/driazati/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/driazati/subscriptions",
            "organizations_url": "https://api.github.com/users/driazati/orgs",
            "repos_url": "https://api.github.com/users/driazati/repos",
            "events_url": "https://api.github.com/users/driazati/events{/privacy}",
            "received_events_url": "https://api.github.com/users/driazati/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "driazati",
                "id": 9407960,
                "node_id": "MDQ6VXNlcjk0MDc5NjA=",
                "avatar_url": "https://avatars.githubusercontent.com/u/9407960?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/driazati",
                "html_url": "https://github.com/driazati",
                "followers_url": "https://api.github.com/users/driazati/followers",
                "following_url": "https://api.github.com/users/driazati/following{/other_user}",
                "gists_url": "https://api.github.com/users/driazati/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/driazati/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/driazati/subscriptions",
                "organizations_url": "https://api.github.com/users/driazati/orgs",
                "repos_url": "https://api.github.com/users/driazati/repos",
                "events_url": "https://api.github.com/users/driazati/events{/privacy}",
                "received_events_url": "https://api.github.com/users/driazati/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-01-25T00:22:57Z",
        "updated_at": "2020-02-27T02:55:26Z",
        "closed_at": "2020-02-27T02:55:26Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "In this repro, returning `packed` shows that `pack_padded_sequence` is different in script/eager since `unsorted_indices` is `None` in script and `[1, 0]` in eager. `pad_packed_sequence` has a similar problem.\r\n\r\n* Only happens when `enforce_sorted=False`\r\n```python\r\nclass ExperimentalLSTM(torch.nn.Module):\r\n    def __init__(self, input_dim, hidden_dim):\r\n        super().__init__()\r\n\r\n    def forward(self, input):\r\n        # type: (Tensor)\r\n        packed = torch.nn.utils.rnn.pack_padded_sequence(\r\n            input=input, lengths=torch.tensor([1, 2]), enforce_sorted=False\r\n        )\r\n        return packed\r\n        # packed is\r\n        # PackedSequence\r\n        #     data\r\n        #     batch_sizes\r\n        #     sorted_indices\r\n        #     unsorted_indices (this is the only different one, it's None in script)\r\n\r\n        # output, lengths = torch.nn.utils.rnn.pad_packed_sequence(\r\n        #     sequence=packed, total_length=2\r\n        # )\r\n        # # lengths is flipped, so is output\r\n        # return output[0]\r\n\r\nlstm = ExperimentalLSTM(input_dim=2, hidden_dim=2)\r\nlstm = lstm.eval()\r\n\r\nbatch_size = 2\r\n\r\ninput = torch.arange(batch_size * 2 * 2).view(batch_size, 2, 2).float()\r\nscript_lstm = torch.jit.script(lstm)\r\nscript_out = script_lstm(input)\r\ntorch._C._jit_set_inline_everything_mode(False)\r\n# print(script_lstm.graph)\r\nprint(\"script result\\n{}\".format(script_out))\r\n\r\nprint(\"\\n\")\r\neager_out = lstm(input)\r\nprint(\"eager result\\n{}\".format(eager_out))\r\n```\r\n\r\ncc @suo",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/32605/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/32605/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/32519",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/32519/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/32519/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/32519/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/32519",
        "id": 553902458,
        "node_id": "MDU6SXNzdWU1NTM5MDI0NTg=",
        "number": 32519,
        "title": "torch::jit::script::Module::clone() is not actually cloning parameters",
        "user": {
            "login": "ziyuv",
            "id": 47792604,
            "node_id": "MDQ6VXNlcjQ3NzkyNjA0",
            "avatar_url": "https://avatars.githubusercontent.com/u/47792604?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ziyuv",
            "html_url": "https://github.com/ziyuv",
            "followers_url": "https://api.github.com/users/ziyuv/followers",
            "following_url": "https://api.github.com/users/ziyuv/following{/other_user}",
            "gists_url": "https://api.github.com/users/ziyuv/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ziyuv/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ziyuv/subscriptions",
            "organizations_url": "https://api.github.com/users/ziyuv/orgs",
            "repos_url": "https://api.github.com/users/ziyuv/repos",
            "events_url": "https://api.github.com/users/ziyuv/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ziyuv/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 443484135,
                "node_id": "MDU6TGFiZWw0NDM0ODQxMzU=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/high%20priority",
                "name": "high priority",
                "color": "F22613",
                "default": false,
                "description": null
            },
            {
                "id": 466131885,
                "node_id": "MDU6TGFiZWw0NjYxMzE4ODU=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triage%20review",
                "name": "triage review",
                "color": "cc317c",
                "default": false,
                "description": ""
            },
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "jerryzh168",
            "id": 4958441,
            "node_id": "MDQ6VXNlcjQ5NTg0NDE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4958441?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryzh168",
            "html_url": "https://github.com/jerryzh168",
            "followers_url": "https://api.github.com/users/jerryzh168/followers",
            "following_url": "https://api.github.com/users/jerryzh168/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryzh168/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryzh168/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryzh168/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryzh168/orgs",
            "repos_url": "https://api.github.com/users/jerryzh168/repos",
            "events_url": "https://api.github.com/users/jerryzh168/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryzh168/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "jerryzh168",
                "id": 4958441,
                "node_id": "MDQ6VXNlcjQ5NTg0NDE=",
                "avatar_url": "https://avatars.githubusercontent.com/u/4958441?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/jerryzh168",
                "html_url": "https://github.com/jerryzh168",
                "followers_url": "https://api.github.com/users/jerryzh168/followers",
                "following_url": "https://api.github.com/users/jerryzh168/following{/other_user}",
                "gists_url": "https://api.github.com/users/jerryzh168/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/jerryzh168/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jerryzh168/subscriptions",
                "organizations_url": "https://api.github.com/users/jerryzh168/orgs",
                "repos_url": "https://api.github.com/users/jerryzh168/repos",
                "events_url": "https://api.github.com/users/jerryzh168/events{/privacy}",
                "received_events_url": "https://api.github.com/users/jerryzh168/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 13,
        "created_at": "2020-01-23T02:25:40Z",
        "updated_at": "2021-03-12T09:48:30Z",
        "closed_at": "2020-04-29T01:49:32Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\nIf you take a look at the highlighted section: https://github.com/pytorch/pytorch/blob/4314620ba05bc1867f6a63455c4ac77fdfb1018d/torch/csrc/jit/script/module.cpp#L191-L203, you would notice that when `IValue s` is not a module, `Module r` will simply register it. Therefore, the new module will share the same parameters.\r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior:\r\n\r\n1. Load any TorchScript model `model`\r\n2. Run `clone = model.clone()`\r\n3. Find any parameter in `model` and that same parameter in `clone`, `isAliasOf` will evaluate to `true`\r\n\r\n## Expected behavior\r\n\r\nExpect `clone()` to deep copy  everything in a TorchScript model.\r\n\r\n## Environment\r\n\r\nN/A\r\n\r\n## Additional context\r\n\r\nN/A\r\n\n\ncc @ezyang @gchanan @zou3519 @suo",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/32519/reactions",
            "total_count": 2,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 2
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/32519/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/32139",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/32139/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/32139/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/32139/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/32139",
        "id": 549225353,
        "node_id": "MDU6SXNzdWU1NDkyMjUzNTM=",
        "number": 32139,
        "title": "python error UnboundLocalError in jit/frontend.py",
        "user": {
            "login": "arvrmd",
            "id": 59850353,
            "node_id": "MDQ6VXNlcjU5ODUwMzUz",
            "avatar_url": "https://avatars.githubusercontent.com/u/59850353?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arvrmd",
            "html_url": "https://github.com/arvrmd",
            "followers_url": "https://api.github.com/users/arvrmd/followers",
            "following_url": "https://api.github.com/users/arvrmd/following{/other_user}",
            "gists_url": "https://api.github.com/users/arvrmd/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arvrmd/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arvrmd/subscriptions",
            "organizations_url": "https://api.github.com/users/arvrmd/orgs",
            "repos_url": "https://api.github.com/users/arvrmd/repos",
            "events_url": "https://api.github.com/users/arvrmd/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arvrmd/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "driazati",
            "id": 9407960,
            "node_id": "MDQ6VXNlcjk0MDc5NjA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9407960?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/driazati",
            "html_url": "https://github.com/driazati",
            "followers_url": "https://api.github.com/users/driazati/followers",
            "following_url": "https://api.github.com/users/driazati/following{/other_user}",
            "gists_url": "https://api.github.com/users/driazati/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/driazati/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/driazati/subscriptions",
            "organizations_url": "https://api.github.com/users/driazati/orgs",
            "repos_url": "https://api.github.com/users/driazati/repos",
            "events_url": "https://api.github.com/users/driazati/events{/privacy}",
            "received_events_url": "https://api.github.com/users/driazati/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "driazati",
                "id": 9407960,
                "node_id": "MDQ6VXNlcjk0MDc5NjA=",
                "avatar_url": "https://avatars.githubusercontent.com/u/9407960?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/driazati",
                "html_url": "https://github.com/driazati",
                "followers_url": "https://api.github.com/users/driazati/followers",
                "following_url": "https://api.github.com/users/driazati/following{/other_user}",
                "gists_url": "https://api.github.com/users/driazati/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/driazati/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/driazati/subscriptions",
                "organizations_url": "https://api.github.com/users/driazati/orgs",
                "repos_url": "https://api.github.com/users/driazati/repos",
                "events_url": "https://api.github.com/users/driazati/events{/privacy}",
                "received_events_url": "https://api.github.com/users/driazati/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-01-13T22:44:03Z",
        "updated_at": "2020-01-14T23:18:31Z",
        "closed_at": "2020-01-14T23:18:31Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\nOne of the error cases in the function ```build_param_list``` uses ```ctx_range``` without defining it, in the following context:\r\n```\r\n    if not PY2 and py_args.kw_defaults:\r\n        raise NotSupportedError(ctx_range, _vararg_kwarg_err)\r\n```\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior:\r\n\r\nI was using ```torch.jit.script()``` on a large module, and since it's the error reporting that's failing I don't have a line reference. By inspection, however, I believe the unsupported feature was the asterisk in the following function definition:\r\n```\r\n    @torch.jit.export\r\n    def initState(self, *, n_tokens: int, device_name: str) -> None:\r\n```\r\n\r\n## Expected behavior\r\n\r\nRelevant error message should be reported.\n\ncc @suo",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/32139/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/32139/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/31950",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/31950/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/31950/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/31950/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/31950",
        "id": 547030077,
        "node_id": "MDU6SXNzdWU1NDcwMzAwNzc=",
        "number": 31950,
        "title": "Device Object doesn't work as JIT annotation in PY3",
        "user": {
            "login": "eellison",
            "id": 11477974,
            "node_id": "MDQ6VXNlcjExNDc3OTc0",
            "avatar_url": "https://avatars.githubusercontent.com/u/11477974?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eellison",
            "html_url": "https://github.com/eellison",
            "followers_url": "https://api.github.com/users/eellison/followers",
            "following_url": "https://api.github.com/users/eellison/following{/other_user}",
            "gists_url": "https://api.github.com/users/eellison/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eellison/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eellison/subscriptions",
            "organizations_url": "https://api.github.com/users/eellison/orgs",
            "repos_url": "https://api.github.com/users/eellison/repos",
            "events_url": "https://api.github.com/users/eellison/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eellison/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2020-01-08T18:27:01Z",
        "updated_at": "2020-02-29T02:36:36Z",
        "closed_at": "2020-02-29T02:36:36Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\nThere is no `Device` object that is exposed in the pytorch namespace. It is defined in `torch/__init__.pyi.in` so PY2 style comments work, but PY3 style comments fail. \r\n\r\nWorks:\r\n```\r\n@torch.jit.script\r\ndef fn(m):\r\n    # type: (Tensor) -> Device\r\n    return m.device\r\n```\r\n\r\nDoesn't work:\r\n\r\n```\r\n@torch.jit.script\r\ndef fn(m: Tensor) -> torch.Device:\r\n    return m.device\r\n```\r\n> Traceback (most recent call last):\r\n  File \"test/test_jit.py\", line 5197, in test_elias\r\n    from torch import Device\r\nImportError: cannot import name 'Device' from 'torch' (/home/eellison/anaconda3/lib/python3.7/site-packages/torch/__init__.py)\r\n\r\ncc @suo",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/31950/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/31950/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/31864",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/31864/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/31864/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/31864/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/31864",
        "id": 545352180,
        "node_id": "MDU6SXNzdWU1NDUzNTIxODA=",
        "number": 31864,
        "title": "[JIT] JITter sometimes doesn't see namedtuple types in function annotations in `jit.ignore`d methods",
        "user": {
            "login": "munael",
            "id": 5769148,
            "node_id": "MDQ6VXNlcjU3NjkxNDg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5769148?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/munael",
            "html_url": "https://github.com/munael",
            "followers_url": "https://api.github.com/users/munael/followers",
            "following_url": "https://api.github.com/users/munael/following{/other_user}",
            "gists_url": "https://api.github.com/users/munael/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/munael/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/munael/subscriptions",
            "organizations_url": "https://api.github.com/users/munael/orgs",
            "repos_url": "https://api.github.com/users/munael/repos",
            "events_url": "https://api.github.com/users/munael/events{/privacy}",
            "received_events_url": "https://api.github.com/users/munael/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "driazati",
            "id": 9407960,
            "node_id": "MDQ6VXNlcjk0MDc5NjA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9407960?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/driazati",
            "html_url": "https://github.com/driazati",
            "followers_url": "https://api.github.com/users/driazati/followers",
            "following_url": "https://api.github.com/users/driazati/following{/other_user}",
            "gists_url": "https://api.github.com/users/driazati/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/driazati/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/driazati/subscriptions",
            "organizations_url": "https://api.github.com/users/driazati/orgs",
            "repos_url": "https://api.github.com/users/driazati/repos",
            "events_url": "https://api.github.com/users/driazati/events{/privacy}",
            "received_events_url": "https://api.github.com/users/driazati/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "driazati",
                "id": 9407960,
                "node_id": "MDQ6VXNlcjk0MDc5NjA=",
                "avatar_url": "https://avatars.githubusercontent.com/u/9407960?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/driazati",
                "html_url": "https://github.com/driazati",
                "followers_url": "https://api.github.com/users/driazati/followers",
                "following_url": "https://api.github.com/users/driazati/following{/other_user}",
                "gists_url": "https://api.github.com/users/driazati/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/driazati/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/driazati/subscriptions",
                "organizations_url": "https://api.github.com/users/driazati/orgs",
                "repos_url": "https://api.github.com/users/driazati/repos",
                "events_url": "https://api.github.com/users/driazati/events{/privacy}",
                "received_events_url": "https://api.github.com/users/driazati/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-01-05T01:02:35Z",
        "updated_at": "2020-02-29T02:36:36Z",
        "closed_at": "2020-02-29T02:36:36Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\nNamedTuple names when used in a new style function type annotation are not recognized by the jitter in `jit.ignore`d methods.\r\n\r\n```\r\n~/.local/lib/python3.6/site-packages/torch/jit/annotations.py in ann_to_type(ann, resolver)\r\n    256         if the_type is not None:\r\n    257             return the_type\r\n--> 258     raise ValueError(\"Unknown type annotation: '{}'\".format(ann))\r\n    259 \r\n    260 \r\n\r\nValueError: Unknown type annotation: '<class '__main__.GG'>'\r\n```\r\n\r\nSame issue when a NamedTuple is part of another type (a Tuple, and probably a List or a Dict, but I haven't tried those).\r\n\r\nThen the error manifests even for comment style annotations.\r\n\r\n## To Reproduce\r\n\r\n```py\r\nimport torch as T\r\n\r\nfrom collections import namedtuple\r\nfrom typing import Tuple\r\nGG = namedtuple('GG', ['f', 'g'])\r\n\r\nclass Foo(nn.Module):\r\n    def __init__(self):\r\n        super().__init__()\r\n\r\n    @T.jit.ignore\r\n    def foo(self, x, z) -> GG:\r\n\t\t# Above does NOT work\r\n\r\n        # ! type: (Tensor, Tensor) -> GG\r\n        # Above works\r\n\r\n\t\t# ! type: (Tensor, Tensor) -> Tuple[GG, GG]\r\n\t\t# return GG(x, z), GG(x, z)\r\n\t\t# Above does NOT work\r\n\r\n        return GG(x, z)\r\n    def forward(self, x, z):\r\n        y0, y1 = self.foo(x, z)\r\n        return y0 + y1\r\n\r\nfoo = T.jit.script(Foo())\r\ny = foo(T.randn(100, 100), T.randn(100, 100))\r\n```\r\n\r\n## Expected behavior\r\n\r\nBoth annotation styles should support NamedTuples properly.\r\n\r\n## Environment\r\n\r\n```\r\nPyTorch version: 1.3.1\r\nIs debug build: No\r\nCUDA used to build PyTorch: 10.1.243\r\n\r\nOS: Ubuntu 18.04.3 LTS\r\nGCC version: (Ubuntu 7.4.0-1ubuntu1~18.04.1) 7.4.0\r\nCMake version: Could not collect\r\n\r\nPython version: 3.6\r\n\r\nVersions of relevant libraries:\r\n[pip3] numpy==1.18.0\r\n[pip3] pytorch-transformers==1.1.0\r\n[pip3] torch==1.3.1\r\n[pip3] torchfile==0.1.0\r\n[pip3] torchnet==0.0.4\r\n[pip3] torchsummary==1.5.1\r\n[pip3] torchvision==0.4.0\r\n[pip3] torchviz==0.0.1\r\n```\r\n\r\n## Additional context\r\n\r\nNone\r\n\r\n\r\ncc @suo",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/31864/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/31864/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/31021",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/31021/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/31021/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/31021/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/31021",
        "id": 535435037,
        "node_id": "MDU6SXNzdWU1MzU0MzUwMzc=",
        "number": 31021,
        "title": "torch.jit.script return type for torch.isinf(Tensor) is bool, but method actually returns tensor",
        "user": {
            "login": "fuzic",
            "id": 577060,
            "node_id": "MDQ6VXNlcjU3NzA2MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/577060?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fuzic",
            "html_url": "https://github.com/fuzic",
            "followers_url": "https://api.github.com/users/fuzic/followers",
            "following_url": "https://api.github.com/users/fuzic/following{/other_user}",
            "gists_url": "https://api.github.com/users/fuzic/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fuzic/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fuzic/subscriptions",
            "organizations_url": "https://api.github.com/users/fuzic/orgs",
            "repos_url": "https://api.github.com/users/fuzic/repos",
            "events_url": "https://api.github.com/users/fuzic/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fuzic/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2019-12-10T01:27:32Z",
        "updated_at": "2020-01-09T21:16:28Z",
        "closed_at": "2020-01-09T21:16:28Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "## Issue description\r\n\r\ntorch jit thinks that torch.isinf returns a boolean, but in practice it returns a BoolTensor (operates elementwise).\r\n\r\n```\r\nReturn value was annotated as having type Tensor but is actually of type bool:\r\nat x.py:5:4\r\n@torch.jit.script\r\ndef foo(x: torch.Tensor) -> torch.Tensor:\r\n    return torch.isinf(x)\r\n```\r\n\r\n## Code example\r\n\r\n```\r\nimport torch\r\n\r\n@torch.jit.script\r\ndef foo(x: torch.Tensor) -> torch.Tensor:\r\n    return torch.isinf(x)\r\n```\r\n\r\n## System Info\r\n- PyTorch or Caffe2: pytorch\r\n- How you installed PyTorch (conda, pip, source): pip\r\n- Build command you used (if compiling from source):\r\n- OS: mac\r\n- PyTorch version: master\r\n- Python version: 3.7\r\n- CUDA/cuDNN version:\r\n- GPU models and configuration:\r\n- GCC version (if compiling from source):\r\n- CMake version:\r\n- Versions of any other relevant libraries:\r\n\n\ncc @suo",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/31021/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/31021/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/30902",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/30902/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/30902/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/30902/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/30902",
        "id": 534240618,
        "node_id": "MDU6SXNzdWU1MzQyNDA2MTg=",
        "number": 30902,
        "title": "inceptionv3 with jit: first ~20 `forward`-s are very slow",
        "user": {
            "login": "IggShaman",
            "id": 229420,
            "node_id": "MDQ6VXNlcjIyOTQyMA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/229420?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/IggShaman",
            "html_url": "https://github.com/IggShaman",
            "followers_url": "https://api.github.com/users/IggShaman/followers",
            "following_url": "https://api.github.com/users/IggShaman/following{/other_user}",
            "gists_url": "https://api.github.com/users/IggShaman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/IggShaman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/IggShaman/subscriptions",
            "organizations_url": "https://api.github.com/users/IggShaman/orgs",
            "repos_url": "https://api.github.com/users/IggShaman/repos",
            "events_url": "https://api.github.com/users/IggShaman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/IggShaman/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "Krovatkin",
            "id": 5086322,
            "node_id": "MDQ6VXNlcjUwODYzMjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5086322?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Krovatkin",
            "html_url": "https://github.com/Krovatkin",
            "followers_url": "https://api.github.com/users/Krovatkin/followers",
            "following_url": "https://api.github.com/users/Krovatkin/following{/other_user}",
            "gists_url": "https://api.github.com/users/Krovatkin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Krovatkin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Krovatkin/subscriptions",
            "organizations_url": "https://api.github.com/users/Krovatkin/orgs",
            "repos_url": "https://api.github.com/users/Krovatkin/repos",
            "events_url": "https://api.github.com/users/Krovatkin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Krovatkin/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "Krovatkin",
                "id": 5086322,
                "node_id": "MDQ6VXNlcjUwODYzMjI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/5086322?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/Krovatkin",
                "html_url": "https://github.com/Krovatkin",
                "followers_url": "https://api.github.com/users/Krovatkin/followers",
                "following_url": "https://api.github.com/users/Krovatkin/following{/other_user}",
                "gists_url": "https://api.github.com/users/Krovatkin/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/Krovatkin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Krovatkin/subscriptions",
                "organizations_url": "https://api.github.com/users/Krovatkin/orgs",
                "repos_url": "https://api.github.com/users/Krovatkin/repos",
                "events_url": "https://api.github.com/users/Krovatkin/events{/privacy}",
                "received_events_url": "https://api.github.com/users/Krovatkin/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 4,
        "created_at": "2019-12-06T20:22:15Z",
        "updated_at": "2020-01-28T16:19:12Z",
        "closed_at": "2020-01-28T16:19:12Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\nFirst 10-20 calls to `forward` are very slow for a jit version of a pre-packaged inception3 model.\r\n\r\n## To Reproduce\r\n\r\nCode:\r\n```\r\nimport sys\r\nimport time\r\nimport psutil\r\n\r\nimport torch\r\nfrom torch import nn\r\nfrom torchvision import models\r\n\r\ndef get_vms():\r\n    return psutil.Process().memory_info().vms\r\n\r\ndef sync_cuda():\r\n    t0 = time.time()\r\n    torch.cuda.synchronize('cuda')\r\n    print(f\"cuda sync took {time.time() - t0:.3f} second(s)\")\r\n\r\nif __name__ == '__main__':\r\n    device = sys.argv[1]\r\n\r\n    net = models.inception_v3(pretrained=True, aux_logits=True)\r\n    net = torch.jit.script(net)\r\n    if device == 'cuda':\r\n        sync_cuda()\r\n\r\n    net = net.to(device).eval()\r\n    input = torch.randn(1,3,299,299,requires_grad=False).to(device)\r\n\r\n    if device == 'cuda':\r\n        sync_cuda()\r\n\r\n    out0 = None\r\n    with torch.no_grad():\r\n        for i in range(30):\r\n            t0 = time.time()\r\n            pred = net(input)\r\n            if out0 is not None and not torch.allclose(out0.logits, pred.logits):\r\n                print(f\"{i}: logits aren't allclose; abs-sum={(out0.logits - pred.logits).abs().sum()}\")\r\n            print(f\"{i} vms:{get_vms() / 1024/1024/1024:.3f}Gb seconds/iter={time.time() - t0:.3f}\")\r\n            out0 = pred\r\n```\r\n\r\nCPU-based run:\r\n```\r\n(pt-nightly) igor@w ~/playground$ python memory_leakage_test.py cpu\r\n0 vms:4.635Gb seconds/iter=2.548\r\n1 vms:4.910Gb seconds/iter=10.017\r\n2 vms:5.153Gb seconds/iter=10.036\r\n3 vms:5.386Gb seconds/iter=9.321\r\n4 vms:5.620Gb seconds/iter=8.975\r\n5 vms:5.844Gb seconds/iter=7.905\r\n6 vms:6.058Gb seconds/iter=7.819\r\n7 vms:6.262Gb seconds/iter=6.870\r\n8 vms:6.457Gb seconds/iter=6.727\r\n9 vms:6.642Gb seconds/iter=5.774\r\n10 vms:6.824Gb seconds/iter=5.617\r\n11 vms:7.002Gb seconds/iter=5.067\r\n12 vms:7.162Gb seconds/iter=5.008\r\n13 vms:7.310Gb seconds/iter=3.942\r\n14 vms:7.443Gb seconds/iter=3.695\r\n15 vms:7.565Gb seconds/iter=2.950\r\n16 vms:7.672Gb seconds/iter=2.746\r\n17 vms:7.767Gb seconds/iter=2.042\r\n18 vms:7.846Gb seconds/iter=1.871\r\n19 vms:7.911Gb seconds/iter=1.318\r\n20 vms:7.966Gb seconds/iter=1.048\r\n21 vms:8.014Gb seconds/iter=0.841\r\n22 vms:8.048Gb seconds/iter=0.813\r\n23 vms:8.070Gb seconds/iter=0.561\r\n24 vms:8.082Gb seconds/iter=0.468\r\n25 vms:8.095Gb seconds/iter=0.370\r\n26 vms:8.099Gb seconds/iter=0.327\r\n```\r\n\r\nCUDA:\r\n```\r\n(pt-nightly) igor@w ~/playground$ python memory_leakage_test.py cuda\r\ncuda sync took 2.181 second(s)\r\ncuda sync took 0.000 second(s)\r\n0 vms:10.510Gb seconds/iter=2.357\r\n1: logits aren't allclose; abs-sum=0.0007971674203872681\r\n1 vms:10.769Gb seconds/iter=9.826\r\n2 vms:11.018Gb seconds/iter=9.541\r\n3 vms:11.261Gb seconds/iter=8.995\r\n4 vms:11.493Gb seconds/iter=8.586\r\n5 vms:11.717Gb seconds/iter=7.597\r\n6 vms:11.929Gb seconds/iter=7.358\r\n7 vms:12.135Gb seconds/iter=6.468\r\n8 vms:12.329Gb seconds/iter=6.244\r\n9 vms:12.516Gb seconds/iter=5.422\r\n10 vms:12.697Gb seconds/iter=5.233\r\n11 vms:12.874Gb seconds/iter=4.771\r\n12 vms:13.034Gb seconds/iter=4.647\r\n13 vms:13.185Gb seconds/iter=3.569\r\n14 vms:13.316Gb seconds/iter=3.374\r\n15 vms:13.439Gb seconds/iter=2.519\r\n16 vms:13.545Gb seconds/iter=2.359\r\n17 vms:13.642Gb seconds/iter=1.663\r\n18 vms:13.721Gb seconds/iter=1.508\r\n19 vms:13.787Gb seconds/iter=0.950\r\n20 vms:13.841Gb seconds/iter=0.739\r\n21 vms:13.889Gb seconds/iter=0.504\r\n22 vms:13.922Gb seconds/iter=0.440\r\n23 vms:13.946Gb seconds/iter=0.201\r\n24 vms:13.954Gb seconds/iter=0.141\r\n25 vms:13.955Gb seconds/iter=0.017\r\n26 vms:13.956Gb seconds/iter=0.010\r\n27 vms:13.956Gb seconds/iter=0.008\r\n28 vms:13.956Gb seconds/iter=0.007\r\n29 vms:13.956Gb seconds/iter=0.007\r\n```\r\n\r\n## Expected behavior\r\n\r\nExpecting all `forward`-s to take the same amount of time.\r\n\r\n## Environment\r\n\r\n```\r\nPyTorch version: 1.4.0.dev20191205\r\nIs debug build: No\r\nCUDA used to build PyTorch: 10.1\r\n\r\nOS: Ubuntu 19.10\r\nGCC version: (Ubuntu 9.2.1-9ubuntu2) 9.2.1 20191008\r\nCMake version: version 3.13.4\r\n\r\nPython version: 3.7\r\nIs CUDA available: Yes\r\nCUDA runtime version: Could not collect\r\nGPU models and configuration: GPU 0: GeForce RTX 2080 SUPER\r\nNvidia driver version: 440.36\r\ncuDNN version: Could not collect\r\n\r\nVersions of relevant libraries:\r\n[pip3] numpy==1.16.2\r\n[conda] mkl                       2019.4                      243  \r\n[conda] pytorch                   1.4.0.dev20191205 py3.7_cuda10.1.243_cudnn7.6.3_0    pytorch-nightly\r\n[conda] torchvision               0.5.0.dev20191205      py37_cu101    pytorch-nightly\r\n```\n\ncc @suo",
        "closed_by": {
            "login": "Krovatkin",
            "id": 5086322,
            "node_id": "MDQ6VXNlcjUwODYzMjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5086322?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Krovatkin",
            "html_url": "https://github.com/Krovatkin",
            "followers_url": "https://api.github.com/users/Krovatkin/followers",
            "following_url": "https://api.github.com/users/Krovatkin/following{/other_user}",
            "gists_url": "https://api.github.com/users/Krovatkin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Krovatkin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Krovatkin/subscriptions",
            "organizations_url": "https://api.github.com/users/Krovatkin/orgs",
            "repos_url": "https://api.github.com/users/Krovatkin/repos",
            "events_url": "https://api.github.com/users/Krovatkin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Krovatkin/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/30902/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/30902/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/30755",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/30755/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/30755/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/30755/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/30755",
        "id": 532945714,
        "node_id": "MDU6SXNzdWU1MzI5NDU3MTQ=",
        "number": 30755,
        "title": "[jit] `@staticmethod`s retrieved from `self` don't work",
        "user": {
            "login": "driazati",
            "id": 9407960,
            "node_id": "MDQ6VXNlcjk0MDc5NjA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9407960?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/driazati",
            "html_url": "https://github.com/driazati",
            "followers_url": "https://api.github.com/users/driazati/followers",
            "following_url": "https://api.github.com/users/driazati/following{/other_user}",
            "gists_url": "https://api.github.com/users/driazati/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/driazati/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/driazati/subscriptions",
            "organizations_url": "https://api.github.com/users/driazati/orgs",
            "repos_url": "https://api.github.com/users/driazati/repos",
            "events_url": "https://api.github.com/users/driazati/events{/privacy}",
            "received_events_url": "https://api.github.com/users/driazati/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            },
            {
                "id": 1304335025,
                "node_id": "MDU6TGFiZWwxMzA0MzM1MDI1",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/small",
                "name": "small",
                "color": "fbca04",
                "default": false,
                "description": "We think this is a small issue to fix. Consider knocking off high priority small issues"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2019-12-04T21:30:27Z",
        "updated_at": "2020-05-15T04:13:38Z",
        "closed_at": "2020-05-15T04:13:38Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "```python\r\nclass M(nn.Module):\r\n    @staticmethod\r\n    def some_method(x):\r\n        return x + 10\r\n\r\n    def forward(self, x):\r\n        return self.some_method(x)\r\n\r\ntorch.jit.script(M())\r\n```\r\n\r\nThe compiler treats `some_method` as a regular method instead of a static method, so `x` ends up having the type `M` instead of `Tensor`.\r\n\r\nThe error is: \r\n```\r\nRuntimeError:\r\nTried to access nonexistent attribute or method '__add__' of type '__torch__.M'. Did you forget to initialize an attribute in __init__()?:\r\n  File \"/private/home/suo/scratch/test.py\", line 21\r\n    @staticmethod\r\n    def some_method(x):\r\n        return x + 10\r\n               ~~~~~~ <--- HERE\r\n'M.some_method' is being compiled since it was called from 'M.forward'\r\n  File \"/private/home/suo/scratch/test.py\", line 24\r\n    def forward(self, x):\r\n        return self.some_method(x)\r\n               ~~~~~~~~~~~~~~~~~~ <--- HERE\r\n```\r\ncc @suo",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/30755/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/30755/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/30512",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/30512/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/30512/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/30512/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/30512",
        "id": 529407883,
        "node_id": "MDU6SXNzdWU1Mjk0MDc4ODM=",
        "number": 30512,
        "title": "failed to convert  torch.jit.ScriptModule to ONNX (crash)",
        "user": {
            "login": "lironmo",
            "id": 37513762,
            "node_id": "MDQ6VXNlcjM3NTEzNzYy",
            "avatar_url": "https://avatars.githubusercontent.com/u/37513762?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lironmo",
            "html_url": "https://github.com/lironmo",
            "followers_url": "https://api.github.com/users/lironmo/followers",
            "following_url": "https://api.github.com/users/lironmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/lironmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lironmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lironmo/subscriptions",
            "organizations_url": "https://api.github.com/users/lironmo/orgs",
            "repos_url": "https://api.github.com/users/lironmo/repos",
            "events_url": "https://api.github.com/users/lironmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lironmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 693805995,
                "node_id": "MDU6TGFiZWw2OTM4MDU5OTU=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20onnx",
                "name": "module: onnx",
                "color": "f7e101",
                "default": false,
                "description": "Related to torch.onnx"
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "lara-hdr",
            "id": 11823865,
            "node_id": "MDQ6VXNlcjExODIzODY1",
            "avatar_url": "https://avatars.githubusercontent.com/u/11823865?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lara-hdr",
            "html_url": "https://github.com/lara-hdr",
            "followers_url": "https://api.github.com/users/lara-hdr/followers",
            "following_url": "https://api.github.com/users/lara-hdr/following{/other_user}",
            "gists_url": "https://api.github.com/users/lara-hdr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lara-hdr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lara-hdr/subscriptions",
            "organizations_url": "https://api.github.com/users/lara-hdr/orgs",
            "repos_url": "https://api.github.com/users/lara-hdr/repos",
            "events_url": "https://api.github.com/users/lara-hdr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lara-hdr/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "lara-hdr",
                "id": 11823865,
                "node_id": "MDQ6VXNlcjExODIzODY1",
                "avatar_url": "https://avatars.githubusercontent.com/u/11823865?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/lara-hdr",
                "html_url": "https://github.com/lara-hdr",
                "followers_url": "https://api.github.com/users/lara-hdr/followers",
                "following_url": "https://api.github.com/users/lara-hdr/following{/other_user}",
                "gists_url": "https://api.github.com/users/lara-hdr/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/lara-hdr/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lara-hdr/subscriptions",
                "organizations_url": "https://api.github.com/users/lara-hdr/orgs",
                "repos_url": "https://api.github.com/users/lara-hdr/repos",
                "events_url": "https://api.github.com/users/lara-hdr/events{/privacy}",
                "received_events_url": "https://api.github.com/users/lara-hdr/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 17,
        "created_at": "2019-11-27T15:11:40Z",
        "updated_at": "2020-03-25T02:46:52Z",
        "closed_at": "2019-12-12T23:28:06Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\n<!-- A clear and concise description of what the bug is. -->\r\nwhen convert scriptModule to onnx we crash and get the following exception:\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/liron/envs/detectron/lib/python3.6/site-packages/torch/onnx/utils.py\", line 382, in _export\r\n    fixed_batch_size=fixed_batch_size)\r\n  File \"/home/liron/envs/detectron/lib/python3.6/site-packages/torch/onnx/utils.py\", line 262, in _model_to_graph\r\n    fixed_batch_size=fixed_batch_size)\r\n  File \"/home/liron/envs/detectron/lib/python3.6/site-packages/torch/onnx/utils.py\", line 132, in _optimize_graph\r\n    graph = torch._C._jit_pass_onnx(graph, operator_export_type)\r\n  File \"/home/liron/envs/detectron/lib/python3.6/site-packages/torch/onnx/__init__.py\", line 174, in _run_symbolic_function\r\n    return utils._run_symbolic_function(*args, **kwargs)\r\n  File \"/home/liron/envs/detectron/lib/python3.6/site-packages/torch/onnx/utils.py\", line 619, in _run_symbolic_function\r\n    return op_fn(g, *inputs, **attrs)\r\n  File \"/home/liron/envs/detectron/lib/python3.6/site-packages/torch/onnx/symbolic_helper.py\", line 124, in wrapper\r\n    return fn(g, *args)\r\n  File \"/home/liron/envs/detectron/lib/python3.6/site-packages/torch/onnx/symbolic_opset9.py\", line 862, in batch_norm\r\n    if len(input_sizes) == 2:\r\nTypeError: object of type 'NoneType' has no len() (occurred when translating batch_norm)\r\n```\r\n\r\n## To Reproduce\r\nload the attached torch script, and try to convert to onnx:\r\n\r\n    def convert(self):\r\n        loaded = torch.jit.load(self._torch_script_path)\r\n        #loaded.load_state_dict(self._model_state)\r\n        dummy_input = torch.randn(1, 3, 224, 224)\r\n        target = loaded(dummy_input)\r\n        torch.onnx.export(loaded, dummy_input, self._out_onnx_path, verbose=True,\r\n        operator_export_type=torch.onnx.OperatorExportTypes.ONNX,\r\n        example_outputs=target)\r\n \r\n\r\ncc @suo @houseroad @spandantiwari @lara-hdr @BowenBao @neginraoof",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/30512/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/30512/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/30477",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/30477/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/30477/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/30477/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/30477",
        "id": 528925020,
        "node_id": "MDU6SXNzdWU1Mjg5MjUwMjA=",
        "number": 30477,
        "title": "[jit] Spurious error when type comments are found in the body of a function.",
        "user": {
            "login": "suo",
            "id": 1617424,
            "node_id": "MDQ6VXNlcjE2MTc0MjQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1617424?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/suo",
            "html_url": "https://github.com/suo",
            "followers_url": "https://api.github.com/users/suo/followers",
            "following_url": "https://api.github.com/users/suo/following{/other_user}",
            "gists_url": "https://api.github.com/users/suo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/suo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/suo/subscriptions",
            "organizations_url": "https://api.github.com/users/suo/orgs",
            "repos_url": "https://api.github.com/users/suo/repos",
            "events_url": "https://api.github.com/users/suo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/suo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1150417147,
                "node_id": "MDU6TGFiZWwxMTUwNDE3MTQ3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/good%20first%20issue",
                "name": "good first issue",
                "color": "34c182",
                "default": true,
                "description": ""
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2019-11-26T19:23:14Z",
        "updated_at": "2019-12-13T02:19:43Z",
        "closed_at": "2019-12-13T02:19:43Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "Repro:\r\n```\r\n@torch.jit.script\r\nclass Timebase:\r\n    def __init__(\r\n        self,\r\n        numerator,  # type: int\r\n        denominator,  # type: int\r\n    ):\r\n        # type: (...) -> None\r\n        self.numerator = numerator  # type: int\r\n        self.denominator = denominator  # type: int\r\n```\r\nProduces the error:\r\n```\r\nRuntimeError: Return type line '# type: (...) -> ...' not found on multiline type annotation\r\n(See PEP 484 https://www.python.org/dev/peps/pep-0484/#suggested-syntax-for-python-2-7-and-straddling-code)\r\n```\r\n\r\nEven though we have clearly put the return type comment in the function. This is due to a bug in the type comment parser, which expects the return type line to be the last element of the list (see [here](https://github.com/pytorch/pytorch/blob/681b610f35968761435b28a6bc564e17a7f553d0/torch/jit/annotations.py#L157)).\r\n\r\nFix is simple, just search for the return type line instead of assuming it's the last one.\n\ncc @suo",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/30477/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/30477/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/30204",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/30204/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/30204/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/30204/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/30204",
        "id": 526297760,
        "node_id": "MDU6SXNzdWU1MjYyOTc3NjA=",
        "number": 30204,
        "title": "JIT does not supporting `retain_graph` in autograd",
        "user": {
            "login": "zasdfgbnm",
            "id": 1032377,
            "node_id": "MDQ6VXNlcjEwMzIzNzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1032377?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zasdfgbnm",
            "html_url": "https://github.com/zasdfgbnm",
            "followers_url": "https://api.github.com/users/zasdfgbnm/followers",
            "following_url": "https://api.github.com/users/zasdfgbnm/following{/other_user}",
            "gists_url": "https://api.github.com/users/zasdfgbnm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zasdfgbnm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zasdfgbnm/subscriptions",
            "organizations_url": "https://api.github.com/users/zasdfgbnm/orgs",
            "repos_url": "https://api.github.com/users/zasdfgbnm/repos",
            "events_url": "https://api.github.com/users/zasdfgbnm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zasdfgbnm/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "zasdfgbnm",
            "id": 1032377,
            "node_id": "MDQ6VXNlcjEwMzIzNzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1032377?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zasdfgbnm",
            "html_url": "https://github.com/zasdfgbnm",
            "followers_url": "https://api.github.com/users/zasdfgbnm/followers",
            "following_url": "https://api.github.com/users/zasdfgbnm/following{/other_user}",
            "gists_url": "https://api.github.com/users/zasdfgbnm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zasdfgbnm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zasdfgbnm/subscriptions",
            "organizations_url": "https://api.github.com/users/zasdfgbnm/orgs",
            "repos_url": "https://api.github.com/users/zasdfgbnm/repos",
            "events_url": "https://api.github.com/users/zasdfgbnm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zasdfgbnm/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "zasdfgbnm",
                "id": 1032377,
                "node_id": "MDQ6VXNlcjEwMzIzNzc=",
                "avatar_url": "https://avatars.githubusercontent.com/u/1032377?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/zasdfgbnm",
                "html_url": "https://github.com/zasdfgbnm",
                "followers_url": "https://api.github.com/users/zasdfgbnm/followers",
                "following_url": "https://api.github.com/users/zasdfgbnm/following{/other_user}",
                "gists_url": "https://api.github.com/users/zasdfgbnm/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/zasdfgbnm/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zasdfgbnm/subscriptions",
                "organizations_url": "https://api.github.com/users/zasdfgbnm/orgs",
                "repos_url": "https://api.github.com/users/zasdfgbnm/repos",
                "events_url": "https://api.github.com/users/zasdfgbnm/events{/privacy}",
                "received_events_url": "https://api.github.com/users/zasdfgbnm/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-11-21T00:45:27Z",
        "updated_at": "2019-11-21T17:59:35Z",
        "closed_at": "2019-11-21T17:59:35Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\n```python\r\nimport torch\r\n\r\n@torch.jit.script\r\ndef f(x):\r\n    return torch.autograd.grad([x.sum()], [x], retain_graph=True)\r\n```\r\nFails with\r\n\r\n```\r\nRuntimeError: \r\n\r\naten::grad(Tensor[] outputs, Tensor[] inputs, Tensor?[]? grad_outputs=None, bool? keep_graph=None, bool create_graph=False, bool allow_unused=False) -> (Tensor[]):\r\nKeyword argument retain_graph unknown.\r\n:\r\nat test.py:5:11\r\n@torch.jit.script\r\ndef f(x):\r\n    return torch.autograd.grad([x.sum()], [x], retain_graph=True)\r\n           ~~~~~~~~~~~~~~~~~~~ <--- HERE\r\n```\r\n\r\nFixed in https://github.com/pytorch/pytorch/pull/30203\n\ncc @suo",
        "closed_by": {
            "login": "zasdfgbnm",
            "id": 1032377,
            "node_id": "MDQ6VXNlcjEwMzIzNzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1032377?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zasdfgbnm",
            "html_url": "https://github.com/zasdfgbnm",
            "followers_url": "https://api.github.com/users/zasdfgbnm/followers",
            "following_url": "https://api.github.com/users/zasdfgbnm/following{/other_user}",
            "gists_url": "https://api.github.com/users/zasdfgbnm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zasdfgbnm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zasdfgbnm/subscriptions",
            "organizations_url": "https://api.github.com/users/zasdfgbnm/orgs",
            "repos_url": "https://api.github.com/users/zasdfgbnm/repos",
            "events_url": "https://api.github.com/users/zasdfgbnm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zasdfgbnm/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/30204/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/30204/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/30015",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/30015/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/30015/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/30015/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/30015",
        "id": 524524659,
        "node_id": "MDU6SXNzdWU1MjQ1MjQ2NTk=",
        "number": 30015,
        "title": "JIT fails for multihead attention",
        "user": {
            "login": "zhengshou",
            "id": 18176039,
            "node_id": "MDQ6VXNlcjE4MTc2MDM5",
            "avatar_url": "https://avatars.githubusercontent.com/u/18176039?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zhengshou",
            "html_url": "https://github.com/zhengshou",
            "followers_url": "https://api.github.com/users/zhengshou/followers",
            "following_url": "https://api.github.com/users/zhengshou/following{/other_user}",
            "gists_url": "https://api.github.com/users/zhengshou/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zhengshou/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zhengshou/subscriptions",
            "organizations_url": "https://api.github.com/users/zhengshou/orgs",
            "repos_url": "https://api.github.com/users/zhengshou/repos",
            "events_url": "https://api.github.com/users/zhengshou/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zhengshou/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "driazati",
            "id": 9407960,
            "node_id": "MDQ6VXNlcjk0MDc5NjA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9407960?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/driazati",
            "html_url": "https://github.com/driazati",
            "followers_url": "https://api.github.com/users/driazati/followers",
            "following_url": "https://api.github.com/users/driazati/following{/other_user}",
            "gists_url": "https://api.github.com/users/driazati/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/driazati/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/driazati/subscriptions",
            "organizations_url": "https://api.github.com/users/driazati/orgs",
            "repos_url": "https://api.github.com/users/driazati/repos",
            "events_url": "https://api.github.com/users/driazati/events{/privacy}",
            "received_events_url": "https://api.github.com/users/driazati/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "driazati",
                "id": 9407960,
                "node_id": "MDQ6VXNlcjk0MDc5NjA=",
                "avatar_url": "https://avatars.githubusercontent.com/u/9407960?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/driazati",
                "html_url": "https://github.com/driazati",
                "followers_url": "https://api.github.com/users/driazati/followers",
                "following_url": "https://api.github.com/users/driazati/following{/other_user}",
                "gists_url": "https://api.github.com/users/driazati/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/driazati/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/driazati/subscriptions",
                "organizations_url": "https://api.github.com/users/driazati/orgs",
                "repos_url": "https://api.github.com/users/driazati/repos",
                "events_url": "https://api.github.com/users/driazati/events{/privacy}",
                "received_events_url": "https://api.github.com/users/driazati/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 3,
        "created_at": "2019-11-18T17:58:04Z",
        "updated_at": "2019-12-16T21:43:10Z",
        "closed_at": "2019-12-16T21:43:10Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\nI can run the model before torchscript while the torchscripted model fails in running time for the multihead attention @driazati\r\n\r\n## To Reproduce\r\n\r\nThe following code sample:\r\n\r\n```python\r\nimport torch\r\nimport torch.nn as nn\r\n\r\ndef _lengths2mask(lengths: torch.Tensor, seq_len: int, lt=torch.tensor(True)) -> torch.Tensor:\r\n    \"\"\"\r\n    Input lengths is a tensor of shape (batch_size) with value in [0, seq_len],\r\n    Return a tensor of shape (batch_size x seq_len) with binary value\r\n    \"\"\"\r\n    if lt:\r\n        return torch.lt(\r\n            torch.arange(seq_len, device=lengths.device)[None, :],\r\n            lengths[:, None].long(),\r\n        )\r\n    else:\r\n        return torch.ge(\r\n            torch.arange(seq_len, device=lengths.device)[None, :],\r\n            lengths[:, None].long(),\r\n        )\r\n\r\nclass AttentionMultihead(nn.Module):\r\n    def __init__(self, dim_in, method, use_variable_lengths=False, num_heads=1):\r\n        super(AttentionMultihead, self).__init__()\r\n\r\n        # choose from supported attention methods\r\n        assert method in (\"multihead\")\r\n        self.method = method\r\n        self.use_variable_length = use_variable_lengths\r\n        \r\n        self.attention = nn.MultiheadAttention(\r\n            embed_dim=dim_in, num_heads=num_heads\r\n        )\r\n\r\n        # record output dim\r\n        self.dim_out = dim_in\r\n\r\n    def forward(self, data: torch.Tensor, lengths: torch.Tensor):\r\n        assert data.dim() == 3, \"Require input shape (batch_size x seq_len x embed_dim)\"\r\n        \r\n        if self.use_variable_length is True:\r\n            mask = _lengths2mask(lengths.clamp(min=1), data.size(1), torch.tensor(False))\r\n        else:\r\n            mask = None\r\n\r\n        data = data.transpose(0, 1)\r\n        attn_output, attn_weights = self.attention(\r\n            data, data, data, key_padding_mask=mask, need_weights=True, attn_mask=None\r\n        )\r\n        # transpose output data to (batch_size, seq_length, embed_dim)\r\n        attn_output = attn_output.transpose(0, 1)\r\n        \r\n        return attn_output, lengths, attn_weights\r\n\r\n    \r\nclass DeployAttentionMultihead(torch.nn.Module):\r\n    def __init__(self, dim_in=100, length=torch.tensor([300])[0]):\r\n        super(DeployAttentionMultihead, self).__init__()\r\n        self.length = length\r\n        self.use_variable_length = True\r\n        self.attention = AttentionMultihead(dim_in=dim_in, method=\"multihead\", use_variable_lengths=True, num_heads=5)\r\n        \r\n    def forward(self, data: torch.Tensor, lengths: torch.Tensor) -> torch.Tensor:\r\n        attn_output, lengths, attn_weights = self.attention(data, lengths)\r\n        return attn_output\r\n    \r\nmodel = DeployAttentionMultihead()\r\n\r\nts_model_multihead = torch.jit.script(model)\r\nprint(ts_model_multihead.code)\r\n\r\n# run ts model of multihead\r\n\r\nvue_clip_emb = [0.0840825,5.65534,2.23576,2.21367,1.5883,0.493749,0,1.49034,1.54749,1.15795,0.118591,2.54162,2.70971,2.10865,0.115242,0.0115912,5.39253,2.83803,1.96323,0.935772,1.33328,1.16219,0.15678,1.33033,0,2.80253,0.258661,1.19186,0.429935,1.14404,4.58615,0.11558,2.31151,3.45441,0.117317,2.62973,2.57802,3.12865,0.632287,0.280647,1.08333,4.14262,3.5503,0.67525,0.889924,0.128302,3.943,0.825888,3.11752,2.46894,4.05448,3.0315,5.9825,2.54857,0.390271,0.105513,1.76064,3.53628,0.496927,0.850136,3.52684,1.92267,1.50376,3.43571,2.36993,0.0011008,0.101535,0.324544,0.875401,1.6104,0.497361,1.72176,4.01326,1.31662,0.262011,0.837993,0.622429,2.66528,1.13911,1.21707,1.56516,6.33717,1.5675,0.136495,0.355789,1.48718,0.108055,3.47766,1.0657,0.00356666,1.77421,3.86285,1.42049,0.819946,0.340235,0.109702,0.867129,2.71539,0.206769,2.02203,0.0292637,5.49686,1.74569,2.19925,1.51534,0.46074,0.0161071,1.24292,1.44666,0.562175,0.104977,2.05992,2.41354,2.51859,0.165397,0.011803,4.64355,4.19187,2.1993,1.15172,1.72702,1.62523,0.343265,1.45464,0,2.05193,0.619562,0.983955,0.432762,1.09673,4.58744,0.209633,2.02799,3.54795,0.156958,2.19384,2.25872,2.84524,0.120264,0.432246,0.800701,3.83577,3.56383,0.501572,0.458101,0.0500416,3.77406,0.618967,2.51559,2.57312,3.63771,4.04265,5.3371,2.427,0.555011,0.393777,1.45245,4.48355,0.642099,1.48505,3.90371,2.12527,1.10275,3.13394,2.88107,0,0.0938793,0.432923,1.40834,1.47035,0.199206,0.899871,4.19796,1.37373,0.108242,0.541182,0.60768,2.56032,1.05987,1.05486,2.31946,6.57515,1.71218,0.191091,0.523715,0.562181,0.163343,3.41128,1.90795,0.103194,2.18321,4.01785,1.40121,0.712813,0.40542,0.0130574,0.482167,3.61689,0.541964,1.54621,0.00721372,3.53875,1.99706,2.16941,2.30858,0.139537,0.0292894,0.59817,1.67502,1.06869,0.15484,1.32557,2.84414,1.81534,0.0359029,0.155307,4.85468,3.37413,1.90302,1.30877,0.734729,1.76238,0.150899,0.547858,0.0230488,2.15477,0.665912,2.1411,0.486219,0.981247,4.02336,0.340909,2.64124,1.94704,0.127592,2.22661,3.51697,2.28332,0.23371,0.0208469,0.71869,3.26233,3.37803,0.440662,0.510871,0.00753081,5.16184,0.492385,2.8764,2.53306,2.73119,3.92737,4.78175,3.25056,0.738502,0.171556,1.14462,4.28251,0.983006,1.13122,3.53485,1.87881,0.758899,3.47704,3.11202,0.00754782,0.223614,0.554179,2.12652,1.15958,0.225096,1.4953,3.90192,1.51579,0.0205165,1.09822,0.339162,3.14576,2.58463,0.766622,2.68842,5.81371,1.30858,0.0567763,0.362448,0.427235,0.103554,1.55612,1.40707,0.327143,2.06921,3.1817,1.11314,0.293359,0.491569,0.0237787,0.335975,1.49355,0.080589,0.798883,0.0042814,4.00296,1.46194,1.97508,2.93223,0.369621,0.114972,1.43744,0.953024,1.51951,0.0664168,1.36838,1.12008,2.37583,0.0656217,0.0550487,5.11532,3.41184,2.20438,1.50039,1.4365,1.97503,0.0544394,1.24929,0.00753079,1.44055,0.312355,1.65135,0.778141,0.717496,3.53737,0.872259,1.93065,2.75865,0.0802059,2.52429,2.25681,2.45514,0.0332121,0.272185,1.78893,4.1729,3.72535,0.296955,0.977887,0.0917793,5.16411,0.227299,2.63355,2.93526,3.32066,3.49133,3.54922,3.74034,0.651864,0.379803,1.49085,4.07919,0.729488,0.412124,3.82536,0.844314,0.661833,2.39382,2.20183,0.0319286,0.20516,0.6255,1.46891,1.14456,0.44578,1.54798,4.63112,1.32129,0,0.868121,0.800939,4.08268,1.32296,0.520707,3.65064,6.09133,0.723082,0.158022,0.261037,0.397029,0.0556116,2.45283,1.20808,0.051552,1.35081,3.32664,0.930835,0.830775,0.637906,0.00174865,0.0430316,1.45825,0.147698,1.924,0.00532853,3.77304,1.63318,1.94748,2.129,0.0999379,0.0187992,0.764959,1.12453,0.710663,0.221404,1.04146,2.84609,2.1028,0.0512187,0.0633501,4.60868,4.72056,1.81119,1.71785,1.46575,1.1067,0.22531,1.22568,0.0114571,1.80884,0.322822,1.30182,0.343267,0.780105,4.02635,0.468035,2.11109,2.30884,0.225344,1.73228,3.32626,2.14921,0.0652682,0.179686,0.794495,4.04693,3.94471,0.479574,0.372132,0.0392945,5.12383,0.643861,3.05057,2.2246,3.45714,4.82734,4.22932,3.33674,0.602254,0.160737,1.20358,5.0604,0.894768,1.28898,4.45525,1.44087,0.816369,1.96161,3.89633,0.0192901,0.130743,0.526546,0.911684,0.790611,0.290481,0.535833,3.96858,0.660851,0.183099,1.0221,0.527058,2.76179,2.45929,0.418104,1.77804,6.29833,1.67065,0.412998,0.493972,0.239688,0.143934,2.45849,2.14727,0.0778733,2.5178,3.35156,1.2997,0.506005,0.775292,0.0188194,0.447015,2.64902,0.5688,1.19909,0.0417836,3.4061,2.37674,1.87274,1.59598,0.440209,0.0390666,0.459501,1.47975,2.99328,0.293728,3.44896,2.98324,0.377933,0.136621,0.0858318,3.94416,2.30151,1.82907,2.10093,0.403424,1.47967,0.348227,1.58975,0.0860919,1.47215,0.111787,3.21831,2.28628,1.27021,2.6389,0.099854,2.80626,1.31564,0.256794,2.7791,3.04503,3.35439,0.637234,0.873176,1.78056,1.96819,3.70617,0.573749,0.86824,0.0227969,4.80532,1.19482,4.30919,3.18403,2.90808,3.55253,5.32479,2.20803,0.292511,0.917928,0.917466,3.6687,1.65847,1.24795,2.66524,0.583895,1.36363,3.3847,3.8937,0.104704,0.242911,1.92325,1.26514,1.42388,0.702984,2.26055,4.22127,0.507518,0.104398,1.00863,1.40142,2.62522,3.89506,0.304073,1.87341,4.88558,0.57671,0.101682,0.376967,0.151231,0.302362,0.964678,0.314604,0.357943,2.24616,3.35078,0.934013,0.87141,0.291341,0.00906326,0.116968,0.5981,0.0642974,0.59632,0.070716,3.52079,2.46395,2.44951,2.9654,0.663779,0.298566,0.532495,0.605621,1.02062,1.23134,2.30953,2.70189,0.311687,0.250861,0.157656,2.54278,1.19941,1.6287,1.38798,0.378133,1.65116,0.462127,2.0553,0.183922,1.911,0.26869,2.17268,1.65513,1.10857,1.4878,0.285458,3.24843,1.04712,1.4921,2.49815,3.25619,2.89996,0.615719,1.52029,1.29669,0.594365,3.33981,0.7246,0.386914,0.18093,3.73587,1.15124,4.20692,2.63089,4.41739,4.75388,4.79367,1.61047,0.177007,1.5846,2.15091,2.80859,2.03466,1.22181,1.88013,0.966551,1.62572,2.95286,3.22257,0.171248,0.0488555,1.50401,0.564802,1.11984,1.97094,1.09832,4.79174,1.00213,0.0561535,1.06735,2.31487,3.13783,3.00876,0.280711,1.51538,4.03358,0.577055,0.256786,0.520065,0.197432,1.37471,1.67807,0.111243,1.28862,3.27064,3.1356,0.810865,0.226676,0.090544,0.923369,0.273451,0.463472,0.740315,0.466818,0.0792522,3.41677,1.65213,1.87478,2.9709,0.649614,0.287107,0.742373,2.44696,1.98299,0.362439,3.38517,3.0017,1.15386,0.123824,0.71546,3.2347,2.01491,1.11258,2.1084,1.17668,1.4841,0.585114,2.00054,0.0496953,1.25047,0.316964,2.6968,1.75643,0.580133,1.54092,0.0531415,2.72435,1.84557,0.622192,2.4177,3.2615,2.47776,0.355572,1.18969,2.80585,1.48045,2.73792,1.27207,1.31757,0.00647418,5.56059,0.929273,2.86031,2.55737,3.45009,1.33754,4.2221,2.44413,0.265876,1.38801,0.652557,2.74723,2.27915,1.15483,2.48536,0.862942,1.00924,2.87263,2.60592,0.341337,0.789075,2.61353,1.51038,1.42327,0.692666,1.54161,4.74268,2.04178,0.52153,1.57625,1.82753,2.29875,2.95661,0.794998,2.05961,4.72058,1.10073,0.154321,0.499115,0.0518899,0.51693,0.409915,0.405275,0.53946,2.23644,2.72192,0.94019,1.03312,0.339981,0.0105235,0.0286632,0.641563,0.176992,1.62913,0.173662,2.71067,1.12456,0.980614,1.26853,0.502585,0.0405315,0.0835886,0.801681,2.17712,0.600408,2.7253,3.26336,1.98236,0.19047,0.160637,4.27236,4.15545,0.692021,2.13214,1.37671,1.35437,1.51932,0.632685,0,2.57451,0.0496026,3.45484,0.800954,1.08736,2.65716,0.288336,3.76113,0.877107,0.343407,1.93358,3.87112,3.22765,0.771835,0.544815,2.16071,3.16342,1.80419,0.929744,2.37628,0.0166744,5.67011,0.584775,4.03636,2.40968,1.96826,2.96728,4.39782,2.26301,1.22459,0.56253,0.861167,3.46662,0.947368,1.0488,3.56452,1.12366,1.08122,3.01743,2.8018,0.545803,0.861587,0.610711,1.44031,0.526162,0.620491,1.9175,3.08667,0.663501,0.35154,1.79684,0.938363,2.92849,2.60115,0.880397,2.2393,5.30998,0.792989,0.532533,0.38656,0.475731,0.0857692,0.487966,1.6554,0.17406,3.03141,2.42888,2.00751,0.879513,0.731286,0.102841,0.637661,0.50266,0,1.66406,0.0403251,2.60657,1.94436,0.987926,2.60567,0.490878,0.00202899,0.331029,2.03788,2.20193,1.82084,3.72021,3.44797,0.278736,0.0147163,0.169737,3.7098,2.93405,1.24039,2.8275,0.505545,1.41782,0.345053,1.34328,0.0294194,2.0961,0.0848584,3.29406,1.32525,2.41475,3.38123,0.0721113,2.92625,0.847645,0.420569,1.33231,3.7629,2.30329,0.388465,1.12179,2.35953,1.66306,2.70488,0.503543,0.822229,0,4.34317,0.605498,5.77145,1.83385,1.98237,3.45013,5.29985,2.02454,0.0475114,0.395792,2.11374,3.54273,0.528591,1.56819,3.8756,0.558113,0.941327,2.41993,3.57062,0.187795,0.31701,1.55603,0.604092,0.648071,0.516138,1.93505,3.75648,0.439664,0.0350492,1.06238,2.00205,3.3981,4.43062,0.284624,1.01425,4.71788,0.761708,0.0611976,1.14644,0.125763,0.42916,0.839016,0.331764,0.328137,3.00843,3.59455,1.00545,0.717833,0.128019,0.00645771,0.328582,0.54553,0.188525,0.895525,0.0408872,3.24783,2.71351,2.49815,2.20143,0.676868,0.0287524,0.661264,1.41991,1.15123,0.467025,1.38601,2.40322,0.770031,0.00989118,0.386181,3.90587,4.04182,1.06631,1.77359,1.07598,1.38183,0.577455,1.14628,0.0020014,2.77807,0,2.90588,0.480905,1.61046,3.46837,0.355569,0.968912,1.83375,0.248112,2.19061,3.11325,2.65638,0.0367746,0.0603686,1.67572,2.31816,3.60933,1.29633,0.11909,0.0600984,5.61985,0.720068,2.48464,2.86905,2.13853,1.98833,3.15317,2.22118,0.639354,1.25785,0.281851,2.72698,0.921203,2.52241,1.82059,0.669081,0.100118,1.23264,3.06482,0.0135905,0.641079,0.403843,0.999941,1.04065,2.18396,1.00285,1.85417,0.877147,0.144436,2.53481,0.977721,1.64681,3.45587,0.818207,2.53121,4.49658,0.887782,0.234846,1.14279,0.659315,0.109713,1.36542,0.899438,0.175104,2.23193,2.60381,1.32821,0.915714,0.445052,0.00288133,0.163356,0.982402,0.0125229,0.666454,0.0555231,2.31373,1.38932,2.6543,1.35873,0.143295,0,0.226475,1.68297,0.660947,0.487611,1.4304,4.92722,1.75121,0,0.143175,3.02567,3.35532,0.272801,1.61775,0.645526,0.531874,0.614343,1.03124,0.0053275,3.25492,0.00264338,2.77116,0.430088,0.649697,2.29188,0.722446,2.50275,0.544916,0.204628,1.21149,3.88391,2.39757,0.000352105,0.212974,0.0384491,4.97835,2.7165,1.15199,0.413043,0.0146025,4.46414,0.0112177,2.61585,0.861757,2.28923,3.35354,5.43353,1.99584,1.30369,0.10671,0.500256,5.71459,0.963861,3.3774,3.52604,0.217327,0.0892254,3.19477,4.90951,0.10896,0.394621,0.600351,0.810254,0.513302,0.580245,1.14567,1.09709,0.362707,0.198018,1.85646,0.661291,3.34353,3.2775,0.385556,0.675552,6.33126,1.56004,0.641665,0.847008,1.38089,0.0555137,1.03894,1.94796,0.00552486,3.4941,3.26301,1.9274,0.253463,1.10076,0.0425154,0.904492,2.41034,0.0463368,1.52589,0.0862676,2.75297,1.88521,2.06296,1.15305,0.212366,0,0.394245,1.78298,0.888924,0.672979,1.35533,4.45294,1.48784,0.0605392,0.176757,4.75529,3.85554,0.844591,2.16973,0.272653,1.32838,0.688873,1.4805,0.00044684,2.74095,0.0685647,2.77912,1.24349,1.33388,3.78668,0.0939944,2.98083,1.01641,0.336904,2.41045,3.56117,2.63229,0.0388405,0.126486,0.872781,4.13501,2.94543,1.10456,0.801741,0,4.4144,0.153719,4.29423,1.82199,2.28633,3.094,5.33176,2.21881,0.693673,0.156806,1.09274,4.26824,0.379416,2.21975,3.53672,1.08108,0.89244,3.1856,4.76257,0.0451743,0.0949684,0.228956,0.373762,0.289384,1.2531,1.81112,2.30036,0.625152,0.00985754,1.77277,0.283007,3.30557,3.30533,0.619986,1.35398,6.38698,1.73076,0.126091,0.871414,0.356507,0.174712,1.66457,1.17135,0.0491385,2.67154,4.05349,2.17985,0.523685,0.576262,0.157504,0.308839,1.56192,0.0512652,0.95207,0.0805058,2.48621,1.37535,2.45468,1.87533,0.468265,0.122033,0.321863,1.33016,0.549338,0.494591,0.874955,2.63495,0.740472,0.0438563,0.141534,3.29394,3.68166,1.18674,1.08292,0.244218,1.11172,0.828344,1.42215,0.00554828,1.77962,0.189551,2.12145,0.546716,1.04505,3.95568,0.3655,2.37688,1.71594,0.224391,2.74793,3.33626,2.97977,0.122376,0.0632366,0.972671,2.11059,2.25442,0.85038,0.124168,0.0187264,4.50107,0.534927,3.1567,2.6244,2.49565,3.01174,4.25579,1.62496,0.592326,1.05417,0.562298,3.77764,1.02897,1.90008,2.77085,1.05659,0.747173,2.30213,3.18592,0.0147369,0.023573,0.207013,1.03249,0.925702,0.932221,1.22497,2.04939,0.744914,0.328359,1.31802,0.387632,1.70093,2.47217,1.20024,1.79619,5.47078,1.69118,0.165774,0.794053,0.341791,0.129126,1.44495,1.19076,0.0475776,2.66236,3.06191,2.4638,0.453825,0.488893,0.0543923,0.0634928,1.52558,0.22285,0.553228,0.221582,2.48304,1.022,1.56536,2.29826,0.209171,0.138548,0.309978,1.81818,1.4621,1.09224,2.08636,2.86538,0.603495,0.366823,0.329206,3.08912,2.58224,0.700127,2.0108,0.0986592,2.0601,0.895608,1.33536,0.101057,1.51155,0.290049,2.36485,1.46373,1.06817,3.15438,0.0736844,2.95347,1.35243,0.867988,2.56145,3.61033,1.72861,0.562523,0.60729,1.96837,1.20481,4.01519,1.00243,1.17049,0.0626663,4.00606,0.959066,4.73986,3.9961,2.07039,1.85597,4.51874,2.15147,0.0866293,0.160415,0.776263,3.42877,1.5827,1.208,3.27742,1.12566,1.38087,2.50217,2.11579,0.168926,0.47073,0.789089,1.18347,0.692235,0.859697,2.53243,2.11629,0.874951,0,1.84621,1.05134,2.79519,4.17778,2.43341,1.46079,4.95973,0.990473,0.00451488,0.498543,0.136919,0.747515,1.02114,0.164363,0.20047,2.40017,2.5119,2.07164,1.25656,0.222824,0.0637718,0.0677823,0.407466,0.0305444,1.12243,0.191263,2.95274,0.788903,2.04562,0.821009,0.390528,0.106878,0.290616,0.74644,1.30808,0.7783,2.74388,3.67038,3.43589,0.0119235,0.327381,4.70921,3.99718,0.309318,1.34281,0.799294,0.795629,2.50191,0.502497,0.0563869,3.90016,0.16275,2.25545,0.906753,0.884097,3.51065,0.653698,3.58473,1.43594,0.368113,3.07226,3.27478,2.61307,0.0926574,0.20586,1.01696,3.96841,1.73393,1.60189,1.61205,0.332741,5.6585,0.151749,3.11497,1.19252,2.06011,2.88685,5.18958,1.93425,1.74641,0.143624,0.980521,3.32435,0.240595,2.76726,3.43182,0.829861,0.513481,3.03082,3.14267,0.450467,0.384188,0.203941,1.57999,0.0863299,1.05067,1.62805,2.49849,0.624522,0.0210923,3.38103,0.0787131,3.06627,3.05254,0.724761,2.51799,5.99396,1.44315,0.48246,0.460933,1.27126,0.178611,0.842834,2.41634,0.0746336,2.28044,1.60962,1.77188,0.850597,1.19109,0.296519,0.604338,1.35025,0,0.855787,0.24927,2.99181,2.2486,2.37542,1.3126,0.350791,0.024723,0.201999,1.45714,1.48941,1.53887,2.55214,5.06456,0.994865,0.0734257,0.083538,3.51118,2.41169,0.631832,2.0792,0.115151,2.3912,0.772408,2.02382,0,3.3883,0,2.83265,1.07762,1.06044,3.32062,0.152621,3.1467,0.999532,0.691353,2.18066,4.07433,3.76381,0.564451,0.288695,1.46631,1.80245,3.96539,0.75673,1.25008,0.209399,4.06395,0.238434,5.02981,2.71844,2.61667,2.93738,5.24963,1.91154,0.472515,0.478448,1.34589,4.0873,1.01529,1.9998,4.08209,1.06896,1.46918,4.13979,3.46283,0.222857,0.165366,0.435843,1.03564,0.934988,0.827622,2.30924,2.56759,1.11041,0.339095,2.17876,0.246572,3.56566,2.52839,1.91746,1.52709,7.18276,1.46865,0.0681596,0.578342,0.243158,0.224508,1.52765,0.580382,0.030582,2.47407,4.58363,2.31677,0.465353,0.39472,0.587289,0.213973,0.600313,0.120027,0.89201,0.185326,3.94036,1.52176,2.62566,1.78063,0.208037,0,0.558397,1.04916,0.900976,0.483306,1.48558,3.60931,1.59509,0.0638275,0.0647773,3.8862,3.17611,0.8943,0.841184,0.323702,1.04602,0.258091,1.67474,0,1.82776,0.0908958,1.57279,0.929668,1.49998,4.81248,0.228259,2.91749,2.00505,0.0470934,2.84799,3.22272,3.68171,0.0594875,0.0733745,0.54319,3.34397,2.55439,0.507932,0.75085,0.108581,4.24962,0.145146,3.65904,2.06542,2.62613,3.56953,5.05274,1.96623,0.779482,0.634575,0.948498,4.4603,0.50401,1.81869,3.3978,1.04111,0.447499,2.99711,3.06425,0.0197619,0.0390933,0.276516,0.752591,0.459888,0.672086,2.00618,2.43392,0.363539,0.0871918,1.12805,0.738331,2.49416,1.82035,1.00751,2.02311,6.0054,1.90343,0.143459,0.798544,0.837159,0.103327,1.35308,1.02193,0.0155476,2.08821,4.37539,1.69243,0.628235,0.612107,0.0970055,0.407801,1.79539,0.123628,0.747089,0.163579,2.35004,0.852999,0.910148,1.80315,0.59716,0,0.851198,0.778011,2.19988,0.402101,0.933004,2.09489,3.05333,0.0252962,0.0977166,2.9703,1.6115,1.0476,0.400364,0.66365,0.440661,0.829402,1.43691,0.796235,1.38266,0.161254,0.934144,0.411609,1.29833,2.81847,0.583717,1.70186,2.00263,0.344199,3.56151,1.28074,1.83579,0.0387559,0.0243303,1.23755,4.48576,1.36396,2.05456,0.473,0,3.95411,0.00469383,1.32001,0.745603,1.49426,1.90903,2.37102,0.920934,2.45122,0.736415,0.664711,3.55602,2.10916,0.70585,2.62348,1.12938,0.956224,1.17342,2.17879,1.02419,0.309579,0.363046,1.38165,0.74992,0.428322,1.58538,1.77151,0.166842,1.10562,1.36608,0.289836,1.93779,1.48751,0.142338,1.41565,4.64051,1.12845,1.44624,0.618646,1.53882,0.55646,0.11152,1.63253,0.13781,3.06238,1.53316,2.18355,0.44066,1.92378,0.46227,0.37104,1.70604,0.23205,1.86809,0.102674,3.19703,2.5658,1.93422,2.27114,0.657241,0.0382914,0.290383,1.35741,1.49755,0.741304,2.09531,2.14157,1.03596,0.0978403,0.203721,4.29982,4.3951,1.17579,2.35823,0.722298,1.5228,1.03373,1.08911,0.0532115,1.63872,0.00680868,1.80044,0.4208,2.52569,3.74694,0.2112,1.57353,2.23563,0.457424,3.61216,4.27956,1.83665,0.107581,0.134045,1.37063,2.4452,2.30221,1.81058,1.01463,0.0911855,5.20949,0.789669,4.47411,2.57445,1.41898,1.25783,3.56169,1.19806,0.501017,0.323389,0.956781,1.86047,0.423411,2.34943,2.48705,0.592364,0.878147,1.79065,2.40255,0.415444,0.630449,1.11744,0.658741,0.73657,1.44287,1.21421,2.56012,1.30955,0.0461261,2.81246,0.494368,2.01135,3.04064,1.15881,1.88349,3.73473,0.919362,0.107721,1.49636,0.617467,0.305044,0.784687,1.16902,0.0493862,2.54482,2.76247,1.1756,1.09797,1.07768,0.0691202,0.0770139,0.696618,0.0298994,0.735747,0.0129393,1.88335,0.905986,1.03496,2.101,0.597856,0,0.19022,1.55955,1.9505,1.45855,2.44006,3.13068,0.374842,0.109704,0.0564849,4.41647,3.26477,0.885778,2.43465,0.350469,1.09961,0.447687,1.88259,0.0782037,1.40383,0.0368739,2.70133,1.89626,1.92466,3.58989,0.122527,3.11725,1.05007,0.51717,2.40146,3.33289,1.93742,0.252541,1.02291,2.0183,1.3077,2.65496,1.15508,1.23102,0.000266209,4.37571,1.61635,5.65003,1.84072,1.86486,3.17868,5.39525,1.75413,0.261276,0.306518,0.943247,3.54729,0.883223,1.44945,3.65783,0.709348,1.23866,3.18681,3.92327,0.106278,0.093275,1.28177,0.542254,0.68957,0.528313,1.24936,2.35226,0.303834,0.0594064,1.31486,1.1578,2.43625,4.4125,0.904337,1.00147,4.81197,1.31189,0.0296455,1.11495,0.724461,0.520235,1.25262,0.250807,0.0281229,2.57911,2.92775,2.22562,0.75527,0.242219,0.118131,0.363648,0.497668,0.0814463,1.30973,0.0366483,3.00148,1.25068,1.63096,1.52441,0.621856,0.00641068,0.230657,1.73529,1.45144,0.646578,2.25007,3.25211,0.563205,0.0751726,0.0163225,3.54842,3.84219,1.02355,1.92965,0.817386,1.16032,0.510203,1.44918,0.094062,2.12093,0.18292,2.18219,0.247555,1.35479,3.45437,0.0852659,2.62705,0.895785,0.287165,2.27176,3.76671,2.21876,0.34165,1.02308,1.78778,1.66692,2.17194,0.78184,0.405094,0.0208693,4.54682,0.971125,3.88979,2.00045,2.23424,2.78853,5.28522,2.13774,0.237709,0.150786,0.456535,3.60444,0.698361,1.24292,3.25507,1.02311,0.797662,2.94663,3.29284,0.155182,0.0697566,0.439491,0.730536,0.809481,0.477256,1.35965,2.22005,0.560803,0.0364263,1.49128,0.700289,2.63805,3.72576,0.408458,0.932113,4.24421,1.17882,0.134419,0.657352,0.368504,0.184188,1.30552,0.460816,0.028444,2.41779,2.85773,2.01615,0.72293,0.287015,0.0462368,0.160295,0.856651,0.098313,0.130786,0.046435,2.05407,1.54281,2.34828,2.53102,0.442987,0.0561916,0.268094,1.58142,0.8853,1.28698,2.50667,3.04347,0.423114,0.0185859,0.262836,3.83576,3.57948,0.914873,2.57641,0.271825,1.59572,0.423181,1.84506,0.0146318,1.08426,0.0235161,3.13197,0.697155,1.7896,3.38426,0.0901369,2.18545,1.48666,0.392883,2.32617,3.22082,2.32532,0.0902337,0.145137,1.08237,1.66407,2.63171,1.45994,0.131882,0.0723601,5.2952,0.436551,4.01131,2.07321,1.4268,2.99351,4.44962,1.59591,0.584692,0.999917,0.741395,3.61155,1.21488,2.08004,3.2875,1.06792,0.701226,2.57786,3.9834,0.0356573,0.0402862,0.258593,0.57421,1.35641,0.611022,1.26718,1.16932,1.30904,0.0148628,1.97011,0.861008,1.83741,3.52019,0.66894,1.38401,4.86006,0.991134,0.0453428,0.595723,0.376409,0.243376,1.10378,0.772661,0.104803,2.20183,2.70189,1.8724,0.874469,0.276714,0.0854222,0.109846,0.469759,0.0341609,0.822008,0.0663278,2.82431,1.98922,2.58916,2.33014,0.36916,0.000405256,0.440166,1.42747,2.06229,0.839913,2.56837,3.54221,0.806237,0.0238713,0.0986123,4.16513,3.2629,1.11632,2.24042,0.744196,1.76337,0.456146,1.41652,0.0272024,2.58901,0.167701,2.60603,1.09688,1.16621,3.30133,0.272464,2.55796,1.90589,0.180866,2.41701,3.38609,3.11584,0.191306,0.749476,1.46686,1.90682,2.87457,0.694,0.343411,0.0147392,4.91275,0.464997,3.85381,1.65685,1.67556,3.0329,4.73798,2.09576,0.312937,0.517346,1.04992,3.59476,1.26293,1.085,3.32468,1.59134,1.01859,3.35532,3.53533,0.084303,0.0628613,0.648484,1.09515,1.50538,0.17028,1.40541,2.64826,1.06457,0.100404,2.33836,0.694368,2.53434,3.55765,0.68602,1.77681,5.59932,1.25979,0.0556799,0.505265,0.470065,0.221458,1.14363,0.721429,0.0939817,2.04274,3.13907,1.29704,0.464239,0.875146,0.118063,0.167729,0.691054,0.0293266,0.611965,0.0768707,2.41301,1.51695,1.93647,2.18609,0.344321,0.0389794,0.454889,1.37358,1.48123,0.780079,2.11202,3.10542,0.999507,0.0394063,0.204987,4.05465,3.69151,0.976356,1.60781,0.698079,1.13738,0.537282,1.42179,0.00870474,1.36949,0.023588,2.30823,1.14589,1.14334,3.29495,0.192186,2.55375,1.98119,0.272244,2.98279,3.39615,2.60981,0.0805932,0.603192,1.68799,1.85609,2.74516,0.505839,0.325397,0.0708398,5.28361,0.430745,3.53773,2.20675,1.66348,2.58096,4.62437,2.74623,0.222936,0.392539,1.03132,3.74876,1.04139,1.11657,3.41723,0.882675,0.70088,2.92961,3.14528,0.0404496,0.197252,0.654779,1.25583,0.600679,0.254489,1.76305,2.48888,0.957629,0.0304134,1.98809,0.68718,2.4288,3.55978,0.906977,2.39657,4.87962,1.07763,0.0113303,0.629885,0.284732,0.307247,0.693691,0.863577,0.0309877,1.49964,2.85926,1.40856,0.633111,0.401133,0.0182732,0.0368716,0.753268,0.00673428,0.534558,0.00958632,2.73017,2.39266,2.17597,2.33269,0.836123,0.0222678,0.178695,1.06635,1.69794,1.20227,2.49672,4.13729,0.191926,0.0308835,0.0363431,4.61121,3.23564,1.00583,2.72539,0.298151,2.01082,0.769828,1.96608,0.0858546,2.23029,0.0122647,2.23588,0.633349,1.20338,3.37658,0.0692665,2.29815,1.05922,0.480622,2.08249,4.0234,2.28867,0.415034,0.983109,1.92329,1.10093,1.73856,1.04592,0.487978,0.0242384,4.47649,0.681652,5.14066,1.34459,2.59875,3.29062,4.8603,1.86614,0.227459,0.307617,1.15525,2.771,0.254383,2.10122,3.77412,0.778152,1.06289,3.55692,4.12524,0.0866851,0.039943,0.282242,0.490172,1.49075,0.340438,1.89202,3.13522,0.571204,0.0840356,1.08281,0.748803,2.67685,3.2724,0.322296,1.01903,5.3433,1.32265,0.079348,0.697845,0.370772,0.0963784,1.51029,0.731301,0.0519211,3.12523,3.5217,1.55013,0.490105,0.309106,0.152689,0.126233,0.900529,0.0508995,0.470179,0.0570541,2.93815,1.03723,1.31152,1.88639,0.53211,0.0120982,0.19104,1.59915,0.789835,1.25294,2.21089,3.76776,0.442896,0.0824799,0.0142063,4.1578,3.41276,0.872557,2.83429,0.41081,1.12326,0.520284,2.29224,0.034131,2.31664,0.0527101,1.93802,0.23192,1.07679,3.58917,0.103749,2.88465,0.943151,0.274026,1.80946,4.21325,1.81319,0.25273,0.727642,1.31808,1.68266,2.21464,0.861174,0.387389,0.0198225,3.8402,0.379294,4.60951,1.26635,1.76706,3.3753,4.86082,1.96672,0.269316,0.196363,1.33864,3.62479,0.627859,2.09711,3.85491,0.609686,0.881531,2.71234,3.77832,0.0278493,0.0952197,0.350846,0.639852,0.512732,0.316809,1.29115,2.19078,0.408391,0.0650802,1.27545,0.848432,2.89082,3.46501,0.429315,0.532971,4.65582,1.2727,0.0419573,0.771441,0.57798,0.189393,1.16264,0.666373,0.011883,2.61725,2.62028,2.10185,0.367404,0.307311,0.375864,0.115727,1.16286,0.145557,0.639334,0.0189169,2.85532,1.43457,1.51701,1.08727,0.655423,0,0.39513,1.46804,1.47166,0.837551,2.10679,3.85416,0.534801,0.0470078,0.124029,3.15903,3.37361,0.818388,2.83651,0.451094,0.913231,0.778017,1.86247,0.0487507,2.85288,0.0583686,2.2793,0.732785,1.39704,2.60797,0.122074,2.77161,1.1196,0.590158,2.21509,3.73356,2.73063,0.499842,0.927976,1.42161,2.06318,2.38936,0.891494,0.883829,0.209371,4.37902,0.608832,3.81845,2.51543,2.54147,3.3838,4.15177,1.59683,0.192216,0.537215,0.455513,3.93832,1.0829,1.92547,2.39969,1.00714,0.802947,2.15678,3.95803,0.20991,0.124253,0.479957,1.0012,0.444251,0.969963,1.81434,2.18901,0.321689,0.0278072,1.64864,0.651427,2.12086,4.46436,0.998611,1.1613,4.08807,1.39377,0.127706,0.700906,0.552711,0.515313,1.00938,1.48769,0.0935584,3.28137,2.79706,1.85369,0.296472,0.487268,0.0317496,0.19594,1.23039,0.0388062,0.67017,0.0934113,2.86187,1.86251,1.88909,1.87347,0.596602,0.00377345,0.192182,1.35662,1.60304,1.6355,2.39665,4.20327,0.978054,0.0436493,0.0764731,3.90868,3.21256,0.552857,2.17574,0.720971,1.57867,1.00832,1.66714,0.0796119,1.50929,0.0632518,3.0211,0.78774,1.44251,3.49814,0.0800848,2.00075,1.36371,0.743488,2.33431,2.60721,2.96996,0.278091,0.484778,1.58918,2.23393,1.81321,0.76124,1.05518,0.180481,5.67809,1.19608,4.3703,2.42004,1.21932,3.44784,4.91669,1.31593,0.246808,0.215084,0.619059,3.59653,0.725094,1.33354,2.42733,1.78544,1.59301,2.10466,3.41312,0.251837,0.0452664,0.893701,0.983479,0.592334,0.906095,1.89089,2.11333,0.918553,0,1.45872,0.963036,1.41516,4.55745,0.836861,2.22682,4.22401,0.894384,0.0436534,1.00384,0.145187,0.258983,1.36973,1.11032,0.156456,2.41609,2.70471,2.1322,0.526215,0.252542,0.0258043,0.349993,0.35663,0.104863,0.225369,0.24749,3.35109,0.963801,1.10813,0.800809,0.467626,0.107116,0.0552091,2.47139,2.62246,1.78614,3.4856,5.1379,2.94626,0.0129506,0.137714,4.38971,4.69919,0.188566,2.24813,0.520747,0.79837,1.95592,0.550285,0.00599656,3.57328,0.080133,2.81194,0.483219,1.56046,3.52163,0.658864,3.26069,1.05765,1.0118,2.94407,4.80952,1.89636,0.259329,0.0739332,1.2724,3.2216,1.86089,1.15171,1.37013,0.828185,6.12156,0.314778,3.56917,0.780318,1.08123,4.30628,4.93581,2.55729,1.14319,0.0388253,0.890784,3.77139,0.236146,3.92972,3.29398,1.21922,0.728362,2.22584,3.33834,0.835542,0.443234,0.266086,1.38535,0.148491,1.23911,1.60022,1.91213,0.431745,0.0798277,3.92146,0.100696,2.10039,5.02391,0.322355,2.43659,4.82507,0.601774,0.46191,0.594377,1.27198,0.325763,0.846408,2.22323,0.0822376,3.12431,1.4243,2.1481,1.00837,0.604639,0.100744,0.806879,0.668582,0,0.35246,0.0494527,2.93895,0.883624,1.23582,1.33622,0.579971,0.00303413,0.12075,1.26554,0.868126,0.683931,2.13174,3.34147,0.507017,0.034596,0.407799,3.14334,3.45889,0.514382,2.67469,0.30144,0.566191,0.578803,1.58267,0.0177247,1.72527,0.00918701,2.09903,0.249594,1.94982,3.16641,0.119972,2.91085,1.27837,0.211139,2.1288,3.62004,1.90441,0.0502565,0.314473,1.26084,2.53492,2.32336,1.24451,0.584151,0.09295,3.83199,0.583287,4.35442,2.26039,2.16336,3.10987,4.73173,1.53667,0.242611,0.268393,0.520367,3.39473,0.656522,2.33191,2.41795,0.737193,0.88631,1.90878,3.36651,0.160806,0.30254,0.598468,1.03497,0.637035,1.40763,1.29467,1.22339,0.127561,0.0349597,1.86225,0.668291,2.26833,4.25181,0.515916,0.231848,3.73252,1.58088,0.390363,1.09529,0.602876,0.307385,1.07234,1.07695,0.00450348,3.96513,2.2456,2.13224,0.583686,0.3779,0.0323832,1.12609,0.944197,0.0601499,0.516288,0.0505858,3.97665,1.66554,1.54787,2.25417,0.843666,0.109033,0.411015,0.34539,0.718933,0.611431,2.28845,2.05871,0.923705,0.216646,0.0154038,3.44349,2.49335,0.979974,1.59057,0.453513,1.40971,0.303805,1.07996,0.0104552,2.15765,0.575598,1.24831,0.146673,0.647196,3.51472,0.223764,2.36423,2.38342,0.979161,2.10142,3.73741,2.76451,0.864586,0.278941,1.18661,2.21592,2.22132,1.20689,1.51193,0.020477,3.30165,0.550168,2.83984,2.15062,4.65036,4.78363,3.84807,1.75357,0.539525,1.41835,1.5899,3.9677,0.71811,1.18531,4.55276,0.925562,1.40166,2.73467,3.21768,0.090259,0.000825712,0.866169,2.0545,0.279414,0.582492,1.44524,3.59893,0.470387,0.00659904,0.221317,1.14851,2.84489,2.55217,0.285621,1.01121,5.44992,1.04718,0.384958,0.209347,0.269595,0.214903,1.98371,0.982846,0.446999,3.39738,2.89421,1.69827,0.18654,0.0606241,0.572584,0.845817,0.83125,0.142304,0.511877,0.101747,3.0588,1.25144,1.19462,1.74543,0.190779,0.00891978,0.442403,0.66589,0.917971,0.111052,1.06662,2.67585,1.32598,0.0668443,0.0650987,3.3711,3.52265,1.85074,1.12053,0.144353,0.746337,0.826837,2.03384,0.0279713,1.60881,0.160879,1.02235,1.06167,1.20357,4.12033,0.136176,2.46433,2.25091,0.329999,3.34333,2.89288,2.42422,0.0518891,0.154113,0.650573,3.72507,2.40731,0.693673,0.657181,0.0400677,4.00169,0.610979,3.20096,2.30301,3.29098,3.8978,4.15155,2.06398,0.739552,0.580522,0.728652,4.44951,1.04893,2.03725,3.53141,0.726454,0.643724,1.8834,3.04606,0.0857924,0.340497,0.160281,1.16203,0.133217,0.954035,1.35878,1.93417,0.0825962,0.0565659,0.919205,0.37644,2.29047,3.81102,0.682563,1.71354,6.10332,1.62584,0.381732,0.857583,0.478908,0.310714,1.69634,1.53788,0.093128,2.65451,3.03056,2.00864,0.622983,0.242817,0.0446907,0.31917,2.12676,0.584698,0.508028,0.312854,3.57535,1.01957,1.76515,2.32122,0.309599,0.0135759,0.426861,0.866511,1.5532,0.567531,1.69692,3.17837,1.28109,0.138402,0.0340985,4.34716,3.71548,1.77937,2.15931,0.173799,0.726289,0.202157,2.69981,0.0611559,1.09466,0.21049,1.1993,1.28511,1.93591,5.0003,0.160311,3.53014,1.60281,0.552014,2.56209,3.43234,3.58124,1.18037,0.927042,2.41542,2.06958,1.71808,1.0145,0.981867,0,4.76112,1.02332,4.90183,2.32996,3.75912,4.43126,3.90499,1.79408,0.407988,0.975094,1.80331,3.76273,0.680769,1.02908,4.06174,1.33209,1.37562,3.4585,3.2734,0.0544218,0.048771,0.182318,0.83412,0.339921,1.93744,1.76138,3.12507,0.333666,0.603001,0.910121,1.11202,1.64939,2.83296,0.878977,1.53331,5.16968,2.19303,0.26282,0.56399,0.559927,0.339195,1.69228,0.502092,0.0285549,2.2546,4.01991,1.49154,0.449443,0.216892,0.285517,0.116664,1.16992,0.968088,0.554891,0.372601,4.17086,0.611138,1.43107,0.835574,0.497291,0.0541932,0.0318258,1.75179,3.45455,2.30135,4.44617,5.07075,4.09356,0.168165,0.118873,3.71805,5.38558,0.359948,1.17537,0.401529,1.74139,3.03928,0.641873,0.0452245,3.51162,0.225924,1.38501,0.975901,1.95064,3.55211,0.409476,3.11961,2.09502,0.283407,3.57552,3.27555,2.12664,0.34929,0.474149,2.16918,3.38105,0.957036,1.66978,2.51291,1.40494,5.48474,0.223458,5.07802,0.565896,1.52222,3.37747,5.36741,2.40689,1.75742,0.177935,1.56984,2.99916,0.108959,3.20956,2.76626,1.30163,0.704933,4.24807,1.97075,2.02187,0.711818,0.606899,0.713849,0.580595,1.98833,1.63021,3.92626,1.18241,0.0354319,4.58759,0.332903,2.27938,5.06359,0.173173,3.92383,4.6605,1.06388,0.556589,0.171921,1.86755,0.878197,1.36928,0.658514,0.0190993,3.09929,2.0158,2.27263,1.96783,0.792823,0.213694,1.07014,0.38616,0.0420136,0.121149,0.419845,2.73868,1.23557,1.6829,1.17198,0.422408,0,0.212392,2.15687,1.06676,0.841352,3.33135,5.16731,2.13337,0.220289,0.325544,2.79493,2.97439,0.37262,1.64285,0.181783,1.72529,1.00698,1.78506,0.0236844,2.2001,0.10197,1.8321,1.11312,1.18017,2.91984,0.108672,3.7586,0.671367,0.93762,3.10085,3.06066,1.9627,0.179142,0.317111,1.18516,2.57359,2.41962,1.47094,1.01224,0.000268379,4.35446,0.484724,4.49661,1.5371,1.99019,2.96908,6.3332,0.812003,1.23299,0.243958,0.250655,3.52692,1.45084,2.45594,2.48154,0.441547,0.970346,4.3034,3.72199,0.833116,0.0537236,0.949839,1.43612,0.538444,0.225747,1.98101,2.63878,0.72098,0.148604,2.18236,0.28725,2.9508,3.88237,1.00137,0.888707,6.01463,2.11074,0.386278,0.708657,0.847301,0.235339,1.14889,0.734926,0.0110711,4.25795,3.09755,2.88656,0.214374,0.615552,0.0784606,0.794541,1.4357,0.00623513,0.514883,0.03413,3.33517,0.812137,1.2248,1.74864,0.315777,0.013393,0.210911,1.90697,1.91836,0.767752,1.65758,3.16942,1.14282,0.0459913,0.220999,4.17401,4.52362,0.804498,2.51992,0.268469,0.642483,0.851914,1.99326,0,2.50734,0.0381192,2.03101,0.542559,2.1662,4.10502,0.0503313,2.32466,1.89728,0.167142,3.0341,3.65051,1.81492,0.173916,0.377965,0.68109,2.95184,1.96136,1.56334,0.696108,0.00445108,4.07859,0.114465,4.67323,1.05034,1.61055,3.35983,4.21886,1.91939,0.436332,0.254994,0.68775,2.84131,0.521681,2.10881,3.26495,1.07813,0.664651,1.33711,3.38636,0.0436841,0.419039,0.227035,0.94118,0.196337,1.36326,1.60736,1.10145,0.0341857,0,2.58226,0.202405,2.20619,4.68477,0.452925,0.957097,4.00319,1.80225,0.122734,1.26034,0.979403,0.635432,0.928647,1.13046,0.0393081,2.84849,2.48059,2.28962,1.31035,0.412608,0.0703817,0.296971,0.897599,0.0375367,0.294765,0.160068,2.55941,1.3605,1.34182,3.14562,0.427241,0.0111013,0.150922,1.19132,1.69642,1.51754,3.49422,2.81836,0.123653,0.0371704,0.242947,3.68749,3.71244,1.78137,3.2637,0.947374,1.67937,0.796561,2.51693,0.134468,1.68809,0.116397,1.39079,1.24835,1.9665,3.59129,0.0179134,2.62591,0.670484,0.865052,3.07211,3.2161,1.61743,0.771014,0.855325,1.22421,0.375836,1.87587,1.42771,0.939178,0.00956868,4.43019,1.83368,6.28362,2.02937,2.98059,3.77094,4.369,0.936155,0.152694,1.12217,1.54499,2.27825,0.381153,1.99007,2.66481,0.41185,1.30618,2.36695,3.4729,0.175739,0.0572974,0.920726,0.575249,1.12185,0.886291,1.77656,3.09869,0.271949,0.42442,0.827352,1.61262,2.53005,4.59954,0.966383,0.271037,3.76151,1.69681,0.196308,0.92964,0.292832,1.10383,0.979889,0.0910277,0.456767,4.02827,3.03481,0.945839,0.690891,0.159811,0.335634,0.407737,0.668719,0.211333,0.512295,0.0159793,3.84225,0.861139,1.66746,2.88913,1.05076,0.017604,0.28309,1.60989,1.0752,0.338429,1.99783,1.83507,0.453097,0.152038,0.072195,3.54355,4.65087,1.40336,1.6848,0.314609,1.67955,0.824161,2.18883,0.240514,1.77434,0.279308,1.42163,1.27125,1.40641,4.79524,0.0708822,2.12524,1.796,0.135306,1.86181,3.34326,2.62422,0.273251,0.466707,1.28652,1.4584,1.91578,1.2838,0.758845,0.0115877,4.82758,1.02023,4.63398,2.57347,3.50164,3.95303,3.70157,1.64042,0.440699,0.761368,0.495789,1.64867,0.70766,1.93985,2.99937,0.903021,0.935193,1.87404,3.39784,0.0792058,0.0470492,0.257649,0.60916,0.915243,1.18901,1.08066,1.89791,0.142627,0.186183,1.73326,1.11931,2.12438,3.13803,0.993114,1.108,4.62309,2.45593,0.0847078,1.31495,0.32682,0.559858,1.30904,0.349134,0.0207973,2.69449,2.65408,1.76183,0.526198,0.360282,0.0162377,0.452695,1.67969,0.786978,0.738353,0.0760599,2.98748,0.974157,1.96799,1.90436,0.93187,0.0125455,0.144638,1.44335,0.501522,0.782217,1.49275,3.55478,0.51408,0.0272756,0.00305018,3.47825,4.65626,0.926729,1.82176,0.461906,0.700576,1.0538,1.82246,0.0129438,3.10561,0.129999,2.23367,0.193773,1.35113,4.37293,0.408169,2.48598,1.12841,0.26154,2.01435,3.85373,3.28516,0.033117,0.569275,1.23854,1.83767,1.66214,1.18243,0.607491,0.127385,4.84697,0.817407,3.33022,2.42144,2.63031,3.68531,4.49616,1.40106,0.68475,0.911053,0.511081,3.96689,0.497705,2.66518,3.59399,0.693997,0.303797,2.3589,3.17979,0.120173,0.0840141,0.0773957,1.22968,0.873476,0.766364,0.745777,1.11064,0.114887,0.175923,2.15218,0.573491,1.95948,3.04424,0.916047,1.46429,4.72096,1.51816,0.327772,1.1236,0.827795,0.180154,0.970699,0.992361,0.0485862,3.01936,2.58218,1.8066,0.349257,0.142384,0.0494521,0.425016,1.76525,0.178625,0.188875,0.0699539,4.07327,0.691051,1.58693,2.37945,0.216532,0,1.81234,1.15422,0.581613,0.271597,0.473457,2.50652,2.63144,0.181997,0.0424526,2.76629,2.03107,0.867031,0.152904,0.0139542,0.236293,0.0618427,2.29404,0.0216631,1.18051,0.0467634,0.860408,0.57037,0.724652,4.19656,0.0281417,2.31023,1.71416,0.147774,3.36904,2.19917,2.46426,0.0893236,0.077964,1.17619,3.83219,2.2351,0.284899,0.717847,0.00192396,4.0828,0.0221865,2.47903,1.85622,2.79813,3.13349,3.78653,2.18643,1.42026,0.848296,1.66738,4.36045,2.32377,0.300671,2.82945,0.368193,0.19111,1.17597,2.81472,0.231004,0.0665675,0.404295,1.22482,0.0443175,0.790282,1.99073,2.7893,0.349134,0.273168,0.396511,0.449771,2.04238,1.17213,0.0075335,1.75189,4.58506,1.10772,0.211991,0.926428,0.222057,0.110032,0.107369,0.978691,0.0444489,1.09031,3.1166,1.84598,0.23379,0.0729769,0.087661,0.16739,2.09003,0.564941,0.553636,0.98773,3.2317,2.84104,1.344,1.61252,0.924333,0.390287,0.523503,0.745252,1.81386,0.3759,0.961302,0.74361,1.92746,0.0367375,0.254657,4.22352,3.2171,0.928905,0.551574,1.87886,0.820247,1.85763,1.40116,0.460056,1.42202,0.0111928,0.189119,0.220919,1.58414,4.81054,1.16823,0.408528,2.59343,0.0531654,2.90222,2.50481,0.482151,0.0355503,1.4243,0.97523,5.23268,1.0987,1.421,1.03101,0.0672638,3.65836,0.717889,2.82239,2.06995,2.53594,1.60664,1.07846,2.54499,0.898502,0.0471799,0.700152,1.64357,0.0399906,0.482931,2.05672,0.797772,1.13379,0.274555,0.707143,0.234836,1.07659,0.178635,0.615385,0.297467,0.860431,0.110594,2.59657,0.600154,0.479032,0.296133,0.993862,2.26152,1.45347,0.364953,0.894827,2.17797,2.07657,0.611407,0.822876,1.5875,0.144002,1.58942,1.88468,0.114159,1.42093,0.818327,1.9349,0.802866,0.243312,0.301177,0.429983,1.43563,0.656302,0.0938108,0.430553,4.81325,0.0807951,1.46824,2.15321,1.30366,0.0564281,0.156204,2.13588,1.46877,0.472374,0.611697,1.42164,1.90515,0.231403,0.129641,2.6591,2.61479,0.637518,0.904208,2.13806,0.372701,1.13394,1.90304,0.58043,1.33959,0.553732,1.06007,0.985018,0.543808,3.25897,0.206441,1.39186,0.804308,0.384461,0.844792,2.90573,0.300399,0.213936,0.998085,1.63261,3.31909,1.73901,1.18092,0.349687,0.109669,3.74661,1.23421,2.04492,2.26541,2.26596,1.53822,2.52296,2.75313,0.220269,0.019697,0.46049,1.82769,0.388736,1.27916,3.24384,0.741025,0.487426,0.531523,2.76641,0.0748161,0.547243,0.837052,1.31265,1.02772,1.34277,1.34924,1.00636,0.103381,0.0574457,0.980765,0.820282,0.887506,3.20173,0.046969,0.528082,2.77855,1.84989,1.00946,1.86239,0.608829,0.516535,2.2498,0.342212,0.0634859,1.29077,1.86591,2.0693,0.417948,0.261626,0.13938,0.409343,2.22424,1.9599,0.663104,0.11887,6.45383,0.38252,4.04982,1.77296,0.789522,0.227368,0.340924,3.34547,2.93424,1.29059,1.17446,1.97037,1.24899,0.574112,0.254942,2.74412,2.74275,0.509385,0.330373,1.52191,0.451901,2.00786,2.16086,1.21977,1.45518,0.822138,1.62224,2.1564,0.630753,2.69039,0.0497901,1.52492,1.13065,0.222982,1.43297,1.86954,0.621498,0.639015,1.63963,2.85328,2.43762,1.38037,0.973973,1.20674,0.148073,4.70571,3.20529,2.91054,0.694522,3.6054,2.29621,3.79459,0.683008,0.239141,0.2356,0.30097,1.11056,1.80002,1.15592,2.84758,0.432422,0.857427,1.14139,1.32843,0.153965,0.989956,0.686348,0.316861,0.115731,1.02845,3.41758,2.12211,1.2383,0.485448,2.75098,1.07798,1.46718,3.1013,0.249525,1.36975,3.21075,1.94395,0.38638,1.62883,0.523149,2.01228,1.84046,0.501834,0.593366,1.46181,3.40543,1.10476,1.44816,1.1251,0.0295201,0.133602,3.52492,2.39285,0.594473,0.67307,7.33662,0.312076,2.17701,1.45173,0.573155,0.34617,0.487049,3.08279,2.93026,0.649512,1.89446,1.756,0.609289,1.22079,0.398642,2.5188,1.94528,0.986859,0.457446,0.847528,0.412541,0.976149,1.2117,0.705849,1.9876,0.722498,1.24018,2.55111,0.489519,2.72867,0.0291009,2.35459,0.235688,0.316869,1.69132,1.35021,1.12745,0.435903,1.41336,2.33648,2.03596,1.68084,0.584443,1.15148,0.0612399,4.65578,1.55388,4.58667,0.963235,4.25159,2.54535,3.56805,0.892973,0.33514,0.181146,1.26509,1.56171,1.0552,1.02058,2.56878,0.821836,0.81548,2.27766,2.08943,0.648175,0.884804,0.96172,1.02797,0.711759,1.21395,2.56594,3.44538,0.760028,0.0488547,1.48262,0.799258,1.08438,3.27935,0.0382538,1.45882,3.31775,2.27778,0.715653,1.53316,0.778512,1.63186,1.1993,0.220446,0.778951,2.07157,3.78488,0.823545,0.834017,0.654665,0.0800226,0.337342,1.8533,2.51725,0.702393,0.102364,7.71211,0.286745,2.43409,2.67686,0.619262,0.335597,0.0531147,3.60267,2.38416,0.416732,2.09647,1.71686,0.757883,0.930876,0.0560811,1.97866,3.51794,0.56192,0.535995,0.996723,0.851703,0.930008,2.42682,0.615996,1.27864,1.03836,1.36461,1.88232,0.572575,1.65992,0.166636,1.97775,0.721565,0.134376,1.03473,1.5387,0.73856,0.193663,1.30164,2.81109,2.61607,2.13191,1.14167,1.21546,0,4.85786,1.71485,3.11446,0.752463,4.40693,1.40171,4.11217,1.04395,0.399484,0.80766,0.345108,1.13839,0.892735,1.10168,3.1794,0.556764,0.76763,1.86924,1.66639,0.354613,0.812082,1.13795,0.466964,0.466748,2.14874,3.45943,3.79036,0.872065,0.592503,2.39201,2.14517,1.32333,3.32057,0.065606,1.8166,3.61239,1.98733,1.4363,1.76843,0.745389,1.04846,1.55632,0.433596,0.657589,2.06524,3.66612,0.766329,1.20404,0.482788,0.039347,0.568658,3.09411,3.26962,1.34813,0.10506,5.60434,0.0889655,2.88713,2.08657,1.16381,0,0.320336,3.15232,2.11339,0.581482,0.599109,1.64684,0.136905,0.509498,0.0594996,3.93309,3.1175,0.723839,1.43198,1.64233,1.06164,1.62169,1.82454,1.04357,1.74279,0.442203,2.06128,2.01575,0.252877,3.43121,0.0215486,1.07699,0.155145,0.312614,0.946017,1.93533,0.400249,0.157762,2.43273,2.4283,2.45243,2.85849,1.08282,0.64019,0.0445874,4.83998,2.06011,3.49755,0.916848,3.19959,1.67709,2.80862,2.02959,0.462559,0.40393,0.567347,1.60233,0.82948,1.03516,4.08745,0.758877,0.558853,0.81449,2.77149,0.020525,0.424165,0.548064,1.4836,1.51395,1.17532,2.14801,2.16371,0.536734,0.20805,2.26247,0.393927,1.15546,3.80855,0.062539,0.560503,3.57414,1.74579,0.403144,1.8321,0.521171,0.281189,2.58205,0.165068,0.21593,1.33553,2.64503,1.22495,0.95273,0.758475,0.0459459,0.0536204,2.62278,3.09329,0.743081,0.355141,3.07225,0.99825,0.949002,1.12931,1.44038,0.223063,0.0110416,2.39146,1.64444,0.935833,1.60383,0.529734,1.10079,0.362805,0.828244,2.59053,4.22452,0.686707,0.93297,3.42002,0.0990215,0.910626,0.453031,0.468966,2.71115,0.0979038,0.878076,0.580586,1.66404,2.94335,1.24273,1.59951,1.76682,0.486193,2.11952,2.20781,0.287483,0.00329437,3.36734,0.745545,4.66653,0.703305,3.2894,3.1307,0.324362,2.55482,0.777873,1.86771,1.24968,1.76596,0.422246,2.00153,3.43406,0.229743,0.130489,1.09743,2.68829,0.149078,0.925941,3.05519,2.28496,0.148349,1.08481,0.311612,0.871743,1.85163,0.623889,2.28469,1.59312,2.77352,0.738557,1.06193,0.625584,0.341742,2.5183,2.62624,2.89115,3.69003,0.861826,0.267442,1.87515,2.30547,0.962704,0.719618,1.73405,0.0303122,1.83939,2.17335,0.257229,1.65153,1.09087,0.755912,1.62221,1.2047,0.0661021,0.732646,2.63772,0.807986,0.478311,1.44167,3.3315,1.92262,1.10396,2.1373,2.94314,0.605313,0.589089,3.41747,1.81504,1.43408,0.91407,1.51313,1.78559,0.543597,0.0665963,0.848016,4.45425,0.375745,2.11154,2.0208,0.331684,0.872671,0.837342,1.35013,3.21238,0.285412,0.122489,0.0346207,1.26419,2.99989,0.387741,0.275004,0.779306,1.11022,0.949502,1.27925,0.00285642,0.139194,3.4054,0.815279,1.51069,0.314028,2.58728,0.931934,0.0288647,0.85859,1.04216,2.46264,0.431734,0.340156,0.22502,2.04931,2.61658,0.785478,0.0418276,2.72806,0.686128,0.114332,0.593864,0.881908,1.11965,0.0711848,0.935166,0.3465,1.27528,0.173925,0.981481,3.06613,1.73727,2.21345,0.102727,0.694715,0.258337,0.0755219,1.85269,3.1383,2.03729,2.63149,0.560199,0.010192,0.823945,1.67051,2.69149,0.669242,1.35486,1.68324,0.539925,1.1993,0.0525289,0.577206,0.48674,1.16002,0.269629,0.6042,0.215148,0.47513,1.01106,0.912632,0.722549,0.141901,6.56804,0.332258,1.45423,1.84598,1.82717,0.607185,0.573186,2.45562,1.12138,0.721186,1.19955,2.16764,2.1298,0.463881,0.178236,1.82724,3.83526,0.128018,0.762716,0.459628,0.192741,1.12438,1.60296,0.963624,0.888673,0.645426,0.701608,0.815011,0.682288,1.60415,0.127339,1.19198,0.86594,0.288694,1.62697,1.99353,0.0730802,0.0582204,1.01377,1.65823,1.42085,3.36974,1.82254,0.886563,0.110572,3.70404,1.13102,2.06875,2.42856,1.66822,0.726381,3.11729,1.03275,0.200753,0.104538,0.586497,0.485197,0.89011,1.04055,3.76498,0.289018,0.173404,0.913941,0.603713,0.771254,1.16629,1.70345,0.877945,0.199141,1.21614,2.2545,1.42328,0.443216,0.0665258,2.377,1.73775,2.94043,4.8777,0.528893,0.166291,2.38448,2.42238,1.55654,0.459104,0.535974,1.50026,1.24673,0.8198,0.0119287,1.99609,3.31431,2.55657,0.570893,1.3003,0.0539923,0.52299,1.41024,1.28207,0.630163,0.105739,5.2302,0.227859,1.18988,1.75374,2.91697,0.386402,0.277785,2.83866,2.86109,0.331147,1.23632,2.39778,1.80306,0.259275,0.0913708,2.5227,3.94372,0.183673,1.56848,2.52969,0.532227,1.35426,1.27724,0.66081,1.88493,0.0528896,0.384378,0.398594,1.99346,2.60009,0.319524,0.562004,0.493854,0.701511,1.39409,3.22114,0.00298254,0.000888258,2.58557,1.696,3.47152,1.68618,1.24888,1.71971,0.0914841,3.61332,1.02518,2.04624,0.821979,1.69475,0.152026,2.5869,3.31264,0.179382,0.226419,0.27463,0.567847,0.686924,0.527543,2.87715,0.480118,0.376092,0.896157,0.540858,0.364544,1.60616,1.842,2.10057,0.225728,1.059,1.49925,1.6298,0.26304,0.268784,3.2952,1.58951,2.43822,4.05653,0.189399,0.416057,1.68345,1.14149,0.173652,1.17457,1.47797,0.139466,1.87393,1.34337,0.0421757,1.9166,2.95541,1.46175,1.41858,0.866783,0,0.0498921,2.34725,2.31223,1.62391,0.375117,4.67734,1.96945,1.1104,0.41031,2.23528,0.0241686,0.108533,3.11117,1.68433,0.227382,1.86509,2.15314,0.75385,0.14333,0.0874208,2.50929,3.98529,0.110356,1.13896,1.43417,0.313859,1.31874,0.309791,1.05315,1.39793,0.283745,0.876908,0.435468,1.45572,4.32967,0.356555,1.59968,0.916453,0.208693,0.985789,2.3605,0.577597,0.0338435,2.86926,1.3007,4.79799,0.899941,0.919981,1.93226,0.287895,4.67877,1.19555,2.69553,1.09768,1.7825,1.0552,3.7481,1.68595,1.15395,0.121583,0.967309,1.42674,0.24203,1.80173,2.21328,0.455632,0.0445802,2.03796,0.194335,0.623538,0.673932,3.03886,1.03398,0.341118,0.814646,1.06452,2.10121,0.458083,0.307486,2.18301,2.82394,2.79605,4.71776,0.0169554,0.514094,1.82997,0.227555,1.4776,1.54838,1.73153,0.134113,0.53203,1.91166,1.06839,2.55417,2.87113,0.928262,0.717707,1.47587,0.0368642,0.395106,2.57313,2.36082,0.21963,0.323391,5.03808,0.082217,1.79875,1.31236,3.24022,0.0172295,0.314153,2.91945,3.53399,0.424727,2.75348,2.03163,2.58717,0.19609,0.163325,1.67908,4.54266,0.128016,1.19594,4.72996,0.151521,2.57415,0.585961,0.137761,3.29643,0.257186,0.867165,0.450505,1.81,2.83961,0.772029,0.758587,1.41232,0.355646,1.14016,2.61898,0.0082014,0,2.93451,1.90219,3.77763,1.32164,1.4126,2.36852,0.146113,2.66697,1.39908,2.6182,0.160965,1.32218,0.233872,4.31484,3.86704,0.212293,0.0289287,0.211306,0.948793,0.0361328,2.27068,2.3723,0.391514,0.132712,1.97043,0.661183,0.168071,1.03141,1.16468,1.77397,0.436936,1.85067,1.08954,1.75647,0.943836,0.312196,3.22857,2.07949,2.32178,4.79149,0.109242,1.39368,1.99084,0.881735,0.252822,1.66833,2.07736,0.235665,1.47536,2.16852,0.126876,1.65064,1.7142,1.02378,1.67983,0.853408,0.000578408,0.429056,1.95147,2.63166,0.514809,0.292234,6.86733,0.708982,1.07439,2.01243,1.70541,0.0322334,0.125035,2.63003,3.71278,0.252346,1.74815,1.72679,2.06691,0.478085,0.00483701,3.22095,4.07958,0.0830733,0.856439,1.46784,0.161831,1.89061,0.873866,0.556582,2.05569,0.800068,0.749068,1.25719,1.60501,1.70926,0.275427,1.74127,1.1998,0.342481,1.02666,2.29009,0.0140432,0.00846901,1.14974,2.9381,2.94817,1.66574,0.967391,2.07723,0.00166173,4.34336,1.6463,4.26598,0.295507,2.75264,0.581208,2.98656,1.74961,0.267475,0.00369199,0.515228,0.689112,0.215311,2.00409,1.85591,0.100661,0.215568,1.28994,0.443553,0.628079,1.4706,1.66099,0.469097,0.0821688,2.06333,1.43894,3.49428,1.17021,0.0637752,2.23233,1.96668,1.91407,4.57395,0.201747,1.19394,1.94423,1.59399,0.4392,1.26067,1.52161,0.432527,0.68314,0.536641,0.0698201,2.35767,2.47381,1.03315,0.914498,0.835524,0.00987089,1.05986,2.03397,2.89699,0.325294,0.00119871,6.21996,0.00835778,2.5288,2.36303,0.318735,0.496379,0.934812,3.41399,3.82237,0.600501,1.72741,1.0386,1.41984,0.81225,0.117677,3.28885,4.08034,1.41401,1.32952,2.14254,0.730038,0.948184,2.88913,1.35151,1.5385,1.24999,1.30351,2.03615,0.644665,1.51591,0.0244568,0.981655,0.301641,0.643772,1.83247,1.88254,0.108825,0.131312,1.1616,1.51908,2.31524,2.62664,1.71108,1.12073,0.00699734,4.42007,0.975613,2.27487,0.766412,2.54045,0.633935,3.36548,2.42673,1.16776,0.927902,0.710297,1.08234,2.17219,1.42854,3.42324,0.489319,0.301125,0.260754,1.54756,0.0837248,1.38027,0.686394,0.481088,0.567501,1.99992,3.4116,2.68451,1.27092,0.627177,2.89755,1.2995,0.600107,3.28343,0.0155647,0.63508,3.19827,3.25178,0.778291,1.28901,1.18572,1.21674,1.48707,0.20439,0.127491,2.70604,3.09741,1.14486,1.68527,0.38197,0.0627786,0.381863,2.5112,3.71608,1.92274,0.573895,3.72506,2.36487,0.619444,3.19856,3.11657,0.189383,0.180706,3.70595,0.91928,1.20836,1.04514,2.23861,0.245261,0.174829,0.00154734,1.3084,5.75153,1.18626,2.96441,1.93846,0.390841,0.375997,1.0069,0.364289,2.65606,0.102186,0.147101,0.00865398,2.66011,5.33546,1.41967,0.488059,0.293369,1.84573,2.50777,3.20392,0,0.0109018,1.09469,1.82154,2.8126,2.0021,1.60885,0.630014,0,2.09139,1.30937,3.7491,0.664126,0.123373,0.11209,1.19551,1.35644,0.606804,0.187993,1.10878,0.810724,0.0113032,1.7821,1.91432,0.149821,0.293472,0.222547,0.215981,0.556262,0.414154,2.70669,3.63663,2.35668,2.95834,0.267524,1.63889,0.187753,0.12711,3.3947,1.63793,1.35076,2.79242,0.86852,0,0.567694,0.799586,1.22088,2.3433,1.85411,0.88546,0.820162,0.647504,0.123085,0.758855,0.639487,0.812279,0.49055,0.598673,0.366934,0.603286,1.46246,0.445609,0.898841,0.586868,8.73982,1.02971,1.20077,1.94829,1.83092,0.0220182,0.261601,3.15512,3.30329,0.551034,2.94538,1.72373,1.97993,0.779542,0.0822677,2.9852,3.75193,0.144997,0.836988,1.69875,0.504745,2.41732,1.30603,0.608154,1.05779,1.73576,0.36456,1.38593,2.02989,2.08777,0.164489,1.48814,1.37225,0.809428,0.972248,2.35817,0.251876,0.0687024,0.744842,3.6117,3.38709,1.54124,2.41988,2.61364,0.361874,6.00888,1.67688,4.14727,0.158881,2.55793,0.111752,2.84868,1.40215,0.489402,0.271234,0.513271,0.497959,0.11324,3.00346,1.56173,0.205529,0.497307,2.00518,0.614836,0.908684,1.41282,3.29453,0.969603,0.547435,2.81178,2.94911,4.6194,1.27235,0.716387,3.19781,1.2433,0.992348,3.85399,0.407022,1.57019,2.38822,0.998639,0.221525,2.03134,1.33124,0.617507,1.30361,0.708646,0.759568,2.45856,3.54255,0.812994,0.204393,0.436802,0.0270976,1.53677,1.46702,3.65913,0.466971,0.251133,6.95959,0.0333794,1.40907,2.13019,1.31999,0.292266,0.181486,3.14676,2.28961,0.490431,1.35744,1.39209,0.084761,0.816483,0.0671694,2.58854,3.1498,0.61749,1.58415,1.30812,0.149177,1.0595,2.15829,0.968012,2.30158,1.45327,1.81182,2.29565,0.689341,2.11324,0.112973,1.12802,0.219814,0.877145,0.537364,2.30229,0.153106,0.00261487,0.789265,2.10999,1.36101,1.68151,1.41636,1.05213,0.0044397,4.59925,0.991876,3.37134,0.220099,3.13481,1.31909,2.52578,1.33094,0.627478,1.09398,0.353905,0.799904,1.02119,2.29109,3.5297,0.463236,0.436492,1.10343,2.8353,0.123138,0.790711,1.18252,0.823587,1.04403,1.73025,2.1707,3.33867,1.07313,1.18701,3.20581,1.10758,0.958429,3.31983,0.0549896,1.10189,2.74074,2.45557,1.44002,2.93435,0.970824,0.895067,0.71077,0.124661,0.765065,1.71309,3.49349,0.65441,0.672074,0.354003,0.0919241,0.506844,1.93992,3.61502,0.446271,0.3745,4.5924,1.23532,0.241716,1.43527,1.75488,0.539591,1.15005,2.69045,1.74025,0.110312,1.61856,1.47826,0.826395,0.502828,0.422565,3.59079,3.1942,1.72556,0.845413,0.360287,0.274238,0.797396,1.93063,1.06382,1.0984,1.65286,0.27872,0.481458,2.84992,2.61509,0.0257836,0.255934,1.07027,0.218782,3.23025,3.41362,0.0452738,0.0335229,0.955382,1.47124,4.39593,1.03073,2.08899,0.991484,0,2.82603,0.44292,2.68303,1.31588,0.534263,0.0979332,1.1765,1.88004,1.33126,0.51734,1.27743,0.82657,0.43469,1.03023,1.61289,0.637126,0.246193,0.66784,0.261125,0.202319,2.98351,1.77656,1.7038,0.869062,2.82035,0.667508,1.84661,0.584493,0.0369572,2.16519,1.93956,0.818924,2.80943,0.160816,0.135175,0.51689,0.825145,1.074,3.13664,1.27932,0.117167,0.531846,0.91422,0.00876264,0.795256,2.56697,1.44093,1.00984,0.455143,0.0774129,0.100801,1.35025,1.91794,0.257685,0.174504,6.99856,0.132885,2.00133,1.88682,1.80335,0.785178,1.18023,3.76684,3.1939,0.565615,2.31022,2.75415,1.73442,0.41269,0.291212,3.30776,3.32774,0.126696,0.606345,1.4245,0.384673,1.15666,1.35154,0.979975,0.766484,2.00923,2.16857,2.27555,0.398939,1.1732,0.138618,1.23992,0.447373,0.616605,1.00978,3.01147,0.0924396,0.0674492,1.66365,4.12297,1.79219,1.82543,1.29482,2.48605,0.0176754,5.19097,0.986877,2.57266,1.57903,3.02494,0.390604,4.12094,1.05613,0.470683,1.23008,0.247726,1.68997,1.28396,1.19812,3.29264,0.0823708,0.131314,1.13449,1.04483,0.462526,1.5643,2.42756,0.356194,0.295758,2.51568,4.19365,3.52803,1.47537,0.420603,3.22312,2.51929,3.17259,3.80346,1.02889,0.487563,3.3617,1.2777,0.312199,1.22358,0.259978,0.480599,1.02987,0.188222,0.151817,1.71614,3.593,2.10357,0.849569,0.942012,0.042104,0.509642,1.40164,3.83614,0.184156,0.221195,5.11221,1.0615,1.43651,1.90652,1.32315,0.0532484,0.439429,1.16011,1.90052,0.532259,1.15372,1.07451,0.656496,0.354654,0.384508,4.31573,2.85546,0.325853,0.566785,2.11056,1.70249,2.32448,0.330881,0.140268,1.50035,0.0365847,0.707865,1.58583,0.280018,3.56375,0.158765,2.68258,0.408648,1.22888,1.0269,1.02123,0.407549,0.233926,1.51785,3.37066,2.94239,1.27334,1.87556,3.5836,0.133146,5.41036,1.91804,3.84347,0.619772,2.98138,0.331498,2.28954,1.83127,0.710477,0.604542,1.88388,1.43014,0.224193,0.667574,3.3583,0.680597,0.304905,1.52853,0.296768,0.588059,1.01646,3.68636,2.01778,0.569689,0.464187,2.63521,5.09287,0.647101,0.151575,1.0164,0.403723,0.650813,1.84017,0.0552277,2.31462,2.00682,1.79648,0.236092,1.40605,2.18151,0.082038,0.504618,0.31107,0.398998,1.36783,3.16728,1.43395,0.365569,1.51801,0.0374257,0.849416,0.351533,2.94804,0.974565,0.861189,5.25728,1.02628,0.873751,2.13586,2.61117,0.703581,0.0308287,2.81073,1.29858,1.12471,0.25401,1.83754,1.22727,1.3554,0.0133957,0.857975,3.37658,0.100097,0.995698,0.856568,0.0534877,1.25937,0.299307,0.51188,1.93843,0.844398,0.459178,0.082004,1.25152,1.87234,0.852074,1.10209,0.0674482,1.17181,0.702495,1.02526,0.0325532,0.026385,2.39219,0.415488,1.07483,0.60647,1.98251,0.304612,0.022602,2.08917,1.07849,1.73861,0.589407,0.532113,0.741026,2.9143,1.63904,0.408422,0.097312,0.769933,0.521111,0.45975,0.5108,0.961989,0.21067,0.00781904,0.431027,1.33048,1.45045,0.258897,0.41484,2.11862,1.19518,1.78641,0.192141,0.124088,0.00156289,0.125198,1.91346,2.21974,1.95588,3.44095,0.166916,0.00183741,1.91274,1.71632,2.48322,0.294634,0.865751,2.8646,0.642169,1.80255,0.098533,0.583954,0.872587,1.32031,0.517327,0.975735,0.0171696,0.60458,0.940533,1.24504,0.663863,0.111222,3.36156,0.589114,0.958669,1.90041,2.92993,0.261462,0.312009,2.1037,2.22552,0.867818,2.59185,1.03615,1.82114,0.324595,0.457084,2.42399,4.60721,0.708082,1.73009,4.23178,0.44775,2.33453,0.453969,0.344531,2.91467,0.121897,0.114587,0.0283162,2.26917,3.26856,0.847829,0.408003,1.85722,0.238222,2.36447,2.69791,0.0400725,0.0149142,2.89335,0.929881,4.48752,0.794999,2.79169,2.13796,0.270315,2.84102,0.44938,1.6643,0.504644,0.379103,0.457211,2.70984,4.60011,0.656926,0.192714,0.40539,1.16158,0.0783707,2.54728,3.43145,1.0045,0.1937,1.56081,1.80243,0.372579,1.26293,1.02895,2.1259,2.32369,2.18291,0.625517,1.5817,0.675317,0.897016,3.24683,1.99096,2.37221,3.13066,0.00317319,0.286411,2.29131,1.21139,1.66276,0.589232,1.81656,0.144804,2.01761,2.55133,0.0883723,0.728125,0.771948,0.999863,1.90504,1.11528,0.352635,1.09363,2.05708,1.93355,0.253309,0.116556,4.68634,0.223883,1.67129,1.93171,1.97933,0.00383753,0.280216,1.40586,3.09517,0.213545,1.66106,2.13006,2.98515,0.271883,0.0522383,3.09997,3.51699,0.141877,0.651085,2.91886,0.343161,2.02151,1.13365,1.30164,2.875,1.17437,1.1995,0.855122,1.28774,2.12559,0.458248,2.22088,1.93161,0.952154,2.20498,3.26444,0.250488,0.00407381,1.85257,2.29864,2.46343,0.561894,1.62252,2.49955,0.309508,2.61178,1.33307,3.72915,0.643366,3.51015,0.562023,3.57493,3.10522,0.328935,0.119799,0.897191,1.89314,0.119459,2.02567,2.35492,1.34613,0.383373,2.32709,1.71177,0.134538,0.375472,0.889519,1.85584,1.17967,1.46707,1.70745,2.37053,0.720302,0.472549,2.28538,2.25924,3.50832,5.28705,0.84084,0.875018,3.52472,1.67576,0.387816,0.449753,2.36395,0.0993472,1.84713,1.42916,0.0308633,2.50824,1.53989,1.30368,0.730894,0.759442,0.111097,1.70707,1.80198,2.37097,0.812136,0.120098,4.86855,1.24059,2.86626,2.44454,0.765356,0.204651,1.52859,1.3326,0.527706,0.962032,0.919145,2.30383,1.64707,0.193598,0.293331,2.66928,2.69068,0.708493,0.227696,1.3636,1.16759,0.13128,2.24242,0.647674,1.27019,0.198226,0.660604,0.416808,1.01276,3.12247,0.387053,1.73044,2.10827,0.6178,0.565228,1.56219,0.447435,0.4185,0.961366,2.13676,2.59692,2.04515,0.937313,0.196836,0.00168212,2.53829,0.734472,2.94557,0.865219,3.53086,4.39869,3.41571,3.60505,0.38702,0.440112,2.58771,2.84441,0.811425,2.02781,3.80813,0.565964,0.126715,0.61499,2.82767,0.0637746,0.335573,0.393531,0.976523,0.75281,0.915117,1.70388,1.42754,0.468946,0.0694357,1.1903,2.43293,2.69881,2.03315,0.0570462,1.02948,6.27247,3.65036,0.71304,1.27246,0.271345,0.530685,1.8314,0.463416,0.141136,2.70229,2.4328,1.15523,0.550393,0.0891806,0.0283122,0.325709,2.4861,2.15164,0.898232,0.210259,3.1975,0.997738,0.191175,1.55085,1.71338,0.0577143,2.03634,0.873271,1.88994,0.713991,0.665725,0.109941,1.71841,0.186993,0.268377,3.74585,2.38165,0.328973,0.538873,2.25382,1.36053,4.35583,0.320201,0.641422,1.44763,0.416863,1.08291,0.267269,0.679639,1.50867,0.542548,0.490702,1.41823,0.432038,1.9593,1.10792,0.105017,0.0269861,4.09409,0.96845,6.05413,0.186122,3.53427,1.90091,0.421887,1.95093,0.348475,1.01732,2.2948,1.17767,0.642385,1.31366,2.82119,1.42115,0.539733,2.13342,2.80341,1.1287,0.10518,1.32477,1.47408,0.525935,0.423997,1.4702,0.819589,0.996782,0.507418,0.792482,0.117183,1.16909,0.60062,0.798,1.19358,0.211437,2.14669,0.834304,2.43454,2.85052,0.211237,0.51729,2.33352,0.254928,0.25645,0.38028,1.65891,0.0968816,1.5055,1.407,0.0182651,1.11253,0.616646,1.46619,1.64317,0.659965,0.00739392,0.163936,1.33386,1.29004,2.11317,1.03964,3.65167,1.30471,2.29612,1.38089,2.01531,0.0406192,0.331822,1.60388,1.93104,0.812058,1.03308,1.75459,0.86162,0.152441,0.2124,1.42098,2.72777,0.214831,0.677203,2.25576,0.731401,2.00064,1.31908,1.27204,1.79025,0.149946,0.0791397,0.266467,1.14631,3.07066,1.06992,0.606958,0.239376,0.956309,2.76435,1.11536,0.000791357,0.0550667,2.86583,1.17624,6.24452,1.18306,1.69543,1.13793,0.320872,3.57882,1.89732,0.935178,0.783058,1.5818,1.3382,2.74709,1.92389,2.03014,0.229265,1.39986,1.77446,0.403916,1.45285,2.01894,0.317412,0.105496,1.13236,0.569124,0.535925,1.0535,1.46998,1.68174,0.253648,0.816185,1.05546,1.41445,1.19722,0.0818693,2.06625,0.997922,0.737934,2.35428,0.0058167,0.145901,1.48014,1.18936,1.02932,1.85306,1.51759,0.428515,1.52003,0.803402,0,1.38276,1.61682,1.30886,1.18338,0.586477,0.0902724,0.831467,3.56661,1.31524,0.876652,0.0631791,4.7749,1.07338,1.69869,1.58828,0.25187,0,0.947262,1.35063,1.7544,0.335397,0.602412,1.81719,0.83498,0.0757302,0.0206605,1.9908,2.08454,0.59629,0.108872,0.0560465,0.0712629,0.71132,1.64435,0.262862,1.37295,0.0695136,0.742151,0.55555,1.31163,4.53364,0.144293,1.48394,0.706466,0.220706,0.92508,2.26944,0.495825,0.0551027,0.185759,1.27448,4.2655,2.43653,0.900594,0.135071,0.0394816,4.60703,0.308671,2.70279,1.00552,2.895,2.59958,2.97339,3.17499,1.61685,0.646072,0.582307,3.176,1.11632,0.462667,2.5227,0.720804,0.0654785,1.10443,3.22618,0.166501,0.0845012,0.269973,0.851177,0.141087,1.16259,0.60383,1.48998,0.0792487,0.130158,0.53897,0.779274,1.28965,1.09309,0.00114253,0.760716,3.85795,0.544777,0.670001,1.39091,1.41372,0.537886,1.09387,1.16429,0.00110852,1.36474,1.96186,1.17676,1.34232,0.392489,0.0028248,0.820288,3.33081,1.9707,0.141534,1.32752,4.32412,1.36519,0.7822,1.24212,1.29921,0.00449213,2.96646,0.890678,0.947418,0.524281,1.01502,1.19485,2.00927,0.140004,0.0336756,3.82305,2.6648,0.808076,0.175849,0.379751,1.27281,1.64596,0.85119,0.304467,1.05965,0.88702,0.673684,0.412961,1.16726,5.23773,0.181942,1.30786,2.51306,0.0140293,1.52968,1.47284,1.31953,0.115669,1.00374,2.17982,7.58773,1.60782,2.21347,1.31729,0.489387,2.94165,0.132097,1.60515,0.845589,1.8837,2.59501,1.74942,3.93922,2.10887,0.885373,1.38633,3.0048,0.850073,0.156651,2.41793,1.78144,0.102717,1.45141,2.25859,0.553741,0.352278,1.39596,0.605364,0.722566,2.26311,0.989234,3.1654,1.32028,0.131032,0.430185,0.63604,1.89814,0.840887,0.0145833,1.12403,3.63153,0.461552,0.338114,1.41944,1.2121,0.0547536,1.15151,2.13569,0.183726,1.35507,2.37558,0.880525,2.10045,0.313574,0.158706,0.819517,2.97787,1.5779,0.617671,0.468382,4.2573,2.68184,0.405576,1.66272,2.19618,0.454411,0.112507,2.0079,0.605678,0.0785262,0.808339,0.763635,0.514089,0.251851,0.199175,2.23691,3.86687,1.66287,1.84195,1.37314,0.902038,0.777063,1.49601,0.37944,1.16528,0.189918,0.0748914,0.0220248,2.78947,5.58867,1.3001,0.0293565,1.03021,0.822084,2.649,3.1179,0.0243542,0.0170031,2.31794,2.32811,4.56341,1.56396,2.14732,0.507619,0.0942021,1.91325,0.484128,3.22408,2.23196,0.548829,0.251454,0.504564,1.64646,1.11299,0.448078,0.00928187,1.99006,0.222099,0.00566369,2.7882,0.721351,0.716473,1.48018,0.348745,0.0468219,1.15817,1.77556,1.69238,1.53411,2.84495,0.437648,1.22891,0.149386,0.50927,1.36986,0.939152,4.01539,1.81847,0.116702,0.0480713,0.592695,0.635974,0.522637,1.95381,1.00631,0.00983327,2.25001,0.568138,0,0.0477794,0.946258,1.89782,2.10002,0.680816,0.118034,0.289923,0.534844,1.14276,0.17787,0.0671842,3.74189,0.598143,1.46102,1.59229,0.573945,0.0248033,0.18219,2.10823,0.628571,0.277635,0.55642,1.37147,0.189093,0.304289,0.021872,0.766755,3.72452,0.849935,0.742728,0.336274,0.727936,0.875328,1.5026,0.148357,1.73686,0.0130925,1.14383,0.142981,0.537176,3.29533,0.0895149,2.22682,0.590893,0.123592,0.956116,1.90591,0.335271,0.144899,0.965926,0.810877,3.06673,2.55084,0.898227,0.188399,0.218642,4.21891,0.949401,2.19536,2.56585,2.28743,1.50976,4.43636,2.14383,1.21491,0.238991,0.119743,3.13956,0.7063,0.698713,1.79337,0.713203,0.239497,1.12453,2.11674,0.215012,0.148944,0.371673,0.688459,0.584677,0.668979,1.1467,1.24969,0.365664,0.00402623,0.913581,1.31169,0.679478,3.68138,0.128535,0.452051,2.87009,0.942447,0.473775,0.990575,0.495187,0.543496,1.7609,0.644544,0.352128,2.7088,1.69498,2.96797,0.55632,0.00166314,0.037931,0.867557,2.67301,1.17689,0.590685,0.0582472,4.19662,0.179836,1.69836,1.31358,1.49582,0.406852,1.29723,1.39667,0.477145,0.447816,1.19232,2.0995,1.4763,0.0372801,0.558062,2.76918,3.73471,0.308949,1.57176,0.553801,0.365138,1.15407,2.44019,0.297839,0.90976,0.615724,0.813148,0.463448,0.654772,2.71199,0.237753,0.909471,1.26044,0.74914,1.39616,2.38322,0.167203,0.0126121,0.225377,1.5502,2.26877,2.24333,0.973906,0.709005,0.0451798,3.05034,0.189501,2.54107,1.02928,2.93998,1.85342,3.96938,2.19005,0.321954,0.162484,0.813151,2.76814,1.26534,2.03445,3.33698,0.651145,0.120352,1.04319,2.61028,0.264721,0.305187,0.897256,1.02103,0.58373,1.0037,1.71082,1.52767,0.668524,0.0208841,1.75831,1.83232,3.35193,4.0909,0.294792,0.394428,3.74717,3.01426,0.839781,1.40738,0.364597,0.526923,1.33506,0.342368,0.0127373,2.4178,2.62937,2.66246,0.298979,0.372313,0.149647,0.286726,2.90082,1.18625,0.520868,0.100791,3.63484,0.177705,1.7658,2.12389,0.915643,0.0530187,0.868138,1.60942,0.807279,0.734285,1.02882,2.66665,1.09878,0.207759,0.0152958,1.39496,2.98445,0.345051,1.99615,1.6004,0.905284,0.662348,2.13196,0.395938,2.09453,0.133119,2.15142,0.367175,0.262221,2.86103,0.118603,1.45757,0.690362,0.78626,2.20591,2.73903,0.103179,0.00699327,0.469433,1.13614,1.86629,2.94935,0.47088,0.0390566,0.00386581,4.85439,0.915615,1.80378,1.58185,2.70266,1.99958,3.65516,2.39768,0.321273,0.287234,0.443654,3.43264,0.878042,1.2525,4.4268,0.624393,0.499974,0.693653,3.4787,0.0673157,0.22458,1.16722,2.52149,0.631295,0.267162,1.50803,0.86045,0.36575,0.0676028,1.27223,0.49721,1.87069,4.34851,0.0029013,0.405826,3.7857,3.4135,0.674171,1.74218,0.42268,0.708406,1.79269,0.464328,0.139114,2.36464,1.41014,2.57096,0.355134,0.604991,0.391504,0.319167,2.55726,0.739781,1.02642,0.205901,3.9757,1.18295,1.24104,1.63107,1.51492,0.0216242,0.0775006,2.32664,2.68503,0.487947,1.85133,1.7975,1.55172,0.089643,0.0868945,2.00716,3.74157,0.401673,1.4517,2.23622,0.503565,0.864392,0.640068,0.360182,2.73337,0.0533497,0.796302,0.0789252,0.493384,3.57012,0.750832,0.837013,1.6331,0.361186,0.937966,3.20455,0.354754,0,1.34457,2.48876,3.36057,1.98883,0.920533,0.856483,0.0131143,3.56402,0.398756,3.64401,0.859795,2.60172,0.820675,3.51612,3.01152,0.256439,0.0793038,0.217291,2.4773,0.0733517,1.59288,2.78761,0.257391,0.0951554,0.812235,1.26376,0.108545,0.287873,1.1668,1.39608,1.13534,1.01982,1.83664,2.25875,0.785398,0.145803,0.978086,1.04681,3.51331,4.46406,0.338991,0.440636,2.46854,0.93062,0.387732,0.645399,2.80796,0.110147,2.04517,2.49583,0.257262,0.930653,0.876773,1.16229,1.00568,0.579815,0.02377,0.9081,1.58965,1.33536,0.390522,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]\r\ndata = torch.Tensor(vue_clip_emb).view(1, -1, 100)\r\nlengths = torch.tensor([74])\r\noutput = ts_model_multihead.forward(data=data, lengths=lengths)\r\nprint(output)\r\n```\r\n## Expected behavior\r\n\r\n```\r\n---------------------------------------------------------------------------\r\nRuntimeError                              Traceback (most recent call last)\r\n<ipython-input-66-6d725915459d> in <module>\r\n     53 data = torch.Tensor(vue_clip_emb).view(1, -1, 100)\r\n     54 lengths = torch.tensor([74])\r\n---> 55 output = ts_model_multihead.forward(data=data, lengths=lengths)\r\n     56 print(output)\r\n\r\nRuntimeError: \r\n\r\n\r\nnew_type INTERNAL ASSERT FAILED at caffe2/torch/csrc/jit/passes/shape_analysis.cpp:280, please report a bug to PyTorch. \r\nThe above operation failed shape propagation in this context:\r\nat /mnt/xarfuse/uid-156246/70539c06-ns-4026531840/torch/nn/functional.py:3312:12\r\n                                                  dtype=attn_mask.dtype,\r\n                                                  device=attn_mask.device)], dim=1)\r\n            if key_padding_mask is not None:\r\n            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...  <--- HERE\r\n                key_padding_mask = torch.cat(\r\n                    [key_padding_mask, torch.zeros((key_padding_mask.size(0), 1),\r\n\r\nThe above operation failed shape propagation in this context:\r\nat /mnt/xarfuse/uid-156246/70539c06-ns-4026531840/torch/nn/functional.py:3303:4\r\n    q = q * scaling\r\n\r\n    if bias_k is not None and bias_v is not None:\r\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...  <--- HERE\r\n        if static_k is None and static_v is None:\r\n            k = torch.cat([k, bias_k.repeat(1, bsz, 1)])\r\n\r\nThe above operation failed shape propagation in this context:\r\nat <ipython-input-60-415a6b53c56b>:127:8\r\n          L is the target sequence length, S is the source sequence length.\r\n        \"\"\"\r\n        if not self._qkv_same_embed_dim:\r\n        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...  <--- HERE\r\n            return nn.functional.multi_head_attention_forward(\r\n                query, key, value, self.embed_dim, self.num_heads,\r\n```\r\n\r\n## Environment\r\n\r\nbento classyvision env\r\n\r\n\r\ncc @suo",
        "closed_by": {
            "login": "driazati",
            "id": 9407960,
            "node_id": "MDQ6VXNlcjk0MDc5NjA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9407960?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/driazati",
            "html_url": "https://github.com/driazati",
            "followers_url": "https://api.github.com/users/driazati/followers",
            "following_url": "https://api.github.com/users/driazati/following{/other_user}",
            "gists_url": "https://api.github.com/users/driazati/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/driazati/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/driazati/subscriptions",
            "organizations_url": "https://api.github.com/users/driazati/orgs",
            "repos_url": "https://api.github.com/users/driazati/repos",
            "events_url": "https://api.github.com/users/driazati/events{/privacy}",
            "received_events_url": "https://api.github.com/users/driazati/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/30015/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/30015/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/29055",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/29055/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/29055/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/29055/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/29055",
        "id": 516300079,
        "node_id": "MDU6SXNzdWU1MTYzMDAwNzk=",
        "number": 29055,
        "title": "TorchScript does not preserve string behavior for string with unicode characters",
        "user": {
            "login": "ZolotukhinM",
            "id": 4588111,
            "node_id": "MDQ6VXNlcjQ1ODgxMTE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4588111?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ZolotukhinM",
            "html_url": "https://github.com/ZolotukhinM",
            "followers_url": "https://api.github.com/users/ZolotukhinM/followers",
            "following_url": "https://api.github.com/users/ZolotukhinM/following{/other_user}",
            "gists_url": "https://api.github.com/users/ZolotukhinM/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ZolotukhinM/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ZolotukhinM/subscriptions",
            "organizations_url": "https://api.github.com/users/ZolotukhinM/orgs",
            "repos_url": "https://api.github.com/users/ZolotukhinM/repos",
            "events_url": "https://api.github.com/users/ZolotukhinM/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ZolotukhinM/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            },
            {
                "id": 1594104112,
                "node_id": "MDU6TGFiZWwxNTk0MTA0MTEy",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/jit-backlog",
                "name": "jit-backlog",
                "color": "eacf96",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "ansley",
            "id": 59447410,
            "node_id": "MDQ6VXNlcjU5NDQ3NDEw",
            "avatar_url": "https://avatars.githubusercontent.com/u/59447410?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ansley",
            "html_url": "https://github.com/ansley",
            "followers_url": "https://api.github.com/users/ansley/followers",
            "following_url": "https://api.github.com/users/ansley/following{/other_user}",
            "gists_url": "https://api.github.com/users/ansley/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ansley/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ansley/subscriptions",
            "organizations_url": "https://api.github.com/users/ansley/orgs",
            "repos_url": "https://api.github.com/users/ansley/repos",
            "events_url": "https://api.github.com/users/ansley/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ansley/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "ansley",
                "id": 59447410,
                "node_id": "MDQ6VXNlcjU5NDQ3NDEw",
                "avatar_url": "https://avatars.githubusercontent.com/u/59447410?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ansley",
                "html_url": "https://github.com/ansley",
                "followers_url": "https://api.github.com/users/ansley/followers",
                "following_url": "https://api.github.com/users/ansley/following{/other_user}",
                "gists_url": "https://api.github.com/users/ansley/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ansley/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ansley/subscriptions",
                "organizations_url": "https://api.github.com/users/ansley/orgs",
                "repos_url": "https://api.github.com/users/ansley/repos",
                "events_url": "https://api.github.com/users/ansley/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ansley/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2019-11-01T19:16:49Z",
        "updated_at": "2020-12-18T19:15:34Z",
        "closed_at": "2020-12-18T19:15:34Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\nIf a function calls `len(s)`, it works differently in scripted and eager modes.\r\n\r\n## To Reproduce\r\n\r\nTest:\r\n```\r\nimport torch\r\nstring = \"Norman\u00f0y\"\r\nprint(string)\r\n\r\ndef foo(s: str):\r\n    return len(s)\r\n\r\nfoo_scripted = torch.jit.script(foo)\r\n\r\nprint(foo(string))\r\nprint(foo_scripted(string))\r\n```\r\n\r\nOutput:\r\n```\r\nNorman\u00f0y\r\n8\r\n9\r\n```\n\ncc @suo",
        "closed_by": {
            "login": "ansley",
            "id": 59447410,
            "node_id": "MDQ6VXNlcjU5NDQ3NDEw",
            "avatar_url": "https://avatars.githubusercontent.com/u/59447410?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ansley",
            "html_url": "https://github.com/ansley",
            "followers_url": "https://api.github.com/users/ansley/followers",
            "following_url": "https://api.github.com/users/ansley/following{/other_user}",
            "gists_url": "https://api.github.com/users/ansley/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ansley/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ansley/subscriptions",
            "organizations_url": "https://api.github.com/users/ansley/orgs",
            "repos_url": "https://api.github.com/users/ansley/repos",
            "events_url": "https://api.github.com/users/ansley/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ansley/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/29055/reactions",
            "total_count": 4,
            "+1": 4,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/29055/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/29035",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/29035/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/29035/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/29035/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/29035",
        "id": 516176185,
        "node_id": "MDU6SXNzdWU1MTYxNzYxODU=",
        "number": 29035,
        "title": "[jit][script] Support namedtuples from other files",
        "user": {
            "login": "alanhdu",
            "id": 1914111,
            "node_id": "MDQ6VXNlcjE5MTQxMTE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1914111?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alanhdu",
            "html_url": "https://github.com/alanhdu",
            "followers_url": "https://api.github.com/users/alanhdu/followers",
            "following_url": "https://api.github.com/users/alanhdu/following{/other_user}",
            "gists_url": "https://api.github.com/users/alanhdu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alanhdu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alanhdu/subscriptions",
            "organizations_url": "https://api.github.com/users/alanhdu/orgs",
            "repos_url": "https://api.github.com/users/alanhdu/repos",
            "events_url": "https://api.github.com/users/alanhdu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alanhdu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "driazati",
            "id": 9407960,
            "node_id": "MDQ6VXNlcjk0MDc5NjA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9407960?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/driazati",
            "html_url": "https://github.com/driazati",
            "followers_url": "https://api.github.com/users/driazati/followers",
            "following_url": "https://api.github.com/users/driazati/following{/other_user}",
            "gists_url": "https://api.github.com/users/driazati/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/driazati/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/driazati/subscriptions",
            "organizations_url": "https://api.github.com/users/driazati/orgs",
            "repos_url": "https://api.github.com/users/driazati/repos",
            "events_url": "https://api.github.com/users/driazati/events{/privacy}",
            "received_events_url": "https://api.github.com/users/driazati/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "driazati",
                "id": 9407960,
                "node_id": "MDQ6VXNlcjk0MDc5NjA=",
                "avatar_url": "https://avatars.githubusercontent.com/u/9407960?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/driazati",
                "html_url": "https://github.com/driazati",
                "followers_url": "https://api.github.com/users/driazati/followers",
                "following_url": "https://api.github.com/users/driazati/following{/other_user}",
                "gists_url": "https://api.github.com/users/driazati/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/driazati/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/driazati/subscriptions",
                "organizations_url": "https://api.github.com/users/driazati/orgs",
                "repos_url": "https://api.github.com/users/driazati/repos",
                "events_url": "https://api.github.com/users/driazati/events{/privacy}",
                "received_events_url": "https://api.github.com/users/driazati/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 2,
        "created_at": "2019-11-01T15:17:11Z",
        "updated_at": "2020-03-28T00:08:45Z",
        "closed_at": "2020-03-28T00:08:45Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\n`torch.jit.script` seems to choke when using namedtuples imported from other modules. There are possibly two distinct bugs here:\r\n\r\n## To Reproduce\r\n\r\nSuppose I have three files:\r\n\r\na.py\r\n```python\r\nfrom typing import NamedTuple\r\nclass Type(NamedTuple):\r\n    t: int\r\n```\r\n\r\nb.py:\r\n```python\r\nimport torch\r\nimport torch.nn as nn\r\n\r\nimport a\r\n\r\nclass M(nn.Module):\r\n    def forward(self) -> a.Type:\r\n        return a.Type(1)\r\n\r\ntorch.jit.script(M())\r\n```\r\n\r\nc.py:\r\n```python\r\nimport torch\r\nimport torch.nn as nn\r\n\r\nimport a\r\n\r\nclass M(nn.Module):\r\n    def forward(self):\r\n        return a.Type(1)\r\n\r\ntorch.jit.script(M())\r\n```\r\n\r\nThen running `b.py` fails with:\r\n```python\r\nTraceback (most recent call last):\r\n  File \"b.py\", line 10, in <module>\r\n    torch.jit.script(M())\r\n  File \"/opt/anaconda/envs/test/lib/python3.7/site-packages/torch/jit/__init__.py\", line 1203, in script\r\n    return torch.jit.torch.jit._recursive.recursive_script(obj)\r\n  File \"/opt/anaconda/envs/test/lib/python3.7/site-packages/torch/jit/_recursive.py\", line 173, in recursive_script\r\n    return copy_to_script_module(mod, overload_stubs + stubs)\r\n  File \"/opt/anaconda/envs/test/lib/python3.7/site-packages/torch/jit/_recursive.py\", line 95, in copy_to_script_module\r\n    torch.jit._create_methods_from_stubs(script_module, stubs)\r\n  File \"/opt/anaconda/envs/test/lib/python3.7/site-packages/torch/jit/__init__.py\", line 1423, in _create_methods_from_stubs\r\n    self._c._create_methods(self, defs, rcbs, defaults)\r\nRuntimeError: \r\nUnknown type name 'a.Type':\r\nat b.py:7:25\r\n    def forward(self) -> a.Type:\r\n                         ~~~~~~ <--- HERE\r\n        return a.Type(1)\r\n```\r\n\r\nwhile running `c.py` fails with:\r\n```python\r\nTraceback (most recent call last):\r\n  File \"/opt/anaconda/envs/test/lib/python3.7/site-packages/torch/_utils_internal.py\", line 46, in get_source_lines_and_file\r\n    sourcelines, file_lineno = inspect.getsourcelines(obj)\r\n  File \"/opt/anaconda/envs/test/lib/python3.7/inspect.py\", line 955, in getsourcelines\r\n    lines, lnum = findsource(object)\r\n  File \"/opt/anaconda/envs/test/lib/python3.7/inspect.py\", line 786, in findsource\r\n    raise OSError('could not get source code')\r\nOSError: could not get source code\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"c.py\", line 10, in <module>\r\n    torch.jit.script(M())\r\n  File \"/opt/anaconda/envs/test/lib/python3.7/site-packages/torch/jit/__init__.py\", line 1203, in script\r\n    return torch.jit.torch.jit._recursive.recursive_script(obj)\r\n  File \"/opt/anaconda/envs/test/lib/python3.7/site-packages/torch/jit/_recursive.py\", line 173, in recursive_script\r\n    return copy_to_script_module(mod, overload_stubs + stubs)\r\n  File \"/opt/anaconda/envs/test/lib/python3.7/site-packages/torch/jit/_recursive.py\", line 95, in copy_to_script_module\r\n    torch.jit._create_methods_from_stubs(script_module, stubs)\r\n  File \"/opt/anaconda/envs/test/lib/python3.7/site-packages/torch/jit/__init__.py\", line 1423, in _create_methods_from_stubs\r\n    self._c._create_methods(self, defs, rcbs, defaults)\r\n  File \"/opt/anaconda/envs/test/lib/python3.7/site-packages/torch/jit/__init__.py\", line 1075, in _compile_and_register_class\r\n    ast = get_jit_class_def(obj, obj.__name__)\r\n  File \"/opt/anaconda/envs/test/lib/python3.7/site-packages/torch/jit/frontend.py\", line 148, in get_jit_class_def\r\n    self_name=self_name) for method in methods]\r\n  File \"/opt/anaconda/envs/test/lib/python3.7/site-packages/torch/jit/frontend.py\", line 148, in <listcomp>\r\n    self_name=self_name) for method in methods]\r\n  File \"/opt/anaconda/envs/test/lib/python3.7/site-packages/torch/jit/frontend.py\", line 160, in get_jit_def\r\n    sourcelines, file_lineno, filename = get_source_lines_and_file(fn)\r\n  File \"/opt/anaconda/envs/test/lib/python3.7/site-packages/torch/_utils_internal.py\", line 50, in get_source_lines_and_file\r\n    \"Make sure original .py files are available. Original error: {}\").format(filename, e))\r\nOSError: Can't get source for None. TorchScript requires source access in order to carry out compilation. Make sure original .py files are available. Original error: could not get source code\r\n```\r\n\r\nUsing a namedtuple defined *within* the same file works just fine though.\r\n\r\n## Expected behavior\r\n\r\nBoth `b.py` and `c.py` run without errors\r\n\r\n## Environment\r\n```\r\nPyTorch version: 1.3.0\r\nIs debug build: No\r\nCUDA used to build PyTorch: None\r\n\r\nOS: Ubuntu 18.04.3 LTS\r\nGCC version: (Ubuntu 8.3.0-6ubuntu1~18.04.1) 8.3.0\r\nCMake version: Could not collect\r\n\r\nPython version: 3.7\r\nIs CUDA available: No\r\nCUDA runtime version: No CUDA\r\nGPU models and configuration: No CUDA\r\nNvidia driver version: No CUDA\r\ncuDNN version: No CUDA\r\n\r\nVersions of relevant libraries:\r\n[pip] numpy==1.17.3\r\n[pip] torch==1.3.0\r\n[conda] cpuonly                   1.0                           0    pytorch\r\n[conda] mkl                       2019.4                      243  \r\n[conda] pytorch                   1.3.0               py3.7_cpu_0  [cpuonly]  pytorch\r\n```\r\n\r\ncc @ezyang @gchanan @zou3519 @jerryzh168 @suo",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/29035/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/29035/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/29008",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/29008/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/29008/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/29008/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/29008",
        "id": 515807235,
        "node_id": "MDU6SXNzdWU1MTU4MDcyMzU=",
        "number": 29008,
        "title": "[Bug] Incorrect traced graph for in-place ops in current master",
        "user": {
            "login": "BowenBao",
            "id": 9376104,
            "node_id": "MDQ6VXNlcjkzNzYxMDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9376104?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/BowenBao",
            "html_url": "https://github.com/BowenBao",
            "followers_url": "https://api.github.com/users/BowenBao/followers",
            "following_url": "https://api.github.com/users/BowenBao/following{/other_user}",
            "gists_url": "https://api.github.com/users/BowenBao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/BowenBao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/BowenBao/subscriptions",
            "organizations_url": "https://api.github.com/users/BowenBao/orgs",
            "repos_url": "https://api.github.com/users/BowenBao/repos",
            "events_url": "https://api.github.com/users/BowenBao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/BowenBao/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 443484135,
                "node_id": "MDU6TGFiZWw0NDM0ODQxMzU=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/high%20priority",
                "name": "high priority",
                "color": "F22613",
                "default": false,
                "description": null
            },
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 11,
        "created_at": "2019-10-31T23:14:50Z",
        "updated_at": "2019-11-26T14:54:36Z",
        "closed_at": "2019-11-26T14:54:36Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\nIn PyTorch master build (275adb143e44b2348fc3ca3d3efd241e607ae34c), tracing the below snippet produces empty traced graph.\r\n\r\n```python\r\nimport torch\r\n\r\nclass IndexPutModel(torch.nn.Module):\r\n    def forward(self, x, update):\r\n        x[..., torch.tensor([2, 1, 3]), 2:4] += update\r\n        return x\r\n\r\nx = torch.randn(3, 4, 5, 6, 7)\r\nupdate = torch.randn(3, 1, 1, 3, 2)\r\n\r\ntrace_graph, torch_out, inputs_states = torch.jit.get_trace_graph(IndexPutModel(), (x, update), _force_outplace=True, _return_inputs_states=True)\r\n\r\nprint(trace_graph)\r\n```\r\n\r\ntraced graph:\r\n```\r\ngraph(%0 : Float(3, 4, 5, 6, 7),\r\n      %1 : Float(3, 1, 1, 3, 2)):\r\n  return (%0)\r\n```\r\n\r\nThe traced graph was correct in PyTorch release 1.3.\r\n\r\n```\r\ngraph(%0 : Float(3, 4, 5, 6, 7),\r\n      %1 : Float(3, 1, 1, 3, 2)):\r\n  %2 : Float(3, 4, 5, 6, 7) = aten::clone(%0) # /home/work/anaconda3/envs/torch/lib/python3.7/site-packages/torch/jit/__init__.py:338:0\r\n  %3 : Float(3, 1, 1, 3, 2) = aten::clone(%1) # /home/work/anaconda3/envs/torch/lib/python3.7/site-packages/torch/jit/__init__.py:338:0\r\n  %4 : Long(3) = prim::Constant[value= 2  1  3 [ Variable[CPULongType]{3} ]](), scope: IndexPutModel # repro_trace_inplace.py:5:0\r\n  %5 : Device = prim::Constant[value=\"cpu\"](), scope: IndexPutModel # repro_trace_inplace.py:5:0\r\n  %6 : int = prim::Constant[value=4](), scope: IndexPutModel # repro_trace_inplace.py:5:0\r\n  %7 : bool = prim::Constant[value=0](), scope: IndexPutModel # repro_trace_inplace.py:5:0\r\n  %8 : bool = prim::Constant[value=0](), scope: IndexPutModel # repro_trace_inplace.py:5:0\r\n  %9 : Long(3) = aten::to(%4, %5, %6, %7, %8), scope: IndexPutModel # repro_trace_inplace.py:5:0\r\n  %10 : Long(3) = aten::detach(%9), scope: IndexPutModel # repro_trace_inplace.py:5:0\r\n  %11 : int = prim::Constant[value=4](), scope: IndexPutModel # repro_trace_inplace.py:5:0\r\n  %12 : int = prim::Constant[value=2](), scope: IndexPutModel # repro_trace_inplace.py:5:0\r\n  %13 : int = prim::Constant[value=4](), scope: IndexPutModel # repro_trace_inplace.py:5:0\r\n  %14 : int = prim::Constant[value=1](), scope: IndexPutModel # repro_trace_inplace.py:5:0\r\n  %15 : Float(3, 4, 5, 6, 2) = aten::slice(%0, %11, %12, %13, %14), scope: IndexPutModel # repro_trace_inplace.py:5:0\r\n  %16 : int = prim::Constant[value=4](), scope: IndexPutModel # repro_trace_inplace.py:5:0\r\n  %17 : int = prim::Constant[value=0](), scope: IndexPutModel # repro_trace_inplace.py:5:0\r\n  %18 : Device = prim::Constant[value=\"cpu\"](), scope: IndexPutModel # repro_trace_inplace.py:5:0\r\n  %19 : bool = prim::Constant[value=0](), scope: IndexPutModel # repro_trace_inplace.py:5:0\r\n  %20 : bool = prim::Constant[value=0](), scope: IndexPutModel # repro_trace_inplace.py:5:0\r\n  %21 : bool = prim::Constant[value=0](), scope: IndexPutModel # repro_trace_inplace.py:5:0\r\n  %22 : Long(3) = aten::to(%10, %16, %17, %18, %19, %20, %21), scope: IndexPutModel # repro_trace_inplace.py:5:0\r\n  %23 : None = prim::Constant(), scope: IndexPutModel\r\n  %24 : None = prim::Constant(), scope: IndexPutModel\r\n  %25 : None = prim::Constant(), scope: IndexPutModel\r\n  %26 : Tensor?[] = prim::ListConstruct(%23, %24, %25, %22), scope: IndexPutModel\r\n  %27 : Float(3, 4, 5, 3, 2) = aten::index(%15, %26), scope: IndexPutModel # repro_trace_inplace.py:5:0\r\n  %28 : int = prim::Constant[value=1](), scope: IndexPutModel # repro_trace_inplace.py:5:0\r\n  %29 : Float(3, 4, 5, 3, 2) = aten::add(%27, %1, %28), scope: IndexPutModel # repro_trace_inplace.py:5:0\r\n  %30 : int = prim::Constant[value=4](), scope: IndexPutModel # repro_trace_inplace.py:5:0\r\n  %31 : int = prim::Constant[value=2](), scope: IndexPutModel # repro_trace_inplace.py:5:0\r\n  %32 : int = prim::Constant[value=4](), scope: IndexPutModel # repro_trace_inplace.py:5:0\r\n  %33 : int = prim::Constant[value=1](), scope: IndexPutModel # repro_trace_inplace.py:5:0\r\n  %34 : Float(3, 4, 5, 6, 2) = aten::slice(%0, %30, %31, %32, %33), scope: IndexPutModel # repro_trace_inplace.py:5:0\r\n  %35 : int = prim::Constant[value=4](), scope: IndexPutModel # repro_trace_inplace.py:5:0\r\n  %36 : int = prim::Constant[value=0](), scope: IndexPutModel # repro_trace_inplace.py:5:0\r\n  %37 : Device = prim::Constant[value=\"cpu\"](), scope: IndexPutModel # repro_trace_inplace.py:5:0\r\n  %38 : bool = prim::Constant[value=0](), scope: IndexPutModel # repro_trace_inplace.py:5:0\r\n  %39 : bool = prim::Constant[value=0](), scope: IndexPutModel # repro_trace_inplace.py:5:0\r\n  %40 : bool = prim::Constant[value=0](), scope: IndexPutModel # repro_trace_inplace.py:5:0\r\n  %41 : Long(3) = aten::to(%22, %35, %36, %37, %38, %39, %40), scope: IndexPutModel # repro_trace_inplace.py:5:0\r\n  %42 : None = prim::Constant(), scope: IndexPutModel\r\n  %43 : None = prim::Constant(), scope: IndexPutModel\r\n  %44 : None = prim::Constant(), scope: IndexPutModel\r\n  %45 : Tensor?[] = prim::ListConstruct(%42, %43, %44, %41), scope: IndexPutModel\r\n  %46 : bool = prim::Constant[value=0](), scope: IndexPutModel # repro_trace_inplace.py:5:0\r\n  %47 : Float(3, 4, 5, 6, 2) = aten::index_put(%34, %45, %29, %46), scope: IndexPutModel # repro_trace_inplace.py:5:0\r\n  return (%0)\r\n```\r\n\r\n\n\ncc @ezyang @gchanan @zou3519 @jerryzh168 @suo",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/29008/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/29008/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/28418",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/28418/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/28418/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/28418/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/28418",
        "id": 510734043,
        "node_id": "MDU6SXNzdWU1MTA3MzQwNDM=",
        "number": 28418,
        "title": "[jit][script] torch.jit.script does not support nn.RNN",
        "user": {
            "login": "alanhdu",
            "id": 1914111,
            "node_id": "MDQ6VXNlcjE5MTQxMTE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1914111?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alanhdu",
            "html_url": "https://github.com/alanhdu",
            "followers_url": "https://api.github.com/users/alanhdu/followers",
            "following_url": "https://api.github.com/users/alanhdu/following{/other_user}",
            "gists_url": "https://api.github.com/users/alanhdu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alanhdu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alanhdu/subscriptions",
            "organizations_url": "https://api.github.com/users/alanhdu/orgs",
            "repos_url": "https://api.github.com/users/alanhdu/repos",
            "events_url": "https://api.github.com/users/alanhdu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alanhdu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 13,
        "created_at": "2019-10-22T15:25:27Z",
        "updated_at": "2021-11-16T00:22:23Z",
        "closed_at": "2021-11-16T00:22:23Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\n`torch.jit.script` does not seem to support `nn.RNN`\r\n\r\n## To Reproduce\r\n\r\nRunning\r\n\r\n```python\r\nimport torch\r\nimport torch.nn as nn\r\n\r\ntorch.jit.script(nn.RNN(32, 64, 1))\r\n```\r\n\r\nfails with\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"test.py\", line 4, in <module>\r\n    torch.jit.script(nn.RNN(32, 64, 1))\r\n  File \"/opt/anaconda/envs/test/lib/python3.6/site-packages/torch/jit/__init__.py\", line 1203, in script\r\n    return torch.jit.torch.jit._recursive.recursive_script(obj)\r\n  File \"/opt/anaconda/envs/test/lib/python3.6/site-packages/torch/jit/_recursive.py\", line 173, in recursive_script\r\n    return copy_to_script_module(mod, overload_stubs + stubs)\r\n  File \"/opt/anaconda/envs/test/lib/python3.6/site-packages/torch/jit/_recursive.py\", line 95, in copy_to_script_module\r\n    torch.jit._create_methods_from_stubs(script_module, stubs)\r\n  File \"/opt/anaconda/envs/test/lib/python3.6/site-packages/torch/jit/__init__.py\", line 1423, in _create_methods_from_stubs\r\n    self._c._create_methods(self, defs, rcbs, defaults)\r\nRuntimeError: \r\nTensor cannot be used as a tuple:\r\nat /opt/anaconda/envs/test/lib/python3.6/site-packages/torch/nn/modules/rnn.py:184:67\r\n    def forward(self, input, hx=None):\r\n        is_packed = isinstance(input, PackedSequence)\r\n        if is_packed:\r\n            input, batch_sizes, sorted_indices, unsorted_indices = input\r\n                                                                   ~~~~~ <--- HERE\r\n            max_batch_size = batch_sizes[0]\r\n            max_batch_size = int(max_batch_size)\r\n        else:\r\n            batch_sizes = None\r\n            max_batch_size = input.size(0) if self.batch_first else input.size(1)\r\n            sorted_indices = None\r\n            unsorted_indices = None\r\n\r\n        if hx is None:\r\n```\r\n\r\n## Expected behavior\r\n\r\nThat you can successfully jit `nn.RNN` like you can with `nn.LSTM` and `nn.GRU`.\r\n\r\n## Environment\r\n\r\nPlease copy and paste the output from our\r\n[environment collection script](https://raw.githubusercontent.com/pytorch/pytorch/master/torch/utils/collect_env.py)\r\n(or fill out the checklist below manually).\r\n\r\nYou can get the script and run it with:\r\n```PyTorch version: 1.3.0\r\nIs debug build: No\r\nCUDA used to build PyTorch: None\r\n\r\nOS: Ubuntu 18.04.3 LTS\r\nGCC version: (Ubuntu 8.3.0-6ubuntu1~18.04.1) 8.3.0\r\nCMake version: Could not collect\r\n\r\nPython version: 3.6\r\nIs CUDA available: No\r\nCUDA runtime version: No CUDA\r\nGPU models and configuration: No CUDA\r\nNvidia driver version: No CUDA\r\ncuDNN version: No CUDA\r\n\r\nVersions of relevant libraries:\r\n[pip] numpy==1.17.2\r\n[pip] torch==1.3.0\r\n[conda] cpuonly                   1.0                           0    pytorch\r\n[conda] mkl                       2019.4                      243  \r\n[conda] pytorch                   1.3.0               py3.6_cpu_0  [cpuonly]  pytorch\r\n```\n\ncc @suo",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/28418/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/28418/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/28360",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/28360/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/28360/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/28360/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/28360",
        "id": 509782183,
        "node_id": "MDU6SXNzdWU1MDk3ODIxODM=",
        "number": 28360,
        "title": "Execution of traced function results in unexpected modification of an argument",
        "user": {
            "login": "IlyaOvodov",
            "id": 34230114,
            "node_id": "MDQ6VXNlcjM0MjMwMTE0",
            "avatar_url": "https://avatars.githubusercontent.com/u/34230114?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/IlyaOvodov",
            "html_url": "https://github.com/IlyaOvodov",
            "followers_url": "https://api.github.com/users/IlyaOvodov/followers",
            "following_url": "https://api.github.com/users/IlyaOvodov/following{/other_user}",
            "gists_url": "https://api.github.com/users/IlyaOvodov/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/IlyaOvodov/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/IlyaOvodov/subscriptions",
            "organizations_url": "https://api.github.com/users/IlyaOvodov/orgs",
            "repos_url": "https://api.github.com/users/IlyaOvodov/repos",
            "events_url": "https://api.github.com/users/IlyaOvodov/events{/privacy}",
            "received_events_url": "https://api.github.com/users/IlyaOvodov/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 443484135,
                "node_id": "MDU6TGFiZWw0NDM0ODQxMzU=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/high%20priority",
                "name": "high priority",
                "color": "F22613",
                "default": false,
                "description": null
            },
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "suo",
            "id": 1617424,
            "node_id": "MDQ6VXNlcjE2MTc0MjQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1617424?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/suo",
            "html_url": "https://github.com/suo",
            "followers_url": "https://api.github.com/users/suo/followers",
            "following_url": "https://api.github.com/users/suo/following{/other_user}",
            "gists_url": "https://api.github.com/users/suo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/suo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/suo/subscriptions",
            "organizations_url": "https://api.github.com/users/suo/orgs",
            "repos_url": "https://api.github.com/users/suo/repos",
            "events_url": "https://api.github.com/users/suo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/suo/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "suo",
                "id": 1617424,
                "node_id": "MDQ6VXNlcjE2MTc0MjQ=",
                "avatar_url": "https://avatars.githubusercontent.com/u/1617424?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/suo",
                "html_url": "https://github.com/suo",
                "followers_url": "https://api.github.com/users/suo/followers",
                "following_url": "https://api.github.com/users/suo/following{/other_user}",
                "gists_url": "https://api.github.com/users/suo/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/suo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/suo/subscriptions",
                "organizations_url": "https://api.github.com/users/suo/orgs",
                "repos_url": "https://api.github.com/users/suo/repos",
                "events_url": "https://api.github.com/users/suo/events{/privacy}",
                "received_events_url": "https://api.github.com/users/suo/received_events",
                "type": "User",
                "site_admin": false
            },
            {
                "login": "Krovatkin",
                "id": 5086322,
                "node_id": "MDQ6VXNlcjUwODYzMjI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/5086322?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/Krovatkin",
                "html_url": "https://github.com/Krovatkin",
                "followers_url": "https://api.github.com/users/Krovatkin/followers",
                "following_url": "https://api.github.com/users/Krovatkin/following{/other_user}",
                "gists_url": "https://api.github.com/users/Krovatkin/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/Krovatkin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Krovatkin/subscriptions",
                "organizations_url": "https://api.github.com/users/Krovatkin/orgs",
                "repos_url": "https://api.github.com/users/Krovatkin/repos",
                "events_url": "https://api.github.com/users/Krovatkin/events{/privacy}",
                "received_events_url": "https://api.github.com/users/Krovatkin/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 3,
        "created_at": "2019-10-21T07:30:44Z",
        "updated_at": "2020-01-15T00:42:37Z",
        "closed_at": "2020-01-15T00:42:37Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\nExecution of traced function results in unexpected modification of an argument\r\n\r\n## To Reproduce\r\n```\r\ndef func(x):\r\n    s = 0\r\n    s += x\r\n    s += x\r\n    return s\r\nx = torch.ones(2,2)\r\nfunc = torch.jit.trace(func, x)\r\nprint('x',x) # tensor([[1., 1.], [1., 1.]]) as expected\r\n_ = func(x)\r\nprint('x',x) # tensor([[2., 2.], [2., 2.]])  surprisingly x have changed while it shouldn't!\r\n```\r\n\r\n## Expected behavior\r\nargument shouldn't change\r\n\r\n## Environment\r\n\r\nCollecting environment information...\r\nPyTorch version: 1.3.0a0+de394b6\r\nIs debug build: No\r\nCUDA used to build PyTorch: 10.0\r\n\r\nOS: \u040a\u00a0\u00a9\u0404\u0430\u00ae\u0431\u00ae\u0434\u0432 Windows 10 Pro\r\nGCC version: Could not collect\r\nCMake version: version 3.12.2\r\n\r\nPython version: 3.6\r\nIs CUDA available: Yes\r\nCUDA runtime version: 10.0.130\r\nGPU models and configuration: GPU 0: GeForce GTX 1080 Ti\r\nNvidia driver version: 411.31\r\ncuDNN version: C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v10.0\\bin\\cudnn64_7.dll\r\n\r\nVersions of relevant libraries:\r\n[pip3] numpy==1.17.2\r\n[pip3] pytorch-ignite==0.2.0\r\n[pip3] pytorch-toolbelt==0.2.1\r\n[pip3] segmentation-models-pytorch==0.0.2\r\n[pip3] torch==1.3.0a0+de394b6\r\n[pip3] torchvision==0.4.1a0+d94043a\r\n[conda] blas                      1.0                         mkl  \r\n[conda] cuda92                    1.0                           0    pytorch\r\n[conda] mkl                       2019.0                    <pip>\r\n[conda] mkl                       2019.0                      118  \r\n[conda] mkl-include               2019.0                    <pip>\r\n[conda] mkl-include               2019.0                      118  \r\n[conda] mkl_fft                   1.0.6            py36hdbbee80_0  \r\n[conda] mkl_random                1.0.1            py36h9258bd6_0  \r\n[conda] pytorch-ignite            0.2.0                     <pip>\r\n[conda] pytorch-toolbelt          0.2.1                     <pip>\r\n[conda] segmentation-models-pytorch 0.0.2                     <pip>\r\n[conda] torch                     1.3.0a0+de394b6           <pip>\r\n[conda] torchvision               0.4.0                     <pip>\r\n[conda] torchvision               0.4.1a0+d94043a           <pip>\r\n\r\n\n\ncc @ezyang @gchanan @zou3519 @jerryzh168 @suo",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/28360/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/28360/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/28280",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/28280/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/28280/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/28280/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/28280",
        "id": 509022879,
        "node_id": "MDU6SXNzdWU1MDkwMjI4Nzk=",
        "number": 28280,
        "title": "torch.jit.ignore messes with buffer device placement",
        "user": {
            "login": "nlgranger",
            "id": 3764009,
            "node_id": "MDQ6VXNlcjM3NjQwMDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3764009?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nlgranger",
            "html_url": "https://github.com/nlgranger",
            "followers_url": "https://api.github.com/users/nlgranger/followers",
            "following_url": "https://api.github.com/users/nlgranger/following{/other_user}",
            "gists_url": "https://api.github.com/users/nlgranger/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nlgranger/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nlgranger/subscriptions",
            "organizations_url": "https://api.github.com/users/nlgranger/orgs",
            "repos_url": "https://api.github.com/users/nlgranger/repos",
            "events_url": "https://api.github.com/users/nlgranger/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nlgranger/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "driazati",
            "id": 9407960,
            "node_id": "MDQ6VXNlcjk0MDc5NjA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9407960?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/driazati",
            "html_url": "https://github.com/driazati",
            "followers_url": "https://api.github.com/users/driazati/followers",
            "following_url": "https://api.github.com/users/driazati/following{/other_user}",
            "gists_url": "https://api.github.com/users/driazati/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/driazati/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/driazati/subscriptions",
            "organizations_url": "https://api.github.com/users/driazati/orgs",
            "repos_url": "https://api.github.com/users/driazati/repos",
            "events_url": "https://api.github.com/users/driazati/events{/privacy}",
            "received_events_url": "https://api.github.com/users/driazati/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "driazati",
                "id": 9407960,
                "node_id": "MDQ6VXNlcjk0MDc5NjA=",
                "avatar_url": "https://avatars.githubusercontent.com/u/9407960?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/driazati",
                "html_url": "https://github.com/driazati",
                "followers_url": "https://api.github.com/users/driazati/followers",
                "following_url": "https://api.github.com/users/driazati/following{/other_user}",
                "gists_url": "https://api.github.com/users/driazati/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/driazati/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/driazati/subscriptions",
                "organizations_url": "https://api.github.com/users/driazati/orgs",
                "repos_url": "https://api.github.com/users/driazati/repos",
                "events_url": "https://api.github.com/users/driazati/events{/privacy}",
                "received_events_url": "https://api.github.com/users/driazati/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 2,
        "created_at": "2019-10-18T11:31:02Z",
        "updated_at": "2020-04-16T00:39:41Z",
        "closed_at": "2020-04-16T00:39:41Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\n## To Reproduce\r\n\r\nRun this minimal example\r\n\r\n```python\r\nimport torch\r\n\r\nclass Model(torch.nn.Module):\r\n    def __init__(self):\r\n        super().__init__()\r\n        self.register_buffer('a', torch.zeros(10))\r\n        \r\n    def forward(self, inputs):\r\n        return self.non_scriptable(inputs)\r\n    \r\n    @torch.jit.ignore\r\n    def non_scriptable(self, inputs):\r\n        print(self.a.device)\r\n        return inputs * self.a\r\n\r\n\r\n# Not scripted: normal behaviour\r\nm = Model()\r\nm = m.to('cuda')\r\nm(torch.zeros(10).to('cuda'))\r\n\r\n# Scripted: fails\r\nm = Model()\r\nm = torch.jit.script(m)\r\nm = m.to('cuda')\r\nprint(m.a.device)  # prints cuda\r\nm(torch.zeros(10).to('cuda'))  # fails because m.a is on cpu inside non_scriptable\r\n```\r\n\r\nOutputs:\r\n```\r\ncuda:0\r\ncuda:0\r\ncpu\r\n\r\n---------------------------------------------------------------------------\r\nRuntimeError                              Traceback (most recent call last)\r\n<ipython-input-49-a9cb0d104a1f> in <module>\r\n     23 m = m.to('cuda')\r\n     24 print(m.a.device)  # prints cuda\r\n---> 25 m(torch.zeros(10).to('cuda'))  # fails because m.a is on cpu inside non_scriptable\r\n\r\n~/.conda/envs/MTMSF/lib/python3.7/site-packages/torch/nn/modules/module.py in __call__(self, *input, **kwargs)\r\n    543             result = self._slow_forward(*input, **kwargs)\r\n    544         else:\r\n--> 545             result = self.forward(*input, **kwargs)\r\n    546         for hook in self._forward_hooks.values():\r\n    547             hook_result = hook(self, input, result)\r\n\r\nRuntimeError: RuntimeError: expected device cuda:0 but got device cpu\r\n```\r\n\r\n\r\n## Expected behavior\r\n\r\nScripted and non-scripted versions have identical behaviour.\r\n\r\n## Environment\r\n\r\nPyTorch version: 1.3.0.dev20190917\r\nIs debug build: No\r\nCUDA used to build PyTorch: 10.0.130\r\n\r\nOS: Ubuntu 16.04.6 LTS\r\nGCC version: (Ubuntu 5.4.0-6ubuntu1~16.04.11) 5.4.0 20160609\r\nCMake version: version 3.5.1\r\n\r\nPython version: 3.7\r\nIs CUDA available: Yes\r\nCUDA runtime version: 10.0.130\r\nGPU models and configuration: \r\nGPU 0: GeForce GTX TITAN Black\r\nGPU 1: GeForce GTX TITAN Black\r\n\r\nNvidia driver version: 418.40.04\r\ncuDNN version: Probably one of the following:\r\n/usr/lib/x86_64-linux-gnu/libcudnn.so.7.4.2\r\n/usr/local/cuda-10.0/targets/x86_64-linux/lib/libcudnn.so.7.5.0\r\n/usr/local/cuda-9.0/targets/x86_64-linux/lib/libcudnn.so.7.5.0\r\n\r\nVersions of relevant libraries:\r\n[pip] numpy==1.16.5\r\n[pip] torch==1.3.0.dev20190917\r\n[pip] torchvision==0.5.0a0+e8b830f\r\n[conda] blas                      1.0                         mkl  \r\n[conda] mkl                       2019.4                      243  \r\n[conda] mkl-service               2.3.0            py37he904b0f_0  \r\n[conda] mkl_fft                   1.0.14           py37ha843d7b_0  \r\n[conda] mkl_random                1.0.2            py37hd81dba3_0  \r\n[conda] pytorch                   1.3.0.dev20190917 py3.7_cuda10.0.130_cudnn7.6.2_0    pytorch-nightly\r\n[conda] torchvision               0.5.0.dev20190917      py37_cu100    pytorch-nightly\r\n\r\ncc @suo",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/28280/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/28280/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/27569",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/27569/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/27569/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/27569/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/27569",
        "id": 504279857,
        "node_id": "MDU6SXNzdWU1MDQyNzk4NTc=",
        "number": 27569,
        "title": "Export from TorchScript to ONNX: torch.onnx.symbolic_opset9.dim does not exist",
        "user": {
            "login": "racoiaws",
            "id": 8864149,
            "node_id": "MDQ6VXNlcjg4NjQxNDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8864149?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/racoiaws",
            "html_url": "https://github.com/racoiaws",
            "followers_url": "https://api.github.com/users/racoiaws/followers",
            "following_url": "https://api.github.com/users/racoiaws/following{/other_user}",
            "gists_url": "https://api.github.com/users/racoiaws/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/racoiaws/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/racoiaws/subscriptions",
            "organizations_url": "https://api.github.com/users/racoiaws/orgs",
            "repos_url": "https://api.github.com/users/racoiaws/repos",
            "events_url": "https://api.github.com/users/racoiaws/events{/privacy}",
            "received_events_url": "https://api.github.com/users/racoiaws/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 693805995,
                "node_id": "MDU6TGFiZWw2OTM4MDU5OTU=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20onnx",
                "name": "module: onnx",
                "color": "f7e101",
                "default": false,
                "description": "Related to torch.onnx"
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 9,
        "created_at": "2019-10-08T21:06:30Z",
        "updated_at": "2022-11-14T11:12:28Z",
        "closed_at": "2020-01-14T03:45:42Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\nTorchScript -> ONNX conversion of a simple module fails\r\n\r\nIf one doesn\u2019t jit-compile the model, everything works.\r\n\r\n## To Reproduce\r\n\r\n```\r\nfrom tempfile import TemporaryFile\r\n\r\nimport torch\r\nimport torch.onnx\r\nimport torch.jit\r\nfrom torch import nn, Tensor\r\n\r\nprint(f\"PyTorch version is {torch.__version__}\")\r\n\r\nclass Model(nn.Module):\r\n    def __init__(self):\r\n        super().__init__()\r\n        self.module = nn.Linear(\r\n            in_features=8, out_features=4)\r\n        self.module2 = nn.Linear(\r\n            in_features=4, out_features=2)\r\n       \r\n    def forward(self, x: Tensor) -> Tensor:\r\n        preout = self.module(x)\r\n        out = self.module2(preout)\r\n        return out\r\n\r\n\r\nmodel = Model()\r\nmodel = torch.jit.script(model)\r\n\r\ndummy_input = torch.randn(3, 8)\r\ndummy_output = model(dummy_input)\r\n\r\nwith TemporaryFile() as temp:\r\n    torch.onnx.export(model=model, \r\n                      args=dummy_input, \r\n                      example_outputs=dummy_output,\r\n                      f=temp, \r\n                      verbose=True)\r\n```\r\n\r\nOutput\r\n\r\n```\r\nPyTorch version is 1.2.0\r\n/usr/local/lib/python3.6/dist-packages/torch/onnx/utils.py:562: UserWarning: ONNX export failed on ATen operator dim because torch.onnx.symbolic_opset9.dim does not exist\r\n  .format(op_name, opset_version, op_name))\r\n---------------------------------------------------------------------------\r\nKeyError                                  Traceback (most recent call last)\r\n<ipython-input-1-036960002e79> in <module>()\r\n     33                       example_outputs=dummy_output,\r\n     34                       f=temp,\r\n---> 35                       verbose=True)\r\n \r\n7 frames\r\n/usr/local/lib/python3.6/dist-packages/torch/onnx/__init__.py in export(model, args, f, export_params, verbose, training, input_names, output_names, aten, export_raw_ir, operator_export_type, opset_version, _retain_param_name, do_constant_folding, example_outputs, strip_doc_string, dynamic_axes)\r\n    130                         operator_export_type, opset_version, _retain_param_name,\r\n    131                         do_constant_folding, example_outputs,\r\n--> 132                         strip_doc_string, dynamic_axes)\r\n    133\r\n    134\r\n \r\n/usr/local/lib/python3.6/dist-packages/torch/onnx/utils.py in export(model, args, f, export_params, verbose, training, input_names, output_names, aten, export_raw_ir, operator_export_type, opset_version, _retain_param_name, do_constant_folding, example_outputs, strip_doc_string, dynamic_axes)\r\n     62             operator_export_type=operator_export_type, opset_version=opset_version,\r\n     63             _retain_param_name=_retain_param_name, do_constant_folding=do_constant_folding,\r\n---> 64             example_outputs=example_outputs, strip_doc_string=strip_doc_string, dynamic_axes=dynamic_axes)\r\n     65\r\n     66\r\n \r\n/usr/local/lib/python3.6/dist-packages/torch/onnx/utils.py in _export(model, args, f, export_params, verbose, training, input_names, output_names, operator_export_type, export_type, example_outputs, propagate, opset_version, _retain_param_name, do_constant_folding, strip_doc_string, dynamic_axes)\r\n    327                                                         output_names, operator_export_type,\r\n    328                                                         example_outputs, propagate,\r\n--> 329                                                         _retain_param_name, do_constant_folding)\r\n    330\r\n    331         # TODO: Don't allocate a in-memory string for the protobuf\r\n \r\n/usr/local/lib/python3.6/dist-packages/torch/onnx/utils.py in _model_to_graph(model, args, verbose, training, input_names, output_names, operator_export_type, example_outputs, propagate, _retain_param_name, do_constant_folding, _disable_torch_constant_prop)\r\n    223\r\n    224     graph = _optimize_graph(graph, operator_export_type,\r\n--> 225                             _disable_torch_constant_prop=_disable_torch_constant_prop)\r\n    226\r\n    227     if isinstance(model, torch.jit.ScriptModule) or isinstance(model, torch.jit.Function):\r\n \r\n/usr/local/lib/python3.6/dist-packages/torch/onnx/utils.py in _optimize_graph(graph, operator_export_type, _disable_torch_constant_prop)\r\n    125         torch._C._jit_pass_erase_number_types(graph)\r\n    126\r\n--> 127         graph = torch._C._jit_pass_onnx(graph, operator_export_type)\r\n    128         torch._C._jit_pass_lint(graph)\r\n    129         from torch.onnx.symbolic_helper import _export_onnx_opset_version\r\n \r\n/usr/local/lib/python3.6/dist-packages/torch/onnx/__init__.py in _run_symbolic_function(*args, **kwargs)\r\n    161 def _run_symbolic_function(*args, **kwargs):\r\n    162     from torch.onnx import utils\r\n--> 163     return utils._run_symbolic_function(*args, **kwargs)\r\n    164\r\n    165\r\n \r\n/usr/local/lib/python3.6/dist-packages/torch/onnx/utils.py in _run_symbolic_function(g, n, inputs, env, operator_export_type)\r\n    561                                   \"torch.onnx.symbolic_opset{}.{} does not exist\"\r\n    562                                   .format(op_name, opset_version, op_name))\r\n--> 563                 op_fn = sym_registry.get_registered_op(op_name, '', opset_version)\r\n    564                 return op_fn(g, *inputs, **attrs)\r\n    565\r\n \r\n/usr/local/lib/python3.6/dist-packages/torch/onnx/symbolic_registry.py in get_registered_op(opname, domain, version)\r\n     89         warnings.warn(\"ONNX export failed. The ONNX domain and/or version are None.\")\r\n     90     global _registry\r\n---> 91     return _registry[(domain, version)][opname]\r\n\r\nKeyError: 'dim'\r\n```\r\n\r\n## Expected behavior\r\n\r\nI expected that a jit-compiled module consisting of just two `nn.Linear` children should export to ONNX without hassle.\r\n\r\n## Environment\r\n\r\nGoogle Colab, I think at the moment it has PyTorch 1.2.0 and Python 3.6\r\n\r\n## Additional context\r\nI played around with TorchScript tracing / ONNX export of modules that work with namedtuples, got some errors. Trying to get a minimal example has led me to this code with no namedtuples.\r\n\r\ncc @suo",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/27569/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/27569/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/27551",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/27551/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/27551/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/27551/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/27551",
        "id": 504202715,
        "node_id": "MDU6SXNzdWU1MDQyMDI3MTU=",
        "number": 27551,
        "title": "torch.split with tensor sizes fails in tracing",
        "user": {
            "login": "bddppq",
            "id": 9300575,
            "node_id": "MDQ6VXNlcjkzMDA1NzU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9300575?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bddppq",
            "html_url": "https://github.com/bddppq",
            "followers_url": "https://api.github.com/users/bddppq/followers",
            "following_url": "https://api.github.com/users/bddppq/following{/other_user}",
            "gists_url": "https://api.github.com/users/bddppq/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bddppq/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bddppq/subscriptions",
            "organizations_url": "https://api.github.com/users/bddppq/orgs",
            "repos_url": "https://api.github.com/users/bddppq/repos",
            "events_url": "https://api.github.com/users/bddppq/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bddppq/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 443484135,
                "node_id": "MDU6TGFiZWw0NDM0ODQxMzU=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/high%20priority",
                "name": "high priority",
                "color": "F22613",
                "default": false,
                "description": null
            },
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "suo",
            "id": 1617424,
            "node_id": "MDQ6VXNlcjE2MTc0MjQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1617424?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/suo",
            "html_url": "https://github.com/suo",
            "followers_url": "https://api.github.com/users/suo/followers",
            "following_url": "https://api.github.com/users/suo/following{/other_user}",
            "gists_url": "https://api.github.com/users/suo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/suo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/suo/subscriptions",
            "organizations_url": "https://api.github.com/users/suo/orgs",
            "repos_url": "https://api.github.com/users/suo/repos",
            "events_url": "https://api.github.com/users/suo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/suo/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "suo",
                "id": 1617424,
                "node_id": "MDQ6VXNlcjE2MTc0MjQ=",
                "avatar_url": "https://avatars.githubusercontent.com/u/1617424?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/suo",
                "html_url": "https://github.com/suo",
                "followers_url": "https://api.github.com/users/suo/followers",
                "following_url": "https://api.github.com/users/suo/following{/other_user}",
                "gists_url": "https://api.github.com/users/suo/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/suo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/suo/subscriptions",
                "organizations_url": "https://api.github.com/users/suo/orgs",
                "repos_url": "https://api.github.com/users/suo/repos",
                "events_url": "https://api.github.com/users/suo/events{/privacy}",
                "received_events_url": "https://api.github.com/users/suo/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 11,
        "created_at": "2019-10-08T18:23:33Z",
        "updated_at": "2021-03-15T12:12:27Z",
        "closed_at": "2020-02-08T01:18:04Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\n<!-- A clear and concise description of what the bug is. -->\r\n\r\n## To Reproduce\r\n\r\nCode\r\n```python\r\nimport torch\r\n\r\n\r\nclass MyModule(torch.nn.Module):\r\n    def forward(self, x):\r\n        return torch.split(x, x.size(1))\r\n\r\n\r\nm = MyModule()\r\nx = torch.randn(1, 2, 3, 4)\r\n\r\n# ok to run the model\r\nm(x)\r\n\r\n# fail to trace it\r\nprint(torch.jit.trace(m, x))\r\n```\r\n\r\nError:\r\n\r\n```shell\r\n(tensor([[[[-0.8175, -0.3000,  0.0693, -1.0097],\r\n          [-0.3261,  0.6817, -0.8282, -1.8818],\r\n          [-1.1303,  1.8587,  0.0275, -0.2838]],\r\n\r\n         [[ 0.2386,  0.3672,  1.0122, -1.3396],\r\n          [ 0.6037, -0.8609,  0.6339,  0.8278],\r\n          [ 1.0117, -0.3204, -1.6440,  2.8207]]]]),)\r\n\r\nTraceback (most recent call last):\r\n  File \"/tmp/1.py\", line 12, in <module>\r\n    print(torch.jit.trace(m, x))\r\n  File \"torch/jit/__init__.py\", line 860, in trace\r\n    check_tolerance, _force_outplace, _module_class)\r\n  File \"torch/jit/__init__.py\", line 999, in trace_module\r\n    module._c._create_method_from_trace(method_name, func, example_inputs, var_lookup_fn, _force_outplace)\r\n  File \"torch/nn/modules/module.py\", line 543, in __call__\r\n    result = self._slow_forward(*input, **kwargs)\r\n  File \"torch/nn/modules/module.py\", line 529, in _slow_forward\r\n    result = self.forward(*input, **kwargs)\r\n  File \"/tmp/1.py\", line 6, in forward\r\n    return torch.split(x, x.size(1))\r\n  File \"torch/functional.py\", line 77, in split\r\n    return tensor.split(split_size_or_sections, dim)\r\n  File \"torch/tensor.py\", line 339, in split\r\n    return super(Tensor, self).split_with_sizes(split_size, dim)\r\nTypeError: split_with_sizes(): argument 'split_sizes' (position 1) must be tuple of ints, not Tensor\r\n```\r\n## Expected behavior\r\n\r\nTrace successfully\r\n\r\n## Additional context\r\n\r\nI think this is related to sizes being handled specially in tracing mode.\n\ncc @ezyang @gchanan @zou3519 @suo",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/27551/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/27551/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/27543",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/27543/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/27543/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/27543/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/27543",
        "id": 504129753,
        "node_id": "MDU6SXNzdWU1MDQxMjk3NTM=",
        "number": 27543,
        "title": "[JIT] Reverse slicing List gives runtime error",
        "user": {
            "login": "eellison",
            "id": 11477974,
            "node_id": "MDQ6VXNlcjExNDc3OTc0",
            "avatar_url": "https://avatars.githubusercontent.com/u/11477974?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eellison",
            "html_url": "https://github.com/eellison",
            "followers_url": "https://api.github.com/users/eellison/followers",
            "following_url": "https://api.github.com/users/eellison/following{/other_user}",
            "gists_url": "https://api.github.com/users/eellison/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eellison/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eellison/subscriptions",
            "organizations_url": "https://api.github.com/users/eellison/orgs",
            "repos_url": "https://api.github.com/users/eellison/repos",
            "events_url": "https://api.github.com/users/eellison/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eellison/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "agolynski",
            "id": 5865598,
            "node_id": "MDQ6VXNlcjU4NjU1OTg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5865598?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/agolynski",
            "html_url": "https://github.com/agolynski",
            "followers_url": "https://api.github.com/users/agolynski/followers",
            "following_url": "https://api.github.com/users/agolynski/following{/other_user}",
            "gists_url": "https://api.github.com/users/agolynski/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/agolynski/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/agolynski/subscriptions",
            "organizations_url": "https://api.github.com/users/agolynski/orgs",
            "repos_url": "https://api.github.com/users/agolynski/repos",
            "events_url": "https://api.github.com/users/agolynski/events{/privacy}",
            "received_events_url": "https://api.github.com/users/agolynski/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "agolynski",
                "id": 5865598,
                "node_id": "MDQ6VXNlcjU4NjU1OTg=",
                "avatar_url": "https://avatars.githubusercontent.com/u/5865598?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/agolynski",
                "html_url": "https://github.com/agolynski",
                "followers_url": "https://api.github.com/users/agolynski/followers",
                "following_url": "https://api.github.com/users/agolynski/following{/other_user}",
                "gists_url": "https://api.github.com/users/agolynski/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/agolynski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/agolynski/subscriptions",
                "organizations_url": "https://api.github.com/users/agolynski/orgs",
                "repos_url": "https://api.github.com/users/agolynski/repos",
                "events_url": "https://api.github.com/users/agolynski/events{/privacy}",
                "received_events_url": "https://api.github.com/users/agolynski/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2019-10-08T15:52:03Z",
        "updated_at": "2020-02-05T18:06:03Z",
        "closed_at": "2020-01-23T21:06:00Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\n## To Reproduce\r\n\r\n```\r\n@torch.jit.script\r\ndef fn():\r\n    a = [1, 2, 3, 4]\r\n    return a[::-1]\r\nfn()\r\n```\r\n\r\n> RuntimeError: vector::_M_range_check The above operation failed in interpreter, with the following stack trace: at test/test_jit.py:6263:19\r\n        @torch.jit.script\r\n        def test():\r\n            a = [1, 2, 3, 4]\r\n            return a[::-1]\r\n                   ~~~~~~ <--- HERE\r\n\r\n\r\n\r\nThis should either give a compile error, or work (better), but it should not compile and be unsupported.\n\ncc @suo",
        "closed_by": {
            "login": "driazati",
            "id": 9407960,
            "node_id": "MDQ6VXNlcjk0MDc5NjA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9407960?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/driazati",
            "html_url": "https://github.com/driazati",
            "followers_url": "https://api.github.com/users/driazati/followers",
            "following_url": "https://api.github.com/users/driazati/following{/other_user}",
            "gists_url": "https://api.github.com/users/driazati/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/driazati/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/driazati/subscriptions",
            "organizations_url": "https://api.github.com/users/driazati/orgs",
            "repos_url": "https://api.github.com/users/driazati/repos",
            "events_url": "https://api.github.com/users/driazati/events{/privacy}",
            "received_events_url": "https://api.github.com/users/driazati/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/27543/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/27543/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/27512",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/27512/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/27512/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/27512/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/27512",
        "id": 503750076,
        "node_id": "MDU6SXNzdWU1MDM3NTAwNzY=",
        "number": 27512,
        "title": "[JIT] floordiv not bound to tensor",
        "user": {
            "login": "eellison",
            "id": 11477974,
            "node_id": "MDQ6VXNlcjExNDc3OTc0",
            "avatar_url": "https://avatars.githubusercontent.com/u/11477974?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eellison",
            "html_url": "https://github.com/eellison",
            "followers_url": "https://api.github.com/users/eellison/followers",
            "following_url": "https://api.github.com/users/eellison/following{/other_user}",
            "gists_url": "https://api.github.com/users/eellison/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eellison/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eellison/subscriptions",
            "organizations_url": "https://api.github.com/users/eellison/orgs",
            "repos_url": "https://api.github.com/users/eellison/repos",
            "events_url": "https://api.github.com/users/eellison/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eellison/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-10-07T23:53:41Z",
        "updated_at": "2019-12-10T15:51:58Z",
        "closed_at": "2019-12-10T15:51:58Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\nfloordiv is only bound for int, not tensor, which results in an incorrectly inserted cast..\r\n```\r\ndef test(pos):\r\n    return pos // 2\r\n\r\ninput = torch.tensor(4)\r\nprint(test(input)\r\n# tensor(2)\r\nprint(torch.jit.script(test)(input))\r\n# 2\r\n```\n\ncc @suo",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/27512/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/27512/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/27495",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/27495/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/27495/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/27495/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/27495",
        "id": 503693277,
        "node_id": "MDU6SXNzdWU1MDM2OTMyNzc=",
        "number": 27495,
        "title": "[JIT] builtin function attributes do not recursively compile",
        "user": {
            "login": "eellison",
            "id": 11477974,
            "node_id": "MDQ6VXNlcjExNDc3OTc0",
            "avatar_url": "https://avatars.githubusercontent.com/u/11477974?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eellison",
            "html_url": "https://github.com/eellison",
            "followers_url": "https://api.github.com/users/eellison/followers",
            "following_url": "https://api.github.com/users/eellison/following{/other_user}",
            "gists_url": "https://api.github.com/users/eellison/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eellison/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eellison/subscriptions",
            "organizations_url": "https://api.github.com/users/eellison/orgs",
            "repos_url": "https://api.github.com/users/eellison/repos",
            "events_url": "https://api.github.com/users/eellison/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eellison/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2019-10-07T21:11:08Z",
        "updated_at": "2019-12-18T23:24:57Z",
        "closed_at": "2019-12-18T23:24:57Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\nIf a function is assigned as a module attribute, it does not get picked up in recursive compilation. This may also hold true for classes.\r\n\r\n## To Reproduce\r\n\r\n```\r\ndef double(x):\r\n    return x * 2\r\n\r\nclass Double(nn.Module):\r\n    def __init__(self):\r\n        super(Double, self).__init__()\r\n        self.dble = double\r\n\r\n    def forward(self, input):\r\n        return self.dble(input)\r\n```\r\n\r\nd = Double()\r\ntorch.jit.script(d)\r\n\r\ncc @suo",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/27495/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/27495/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/27493",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/27493/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/27493/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/27493/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/27493",
        "id": 503687911,
        "node_id": "MDU6SXNzdWU1MDM2ODc5MTE=",
        "number": 27493,
        "title": "[jit] `index_put_` on a tensor slice with the element type does not work",
        "user": {
            "login": "driazati",
            "id": 9407960,
            "node_id": "MDQ6VXNlcjk0MDc5NjA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9407960?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/driazati",
            "html_url": "https://github.com/driazati",
            "followers_url": "https://api.github.com/users/driazati/followers",
            "following_url": "https://api.github.com/users/driazati/following{/other_user}",
            "gists_url": "https://api.github.com/users/driazati/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/driazati/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/driazati/subscriptions",
            "organizations_url": "https://api.github.com/users/driazati/orgs",
            "repos_url": "https://api.github.com/users/driazati/repos",
            "events_url": "https://api.github.com/users/driazati/events{/privacy}",
            "received_events_url": "https://api.github.com/users/driazati/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            },
            {
                "id": 1304335025,
                "node_id": "MDU6TGFiZWwxMzA0MzM1MDI1",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/small",
                "name": "small",
                "color": "fbca04",
                "default": false,
                "description": "We think this is a small issue to fix. Consider knocking off high priority small issues"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "jansel",
            "id": 533820,
            "node_id": "MDQ6VXNlcjUzMzgyMA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/533820?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jansel",
            "html_url": "https://github.com/jansel",
            "followers_url": "https://api.github.com/users/jansel/followers",
            "following_url": "https://api.github.com/users/jansel/following{/other_user}",
            "gists_url": "https://api.github.com/users/jansel/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jansel/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jansel/subscriptions",
            "organizations_url": "https://api.github.com/users/jansel/orgs",
            "repos_url": "https://api.github.com/users/jansel/repos",
            "events_url": "https://api.github.com/users/jansel/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jansel/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "jansel",
                "id": 533820,
                "node_id": "MDQ6VXNlcjUzMzgyMA==",
                "avatar_url": "https://avatars.githubusercontent.com/u/533820?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/jansel",
                "html_url": "https://github.com/jansel",
                "followers_url": "https://api.github.com/users/jansel/followers",
                "following_url": "https://api.github.com/users/jansel/following{/other_user}",
                "gists_url": "https://api.github.com/users/jansel/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/jansel/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jansel/subscriptions",
                "organizations_url": "https://api.github.com/users/jansel/orgs",
                "repos_url": "https://api.github.com/users/jansel/repos",
                "events_url": "https://api.github.com/users/jansel/events{/privacy}",
                "received_events_url": "https://api.github.com/users/jansel/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 3,
        "created_at": "2019-10-07T20:59:04Z",
        "updated_at": "2020-05-16T00:55:25Z",
        "closed_at": "2020-05-16T00:55:25Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "This works in eager mode\r\n\r\n```python\r\n# this works\r\ndef fn(x):\r\n    a = zeros_like(x, dtype=torch.uint8)\r\n    a[torch.tensor(0)] = torch.tensor(2)\r\n    return a\r\n\r\n# this works\r\ndef fn(x):\r\n    a = zeros_like(x, dtype=torch.uint8)\r\n    a[0] = 2\r\n    return a\r\n\r\n# this  doesn't work\r\ndef fn(x):\r\n    a = zeros_like(x, dtype=torch.uint8)\r\n    a[torch.tensor(0)] = 2\r\n    return a\r\n\r\nx = torch.jit.script(fn)\r\n```\n\ncc @suo",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/27493/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/27493/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/26884",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/26884/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/26884/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/26884/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/26884",
        "id": 498775602,
        "node_id": "MDU6SXNzdWU0OTg3NzU2MDI=",
        "number": 26884,
        "title": "[jit] training attribute broken in recursive script",
        "user": {
            "login": "tamas-the-sorcerer",
            "id": 55833749,
            "node_id": "MDQ6VXNlcjU1ODMzNzQ5",
            "avatar_url": "https://avatars.githubusercontent.com/u/55833749?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tamas-the-sorcerer",
            "html_url": "https://github.com/tamas-the-sorcerer",
            "followers_url": "https://api.github.com/users/tamas-the-sorcerer/followers",
            "following_url": "https://api.github.com/users/tamas-the-sorcerer/following{/other_user}",
            "gists_url": "https://api.github.com/users/tamas-the-sorcerer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tamas-the-sorcerer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tamas-the-sorcerer/subscriptions",
            "organizations_url": "https://api.github.com/users/tamas-the-sorcerer/orgs",
            "repos_url": "https://api.github.com/users/tamas-the-sorcerer/repos",
            "events_url": "https://api.github.com/users/tamas-the-sorcerer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tamas-the-sorcerer/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 443484135,
                "node_id": "MDU6TGFiZWw0NDM0ODQxMzU=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/high%20priority",
                "name": "high priority",
                "color": "F22613",
                "default": false,
                "description": null
            },
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "driazati",
            "id": 9407960,
            "node_id": "MDQ6VXNlcjk0MDc5NjA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9407960?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/driazati",
            "html_url": "https://github.com/driazati",
            "followers_url": "https://api.github.com/users/driazati/followers",
            "following_url": "https://api.github.com/users/driazati/following{/other_user}",
            "gists_url": "https://api.github.com/users/driazati/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/driazati/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/driazati/subscriptions",
            "organizations_url": "https://api.github.com/users/driazati/orgs",
            "repos_url": "https://api.github.com/users/driazati/repos",
            "events_url": "https://api.github.com/users/driazati/events{/privacy}",
            "received_events_url": "https://api.github.com/users/driazati/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "driazati",
                "id": 9407960,
                "node_id": "MDQ6VXNlcjk0MDc5NjA=",
                "avatar_url": "https://avatars.githubusercontent.com/u/9407960?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/driazati",
                "html_url": "https://github.com/driazati",
                "followers_url": "https://api.github.com/users/driazati/followers",
                "following_url": "https://api.github.com/users/driazati/following{/other_user}",
                "gists_url": "https://api.github.com/users/driazati/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/driazati/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/driazati/subscriptions",
                "organizations_url": "https://api.github.com/users/driazati/orgs",
                "repos_url": "https://api.github.com/users/driazati/repos",
                "events_url": "https://api.github.com/users/driazati/events{/privacy}",
                "received_events_url": "https://api.github.com/users/driazati/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": {
            "url": "https://api.github.com/repos/pytorch/pytorch/milestones/10",
            "html_url": "https://github.com/pytorch/pytorch/milestone/10",
            "labels_url": "https://api.github.com/repos/pytorch/pytorch/milestones/10/labels",
            "id": 4628385,
            "node_id": "MDk6TWlsZXN0b25lNDYyODM4NQ==",
            "number": 10,
            "title": "1.3",
            "description": "",
            "creator": {
                "login": "soumith",
                "id": 1310570,
                "node_id": "MDQ6VXNlcjEzMTA1NzA=",
                "avatar_url": "https://avatars.githubusercontent.com/u/1310570?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/soumith",
                "html_url": "https://github.com/soumith",
                "followers_url": "https://api.github.com/users/soumith/followers",
                "following_url": "https://api.github.com/users/soumith/following{/other_user}",
                "gists_url": "https://api.github.com/users/soumith/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/soumith/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/soumith/subscriptions",
                "organizations_url": "https://api.github.com/users/soumith/orgs",
                "repos_url": "https://api.github.com/users/soumith/repos",
                "events_url": "https://api.github.com/users/soumith/events{/privacy}",
                "received_events_url": "https://api.github.com/users/soumith/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 1,
            "closed_issues": 143,
            "state": "closed",
            "created_at": "2019-09-04T00:10:17Z",
            "updated_at": "2022-05-18T02:12:29Z",
            "due_on": null,
            "closed_at": "2019-10-25T19:38:18Z"
        },
        "comments": 6,
        "created_at": "2019-09-26T09:41:41Z",
        "updated_at": "2019-10-07T20:53:12Z",
        "closed_at": "2019-10-07T20:53:11Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\nthe model was scripted in eval mode and then saved with torch.jit.save. \r\ntorch.jit.load loads the model in training mode. \r\nthis is a problem, because in training mode dropouts are enabled, and also batchnorm needs to be adjusted. we expected torch.jit.load to load the model in the mode it was saved in. please fix this. \r\n\r\n## To Reproduce\r\n\r\n**Steps to reproduce the behavior:**\r\n```\r\ntamas@super-duper-compute-machine:~/JUPYTER_LAB$ ipython\r\nPython 3.7.3 (default, Mar 27 2019, 22:11:17) \r\nType 'copyright', 'credits' or 'license' for more information\r\nIPython 7.6.1 -- An enhanced Interactive Python. Type '?' for help.\r\n\r\nIn [1]: import torch                                                                                                                              \r\n\r\nIn [2]: torch.__version__                                                                                                                         \r\nOut[2]: '1.2.0'\r\n\r\nIn [3]: class MyCell(torch.nn.Module): \r\n   ...:     def __init__(self): \r\n   ...:         super(MyCell, self).__init__() \r\n   ...:         self.linear = torch.nn.Linear(4, 4) \r\n   ...:  \r\n   ...:     def forward(self, x, h): \r\n   ...:         new_h = torch.tanh(self.linear(x) + h) \r\n   ...:         return new_h, new_h \r\n   ...:  \r\n   ...: model = MyCell() \r\n   ...: x, h = torch.rand(3, 4), torch.rand(3, 4) \r\n   ...: scripted_model = torch.jit.script(model, (x, h))                                                                                          \r\n/home/tamas/anaconda3/envs/cuda/lib/python3.7/site-packages/torch/jit/__init__.py:1158: UserWarning: `optimize` is deprecated and has no effect. Use `with torch.jit.optimized_execution() instead\r\n  warnings.warn(\"`optimize` is deprecated and has no effect. Use `with torch.jit.optimized_execution() instead\")\r\n\r\nIn [4]: scripted_model.code                                                                                                                       \r\nOut[4]: 'def forward(self,\\n    x: Tensor,\\n    h: Tensor) -> Tuple[Tensor, Tensor]:\\n  _0 = self.linear\\n  _1 = _0.weight\\n  _2 = _0.bias\\n  if torch.eq(torch.dim(x), 2):\\n    _3 = torch.__isnot__(_2, None)\\n  else:\\n    _3 = False\\n  if _3:\\n    bias = ops.prim.unchecked_unwrap_optional(_2)\\n    ret = torch.addmm(bias, x, torch.t(_1), beta=1, alpha=1)\\n  else:\\n    output = torch.matmul(x, torch.t(_1))\\n    if torch.__isnot__(_2, None):\\n      bias0 = ops.prim.unchecked_unwrap_optional(_2)\\n      output0 = torch.add_(output, bias0, alpha=1)\\n    else:\\n      output0 = output\\n    ret = output0\\n  new_h = torch.tanh(torch.add(ret, h, alpha=1))\\n  return (new_h, new_h)\\n'\r\n\r\nIn [5]: scripted_model.training                                                                                                                   \r\nOut[5]: True\r\n\r\nIn [6]: scripted_model.eval()                                                                                                                     \r\nOut[6]: \r\nWeakScriptModuleProxy(\r\n  (linear): WeakScriptModuleProxy()\r\n)\r\n\r\nIn [7]: scripted_model.training                                                                                                                   \r\nOut[7]: False\r\n\r\nIn [8]: torch.jit.save(scripted_model, 'temp.pt')                                                                                                 \r\n\r\nIn [9]: m = torch.jit.load('temp.pt')                                                                                                             \r\n\r\nIn [10]: m.training                                                                                                                               \r\nOut[10]: True\r\n```\r\n\r\ncc @ezyang @gchanan @zou3519 @suo",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/26884/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/26884/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/26792",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/26792/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/26792/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/26792/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/26792",
        "id": 498164596,
        "node_id": "MDU6SXNzdWU0OTgxNjQ1OTY=",
        "number": 26792,
        "title": "torch.jit.script cannot compile forward() calling a @staticmethod annotated method",
        "user": {
            "login": "torshie",
            "id": 1214465,
            "node_id": "MDQ6VXNlcjEyMTQ0NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1214465?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/torshie",
            "html_url": "https://github.com/torshie",
            "followers_url": "https://api.github.com/users/torshie/followers",
            "following_url": "https://api.github.com/users/torshie/following{/other_user}",
            "gists_url": "https://api.github.com/users/torshie/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/torshie/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/torshie/subscriptions",
            "organizations_url": "https://api.github.com/users/torshie/orgs",
            "repos_url": "https://api.github.com/users/torshie/repos",
            "events_url": "https://api.github.com/users/torshie/events{/privacy}",
            "received_events_url": "https://api.github.com/users/torshie/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            },
            {
                "id": 1594104112,
                "node_id": "MDU6TGFiZWwxNTk0MTA0MTEy",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/jit-backlog",
                "name": "jit-backlog",
                "color": "eacf96",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "driazati",
            "id": 9407960,
            "node_id": "MDQ6VXNlcjk0MDc5NjA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9407960?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/driazati",
            "html_url": "https://github.com/driazati",
            "followers_url": "https://api.github.com/users/driazati/followers",
            "following_url": "https://api.github.com/users/driazati/following{/other_user}",
            "gists_url": "https://api.github.com/users/driazati/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/driazati/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/driazati/subscriptions",
            "organizations_url": "https://api.github.com/users/driazati/orgs",
            "repos_url": "https://api.github.com/users/driazati/repos",
            "events_url": "https://api.github.com/users/driazati/events{/privacy}",
            "received_events_url": "https://api.github.com/users/driazati/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "driazati",
                "id": 9407960,
                "node_id": "MDQ6VXNlcjk0MDc5NjA=",
                "avatar_url": "https://avatars.githubusercontent.com/u/9407960?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/driazati",
                "html_url": "https://github.com/driazati",
                "followers_url": "https://api.github.com/users/driazati/followers",
                "following_url": "https://api.github.com/users/driazati/following{/other_user}",
                "gists_url": "https://api.github.com/users/driazati/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/driazati/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/driazati/subscriptions",
                "organizations_url": "https://api.github.com/users/driazati/orgs",
                "repos_url": "https://api.github.com/users/driazati/repos",
                "events_url": "https://api.github.com/users/driazati/events{/privacy}",
                "received_events_url": "https://api.github.com/users/driazati/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-09-25T09:31:13Z",
        "updated_at": "2019-10-16T17:36:49Z",
        "closed_at": "2019-10-16T17:36:49Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\nThe following code could reproduce the problem:\r\n\r\n    import torch.nn\r\n    import torch.jit\r\n        \r\n    class Bug(torch.nn.Module):\r\n        @staticmethod\r\n        def foo():\r\n            pass\r\n    \r\n        def forward(self):\r\n            Bug.foo()\r\n            return torch.tensor([0])\r\n    \r\n    \r\n    bug = Bug()\r\n    torch.jit.script(bug)\r\n\r\n<!-- If you have a code sample, error messages, stack traces, please provide it here as well -->\r\n```\r\nTraceback (most recent call last):\r\n  File \"bug.py\", line 15, in <module>\r\n    torch.jit.script(bug)\r\n  File \"/home/d00413986/.local/share/virtualenvs/Code-ekJV9_xh/lib/python3.6/site-packages/torch/jit/__init__.py\", line 1162, in script\r\n    return _convert_to_script_module(obj)\r\n  File \"/home/d00413986/.local/share/virtualenvs/Code-ekJV9_xh/lib/python3.6/site-packages/torch/jit/__init__.py\", line 1812, in _convert_to_script_module\r\n    return WeakScriptModuleProxy(mod, stubs)\r\n  File \"/home/d00413986/.local/share/virtualenvs/Code-ekJV9_xh/lib/python3.6/site-packages/torch/jit/__init__.py\", line 1386, in init_then_register\r\n    original_init(self, *args, **kwargs)\r\n  File \"/home/d00413986/.local/share/virtualenvs/Code-ekJV9_xh/lib/python3.6/site-packages/torch/jit/__init__.py\", line 1736, in __init__\r\n    _create_methods_from_stubs(self, stubs)\r\n  File \"/home/d00413986/.local/share/virtualenvs/Code-ekJV9_xh/lib/python3.6/site-packages/torch/jit/__init__.py\", line 1347, in _create_methods_from_stubs\r\n    self._c._create_methods(self, defs, rcbs, defaults)\r\n  File \"/home/d00413986/.local/share/virtualenvs/Code-ekJV9_xh/lib/python3.6/site-packages/torch/jit/__init__.py\", line 1058, in _compile_and_register_class\r\n    ast = get_jit_class_def(obj, obj.__name__)\r\n  File \"/home/d00413986/.local/share/virtualenvs/Code-ekJV9_xh/lib/python3.6/site-packages/torch/jit/frontend.py\", line 143, in get_jit_class_def\r\n    self_name=self_name) for method in methods]\r\n  File \"/home/d00413986/.local/share/virtualenvs/Code-ekJV9_xh/lib/python3.6/site-packages/torch/jit/frontend.py\", line 143, in <listcomp>\r\n    self_name=self_name) for method in methods]\r\n  File \"/home/d00413986/.local/share/virtualenvs/Code-ekJV9_xh/lib/python3.6/site-packages/torch/jit/frontend.py\", line 166, in get_jit_def\r\n    return build_def(ctx, py_ast.body[0], type_line, self_name)\r\n  File \"/home/d00413986/.local/share/virtualenvs/Code-ekJV9_xh/lib/python3.6/site-packages/torch/jit/frontend.py\", line 195, in build_def\r\n    param_list = build_param_list(ctx, py_def.args, self_name)\r\n  File \"/home/d00413986/.local/share/virtualenvs/Code-ekJV9_xh/lib/python3.6/site-packages/torch/jit/frontend.py\", line 215, in build_param_list\r\n    raise ValueError(_vararg_kwarg_err)\r\nValueError: Compiled functions can't take variable number of arguments or use keyword-only arguments with defaults\r\n```\r\n## Expected behavior\r\nCode compiles\r\n<!-- A clear and concise description of what you expected to happen. -->\r\n\r\n## Environment\r\n\r\nPyTorch version: 1.2.0\r\nIs debug build: No\r\nCUDA used to build PyTorch: 10.0.130\r\n\r\nOS: Ubuntu 18.04 LTS\r\nGCC version: (Ubuntu 7.4.0-1ubuntu1~18.04) 7.4.0\r\nCMake version: version 3.10.2\r\n\r\nPython version: 3.6\r\nIs CUDA available: Yes\r\nCUDA runtime version: Could not collect\r\nGPU models and configuration: \r\nGPU 0: TITAN Xp\r\nGPU 1: TITAN Xp\r\nGPU 2: TITAN Xp\r\nGPU 3: TITAN Xp\r\n\r\nNvidia driver version: 418.43\r\ncuDNN version: /usr/local/cuda-10.0/lib64/libcudnn.so.7.4.2\r\n\r\nVersions of relevant libraries:\r\n[pip3] numpy==1.17.2\r\n[pip3] pytorch-transformers==1.2.0\r\n[pip3] torch==1.2.0\r\n[conda] Could not collect\r\n\r\n## Additional context\r\n\r\n<!-- Add any other context about the problem here. -->\r\n\r\n\r\ncc @suo",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/26792/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/26792/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/26693",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/26693/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/26693/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/26693/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/26693",
        "id": 497389987,
        "node_id": "MDU6SXNzdWU0OTczODk5ODc=",
        "number": 26693,
        "title": "[jit] `zip` and `enumerate` can't be used in a list comprehension",
        "user": {
            "login": "driazati",
            "id": 9407960,
            "node_id": "MDQ6VXNlcjk0MDc5NjA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9407960?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/driazati",
            "html_url": "https://github.com/driazati",
            "followers_url": "https://api.github.com/users/driazati/followers",
            "following_url": "https://api.github.com/users/driazati/following{/other_user}",
            "gists_url": "https://api.github.com/users/driazati/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/driazati/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/driazati/subscriptions",
            "organizations_url": "https://api.github.com/users/driazati/orgs",
            "repos_url": "https://api.github.com/users/driazati/repos",
            "events_url": "https://api.github.com/users/driazati/events{/privacy}",
            "received_events_url": "https://api.github.com/users/driazati/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "eellison",
            "id": 11477974,
            "node_id": "MDQ6VXNlcjExNDc3OTc0",
            "avatar_url": "https://avatars.githubusercontent.com/u/11477974?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eellison",
            "html_url": "https://github.com/eellison",
            "followers_url": "https://api.github.com/users/eellison/followers",
            "following_url": "https://api.github.com/users/eellison/following{/other_user}",
            "gists_url": "https://api.github.com/users/eellison/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eellison/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eellison/subscriptions",
            "organizations_url": "https://api.github.com/users/eellison/orgs",
            "repos_url": "https://api.github.com/users/eellison/repos",
            "events_url": "https://api.github.com/users/eellison/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eellison/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "eellison",
                "id": 11477974,
                "node_id": "MDQ6VXNlcjExNDc3OTc0",
                "avatar_url": "https://avatars.githubusercontent.com/u/11477974?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/eellison",
                "html_url": "https://github.com/eellison",
                "followers_url": "https://api.github.com/users/eellison/followers",
                "following_url": "https://api.github.com/users/eellison/following{/other_user}",
                "gists_url": "https://api.github.com/users/eellison/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/eellison/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eellison/subscriptions",
                "organizations_url": "https://api.github.com/users/eellison/orgs",
                "repos_url": "https://api.github.com/users/eellison/repos",
                "events_url": "https://api.github.com/users/eellison/events{/privacy}",
                "received_events_url": "https://api.github.com/users/eellison/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2019-09-24T00:23:29Z",
        "updated_at": "2019-09-25T22:41:44Z",
        "closed_at": "2019-09-25T22:41:44Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "We should unify this with our normal list creating code for the reasonable cases\n\ncc @suo",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/26693/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/26693/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/26437",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/26437/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/26437/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/26437/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/26437",
        "id": 495497178,
        "node_id": "MDU6SXNzdWU0OTU0OTcxNzg=",
        "number": 26437,
        "title": "[JIT] Named Tuple annotation doesn't work with annotations.py",
        "user": {
            "login": "eellison",
            "id": 11477974,
            "node_id": "MDQ6VXNlcjExNDc3OTc0",
            "avatar_url": "https://avatars.githubusercontent.com/u/11477974?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eellison",
            "html_url": "https://github.com/eellison",
            "followers_url": "https://api.github.com/users/eellison/followers",
            "following_url": "https://api.github.com/users/eellison/following{/other_user}",
            "gists_url": "https://api.github.com/users/eellison/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eellison/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eellison/subscriptions",
            "organizations_url": "https://api.github.com/users/eellison/orgs",
            "repos_url": "https://api.github.com/users/eellison/repos",
            "events_url": "https://api.github.com/users/eellison/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eellison/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2019-09-18T23:15:04Z",
        "updated_at": "2019-09-20T17:53:36Z",
        "closed_at": "2019-09-20T17:53:36Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\nIf annotation is accessed through annotations.py, then an exception is raised. `annotations.py` pathway is used in a lot of script code and should work with named tuples. \r\n\r\n## To Reproduce\r\n \r\n```\r\n_GoogLeNetOutputs = namedtuple('GoogLeNetOutputs', ['logits', 'aux_logits2', 'aux_logits1'])\r\ndef fn(x):\r\n    # type: (Tensor) -> _GoogLeNetOutputs\r\n    return _GoogleNetOutputs(x, x, x)\r\n\r\nprint(torch.jit.annotations.get_signature(fn))\r\n```\r\n\r\n> Traceback (most recent call last):\r\n  File \"test/test_jit.py\", line 14745, in test_named_tuple_py2\r\n    print(torch.jit.annotations.get_signature(fn))\r\n  File \"/home/eellison/local/miniconda/envs/ninja/lib/python3.7/site-packages/torch/jit/annotations.py\", line 59, in get_signature\r\n    return parse_type_line(type_line)\r\n  File \"/home/eellison/local/miniconda/envs/ninja/lib/python3.7/site-packages/torch/jit/annotations.py\", line 109, in parse_type_line\r\n    raise RuntimeError(\"Failed to parse the return type of a type annotation: {}\".format(str(e)))\r\nRuntimeError: Failed to parse the return type of a type annotation: name '_GoogLeNetOutputs' is not defined\r\n\r\n\n\ncc @suo",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/26437/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/26437/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/26067",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/26067/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/26067/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/26067/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/26067",
        "id": 492515123,
        "node_id": "MDU6SXNzdWU0OTI1MTUxMjM=",
        "number": 26067,
        "title": "TorchScript doesn't handle submodule being None",
        "user": {
            "login": "dzhulgakov",
            "id": 17890620,
            "node_id": "MDQ6VXNlcjE3ODkwNjIw",
            "avatar_url": "https://avatars.githubusercontent.com/u/17890620?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dzhulgakov",
            "html_url": "https://github.com/dzhulgakov",
            "followers_url": "https://api.github.com/users/dzhulgakov/followers",
            "following_url": "https://api.github.com/users/dzhulgakov/following{/other_user}",
            "gists_url": "https://api.github.com/users/dzhulgakov/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dzhulgakov/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dzhulgakov/subscriptions",
            "organizations_url": "https://api.github.com/users/dzhulgakov/orgs",
            "repos_url": "https://api.github.com/users/dzhulgakov/repos",
            "events_url": "https://api.github.com/users/dzhulgakov/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dzhulgakov/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1594104112,
                "node_id": "MDU6TGFiZWwxNTk0MTA0MTEy",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/jit-backlog",
                "name": "jit-backlog",
                "color": "eacf96",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "driazati",
            "id": 9407960,
            "node_id": "MDQ6VXNlcjk0MDc5NjA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9407960?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/driazati",
            "html_url": "https://github.com/driazati",
            "followers_url": "https://api.github.com/users/driazati/followers",
            "following_url": "https://api.github.com/users/driazati/following{/other_user}",
            "gists_url": "https://api.github.com/users/driazati/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/driazati/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/driazati/subscriptions",
            "organizations_url": "https://api.github.com/users/driazati/orgs",
            "repos_url": "https://api.github.com/users/driazati/repos",
            "events_url": "https://api.github.com/users/driazati/events{/privacy}",
            "received_events_url": "https://api.github.com/users/driazati/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "driazati",
                "id": 9407960,
                "node_id": "MDQ6VXNlcjk0MDc5NjA=",
                "avatar_url": "https://avatars.githubusercontent.com/u/9407960?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/driazati",
                "html_url": "https://github.com/driazati",
                "followers_url": "https://api.github.com/users/driazati/followers",
                "following_url": "https://api.github.com/users/driazati/following{/other_user}",
                "gists_url": "https://api.github.com/users/driazati/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/driazati/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/driazati/subscriptions",
                "organizations_url": "https://api.github.com/users/driazati/orgs",
                "repos_url": "https://api.github.com/users/driazati/repos",
                "events_url": "https://api.github.com/users/driazati/events{/privacy}",
                "received_events_url": "https://api.github.com/users/driazati/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 3,
        "created_at": "2019-09-11T23:37:20Z",
        "updated_at": "2020-01-27T07:05:52Z",
        "closed_at": "2020-01-27T07:05:52Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\nIf one of the submodules is None, TorchScript doesn't recognize it as an attribute, unless explicitly specified in `__constants__` lists.\r\n\r\nObviously, if it's just a plain attribute, it might be necessary to additionally annotate it. But it doesn't work even if explicit `add_module` call is made.\r\n\r\n## To Reproduce\r\n\r\n```python\r\nclass MyModule(torch.nn.Module):\r\n    # __constants__ = ['sub'] # adding just this line works\r\n    def __init__(self, sub):\r\n        super(MyModule, self).__init__()\r\n        # either of the following lines fails\r\n        self.add_module('sub', sub)\r\n        # or\r\n        self.sub = sub\r\n    \r\n    def forward(self, x):\r\n        x = x.relu()\r\n        if self.sub is not None:\r\n            x = self.sub(x)\r\n        return x+1\r\n\r\nm1 = MyModule(torch.nn.ReLU())\r\nm2 = MyModule(None)\r\nprint(m1(torch.rand(5)))\r\nprint(m2(torch.rand(5)))\r\nprint(torch.jit.script(m1).code) # succeeds\r\nprint(torch.jit.script(m2).code) # fails\r\n```\r\nError:\r\n```\r\nRuntimeError: \r\nmodule has no attribute 'sub':\r\nat <ipython-input-33-82f6eee81215>:12:11\r\n    def forward(self, x):\r\n        x = x.relu()\r\n        if self.sub is not None:\r\n           ~~~~~~~~ <--- HERE\r\n            x = self.sub(x)\r\n        return x+1\r\n```\r\n\r\n## Expected behavior\r\n\r\n<!-- A clear and concise description of what you expected to happen. -->\r\n\r\n## Additional context\r\n\r\nIt's a pretty common pattern, e.g. in TorchVision: https://github.com/pytorch/vision/blob/a129b6b86a75f2d1fc80055f2cd0fae63efc0d2d/torchvision/models/resnet.py#L110\n\ncc @suo",
        "closed_by": {
            "login": "suo",
            "id": 1617424,
            "node_id": "MDQ6VXNlcjE2MTc0MjQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1617424?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/suo",
            "html_url": "https://github.com/suo",
            "followers_url": "https://api.github.com/users/suo/followers",
            "following_url": "https://api.github.com/users/suo/following{/other_user}",
            "gists_url": "https://api.github.com/users/suo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/suo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/suo/subscriptions",
            "organizations_url": "https://api.github.com/users/suo/orgs",
            "repos_url": "https://api.github.com/users/suo/repos",
            "events_url": "https://api.github.com/users/suo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/suo/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/26067/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/26067/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/26036",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/26036/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/26036/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/26036/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/26036",
        "id": 492408358,
        "node_id": "MDU6SXNzdWU0OTI0MDgzNTg=",
        "number": 26036,
        "title": "[jit] Bool list isn't being created in python -> script conversion",
        "user": {
            "login": "driazati",
            "id": 9407960,
            "node_id": "MDQ6VXNlcjk0MDc5NjA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9407960?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/driazati",
            "html_url": "https://github.com/driazati",
            "followers_url": "https://api.github.com/users/driazati/followers",
            "following_url": "https://api.github.com/users/driazati/following{/other_user}",
            "gists_url": "https://api.github.com/users/driazati/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/driazati/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/driazati/subscriptions",
            "organizations_url": "https://api.github.com/users/driazati/orgs",
            "repos_url": "https://api.github.com/users/driazati/repos",
            "events_url": "https://api.github.com/users/driazati/events{/privacy}",
            "received_events_url": "https://api.github.com/users/driazati/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "smessmer",
            "id": 2373925,
            "node_id": "MDQ6VXNlcjIzNzM5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2373925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/smessmer",
            "html_url": "https://github.com/smessmer",
            "followers_url": "https://api.github.com/users/smessmer/followers",
            "following_url": "https://api.github.com/users/smessmer/following{/other_user}",
            "gists_url": "https://api.github.com/users/smessmer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/smessmer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/smessmer/subscriptions",
            "organizations_url": "https://api.github.com/users/smessmer/orgs",
            "repos_url": "https://api.github.com/users/smessmer/repos",
            "events_url": "https://api.github.com/users/smessmer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/smessmer/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "smessmer",
                "id": 2373925,
                "node_id": "MDQ6VXNlcjIzNzM5MjU=",
                "avatar_url": "https://avatars.githubusercontent.com/u/2373925?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/smessmer",
                "html_url": "https://github.com/smessmer",
                "followers_url": "https://api.github.com/users/smessmer/followers",
                "following_url": "https://api.github.com/users/smessmer/following{/other_user}",
                "gists_url": "https://api.github.com/users/smessmer/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/smessmer/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/smessmer/subscriptions",
                "organizations_url": "https://api.github.com/users/smessmer/orgs",
                "repos_url": "https://api.github.com/users/smessmer/repos",
                "events_url": "https://api.github.com/users/smessmer/events{/privacy}",
                "received_events_url": "https://api.github.com/users/smessmer/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 2,
        "created_at": "2019-09-11T18:52:55Z",
        "updated_at": "2019-09-17T21:50:45Z",
        "closed_at": "2019-09-17T21:50:45Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "We should probably just delete `BoolList` entirely since it's not used\r\n\r\n```python\r\n@torch.jit.script\r\ndef fn(x: List[bool]):\r\n    x.clear()\r\n\r\nfn([True, False])\r\n```\r\n\r\n```\r\nRuntimeError: isBoolList() INTERNAL ASSERT FAILED at ../aten/src/ATen/core/ivalue_inl.h:551, please report a bug to PyTorch. Expected BoolList but got GenericList\r\nThe above operation failed in interpreter, with the following stack trace:\r\nat <string>:3:4\r\ndef bool_list(x):\r\n    # type: (List[bool])\r\n    x.clear()\r\n    ~~~~~~~ <--- HERE\r\n```\r\n\r\ncc @suo",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/26036/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/26036/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/25801",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/25801/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/25801/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/25801/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/25801",
        "id": 490523668,
        "node_id": "MDU6SXNzdWU0OTA1MjM2Njg=",
        "number": 25801,
        "title": "[jit] Missing source highlight error",
        "user": {
            "login": "driazati",
            "id": 9407960,
            "node_id": "MDQ6VXNlcjk0MDc5NjA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9407960?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/driazati",
            "html_url": "https://github.com/driazati",
            "followers_url": "https://api.github.com/users/driazati/followers",
            "following_url": "https://api.github.com/users/driazati/following{/other_user}",
            "gists_url": "https://api.github.com/users/driazati/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/driazati/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/driazati/subscriptions",
            "organizations_url": "https://api.github.com/users/driazati/orgs",
            "repos_url": "https://api.github.com/users/driazati/repos",
            "events_url": "https://api.github.com/users/driazati/events{/privacy}",
            "received_events_url": "https://api.github.com/users/driazati/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1150417147,
                "node_id": "MDU6TGFiZWwxMTUwNDE3MTQ3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/good%20first%20issue",
                "name": "good first issue",
                "color": "34c182",
                "default": true,
                "description": ""
            },
            {
                "id": 1594104112,
                "node_id": "MDU6TGFiZWwxNTk0MTA0MTEy",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/jit-backlog",
                "name": "jit-backlog",
                "color": "eacf96",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2019-09-06T21:08:25Z",
        "updated_at": "2019-10-16T17:39:48Z",
        "closed_at": "2019-10-16T17:39:47Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "```\r\n@torch.jit.script\r\ndef fn(x):\r\n    # type: (List[int], int) -> bool\r\n    return max(x)\r\n```\r\n\r\n\n\ncc @suo",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/25801/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/25801/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/25360",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/25360/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/25360/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/25360/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/25360",
        "id": 486617488,
        "node_id": "MDU6SXNzdWU0ODY2MTc0ODg=",
        "number": 25360,
        "title": "[JIT] JIT frontend uses len(op_token) before checking for None",
        "user": {
            "login": "HapeMask",
            "id": 1616684,
            "node_id": "MDQ6VXNlcjE2MTY2ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1616684?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/HapeMask",
            "html_url": "https://github.com/HapeMask",
            "followers_url": "https://api.github.com/users/HapeMask/followers",
            "following_url": "https://api.github.com/users/HapeMask/following{/other_user}",
            "gists_url": "https://api.github.com/users/HapeMask/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/HapeMask/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/HapeMask/subscriptions",
            "organizations_url": "https://api.github.com/users/HapeMask/orgs",
            "repos_url": "https://api.github.com/users/HapeMask/repos",
            "events_url": "https://api.github.com/users/HapeMask/events{/privacy}",
            "received_events_url": "https://api.github.com/users/HapeMask/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2019-08-28T21:26:46Z",
        "updated_at": "2019-09-03T18:16:41Z",
        "closed_at": "2019-09-03T18:16:41Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\nIf you try to script a module with an unsupported unary op (in this case, `Invert` applied to a tensor like `~X`), `build_UnaryOp()` tries to use `len(op_token)` before checking if the token is None. Instead of printing the actual error message, it then fails with a ValueError:\r\n\r\n```\r\n...\r\n\r\n\", line 504, in build_UnaryOp                                                                                     \r\n    r = ctx.make_range(expr.lineno, expr.col_offset, expr.col_offset + len(op_token))                             \r\nTypeError: object of type 'NoneType' has no len()\r\n```\r\n\r\nIf I add a check for None and use 0 instead of `len(op_token)` in that case, I get the real error which says that Invert is not supported :`torch.jit.frontend.NotSupportedError: unsupported unary operator: Invert`\r\n\r\nFollowup question: is that expected? If I replace `~` with `th.bitwise_not()` then it works just fine.\r\n\r\n## To Reproduce\r\n\r\n```python\r\nimport torch as th                                                                                                \r\n                                                                                                                  \r\nclass TestMod(th.nn.Module):                                                                                      \r\n    def __init__(self):                                                                                           \r\n        super().__init__()                                                                                        \r\n        self.register_buffer(\"bool_tensor\", th.zeros(3,).bool())                                                  \r\n                                                                                                                  \r\n    def forward(self, x):                                                                                         \r\n        return x[~self.bool_tensor]                                                                               \r\n                                                                                                                  \r\nmod = TestMod()                                                                                                   \r\nsmod = th.jit.script(mod)\r\n```\r\n\r\nRun the above script.\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"test.py\", line 12, in <module>\r\n    smod = th.jit.script(mod)\r\n  File \"/mnt/home/gbschwartz/anaconda/envs/py3_newpytorch_cuda10/lib/python3.7/site-packages/torch/jit/__init__.py\", line 1161, in script\r\n    return torch.jit.torch.jit._recursive.recursive_script(obj)                                                  \r\n  File \"/mnt/home/gbschwartz/anaconda/envs/py3_newpytorch_cuda10/lib/python3.7/site-packages/torch/jit/_recursive.py\", line 133, in recursive_script\r\n    stubs = list(map(make_stub, methods))\r\n  File \"/mnt/home/gbschwartz/anaconda/envs/py3_newpytorch_cuda10/lib/python3.7/site-packages/torch/jit/_recursive.py\", line 131, in make_stub\r\n    return torch.jit.script_method(func, _jit_internal.createResolutionCallbackFromClosure(func))                \r\n  File \"/mnt/home/gbschwartz/anaconda/envs/py3_newpytorch_cuda10/lib/python3.7/site-packages/torch/jit/__init__.py\", line 1226, in script_method\r\n    ast = get_jit_def(fn, self_name=\"ScriptModule\")\r\n  File \"/mnt/home/gbschwartz/anaconda/envs/py3_newpytorch_cuda10/lib/python3.7/site-packages/torch/jit/frontend.py\", line 166, in get_jit_def\r\n    return build_def(ctx, py_ast.body[0], type_line, self_name)                                                  \r\n  File \"/mnt/home/gbschwartz/anaconda/envs/py3_newpytorch_cuda10/lib/python3.7/site-packages/torch/jit/frontend.py\", line 206, in build_def\r\n    build_stmts(ctx, body))\r\n  File \"/mnt/home/gbschwartz/anaconda/envs/py3_newpytorch_cuda10/lib/python3.7/site-packages/torch/jit/frontend.py\", line 122, in build_stmts\r\n    stmts = [build_stmt(ctx, s) for s in stmts]\r\n  File \"/mnt/home/gbschwartz/anaconda/envs/py3_newpytorch_cuda10/lib/python3.7/site-packages/torch/jit/frontend.py\", line 122, in <listcomp>\r\n    stmts = [build_stmt(ctx, s) for s in stmts]\r\n  File \"/mnt/home/gbschwartz/anaconda/envs/py3_newpytorch_cuda10/lib/python3.7/site-packages/torch/jit/frontend.py\", line 182, in __call__\r\n    return method(ctx, node)\r\n  File \"/mnt/home/gbschwartz/anaconda/envs/py3_newpytorch_cuda10/lib/python3.7/site-packages/torch/jit/frontend.py\", line 298, in build_Return\r\n    return Return(r, None if stmt.value is None else build_expr(ctx, stmt.value))                                \r\n  File \"/mnt/home/gbschwartz/anaconda/envs/py3_newpytorch_cuda10/lib/python3.7/site-packages/torch/jit/frontend.py\", line 182, in __call__\r\n    return method(ctx, node)\r\n  File \"/mnt/home/gbschwartz/anaconda/envs/py3_newpytorch_cuda10/lib/python3.7/site-packages/torch/jit/frontend.py\", line 596, in build_Subscript\r\n    return Subscript(base, [build_expr(ctx, expr.slice.value)])                                                  \r\n  File \"/mnt/home/gbschwartz/anaconda/envs/py3_newpytorch_cuda10/lib/python3.7/site-packages/torch/jit/frontend.py\", line 182, in __call__\r\n    return method(ctx, node)\r\n  File \"/mnt/home/gbschwartz/anaconda/envs/py3_newpytorch_cuda10/lib/python3.7/site-packages/torch/jit/frontend.py\", line 503, in build_UnaryOp\r\n    r = ctx.make_range(expr.lineno, expr.col_offset, expr.col_offset + len(op_token))                            \r\nTypeError: object of type 'NoneType' has no len()\r\n```\r\n\r\n## Expected behavior\r\n\r\n```\r\n\", line 507, in build_UnaryOp                  \r\n    raise NotSupportedError(err_range, \"unsupported unary operator: \" + op.__name__)                              \r\ntorch.jit.frontend.NotSupportedError: unsupported unary operator: Invert\r\n:                           \r\nat test.py:9:18                                                                                                   \r\n    def forward(self, x):   \r\n        return x[~self.bool_tensor]                                              \r\n                 ~~~~~~~~~~ <--- HERE\r\n```\r\n\r\nIs what I get if I do the hack I described above, this  seems correct.\r\n\r\n## Environment\r\n\r\n - PyTorch Version (e.g., 1.0): '1.3.0.dev20190816'\r\n - OS (e.g., Linux): linux\r\n - How you installed PyTorch (`conda`, `pip`, source): conda (nightly)\r\n - Python version: 3.7.1\r\n - CUDA/cuDNN version: 10 / 7.6\r\n - GPU models and configuration: Titan RTX\r\n\r\ncc @suo",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/25360/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/25360/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/25135",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/25135/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/25135/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/25135/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/25135",
        "id": 484760302,
        "node_id": "MDU6SXNzdWU0ODQ3NjAzMDI=",
        "number": 25135,
        "title": "Negative step in index gives confusing error in JIT",
        "user": {
            "login": "Chillee",
            "id": 6355099,
            "node_id": "MDQ6VXNlcjYzNTUwOTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6355099?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Chillee",
            "html_url": "https://github.com/Chillee",
            "followers_url": "https://api.github.com/users/Chillee/followers",
            "following_url": "https://api.github.com/users/Chillee/following{/other_user}",
            "gists_url": "https://api.github.com/users/Chillee/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Chillee/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Chillee/subscriptions",
            "organizations_url": "https://api.github.com/users/Chillee/orgs",
            "repos_url": "https://api.github.com/users/Chillee/repos",
            "events_url": "https://api.github.com/users/Chillee/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Chillee/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 443484135,
                "node_id": "MDU6TGFiZWw0NDM0ODQxMzU=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/high%20priority",
                "name": "high priority",
                "color": "F22613",
                "default": false,
                "description": null
            },
            {
                "id": 466131885,
                "node_id": "MDU6TGFiZWw0NjYxMzE4ODU=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triage%20review",
                "name": "triage review",
                "color": "cc317c",
                "default": false,
                "description": ""
            },
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            },
            {
                "id": 1594104112,
                "node_id": "MDU6TGFiZWwxNTk0MTA0MTEy",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/jit-backlog",
                "name": "jit-backlog",
                "color": "eacf96",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "tugsbayasgalan",
            "id": 16603271,
            "node_id": "MDQ6VXNlcjE2NjAzMjcx",
            "avatar_url": "https://avatars.githubusercontent.com/u/16603271?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tugsbayasgalan",
            "html_url": "https://github.com/tugsbayasgalan",
            "followers_url": "https://api.github.com/users/tugsbayasgalan/followers",
            "following_url": "https://api.github.com/users/tugsbayasgalan/following{/other_user}",
            "gists_url": "https://api.github.com/users/tugsbayasgalan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tugsbayasgalan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tugsbayasgalan/subscriptions",
            "organizations_url": "https://api.github.com/users/tugsbayasgalan/orgs",
            "repos_url": "https://api.github.com/users/tugsbayasgalan/repos",
            "events_url": "https://api.github.com/users/tugsbayasgalan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tugsbayasgalan/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "tugsbayasgalan",
                "id": 16603271,
                "node_id": "MDQ6VXNlcjE2NjAzMjcx",
                "avatar_url": "https://avatars.githubusercontent.com/u/16603271?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/tugsbayasgalan",
                "html_url": "https://github.com/tugsbayasgalan",
                "followers_url": "https://api.github.com/users/tugsbayasgalan/followers",
                "following_url": "https://api.github.com/users/tugsbayasgalan/following{/other_user}",
                "gists_url": "https://api.github.com/users/tugsbayasgalan/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/tugsbayasgalan/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tugsbayasgalan/subscriptions",
                "organizations_url": "https://api.github.com/users/tugsbayasgalan/orgs",
                "repos_url": "https://api.github.com/users/tugsbayasgalan/repos",
                "events_url": "https://api.github.com/users/tugsbayasgalan/events{/privacy}",
                "received_events_url": "https://api.github.com/users/tugsbayasgalan/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-08-24T00:57:12Z",
        "updated_at": "2021-05-14T18:57:37Z",
        "closed_at": "2021-05-14T18:57:37Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "For\r\n```\r\ndef t():\r\n    x = [1,2,3]\r\n    x = x[::-1]\r\n    print(x)\r\n\r\ntorch.jit.script(t)()\r\n```\r\nit gives `IndexError: vector::_M_range_check: __n (which is 18446744073709551615) >= this->size() (which is 3)`\r\n\r\n@suo \n\ncc @ezyang @gchanan @zou3519 @bdhirsh @gmagogsfm @suo",
        "closed_by": {
            "login": "tugsbayasgalan",
            "id": 16603271,
            "node_id": "MDQ6VXNlcjE2NjAzMjcx",
            "avatar_url": "https://avatars.githubusercontent.com/u/16603271?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tugsbayasgalan",
            "html_url": "https://github.com/tugsbayasgalan",
            "followers_url": "https://api.github.com/users/tugsbayasgalan/followers",
            "following_url": "https://api.github.com/users/tugsbayasgalan/following{/other_user}",
            "gists_url": "https://api.github.com/users/tugsbayasgalan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tugsbayasgalan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tugsbayasgalan/subscriptions",
            "organizations_url": "https://api.github.com/users/tugsbayasgalan/orgs",
            "repos_url": "https://api.github.com/users/tugsbayasgalan/repos",
            "events_url": "https://api.github.com/users/tugsbayasgalan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tugsbayasgalan/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/25135/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/25135/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/25067",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/25067/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/25067/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/25067/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/25067",
        "id": 484276948,
        "node_id": "MDU6SXNzdWU0ODQyNzY5NDg=",
        "number": 25067,
        "title": "[FR][jit] improve empty list type inference error message for py3",
        "user": {
            "login": "ssnl",
            "id": 5674597,
            "node_id": "MDQ6VXNlcjU2NzQ1OTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5674597?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ssnl",
            "html_url": "https://github.com/ssnl",
            "followers_url": "https://api.github.com/users/ssnl/followers",
            "following_url": "https://api.github.com/users/ssnl/following{/other_user}",
            "gists_url": "https://api.github.com/users/ssnl/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ssnl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ssnl/subscriptions",
            "organizations_url": "https://api.github.com/users/ssnl/orgs",
            "repos_url": "https://api.github.com/users/ssnl/repos",
            "events_url": "https://api.github.com/users/ssnl/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ssnl/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "driazati",
            "id": 9407960,
            "node_id": "MDQ6VXNlcjk0MDc5NjA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9407960?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/driazati",
            "html_url": "https://github.com/driazati",
            "followers_url": "https://api.github.com/users/driazati/followers",
            "following_url": "https://api.github.com/users/driazati/following{/other_user}",
            "gists_url": "https://api.github.com/users/driazati/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/driazati/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/driazati/subscriptions",
            "organizations_url": "https://api.github.com/users/driazati/orgs",
            "repos_url": "https://api.github.com/users/driazati/repos",
            "events_url": "https://api.github.com/users/driazati/events{/privacy}",
            "received_events_url": "https://api.github.com/users/driazati/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "driazati",
                "id": 9407960,
                "node_id": "MDQ6VXNlcjk0MDc5NjA=",
                "avatar_url": "https://avatars.githubusercontent.com/u/9407960?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/driazati",
                "html_url": "https://github.com/driazati",
                "followers_url": "https://api.github.com/users/driazati/followers",
                "following_url": "https://api.github.com/users/driazati/following{/other_user}",
                "gists_url": "https://api.github.com/users/driazati/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/driazati/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/driazati/subscriptions",
                "organizations_url": "https://api.github.com/users/driazati/orgs",
                "repos_url": "https://api.github.com/users/driazati/repos",
                "events_url": "https://api.github.com/users/driazati/events{/privacy}",
                "received_events_url": "https://api.github.com/users/driazati/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-08-23T00:41:26Z",
        "updated_at": "2019-08-29T03:50:36Z",
        "closed_at": "2019-08-29T03:50:36Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "https://github.com/pytorch/pytorch/blob/498276631bed8b27964bb3ef6fb4ab4f724078bd/torch/csrc/jit/script/schema_matching.cpp#L169-L171\r\n\r\nshould use the py3 type annotation syntax for python 3.\n\ncc @suo",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/25067/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/25067/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/25043",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/25043/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/25043/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/25043/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/25043",
        "id": 484188314,
        "node_id": "MDU6SXNzdWU0ODQxODgzMTQ=",
        "number": 25043,
        "title": "[JIT] Source code dedent doesn't ignore comments like Python",
        "user": {
            "login": "jamesr66a",
            "id": 4685384,
            "node_id": "MDQ6VXNlcjQ2ODUzODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4685384?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesr66a",
            "html_url": "https://github.com/jamesr66a",
            "followers_url": "https://api.github.com/users/jamesr66a/followers",
            "following_url": "https://api.github.com/users/jamesr66a/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesr66a/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesr66a/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesr66a/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesr66a/orgs",
            "repos_url": "https://api.github.com/users/jamesr66a/repos",
            "events_url": "https://api.github.com/users/jamesr66a/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesr66a/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            },
            {
                "id": 1594104112,
                "node_id": "MDU6TGFiZWwxNTk0MTA0MTEy",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/jit-backlog",
                "name": "jit-backlog",
                "color": "eacf96",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "ansley",
            "id": 59447410,
            "node_id": "MDQ6VXNlcjU5NDQ3NDEw",
            "avatar_url": "https://avatars.githubusercontent.com/u/59447410?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ansley",
            "html_url": "https://github.com/ansley",
            "followers_url": "https://api.github.com/users/ansley/followers",
            "following_url": "https://api.github.com/users/ansley/following{/other_user}",
            "gists_url": "https://api.github.com/users/ansley/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ansley/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ansley/subscriptions",
            "organizations_url": "https://api.github.com/users/ansley/orgs",
            "repos_url": "https://api.github.com/users/ansley/repos",
            "events_url": "https://api.github.com/users/ansley/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ansley/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "ansley",
                "id": 59447410,
                "node_id": "MDQ6VXNlcjU5NDQ3NDEw",
                "avatar_url": "https://avatars.githubusercontent.com/u/59447410?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ansley",
                "html_url": "https://github.com/ansley",
                "followers_url": "https://api.github.com/users/ansley/followers",
                "following_url": "https://api.github.com/users/ansley/following{/other_user}",
                "gists_url": "https://api.github.com/users/ansley/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ansley/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ansley/subscriptions",
                "organizations_url": "https://api.github.com/users/ansley/orgs",
                "repos_url": "https://api.github.com/users/ansley/repos",
                "events_url": "https://api.github.com/users/ansley/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ansley/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-08-22T20:09:41Z",
        "updated_at": "2020-10-26T20:53:37Z",
        "closed_at": "2020-10-26T20:53:37Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "This can cause issues when you have comments at a lower indentation than the rest of the code:\r\n\r\n```\r\nimport torch\r\n\r\nclass Foo(torch.nn.Module):\r\n    def forward(self, x):\r\n        x = torch.neg(x)\r\n# foo foo foo i have a comment at the wrong indent\r\n        return x\r\n\r\ntorch.jit.script(Foo())\r\n```\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"ought.py\", line 9, in <module>\r\n    torch.jit.script(Foo())\r\n  File \"/home/jamesreed/pytorch/torch/jit/__init__.py\", line 1159, in script\r\n    return torch.jit.torch.jit._recursive.recursive_script(obj)\r\n  File \"/home/jamesreed/pytorch/torch/jit/_recursive.py\", line 166, in recursive_script\r\n    stubs = list(map(make_stub, filtered_methods))\r\n  File \"/home/jamesreed/pytorch/torch/jit/_recursive.py\", line 163, in make_stub\r\n    return torch.jit.script_method(func, _jit_internal.createResolutionCallbackFromClosure(func))\r\n  File \"/home/jamesreed/pytorch/torch/jit/__init__.py\", line 1224, in script_method\r\n    ast = get_jit_def(fn, self_name=\"ScriptModule\")\r\n  File \"/home/jamesreed/pytorch/torch/jit/frontend.py\", line 164, in get_jit_def\r\n    py_ast = ast.parse(dedent_src)\r\n  File \"/home/jamesreed/miniconda3/lib/python3.6/ast.py\", line 35, in parse\r\n    return compile(source, filename, mode, PyCF_ONLY_AST)\r\n  File \"<unknown>\", line 1\r\n    def forward(self, x):\r\n    ^\r\nIndentationError: unexpected indent\r\n```\n\ncc @suo",
        "closed_by": {
            "login": "ansley",
            "id": 59447410,
            "node_id": "MDQ6VXNlcjU5NDQ3NDEw",
            "avatar_url": "https://avatars.githubusercontent.com/u/59447410?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ansley",
            "html_url": "https://github.com/ansley",
            "followers_url": "https://api.github.com/users/ansley/followers",
            "following_url": "https://api.github.com/users/ansley/following{/other_user}",
            "gists_url": "https://api.github.com/users/ansley/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ansley/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ansley/subscriptions",
            "organizations_url": "https://api.github.com/users/ansley/orgs",
            "repos_url": "https://api.github.com/users/ansley/repos",
            "events_url": "https://api.github.com/users/ansley/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ansley/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/25043/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/25043/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/24987",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/24987/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/24987/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/24987/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/24987",
        "id": 483655443,
        "node_id": "MDU6SXNzdWU0ODM2NTU0NDM=",
        "number": 24987,
        "title": "[JIT] \"cannot instantiate class object\" error does not print out stacktrace ",
        "user": {
            "login": "eellison",
            "id": 11477974,
            "node_id": "MDQ6VXNlcjExNDc3OTc0",
            "avatar_url": "https://avatars.githubusercontent.com/u/11477974?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eellison",
            "html_url": "https://github.com/eellison",
            "followers_url": "https://api.github.com/users/eellison/followers",
            "following_url": "https://api.github.com/users/eellison/following{/other_user}",
            "gists_url": "https://api.github.com/users/eellison/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eellison/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eellison/subscriptions",
            "organizations_url": "https://api.github.com/users/eellison/orgs",
            "repos_url": "https://api.github.com/users/eellison/repos",
            "events_url": "https://api.github.com/users/eellison/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eellison/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "driazati",
            "id": 9407960,
            "node_id": "MDQ6VXNlcjk0MDc5NjA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9407960?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/driazati",
            "html_url": "https://github.com/driazati",
            "followers_url": "https://api.github.com/users/driazati/followers",
            "following_url": "https://api.github.com/users/driazati/following{/other_user}",
            "gists_url": "https://api.github.com/users/driazati/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/driazati/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/driazati/subscriptions",
            "organizations_url": "https://api.github.com/users/driazati/orgs",
            "repos_url": "https://api.github.com/users/driazati/repos",
            "events_url": "https://api.github.com/users/driazati/events{/privacy}",
            "received_events_url": "https://api.github.com/users/driazati/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "driazati",
                "id": 9407960,
                "node_id": "MDQ6VXNlcjk0MDc5NjA=",
                "avatar_url": "https://avatars.githubusercontent.com/u/9407960?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/driazati",
                "html_url": "https://github.com/driazati",
                "followers_url": "https://api.github.com/users/driazati/followers",
                "following_url": "https://api.github.com/users/driazati/following{/other_user}",
                "gists_url": "https://api.github.com/users/driazati/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/driazati/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/driazati/subscriptions",
                "organizations_url": "https://api.github.com/users/driazati/orgs",
                "repos_url": "https://api.github.com/users/driazati/repos",
                "events_url": "https://api.github.com/users/driazati/events{/privacy}",
                "received_events_url": "https://api.github.com/users/driazati/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-08-21T21:12:21Z",
        "updated_at": "2019-08-29T00:14:12Z",
        "closed_at": "2019-08-29T00:14:12Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\n\"Cannot instantiate class object\" error does not print out the stacktrace or the location of the error. This occurs when attempting to use `OrderedDict`, among other things. \r\n\r\n## To Reproduce\r\n\r\n```\r\n@torch.jit.ignore\r\nclass MyScriptClass(object):\r\n    def unscriptable(self):\r\n        return \"a\" + 200\r\n\r\n\r\nclass TestModule(torch.nn.Module):\r\n    def __init__(self):\r\n        super(TestModule, self).__init__()\r\n\r\n    def forward(self, x):\r\n        return MyScriptClass()\r\n\r\nt = torch.jit.script(TestModule())\r\n```\r\n> Traceback (most recent call last):\r\n  File \"test/test_jit.py\", line 14478, in test_ignore_class\r\n    t = torch.jit.script(TestModule())\r\n  File \"/home/eellison/local/miniconda/envs/ninja/lib/python3.7/site-packages/torch/jit/__init__.py\", line 1159, in script\r\n    return torch.jit.torch.jit._recursive.recursive_script(obj)\r\n  File \"/home/eellison/local/miniconda/envs/ninja/lib/python3.7/site-packages/torch/jit/_recursive.py\", line 167, in recursive_script\r\n    return copy_to_script_module(mod, overload_stubs + stubs)\r\n  File \"/home/eellison/local/miniconda/envs/ninja/lib/python3.7/site-packages/torch/jit/_recursive.py\", line 89, in copy_to_script_module\r\n    torch.jit._create_methods_from_stubs(script_module, stubs)\r\n  File \"/home/eellison/local/miniconda/envs/ninja/lib/python3.7/site-packages/torch/jit/__init__.py\", line 1367, in _create_methods_from_stubs\r\n    self._c._create_methods(self, defs, rcbs, defaults)\r\n  File \"/home/eellison/local/miniconda/envs/ninja/lib/python3.7/site-packages/torch/jit/annotations.py\", line 73, in get_num_params\r\n    raise RuntimeError(\"cannot instantiate class object ({}) inside jit.script\".format(py_ast.body[0].name))\r\nRuntimeError: cannot instantiate class object (MyScriptClass) inside jit.script\r\n\r\n\r\n\r\n",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/24987/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/24987/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/24239",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/24239/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/24239/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/24239/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/24239",
        "id": 480104049,
        "node_id": "MDU6SXNzdWU0ODAxMDQwNDk=",
        "number": 24239,
        "title": "JIT infers List[Tensor] inccorectly to List[int]",
        "user": {
            "login": "moskomule",
            "id": 11806234,
            "node_id": "MDQ6VXNlcjExODA2MjM0",
            "avatar_url": "https://avatars.githubusercontent.com/u/11806234?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/moskomule",
            "html_url": "https://github.com/moskomule",
            "followers_url": "https://api.github.com/users/moskomule/followers",
            "following_url": "https://api.github.com/users/moskomule/following{/other_user}",
            "gists_url": "https://api.github.com/users/moskomule/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/moskomule/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/moskomule/subscriptions",
            "organizations_url": "https://api.github.com/users/moskomule/orgs",
            "repos_url": "https://api.github.com/users/moskomule/repos",
            "events_url": "https://api.github.com/users/moskomule/events{/privacy}",
            "received_events_url": "https://api.github.com/users/moskomule/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "eellison",
            "id": 11477974,
            "node_id": "MDQ6VXNlcjExNDc3OTc0",
            "avatar_url": "https://avatars.githubusercontent.com/u/11477974?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eellison",
            "html_url": "https://github.com/eellison",
            "followers_url": "https://api.github.com/users/eellison/followers",
            "following_url": "https://api.github.com/users/eellison/following{/other_user}",
            "gists_url": "https://api.github.com/users/eellison/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eellison/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eellison/subscriptions",
            "organizations_url": "https://api.github.com/users/eellison/orgs",
            "repos_url": "https://api.github.com/users/eellison/repos",
            "events_url": "https://api.github.com/users/eellison/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eellison/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "eellison",
                "id": 11477974,
                "node_id": "MDQ6VXNlcjExNDc3OTc0",
                "avatar_url": "https://avatars.githubusercontent.com/u/11477974?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/eellison",
                "html_url": "https://github.com/eellison",
                "followers_url": "https://api.github.com/users/eellison/followers",
                "following_url": "https://api.github.com/users/eellison/following{/other_user}",
                "gists_url": "https://api.github.com/users/eellison/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/eellison/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eellison/subscriptions",
                "organizations_url": "https://api.github.com/users/eellison/orgs",
                "repos_url": "https://api.github.com/users/eellison/repos",
                "events_url": "https://api.github.com/users/eellison/events{/privacy}",
                "received_events_url": "https://api.github.com/users/eellison/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 3,
        "created_at": "2019-08-13T11:27:22Z",
        "updated_at": "2019-08-14T18:26:52Z",
        "closed_at": "2019-08-14T18:26:51Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\n<!-- A clear and concise description of what the bug is. -->\r\n\r\n## To Reproduce\r\n\r\n```python\r\ndef channel(tensor: torch.Tensor) -> torch.Tensor:\r\n    a = torch.randn(2)\r\n    return a[tensor.long()]\r\n\r\n@torch.jit.script\r\ndef full():\r\n    torch.stack([channel(torch.randn(1, 3, 3) > 0) for _ in [0, 1, 2]])\r\n```\r\n\r\nThis code throws an error below:\r\n\r\n```bash\r\nTraceback (most recent call last):\r\n  File \"test.py\", line 8, in <module>\r\n    @torch.jit.script\r\n  File \"/opt/.miniconda/lib/python3.7/site-packages/torch/jit/__init__.py\", line 1181, in script\r\n    return _compile_function(fn=obj, qualified_name=qualified_name, _frames_up=_frames_up + 1, _rcb=_rcb)\r\n  File \"/opt/.miniconda/lib/python3.7/site-packages/torch/jit/__init__.py\", line 1077, in _compile_function\r\n    script_fn = torch._C._jit_script_compile(qualified_name, ast, _rcb, get_default_args(fn))\r\nRuntimeError:\r\nArguments for call are not valid.\r\nThe following operator variants are available:\r\n\r\n  aten::stack(Tensor[] tensors, int dim=0) -> (Tensor):\r\n  Expected a value of type 'List[Tensor]' for argument 'tensors' but instead found type 'List[int]'.\r\n\r\n  aten::stack(Tensor[] tensors, int dim=0, *, Tensor(a) out) -> (Tensor(a)):\r\n  Expected a value of type 'List[Tensor]' for argument 'tensors' but instead found type 'List[int]'.\r\n\r\nThe original call is:\r\nat test.py:10:5\r\n@torch.jit.script\r\ndef full():\r\n    torch.stack([channel(torch.randn(1, 3, 3) > 0) for _ in [0, 1, 2]])\r\n    ~~~~~~~~~~~ <--- HERE\r\n```\r\n\r\nThe equivalent code below works as expected\r\n\r\n```python\r\ndef channel(tensor: torch.Tensor) -> torch.Tensor:\r\n    a = torch.randn(2)\r\n    return a[tensor.long()]\r\n\r\n@torch.jit.script\r\ndef full():\r\n    l = []\r\n    for _ in range(3):\r\n        l.append(channel(torch.randn(1, 3, 3) > 0))\r\n    torch.stack(l)\r\n````\r\n\r\n<!-- If you have a code sample, error messages, stack traces, please provide it here as well -->\r\n\r\n## Expected behavior\r\n\r\n`[channel(torch.randn(1, 3, 3) > 0) for _ in [0, 1, 2]]` is expected to be `List[Tensor]` but is inferred as `List[int]` by JIT.\r\n\r\n<!-- A clear and concise description of what you expected to happen. -->\r\n\r\n## Environment\r\n\r\n* Ubuntu 16.04/MacOS Mojave\r\n* Python 3.7.4 (from conda)\r\n* PyTorch 1.2.0 (from conda)\r\n",
        "closed_by": {
            "login": "eellison",
            "id": 11477974,
            "node_id": "MDQ6VXNlcjExNDc3OTc0",
            "avatar_url": "https://avatars.githubusercontent.com/u/11477974?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eellison",
            "html_url": "https://github.com/eellison",
            "followers_url": "https://api.github.com/users/eellison/followers",
            "following_url": "https://api.github.com/users/eellison/following{/other_user}",
            "gists_url": "https://api.github.com/users/eellison/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eellison/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eellison/subscriptions",
            "organizations_url": "https://api.github.com/users/eellison/orgs",
            "repos_url": "https://api.github.com/users/eellison/repos",
            "events_url": "https://api.github.com/users/eellison/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eellison/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/24239/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/24239/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/24173",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/24173/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/24173/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/24173/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/24173",
        "id": 479521550,
        "node_id": "MDU6SXNzdWU0Nzk1MjE1NTA=",
        "number": 24173,
        "title": "Transformer model seems not supported in TorchScript?",
        "user": {
            "login": "jotline",
            "id": 19920429,
            "node_id": "MDQ6VXNlcjE5OTIwNDI5",
            "avatar_url": "https://avatars.githubusercontent.com/u/19920429?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jotline",
            "html_url": "https://github.com/jotline",
            "followers_url": "https://api.github.com/users/jotline/followers",
            "following_url": "https://api.github.com/users/jotline/following{/other_user}",
            "gists_url": "https://api.github.com/users/jotline/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jotline/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jotline/subscriptions",
            "organizations_url": "https://api.github.com/users/jotline/orgs",
            "repos_url": "https://api.github.com/users/jotline/repos",
            "events_url": "https://api.github.com/users/jotline/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jotline/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "driazati",
            "id": 9407960,
            "node_id": "MDQ6VXNlcjk0MDc5NjA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9407960?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/driazati",
            "html_url": "https://github.com/driazati",
            "followers_url": "https://api.github.com/users/driazati/followers",
            "following_url": "https://api.github.com/users/driazati/following{/other_user}",
            "gists_url": "https://api.github.com/users/driazati/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/driazati/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/driazati/subscriptions",
            "organizations_url": "https://api.github.com/users/driazati/orgs",
            "repos_url": "https://api.github.com/users/driazati/repos",
            "events_url": "https://api.github.com/users/driazati/events{/privacy}",
            "received_events_url": "https://api.github.com/users/driazati/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "driazati",
                "id": 9407960,
                "node_id": "MDQ6VXNlcjk0MDc5NjA=",
                "avatar_url": "https://avatars.githubusercontent.com/u/9407960?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/driazati",
                "html_url": "https://github.com/driazati",
                "followers_url": "https://api.github.com/users/driazati/followers",
                "following_url": "https://api.github.com/users/driazati/following{/other_user}",
                "gists_url": "https://api.github.com/users/driazati/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/driazati/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/driazati/subscriptions",
                "organizations_url": "https://api.github.com/users/driazati/orgs",
                "repos_url": "https://api.github.com/users/driazati/repos",
                "events_url": "https://api.github.com/users/driazati/events{/privacy}",
                "received_events_url": "https://api.github.com/users/driazati/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2019-08-12T08:23:31Z",
        "updated_at": "2019-12-11T18:57:46Z",
        "closed_at": "2019-12-11T18:57:46Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n```python\r\nPython builtin <built-in function hasattr> is currently not supported in Torchscript:\r\nat /home/chejin/anaconda3/envs/pytorch-gpu/lib/python3.6/site-packages/torch/nn/modules/activation.py:759:12\r\n        - key_padding_mask: :math:`(N, S)`, ByteTensor, where N is the batch size, S is the source sequence length.\r\n        - attn_mask: :math:`(L, S)` where L is the target sequence length, S is the source sequence length.\r\n\r\n        - Outputs:\r\n        - attn_output: :math:`(L, N, E)` where L is the target sequence length, N is the batch size,\r\n          E is the embedding dimension.\r\n        - attn_output_weights: :math:`(N, L, S)` where N is the batch size,\r\n          L is the target sequence length, S is the source sequence length.\r\n        \"\"\"\r\n        if hasattr(self, '_qkv_same_embed_dim') and self._qkv_same_embed_dim is False:\r\n           ~~~~~~~ <--- HERE\r\n            return F.multi_head_attention_forward(\r\n                query, key, value, self.embed_dim, self.num_heads,\r\n                self.in_proj_weight, self.in_proj_bias,\r\n                self.bias_k, self.bias_v, self.add_zero_attn,\r\n                self.dropout, self.out_proj.weight, self.out_proj.bias,\r\n                training=self.training,\r\n                key_padding_mask=key_padding_mask, need_weights=need_weights,\r\n                attn_mask=attn_mask, use_separate_proj_weight=True,\r\n                q_proj_weight=self.q_proj_weight, k_proj_weight=self.k_proj_weight,'__module__.__torch__.torch.nn.modules.activation.MultiheadAttention.forward' is being compiled since it was called from '__modul\r\ne__.__torch__.torch.nn.modules.transformer.TransformerEncoderLayer.forward'\r\n```\r\n## Environment\r\n\r\nCollecting environment information...\r\nPyTorch version: 1.2.0\r\nIs debug build: No\r\nCUDA used to build PyTorch: 10.0.130\r\n\r\nOS: Ubuntu 18.04.1 LTS\r\nGCC version: (Ubuntu 7.4.0-1ubuntu1~18.04.1) 7.4.0\r\nCMake version: version 3.10.2\r\n\r\nPython version: 3.6\r\nIs CUDA available: Yes\r\nCUDA runtime version: Could not collect\r\nGPU models and configuration:\r\nGPU 0: GeForce RTX 2080 Ti\r\nGPU 1: GeForce RTX 2080 Ti\r\n\r\nNvidia driver version: 430.26\r\ncuDNN version: Could not collect\r\n\r\nVersions of relevant libraries:\r\n[pip3] numpy==1.16.2\r\n[pip3] torchtext==0.3.1\r\n[conda] _tflow_select             2.3.0                       mkl    defaults\r\n[conda] blas                      1.0                         mkl    defaults\r\n[conda] cuda100                   1.0                           0    pytorch\r\n[conda] mkl                       2019.4                      243    defaults\r\n[conda] mkl_fft                   1.0.12           py36ha843d7b_0    defaults\r\n[conda] mkl_random                1.0.2            py36hd81dba3_0    defaults\r\n[conda] pytorch                   1.2.0           py3.6_cuda10.0.130_cudnn7.6.2_0    pytorch\r\n[conda] tensorflow                1.14.0          mkl_py36h2526735_0    https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main\r\n[conda] tensorflow-base           1.14.0          mkl_py36h7ce6ba3_0    defaults\r\n",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/24173/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/24173/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/24164",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/24164/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/24164/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/24164/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/24164",
        "id": 479408600,
        "node_id": "MDU6SXNzdWU0Nzk0MDg2MDA=",
        "number": 24164,
        "title": "`torch.jit.script` is unable to parse comment",
        "user": {
            "login": "PetrochukM",
            "id": 7424737,
            "node_id": "MDQ6VXNlcjc0MjQ3Mzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7424737?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/PetrochukM",
            "html_url": "https://github.com/PetrochukM",
            "followers_url": "https://api.github.com/users/PetrochukM/followers",
            "following_url": "https://api.github.com/users/PetrochukM/following{/other_user}",
            "gists_url": "https://api.github.com/users/PetrochukM/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/PetrochukM/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/PetrochukM/subscriptions",
            "organizations_url": "https://api.github.com/users/PetrochukM/orgs",
            "repos_url": "https://api.github.com/users/PetrochukM/repos",
            "events_url": "https://api.github.com/users/PetrochukM/events{/privacy}",
            "received_events_url": "https://api.github.com/users/PetrochukM/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "driazati",
            "id": 9407960,
            "node_id": "MDQ6VXNlcjk0MDc5NjA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9407960?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/driazati",
            "html_url": "https://github.com/driazati",
            "followers_url": "https://api.github.com/users/driazati/followers",
            "following_url": "https://api.github.com/users/driazati/following{/other_user}",
            "gists_url": "https://api.github.com/users/driazati/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/driazati/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/driazati/subscriptions",
            "organizations_url": "https://api.github.com/users/driazati/orgs",
            "repos_url": "https://api.github.com/users/driazati/repos",
            "events_url": "https://api.github.com/users/driazati/events{/privacy}",
            "received_events_url": "https://api.github.com/users/driazati/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "driazati",
                "id": 9407960,
                "node_id": "MDQ6VXNlcjk0MDc5NjA=",
                "avatar_url": "https://avatars.githubusercontent.com/u/9407960?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/driazati",
                "html_url": "https://github.com/driazati",
                "followers_url": "https://api.github.com/users/driazati/followers",
                "following_url": "https://api.github.com/users/driazati/following{/other_user}",
                "gists_url": "https://api.github.com/users/driazati/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/driazati/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/driazati/subscriptions",
                "organizations_url": "https://api.github.com/users/driazati/orgs",
                "repos_url": "https://api.github.com/users/driazati/repos",
                "events_url": "https://api.github.com/users/driazati/events{/privacy}",
                "received_events_url": "https://api.github.com/users/driazati/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-08-11T20:36:33Z",
        "updated_at": "2019-08-19T23:33:31Z",
        "closed_at": "2019-08-19T23:33:31Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\n`torch.jit.script` is unable to parse comments with the character \"\u2192\".\r\n\r\n## To Reproduce\r\n\r\n```\r\nfrom torch import nn\r\n\r\nimport torch\r\n\r\n\r\nclass Model(nn.Module):\r\n\r\n    def __init__(self):\r\n        super().__init__()\r\n\r\n    def forward(self, a):\r\n        # type: (Tensor)\r\n\r\n        # [batch_size, sequence_length] \u2192\r\n        # [batch_size, sequence_length]\r\n        a = torch.nn.functional.relu(a)\r\n        return a\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    model = Model()\r\n    model = torch.jit.script(model)\r\n```\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"blah.py\", line 21, in <module>\r\n    model = torch.jit.script(model)\r\n  File \"/Users/michaelp/Code/Text-to-Speech/venv/lib/python3.7/site-packages/torch/jit/__init__.py\", line 1162, in script\r\n    return _convert_to_script_module(obj)\r\n  File \"/Users/michaelp/Code/Text-to-Speech/venv/lib/python3.7/site-packages/torch/jit/__init__.py\", line 1811, in _convert_to_script_module\r\n    stubs = list(map(make_stub, methods))\r\n  File \"/Users/michaelp/Code/Text-to-Speech/venv/lib/python3.7/site-packages/torch/jit/__init__.py\", line 1809, in make_stub\r\n    return script_method(func, _jit_internal.createResolutionCallbackFromClosure(func))\r\n  File \"/Users/michaelp/Code/Text-to-Speech/venv/lib/python3.7/site-packages/torch/jit/__init__.py\", line 1204, in script_method\r\n    ast = get_jit_def(fn, self_name=\"ScriptModule\")\r\n  File \"/Users/michaelp/Code/Text-to-Speech/venv/lib/python3.7/site-packages/torch/jit/frontend.py\", line 166, in get_jit_def\r\n    return build_def(ctx, py_ast.body[0], type_line, self_name)\r\n  File \"/Users/michaelp/Code/Text-to-Speech/venv/lib/python3.7/site-packages/torch/jit/frontend.py\", line 206, in build_def\r\n    build_stmts(ctx, body))\r\n  File \"/Users/michaelp/Code/Text-to-Speech/venv/lib/python3.7/site-packages/torch/jit/frontend.py\", line 122, in build_stmts\r\n    stmts = [build_stmt(ctx, s) for s in stmts]\r\n  File \"/Users/michaelp/Code/Text-to-Speech/venv/lib/python3.7/site-packages/torch/jit/frontend.py\", line 122, in <listcomp>\r\n    stmts = [build_stmt(ctx, s) for s in stmts]\r\n  File \"/Users/michaelp/Code/Text-to-Speech/venv/lib/python3.7/site-packages/torch/jit/frontend.py\", line 182, in __call__\r\n    return method(ctx, node)\r\n  File \"/Users/michaelp/Code/Text-to-Speech/venv/lib/python3.7/site-packages/torch/jit/frontend.py\", line 274, in build_Assign\r\n    rhs = build_expr(ctx, stmt.value)\r\n  File \"/Users/michaelp/Code/Text-to-Speech/venv/lib/python3.7/site-packages/torch/jit/frontend.py\", line 182, in __call__\r\n    return method(ctx, node)\r\n  File \"/Users/michaelp/Code/Text-to-Speech/venv/lib/python3.7/site-packages/torch/jit/frontend.py\", line 429, in build_Call\r\n    func = build_expr(ctx, expr.func)\r\n  File \"/Users/michaelp/Code/Text-to-Speech/venv/lib/python3.7/site-packages/torch/jit/frontend.py\", line 182, in __call__\r\n    return method(ctx, node)\r\n  File \"/Users/michaelp/Code/Text-to-Speech/venv/lib/python3.7/site-packages/torch/jit/frontend.py\", line 418, in build_Attribute\r\n    pos = find_after(ctx, value.range().end, '.').end  # Start with the dot\r\n  File \"/Users/michaelp/Code/Text-to-Speech/venv/lib/python3.7/site-packages/torch/jit/frontend.py\", line 678, in find_after\r\n    new_pos = pos + ctx.source[pos:].index(substr)\r\n```\r\n\r\n## Expected behavior\r\n\r\n- The traceback should give more direction in terms of the error location.\r\n- The above code runs.\r\n- Comments should not affect the ability of `torch.jit.script` to compile the code.\r\n\r\n## Environment\r\n\r\n```\r\nCollecting environment information...\r\nPyTorch version: 1.2.0\r\nIs debug build: No\r\nCUDA used to build PyTorch: None\r\n\r\nOS: Mac OSX 10.14.5\r\nGCC version: Could not collect\r\nCMake version: Could not collect\r\n\r\nPython version: 3.7\r\nIs CUDA available: No\r\nCUDA runtime version: No CUDA\r\nGPU models and configuration: No CUDA\r\nNvidia driver version: No CUDA\r\ncuDNN version: No CUDA\r\n\r\nVersions of relevant libraries:\r\n[pip3] numpy==1.17.0\r\n[pip3] pytorch-nlp==0.4.1\r\n[pip3] torch==1.2.0\r\n[conda] Could not collect\r\n```",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/24164/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/24164/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/23453",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/23453/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/23453/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/23453/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/23453",
        "id": 473542840,
        "node_id": "MDU6SXNzdWU0NzM1NDI4NDA=",
        "number": 23453,
        "title": "[jit] recursive compilation for class types losing compile stack info",
        "user": {
            "login": "suo",
            "id": 1617424,
            "node_id": "MDQ6VXNlcjE2MTc0MjQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1617424?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/suo",
            "html_url": "https://github.com/suo",
            "followers_url": "https://api.github.com/users/suo/followers",
            "following_url": "https://api.github.com/users/suo/following{/other_user}",
            "gists_url": "https://api.github.com/users/suo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/suo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/suo/subscriptions",
            "organizations_url": "https://api.github.com/users/suo/orgs",
            "repos_url": "https://api.github.com/users/suo/repos",
            "events_url": "https://api.github.com/users/suo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/suo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 443484135,
                "node_id": "MDU6TGFiZWw0NDM0ODQxMzU=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/high%20priority",
                "name": "high priority",
                "color": "F22613",
                "default": false,
                "description": null
            },
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "driazati",
            "id": 9407960,
            "node_id": "MDQ6VXNlcjk0MDc5NjA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9407960?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/driazati",
            "html_url": "https://github.com/driazati",
            "followers_url": "https://api.github.com/users/driazati/followers",
            "following_url": "https://api.github.com/users/driazati/following{/other_user}",
            "gists_url": "https://api.github.com/users/driazati/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/driazati/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/driazati/subscriptions",
            "organizations_url": "https://api.github.com/users/driazati/orgs",
            "repos_url": "https://api.github.com/users/driazati/repos",
            "events_url": "https://api.github.com/users/driazati/events{/privacy}",
            "received_events_url": "https://api.github.com/users/driazati/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "driazati",
                "id": 9407960,
                "node_id": "MDQ6VXNlcjk0MDc5NjA=",
                "avatar_url": "https://avatars.githubusercontent.com/u/9407960?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/driazati",
                "html_url": "https://github.com/driazati",
                "followers_url": "https://api.github.com/users/driazati/followers",
                "following_url": "https://api.github.com/users/driazati/following{/other_user}",
                "gists_url": "https://api.github.com/users/driazati/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/driazati/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/driazati/subscriptions",
                "organizations_url": "https://api.github.com/users/driazati/orgs",
                "repos_url": "https://api.github.com/users/driazati/repos",
                "events_url": "https://api.github.com/users/driazati/events{/privacy}",
                "received_events_url": "https://api.github.com/users/driazati/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": {
            "url": "https://api.github.com/repos/pytorch/pytorch/milestones/8",
            "html_url": "https://github.com/pytorch/pytorch/milestone/8",
            "labels_url": "https://api.github.com/repos/pytorch/pytorch/milestones/8/labels",
            "id": 4276304,
            "node_id": "MDk6TWlsZXN0b25lNDI3NjMwNA==",
            "number": 8,
            "title": "1.2",
            "description": "",
            "creator": {
                "login": "soumith",
                "id": 1310570,
                "node_id": "MDQ6VXNlcjEzMTA1NzA=",
                "avatar_url": "https://avatars.githubusercontent.com/u/1310570?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/soumith",
                "html_url": "https://github.com/soumith",
                "followers_url": "https://api.github.com/users/soumith/followers",
                "following_url": "https://api.github.com/users/soumith/following{/other_user}",
                "gists_url": "https://api.github.com/users/soumith/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/soumith/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/soumith/subscriptions",
                "organizations_url": "https://api.github.com/users/soumith/orgs",
                "repos_url": "https://api.github.com/users/soumith/repos",
                "events_url": "https://api.github.com/users/soumith/events{/privacy}",
                "received_events_url": "https://api.github.com/users/soumith/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 51,
            "state": "closed",
            "created_at": "2019-05-01T03:25:38Z",
            "updated_at": "2019-09-18T05:25:52Z",
            "due_on": null,
            "closed_at": "2019-09-04T00:10:33Z"
        },
        "comments": 0,
        "created_at": "2019-07-26T21:28:46Z",
        "updated_at": "2019-07-27T09:30:23Z",
        "closed_at": "2019-07-27T09:30:23Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "This makes it very confusing for users when their calls to random py libraries try to get scripted. @driazati has a repro and is working on a fix.",
        "closed_by": {
            "login": "suo",
            "id": 1617424,
            "node_id": "MDQ6VXNlcjE2MTc0MjQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1617424?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/suo",
            "html_url": "https://github.com/suo",
            "followers_url": "https://api.github.com/users/suo/followers",
            "following_url": "https://api.github.com/users/suo/following{/other_user}",
            "gists_url": "https://api.github.com/users/suo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/suo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/suo/subscriptions",
            "organizations_url": "https://api.github.com/users/suo/orgs",
            "repos_url": "https://api.github.com/users/suo/repos",
            "events_url": "https://api.github.com/users/suo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/suo/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/23453/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/23453/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/23296",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/23296/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/23296/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/23296/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/23296",
        "id": 472135367,
        "node_id": "MDU6SXNzdWU0NzIxMzUzNjc=",
        "number": 23296,
        "title": "[jit] confusing error message when trying to script a module class",
        "user": {
            "login": "suo",
            "id": 1617424,
            "node_id": "MDQ6VXNlcjE2MTc0MjQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1617424?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/suo",
            "html_url": "https://github.com/suo",
            "followers_url": "https://api.github.com/users/suo/followers",
            "following_url": "https://api.github.com/users/suo/following{/other_user}",
            "gists_url": "https://api.github.com/users/suo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/suo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/suo/subscriptions",
            "organizations_url": "https://api.github.com/users/suo/orgs",
            "repos_url": "https://api.github.com/users/suo/repos",
            "events_url": "https://api.github.com/users/suo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/suo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 443484135,
                "node_id": "MDU6TGFiZWw0NDM0ODQxMzU=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/high%20priority",
                "name": "high priority",
                "color": "F22613",
                "default": false,
                "description": null
            },
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "driazati",
            "id": 9407960,
            "node_id": "MDQ6VXNlcjk0MDc5NjA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9407960?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/driazati",
            "html_url": "https://github.com/driazati",
            "followers_url": "https://api.github.com/users/driazati/followers",
            "following_url": "https://api.github.com/users/driazati/following{/other_user}",
            "gists_url": "https://api.github.com/users/driazati/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/driazati/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/driazati/subscriptions",
            "organizations_url": "https://api.github.com/users/driazati/orgs",
            "repos_url": "https://api.github.com/users/driazati/repos",
            "events_url": "https://api.github.com/users/driazati/events{/privacy}",
            "received_events_url": "https://api.github.com/users/driazati/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "driazati",
                "id": 9407960,
                "node_id": "MDQ6VXNlcjk0MDc5NjA=",
                "avatar_url": "https://avatars.githubusercontent.com/u/9407960?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/driazati",
                "html_url": "https://github.com/driazati",
                "followers_url": "https://api.github.com/users/driazati/followers",
                "following_url": "https://api.github.com/users/driazati/following{/other_user}",
                "gists_url": "https://api.github.com/users/driazati/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/driazati/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/driazati/subscriptions",
                "organizations_url": "https://api.github.com/users/driazati/orgs",
                "repos_url": "https://api.github.com/users/driazati/repos",
                "events_url": "https://api.github.com/users/driazati/events{/privacy}",
                "received_events_url": "https://api.github.com/users/driazati/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": {
            "url": "https://api.github.com/repos/pytorch/pytorch/milestones/8",
            "html_url": "https://github.com/pytorch/pytorch/milestone/8",
            "labels_url": "https://api.github.com/repos/pytorch/pytorch/milestones/8/labels",
            "id": 4276304,
            "node_id": "MDk6TWlsZXN0b25lNDI3NjMwNA==",
            "number": 8,
            "title": "1.2",
            "description": "",
            "creator": {
                "login": "soumith",
                "id": 1310570,
                "node_id": "MDQ6VXNlcjEzMTA1NzA=",
                "avatar_url": "https://avatars.githubusercontent.com/u/1310570?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/soumith",
                "html_url": "https://github.com/soumith",
                "followers_url": "https://api.github.com/users/soumith/followers",
                "following_url": "https://api.github.com/users/soumith/following{/other_user}",
                "gists_url": "https://api.github.com/users/soumith/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/soumith/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/soumith/subscriptions",
                "organizations_url": "https://api.github.com/users/soumith/orgs",
                "repos_url": "https://api.github.com/users/soumith/repos",
                "events_url": "https://api.github.com/users/soumith/events{/privacy}",
                "received_events_url": "https://api.github.com/users/soumith/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 51,
            "state": "closed",
            "created_at": "2019-05-01T03:25:38Z",
            "updated_at": "2019-09-18T05:25:52Z",
            "due_on": null,
            "closed_at": "2019-09-04T00:10:33Z"
        },
        "comments": 0,
        "created_at": "2019-07-24T07:59:10Z",
        "updated_at": "2019-07-25T20:53:22Z",
        "closed_at": "2019-07-25T20:53:21Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "If you try to script an `nn.Module` rather than an instance of it, the error message is really confusing.\r\n```\r\nclass Root(torch.nn.Module):\r\n    def __init__(self):\r\n        super(Root, self).__init__()\r\n        self.register_buffer('buffer1', torch.ones(2, 2))\r\n\r\n    def forward(self, foo):\r\n        return foo\r\nScriptRoot = torch.jit.script(Root) #  as opposed to Root()\r\n```\r\nproduces:\r\n```\r\nTraceback (most recent call last):\r\n  File \"/private/home/suo/scratch/test.py\", line 176, in <module>\r\n    ScriptRoot = torch.jit.script(Root)\r\n  File \"/scratch/suo/pytorch/torch/jit/__init__.py\", line 1065, in script\r\n    _compile_and_register_class(obj, _rcb, qualified_name)\r\n  File \"/scratch/suo/pytorch/torch/jit/__init__.py\", line 1045, in _compile_and_register_class\r\n    ast = get_jit_class_def(obj, obj.__name__)\r\n  File \"/scratch/suo/pytorch/torch/jit/frontend.py\", line 143, in get_jit_class_def\r\n    self_name=self_name) for method in methods]\r\n  File \"/scratch/suo/pytorch/torch/jit/frontend.py\", line 143, in <listcomp>\r\n    self_name=self_name) for method in methods]\r\n  File \"/scratch/suo/pytorch/torch/jit/frontend.py\", line 166, in get_jit_def\r\n    return build_def(ctx, py_ast.body[0], type_line, self_name)\r\n  File \"/scratch/suo/pytorch/torch/jit/frontend.py\", line 195, in build_def\r\n    param_list = build_param_list(ctx, py_def.args, self_name)\r\n  File \"/scratch/suo/pytorch/torch/jit/frontend.py\", line 215, in build_param_list\r\n    raise ValueError(_vararg_kwarg_err)\r\nValueError: Compiled functions can't take variable number of arguments or use keyword-only arguments with defaults\r\n```",
        "closed_by": {
            "login": "suo",
            "id": 1617424,
            "node_id": "MDQ6VXNlcjE2MTc0MjQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1617424?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/suo",
            "html_url": "https://github.com/suo",
            "followers_url": "https://api.github.com/users/suo/followers",
            "following_url": "https://api.github.com/users/suo/following{/other_user}",
            "gists_url": "https://api.github.com/users/suo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/suo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/suo/subscriptions",
            "organizations_url": "https://api.github.com/users/suo/orgs",
            "repos_url": "https://api.github.com/users/suo/repos",
            "events_url": "https://api.github.com/users/suo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/suo/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/23296/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/23296/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/22833",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/22833/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/22833/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/22833/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/22833",
        "id": 467663585,
        "node_id": "MDU6SXNzdWU0Njc2NjM1ODU=",
        "number": 22833,
        "title": "[jit] wrong gradient for CUDA tensor",
        "user": {
            "login": "fehiepsi",
            "id": 4736342,
            "node_id": "MDQ6VXNlcjQ3MzYzNDI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4736342?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fehiepsi",
            "html_url": "https://github.com/fehiepsi",
            "followers_url": "https://api.github.com/users/fehiepsi/followers",
            "following_url": "https://api.github.com/users/fehiepsi/following{/other_user}",
            "gists_url": "https://api.github.com/users/fehiepsi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fehiepsi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fehiepsi/subscriptions",
            "organizations_url": "https://api.github.com/users/fehiepsi/orgs",
            "repos_url": "https://api.github.com/users/fehiepsi/repos",
            "events_url": "https://api.github.com/users/fehiepsi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fehiepsi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2019-07-13T03:27:06Z",
        "updated_at": "2019-07-25T15:58:31Z",
        "closed_at": "2019-07-25T15:58:31Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\nThe following script shows the issue.\r\n\r\n## To Reproduce\r\n\r\n```\r\nimport torch\r\n\r\ndef f(z):\r\n    return (torch.ones(2) * z ** 2 - z).sum()\r\n\r\ntorch.set_default_tensor_type(torch.cuda.FloatTensor)\r\njf = torch.jit.trace(f, torch.tensor(1.))\r\n\r\nz = torch.tensor(1., requires_grad=True)\r\ny = jf(z)\r\nprint(torch.autograd.grad(y, (z,))[0])\r\n\r\nz = torch.tensor(1., requires_grad=True)\r\ny = f(z)\r\nprint(torch.autograd.grad(y, (z,))[0])\r\n```\r\ngives\r\n```\r\ntensor(6.)\r\ntensor(2.)\r\n```\r\n\r\n## Expected behavior\r\n\r\nGet the same result for both jit and non-jit version: `torch.tensor(2.)`\r\n\r\n## Environment\r\n\r\n - PyTorch Version (e.g., 1.0): 1.1.0\r\n - OS (e.g., Linux): Linux\r\n - How you installed PyTorch (`conda`, `pip`, source): conda\r\n - Python version: 3.6\r\n - CUDA/cuDNN version: 10.0\r\n - GPU models and configuration: RTX 2070\r\n",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/22833/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/22833/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/22553",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/22553/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/22553/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/22553/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/22553",
        "id": 464728609,
        "node_id": "MDU6SXNzdWU0NjQ3Mjg2MDk=",
        "number": 22553,
        "title": "[jit] Alias info for dict operations is incorrect",
        "user": {
            "login": "driazati",
            "id": 9407960,
            "node_id": "MDQ6VXNlcjk0MDc5NjA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9407960?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/driazati",
            "html_url": "https://github.com/driazati",
            "followers_url": "https://api.github.com/users/driazati/followers",
            "following_url": "https://api.github.com/users/driazati/following{/other_user}",
            "gists_url": "https://api.github.com/users/driazati/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/driazati/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/driazati/subscriptions",
            "organizations_url": "https://api.github.com/users/driazati/orgs",
            "repos_url": "https://api.github.com/users/driazati/repos",
            "events_url": "https://api.github.com/users/driazati/events{/privacy}",
            "received_events_url": "https://api.github.com/users/driazati/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "driazati",
            "id": 9407960,
            "node_id": "MDQ6VXNlcjk0MDc5NjA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9407960?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/driazati",
            "html_url": "https://github.com/driazati",
            "followers_url": "https://api.github.com/users/driazati/followers",
            "following_url": "https://api.github.com/users/driazati/following{/other_user}",
            "gists_url": "https://api.github.com/users/driazati/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/driazati/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/driazati/subscriptions",
            "organizations_url": "https://api.github.com/users/driazati/orgs",
            "repos_url": "https://api.github.com/users/driazati/repos",
            "events_url": "https://api.github.com/users/driazati/events{/privacy}",
            "received_events_url": "https://api.github.com/users/driazati/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "driazati",
                "id": 9407960,
                "node_id": "MDQ6VXNlcjk0MDc5NjA=",
                "avatar_url": "https://avatars.githubusercontent.com/u/9407960?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/driazati",
                "html_url": "https://github.com/driazati",
                "followers_url": "https://api.github.com/users/driazati/followers",
                "following_url": "https://api.github.com/users/driazati/following{/other_user}",
                "gists_url": "https://api.github.com/users/driazati/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/driazati/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/driazati/subscriptions",
                "organizations_url": "https://api.github.com/users/driazati/orgs",
                "repos_url": "https://api.github.com/users/driazati/repos",
                "events_url": "https://api.github.com/users/driazati/events{/privacy}",
                "received_events_url": "https://api.github.com/users/driazati/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2019-07-05T17:49:24Z",
        "updated_at": "2019-07-16T17:31:04Z",
        "closed_at": "2019-07-16T17:31:04Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "See comment in #21979",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/22553/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/22553/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/22483",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/22483/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/22483/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/22483/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/22483",
        "id": 463569005,
        "node_id": "MDU6SXNzdWU0NjM1NjkwMDU=",
        "number": 22483,
        "title": "[jit] Support for `range(n)` as a value",
        "user": {
            "login": "Chillee",
            "id": 6355099,
            "node_id": "MDQ6VXNlcjYzNTUwOTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6355099?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Chillee",
            "html_url": "https://github.com/Chillee",
            "followers_url": "https://api.github.com/users/Chillee/followers",
            "following_url": "https://api.github.com/users/Chillee/following{/other_user}",
            "gists_url": "https://api.github.com/users/Chillee/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Chillee/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Chillee/subscriptions",
            "organizations_url": "https://api.github.com/users/Chillee/orgs",
            "repos_url": "https://api.github.com/users/Chillee/repos",
            "events_url": "https://api.github.com/users/Chillee/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Chillee/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "eellison",
            "id": 11477974,
            "node_id": "MDQ6VXNlcjExNDc3OTc0",
            "avatar_url": "https://avatars.githubusercontent.com/u/11477974?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eellison",
            "html_url": "https://github.com/eellison",
            "followers_url": "https://api.github.com/users/eellison/followers",
            "following_url": "https://api.github.com/users/eellison/following{/other_user}",
            "gists_url": "https://api.github.com/users/eellison/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eellison/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eellison/subscriptions",
            "organizations_url": "https://api.github.com/users/eellison/orgs",
            "repos_url": "https://api.github.com/users/eellison/repos",
            "events_url": "https://api.github.com/users/eellison/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eellison/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "eellison",
                "id": 11477974,
                "node_id": "MDQ6VXNlcjExNDc3OTc0",
                "avatar_url": "https://avatars.githubusercontent.com/u/11477974?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/eellison",
                "html_url": "https://github.com/eellison",
                "followers_url": "https://api.github.com/users/eellison/followers",
                "following_url": "https://api.github.com/users/eellison/following{/other_user}",
                "gists_url": "https://api.github.com/users/eellison/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/eellison/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eellison/subscriptions",
                "organizations_url": "https://api.github.com/users/eellison/orgs",
                "repos_url": "https://api.github.com/users/eellison/repos",
                "events_url": "https://api.github.com/users/eellison/events{/privacy}",
                "received_events_url": "https://api.github.com/users/eellison/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2019-07-03T06:31:18Z",
        "updated_at": "2019-09-25T22:41:44Z",
        "closed_at": "2019-09-25T22:41:44Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "This is of particular use in list comprehensions:\r\nThis should work:\r\n```python\r\n@torch.jit.script\r\ndef f():\r\n    x = [i for i in range(5)]\r\n    print(x)\r\n```",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/22483/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/22483/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/22109",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/22109/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/22109/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/22109/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/22109",
        "id": 459455832,
        "node_id": "MDU6SXNzdWU0NTk0NTU4MzI=",
        "number": 22109,
        "title": "Multiple (redundant?) return statements in test_jit.py",
        "user": {
            "login": "vadimkantorov",
            "id": 1041752,
            "node_id": "MDQ6VXNlcjEwNDE3NTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1041752?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vadimkantorov",
            "html_url": "https://github.com/vadimkantorov",
            "followers_url": "https://api.github.com/users/vadimkantorov/followers",
            "following_url": "https://api.github.com/users/vadimkantorov/following{/other_user}",
            "gists_url": "https://api.github.com/users/vadimkantorov/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vadimkantorov/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vadimkantorov/subscriptions",
            "organizations_url": "https://api.github.com/users/vadimkantorov/orgs",
            "repos_url": "https://api.github.com/users/vadimkantorov/repos",
            "events_url": "https://api.github.com/users/vadimkantorov/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vadimkantorov/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "Chillee",
            "id": 6355099,
            "node_id": "MDQ6VXNlcjYzNTUwOTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6355099?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Chillee",
            "html_url": "https://github.com/Chillee",
            "followers_url": "https://api.github.com/users/Chillee/followers",
            "following_url": "https://api.github.com/users/Chillee/following{/other_user}",
            "gists_url": "https://api.github.com/users/Chillee/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Chillee/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Chillee/subscriptions",
            "organizations_url": "https://api.github.com/users/Chillee/orgs",
            "repos_url": "https://api.github.com/users/Chillee/repos",
            "events_url": "https://api.github.com/users/Chillee/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Chillee/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "Chillee",
                "id": 6355099,
                "node_id": "MDQ6VXNlcjYzNTUwOTk=",
                "avatar_url": "https://avatars.githubusercontent.com/u/6355099?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/Chillee",
                "html_url": "https://github.com/Chillee",
                "followers_url": "https://api.github.com/users/Chillee/followers",
                "following_url": "https://api.github.com/users/Chillee/following{/other_user}",
                "gists_url": "https://api.github.com/users/Chillee/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/Chillee/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Chillee/subscriptions",
                "organizations_url": "https://api.github.com/users/Chillee/orgs",
                "repos_url": "https://api.github.com/users/Chillee/repos",
                "events_url": "https://api.github.com/users/Chillee/events{/privacy}",
                "received_events_url": "https://api.github.com/users/Chillee/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 3,
        "created_at": "2019-06-22T09:19:36Z",
        "updated_at": "2019-07-16T21:19:52Z",
        "closed_at": "2019-07-16T21:19:52Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "In https://github.com/pytorch/pytorch/blob/master/test/test_jit.py#L5900-L5945 there are several methods with multiple return statements like below:\r\n\r\n```python\r\n@torch.jit.script_method\r\ndef forward(self, x):\r\n    x = self.conv(x)\r\n    return x\r\n    x = self.bn(x)\r\n    return F.relu(x, inplace=True)\r\n```\r\n\r\nIt seems they are redundant, as subsequent return statements are unreachable. If they are there for a debugging purpose, a comment would be nice.",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/22109/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/22109/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/22087",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/22087/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/22087/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/22087/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/22087",
        "id": 459360733,
        "node_id": "MDU6SXNzdWU0NTkzNjA3MzM=",
        "number": 22087,
        "title": "[JIT] Mutable list operation clobbers original instance",
        "user": {
            "login": "jamesr66a",
            "id": 4685384,
            "node_id": "MDQ6VXNlcjQ2ODUzODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4685384?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesr66a",
            "html_url": "https://github.com/jamesr66a",
            "followers_url": "https://api.github.com/users/jamesr66a/followers",
            "following_url": "https://api.github.com/users/jamesr66a/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesr66a/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesr66a/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesr66a/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesr66a/orgs",
            "repos_url": "https://api.github.com/users/jamesr66a/repos",
            "events_url": "https://api.github.com/users/jamesr66a/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesr66a/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "Chillee",
            "id": 6355099,
            "node_id": "MDQ6VXNlcjYzNTUwOTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6355099?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Chillee",
            "html_url": "https://github.com/Chillee",
            "followers_url": "https://api.github.com/users/Chillee/followers",
            "following_url": "https://api.github.com/users/Chillee/following{/other_user}",
            "gists_url": "https://api.github.com/users/Chillee/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Chillee/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Chillee/subscriptions",
            "organizations_url": "https://api.github.com/users/Chillee/orgs",
            "repos_url": "https://api.github.com/users/Chillee/repos",
            "events_url": "https://api.github.com/users/Chillee/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Chillee/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "Chillee",
                "id": 6355099,
                "node_id": "MDQ6VXNlcjYzNTUwOTk=",
                "avatar_url": "https://avatars.githubusercontent.com/u/6355099?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/Chillee",
                "html_url": "https://github.com/Chillee",
                "followers_url": "https://api.github.com/users/Chillee/followers",
                "following_url": "https://api.github.com/users/Chillee/following{/other_user}",
                "gists_url": "https://api.github.com/users/Chillee/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/Chillee/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Chillee/subscriptions",
                "organizations_url": "https://api.github.com/users/Chillee/orgs",
                "repos_url": "https://api.github.com/users/Chillee/repos",
                "events_url": "https://api.github.com/users/Chillee/events{/privacy}",
                "received_events_url": "https://api.github.com/users/Chillee/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 3,
        "created_at": "2019-06-21T20:28:25Z",
        "updated_at": "2019-06-27T20:58:09Z",
        "closed_at": "2019-06-27T20:58:09Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "```\r\nimport torch\r\n\r\ndef foo():\r\n    a = [1, 2, 3]\r\n    b = list(a)\r\n    a.pop()\r\n    return a, b\r\n\r\nfoo_scripted = torch.jit.script(foo)\r\n\r\nprint(foo_scripted.code)\r\nprint('actual', foo_scripted())\r\nprint('expected', foo())\r\nprint(foo_scripted.graph_for())\r\n```\r\n\r\nproduces\r\n\r\n```\r\ndef foo() -> Tuple[List[int], List[int]]:\r\n  a = [1, 2, 3]\r\n  b = torch.list(a)\r\n  _0 = torch.pop(a, -1)\r\n  return (a, b)\r\n\r\nactual ([1, 2], [1, 2])\r\nexpected ([1, 2], [1, 2, 3])\r\ngraph():\r\n  %3 : int = prim::Constant[value=3]() # list_repro.py:4:16\r\n  %2 : int = prim::Constant[value=2]() # list_repro.py:4:13\r\n  %1 : int = prim::Constant[value=1]() # list_repro.py:4:10\r\n  %0 : int = prim::Constant[value=-1]()\r\n  %a.1 : int[] = prim::ListConstruct(%1, %2, %3)\r\n  %b.1 : int[] = aten::list(%a.1) # list_repro.py:5:9\r\n  %6 : int = aten::pop(%a.1, %0) # list_repro.py:6:5\r\n  %7 : (int[], int[]) = prim::TupleConstruct(%a.1, %b.1)\r\n  return (%7)\r\n```\r\n\r\n",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/22087/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/22087/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/21857",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/21857/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/21857/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/21857/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/21857",
        "id": 456975396,
        "node_id": "MDU6SXNzdWU0NTY5NzUzOTY=",
        "number": 21857,
        "title": "Documentation misleading for torch.jit.trace: not all torch.jit.trace will return a TracedModule object",
        "user": {
            "login": "haoransh",
            "id": 12680986,
            "node_id": "MDQ6VXNlcjEyNjgwOTg2",
            "avatar_url": "https://avatars.githubusercontent.com/u/12680986?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/haoransh",
            "html_url": "https://github.com/haoransh",
            "followers_url": "https://api.github.com/users/haoransh/followers",
            "following_url": "https://api.github.com/users/haoransh/following{/other_user}",
            "gists_url": "https://api.github.com/users/haoransh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/haoransh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/haoransh/subscriptions",
            "organizations_url": "https://api.github.com/users/haoransh/orgs",
            "repos_url": "https://api.github.com/users/haoransh/repos",
            "events_url": "https://api.github.com/users/haoransh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/haoransh/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "Krovatkin",
            "id": 5086322,
            "node_id": "MDQ6VXNlcjUwODYzMjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5086322?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Krovatkin",
            "html_url": "https://github.com/Krovatkin",
            "followers_url": "https://api.github.com/users/Krovatkin/followers",
            "following_url": "https://api.github.com/users/Krovatkin/following{/other_user}",
            "gists_url": "https://api.github.com/users/Krovatkin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Krovatkin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Krovatkin/subscriptions",
            "organizations_url": "https://api.github.com/users/Krovatkin/orgs",
            "repos_url": "https://api.github.com/users/Krovatkin/repos",
            "events_url": "https://api.github.com/users/Krovatkin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Krovatkin/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "Krovatkin",
                "id": 5086322,
                "node_id": "MDQ6VXNlcjUwODYzMjI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/5086322?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/Krovatkin",
                "html_url": "https://github.com/Krovatkin",
                "followers_url": "https://api.github.com/users/Krovatkin/followers",
                "following_url": "https://api.github.com/users/Krovatkin/following{/other_user}",
                "gists_url": "https://api.github.com/users/Krovatkin/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/Krovatkin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Krovatkin/subscriptions",
                "organizations_url": "https://api.github.com/users/Krovatkin/orgs",
                "repos_url": "https://api.github.com/users/Krovatkin/repos",
                "events_url": "https://api.github.com/users/Krovatkin/events{/privacy}",
                "received_events_url": "https://api.github.com/users/Krovatkin/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-06-17T14:42:24Z",
        "updated_at": "2019-06-24T19:13:14Z",
        "closed_at": "2019-06-24T19:13:14Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## \ud83d\udcda Documentation\r\n\r\n<!-- A clear and concise description of what content in https://pytorch.org/docs is an issue. If this has to do with the general https://pytorch.org website, please file an issue at https://github.com/pytorch/pytorch.github.io/issues/new/choose instead. If this has to do with https://pytorch.org/tutorials, please file an issue at https://github.com/pytorch/tutorials/issues/new -->\r\n\r\n\r\nThe first cope snippet of https://pytorch.org/docs/stable/jit.html#torch.jit.ScriptModule shows an example to trace \r\n```\r\ndef foo(x, y):\r\n    return 2 * x + y\r\n```\r\n\r\nAnd immediately after this snippet, it says `Tracing a function will construct a ScriptModule`. However, this is not true. For a plain python function like the above example, `torch.jit.trace` will only return a `torch._C.Function` object, instead of a `ScriptModule`.\r\n\r\nThese can be proved easily by the following snippet.\r\n```\r\nimport torch\r\nimport torchvision\r\ndef foo(x, y):\r\n    return 2 * x + y\r\ntraced_foo = torch.jit.trace(foo, (torch.rand(3), torch.rand(3)))\r\nprint(traced_foo)\r\nprint(isinstance(traced_foo, torch.jit.ScriptModule))\r\nprint(isinstance(traced_foo, torch.jit.TracedModule))\r\n\r\ntraced_net = torch.jit.trace(torchvision.models.resnet18(),\r\n                             torch.rand(1, 3, 224, 224))\r\nprint(type(traced_net))\r\nprint(isinstance(traced_net, torch.jit.TracedModule))\r\nprint(isinstance(traced_net, torch.jit.ScriptModule))\r\n```\r\n\r\nThe output is \r\n```\r\n<class 'torch._C.Function'>\r\nFalse\r\nFalse\r\n<class 'torch.jit.TopLevelTracedModule'>\r\nTrue\r\nTrue\r\n```\r\n\r\n\r\nIt's not intuitive that the output of `torch.jit.trace` will return objects of different classes. I think it's better if it could return `torch.jit.TracedModule` too for the plain python function, but obviously it's not the truth for current pytorch.\r\n\r\nBTW, My pytorch version is `1.1.0`.\r\n",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/21857/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/21857/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/21761",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/21761/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/21761/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/21761/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/21761",
        "id": 455990424,
        "node_id": "MDU6SXNzdWU0NTU5OTA0MjQ=",
        "number": 21761,
        "title": "[JIT] Bad error message when instantiating a script class with no __init__",
        "user": {
            "login": "jamesr66a",
            "id": 4685384,
            "node_id": "MDQ6VXNlcjQ2ODUzODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4685384?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesr66a",
            "html_url": "https://github.com/jamesr66a",
            "followers_url": "https://api.github.com/users/jamesr66a/followers",
            "following_url": "https://api.github.com/users/jamesr66a/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesr66a/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesr66a/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesr66a/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesr66a/orgs",
            "repos_url": "https://api.github.com/users/jamesr66a/repos",
            "events_url": "https://api.github.com/users/jamesr66a/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesr66a/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "Chillee",
            "id": 6355099,
            "node_id": "MDQ6VXNlcjYzNTUwOTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6355099?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Chillee",
            "html_url": "https://github.com/Chillee",
            "followers_url": "https://api.github.com/users/Chillee/followers",
            "following_url": "https://api.github.com/users/Chillee/following{/other_user}",
            "gists_url": "https://api.github.com/users/Chillee/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Chillee/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Chillee/subscriptions",
            "organizations_url": "https://api.github.com/users/Chillee/orgs",
            "repos_url": "https://api.github.com/users/Chillee/repos",
            "events_url": "https://api.github.com/users/Chillee/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Chillee/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "Chillee",
                "id": 6355099,
                "node_id": "MDQ6VXNlcjYzNTUwOTk=",
                "avatar_url": "https://avatars.githubusercontent.com/u/6355099?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/Chillee",
                "html_url": "https://github.com/Chillee",
                "followers_url": "https://api.github.com/users/Chillee/followers",
                "following_url": "https://api.github.com/users/Chillee/following{/other_user}",
                "gists_url": "https://api.github.com/users/Chillee/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/Chillee/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Chillee/subscriptions",
                "organizations_url": "https://api.github.com/users/Chillee/orgs",
                "repos_url": "https://api.github.com/users/Chillee/repos",
                "events_url": "https://api.github.com/users/Chillee/events{/privacy}",
                "received_events_url": "https://api.github.com/users/Chillee/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-06-13T23:06:57Z",
        "updated_at": "2019-06-20T04:36:11Z",
        "closed_at": "2019-06-20T04:36:11Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "```\r\nimport torch\r\n\r\n@torch.jit.script\r\nclass Foo(object):\r\n    pass\r\n\r\n@torch.jit.script\r\ndef foo():\r\n    f = Foo()\r\n\r\nprint(foo.graph)\r\n```\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"compile_class_members.py\", line 7, in <module>\r\n    @torch.jit.script\r\n  File \"/Users/jamesreed/pytorch/torch/jit/__init__.py\", line 1084, in script\r\n    fn = torch._C._jit_script_compile(ast, _rcb, get_default_args(obj))\r\nRuntimeError: method INTERNAL ASSERT FAILED at ../torch/csrc/jit/script/sugared_value.h:292, please report a bug to PyTorch.  (call at ../torch/csrc/jit/script/sugared_value.h:292)\r\nframe #0: c10::Error::Error(c10::SourceLocation, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) + 64 (0x1147151b0 in libc10.dylib)\r\nframe #1: torch::jit::script::MethodValue::call(torch::jit::SourceRange const&, torch::jit::Function&, c10::ArrayRef<torch::jit::NamedValue>, c10::ArrayRef<torch::jit::NamedValue>, unsigned long) + 1520 (0x117fb1090 in libtorch.dylib)\r\nframe #2: torch::jit::script::ClassValue::call(torch::jit::SourceRange const&, torch::jit::Function&, c10::ArrayRef<torch::jit::NamedValue>, c10::ArrayRef<torch::jit::NamedValue>, unsigned long) + 326 (0x118006766 in libtorch.dylib)\r\nframe #3: torch::jit::script::to_ir::emitApplyExpr(torch::jit::script::Apply&, unsigned long) + 6600 (0x117fd25e8 in libtorch.dylib)\r\nframe #4: torch::jit::script::to_ir::emitSugaredExpr(torch::jit::script::Expr const&, unsigned long, std::__1::shared_ptr<c10::Type> const&) + 493 (0x117fa99dd in libtorch.dylib)\r\nframe #5: torch::jit::script::to_ir::emitAssignment(torch::jit::script::Assign const&) + 1785 (0x117fa8c69 in libtorch.dylib)\r\nframe #6: torch::jit::script::to_ir::emitStatements(torch::jit::script::ListIterator<torch::jit::script::Stmt>, torch::jit::script::ListIterator<torch::jit::script::Stmt>) + 1550 (0x117f9b1ee in libtorch.dylib)\r\nframe #7: torch::jit::script::to_ir::emitDef(torch::jit::script::Def const&, std::__1::function<std::__1::shared_ptr<torch::jit::script::SugaredValue> (torch::jit::Value*)> const&, torch::jit::Block*) + 376 (0x117f98328 in libtorch.dylib)\r\nframe #8: torch::jit::script::to_ir::to_ir(torch::jit::script::Def const&, std::__1::shared_ptr<torch::jit::script::Resolver>, std::__1::function<std::__1::shared_ptr<torch::jit::script::SugaredValue> (torch::jit::Value*)> const&, torch::jit::Function&) + 606 (0x117f9787e in libtorch.dylib)\r\nframe #9: std::__1::__function::__func<torch::jit::script::CompilationUnit::define(std::__1::vector<torch::jit::script::Def, std::__1::allocator<torch::jit::script::Def> > const&, std::__1::vector<std::__1::shared_ptr<torch::jit::script::Resolver>, std::__1::allocator<std::__1::shared_ptr<torch::jit::script::Resolver> > > const&, std::__1::function<std::__1::shared_ptr<torch::jit::script::SugaredValue> (torch::jit::Value*)> const&)::$_1, std::__1::allocator<torch::jit::script::CompilationUnit::define(std::__1::vector<torch::jit::script::Def, std::__1::allocator<torch::jit::script::Def> > const&, std::__1::vector<std::__1::shared_ptr<torch::jit::script::Resolver>, std::__1::allocator<std::__1::shared_ptr<torch::jit::script::Resolver> > > const&, std::__1::function<std::__1::shared_ptr<torch::jit::script::SugaredValue> (torch::jit::Value*)> const&)::$_1>, void (torch::jit::Function&)>::operator()(torch::jit::Function&) + 80 (0x117f97450 in libtorch.dylib)\r\nframe #10: torch::jit::Function::ensure_defined() + 196 (0x118063f64 in libtorch.dylib)\r\nframe #11: torch::jit::script::CompilationUnit::define(std::__1::vector<torch::jit::script::Def, std::__1::allocator<torch::jit::script::Def> > const&, std::__1::vector<std::__1::shared_ptr<torch::jit::script::Resolver>, std::__1::allocator<std::__1::shared_ptr<torch::jit::script::Resolver> > > const&, std::__1::function<std::__1::shared_ptr<torch::jit::script::SugaredValue> (torch::jit::Value*)> const&) + 2456 (0x117f94b08 in libtorch.dylib)\r\nframe #12: void pybind11::cpp_function::initialize<torch::jit::script::initJitScriptBindings(_object*)::$_32, std::__1::shared_ptr<torch::jit::Function>, torch::jit::script::Def const&, std::__1::function<pybind11::function (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >)>, std::__1::unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, pybind11::object, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, pybind11::object> > >, pybind11::name, pybind11::scope, pybind11::sibling>(torch::jit::script::initJitScriptBindings(_object*)::$_32&&, std::__1::shared_ptr<torch::jit::Function> (*)(torch::jit::script::Def const&, std::__1::function<pybind11::function (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >)>, std::__1::unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, pybind11::object, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, pybind11::object> > >), pybind11::name const&, pybind11::scope const&, pybind11::sibling const&)::'lambda'(pybind11::detail::function_call&)::__invoke(pybind11::detail::function_call&) + 920 (0x11596d7c8 in libtorch_python.dylib)\r\nframe #13: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) + 2865 (0x115580ae1 in libtorch_python.dylib)\r\n<omitting python frames>\r\nframe #26: start + 1 (0x7fff62cdd3d5 in libdyld.dylib)\r\n```",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/21761/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/21761/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/21710",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/21710/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/21710/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/21710/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/21710",
        "id": 455456453,
        "node_id": "MDU6SXNzdWU0NTU0NTY0NTM=",
        "number": 21710,
        "title": "Python 3.8: Can't use constants in jit script",
        "user": {
            "login": "umanwizard",
            "id": 1893159,
            "node_id": "MDQ6VXNlcjE4OTMxNTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1893159?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/umanwizard",
            "html_url": "https://github.com/umanwizard",
            "followers_url": "https://api.github.com/users/umanwizard/followers",
            "following_url": "https://api.github.com/users/umanwizard/following{/other_user}",
            "gists_url": "https://api.github.com/users/umanwizard/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/umanwizard/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/umanwizard/subscriptions",
            "organizations_url": "https://api.github.com/users/umanwizard/orgs",
            "repos_url": "https://api.github.com/users/umanwizard/repos",
            "events_url": "https://api.github.com/users/umanwizard/events{/privacy}",
            "received_events_url": "https://api.github.com/users/umanwizard/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 443484135,
                "node_id": "MDU6TGFiZWw0NDM0ODQxMzU=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/high%20priority",
                "name": "high priority",
                "color": "F22613",
                "default": false,
                "description": null
            },
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2019-06-12T22:44:38Z",
        "updated_at": "2019-06-21T21:24:40Z",
        "closed_at": "2019-06-21T21:24:40Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\nThis works with Python 3.7 but fails on Python 3.8\r\n**test.py**\r\n```python\r\nimport torch\r\n@torch.jit.script\r\ndef foo(x):\r\n    return torch.sum(x, dim=1)\r\n```\r\n**error message**\r\n```\r\nTraceback (most recent call last):\r\n  File \"./test.py\", line 3, in <module>\r\n    def foo(x):\r\n  File \"/Users/btv/pysandbox/lib/python3.8/site-packages/torch/jit/__init__.py\", line 1079, in script\r\n    ast = get_jit_def(obj)\r\n  File \"/Users/btv/pysandbox/lib/python3.8/site-packages/torch/jit/frontend.py\", line 169, in get_jit_def\r\n    return build_def(ctx, py_ast.body[0], type_line, self_name)\r\n  File \"/Users/btv/pysandbox/lib/python3.8/site-packages/torch/jit/frontend.py\", line 209, in build_def\r\n    build_stmts(ctx, body))\r\n  File \"/Users/btv/pysandbox/lib/python3.8/site-packages/torch/jit/frontend.py\", line 125, in build_stmts\r\n    stmts = [build_stmt(ctx, s) for s in stmts]\r\n  File \"/Users/btv/pysandbox/lib/python3.8/site-packages/torch/jit/frontend.py\", line 125, in <listcomp>\r\n    stmts = [build_stmt(ctx, s) for s in stmts]\r\n  File \"/Users/btv/pysandbox/lib/python3.8/site-packages/torch/jit/frontend.py\", line 185, in __call__\r\n    return method(ctx, node)\r\n  File \"/Users/btv/pysandbox/lib/python3.8/site-packages/torch/jit/frontend.py\", line 288, in build_Return\r\n    return Return(r, None if stmt.value is None else build_expr(ctx, stmt.value))\r\n  File \"/Users/btv/pysandbox/lib/python3.8/site-packages/torch/jit/frontend.py\", line 185, in __call__\r\n    return method(ctx, node)\r\n  File \"/Users/btv/pysandbox/lib/python3.8/site-packages/torch/jit/frontend.py\", line 422, in build_Call\r\n    kw_expr = build_expr(ctx, kw.value)\r\n  File \"/Users/btv/pysandbox/lib/python3.8/site-packages/torch/jit/frontend.py\", line 184, in __call__\r\n    raise UnsupportedNodeError(ctx, node)\r\ntorch.jit.frontend.UnsupportedNodeError: Constant aren't supported\r\nat ./test.py:4:29\r\n@torch.jit.script\r\ndef foo(x):\r\n    return torch.sum(x, dim=1)\r\n                            ~ <--- HERE\r\n```\r\n<!-- If you have a code sample, error messages, stack traces, please provide it here as well -->\r\n\r\n## Expected behavior\r\n\r\n<!-- A clear and concise description of what you expected to happen. -->\r\n\r\n## Environment\r\n\r\n```\r\nCollecting environment information...\r\nPyTorch version: 1.2.0a0+b527e48\r\nIs debug build: Yes\r\nCUDA used to build PyTorch: None\r\n\r\nOS: Mac OSX 10.14.4\r\nGCC version: Could not collect\r\nCMake version: version 3.12.4\r\n\r\nPython version: 3.8\r\nIs CUDA available: No\r\nCUDA runtime version: No CUDA\r\nGPU models and configuration: No CUDA\r\nNvidia driver version: No CUDA\r\ncuDNN version: No CUDA\r\n\r\nVersions of relevant libraries:\r\n[pip] Could not collect\r\n[conda] Could not collect\r\n```\r\n\r\n## Additional context\r\n\r\n<!-- Add any other context about the problem here. -->\r\n",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/21710/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/21710/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/21406",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/21406/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/21406/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/21406/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/21406",
        "id": 452414972,
        "node_id": "MDU6SXNzdWU0NTI0MTQ5NzI=",
        "number": 21406,
        "title": "matmul in a ScriptModule requires much memory",
        "user": {
            "login": "nict-wisdom",
            "id": 5086659,
            "node_id": "MDQ6VXNlcjUwODY2NTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5086659?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nict-wisdom",
            "html_url": "https://github.com/nict-wisdom",
            "followers_url": "https://api.github.com/users/nict-wisdom/followers",
            "following_url": "https://api.github.com/users/nict-wisdom/following{/other_user}",
            "gists_url": "https://api.github.com/users/nict-wisdom/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nict-wisdom/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nict-wisdom/subscriptions",
            "organizations_url": "https://api.github.com/users/nict-wisdom/orgs",
            "repos_url": "https://api.github.com/users/nict-wisdom/repos",
            "events_url": "https://api.github.com/users/nict-wisdom/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nict-wisdom/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 443484135,
                "node_id": "MDU6TGFiZWw0NDM0ODQxMzU=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/high%20priority",
                "name": "high priority",
                "color": "F22613",
                "default": false,
                "description": null
            },
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "ailzhang",
            "id": 5248122,
            "node_id": "MDQ6VXNlcjUyNDgxMjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5248122?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ailzhang",
            "html_url": "https://github.com/ailzhang",
            "followers_url": "https://api.github.com/users/ailzhang/followers",
            "following_url": "https://api.github.com/users/ailzhang/following{/other_user}",
            "gists_url": "https://api.github.com/users/ailzhang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ailzhang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ailzhang/subscriptions",
            "organizations_url": "https://api.github.com/users/ailzhang/orgs",
            "repos_url": "https://api.github.com/users/ailzhang/repos",
            "events_url": "https://api.github.com/users/ailzhang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ailzhang/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "ailzhang",
                "id": 5248122,
                "node_id": "MDQ6VXNlcjUyNDgxMjI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/5248122?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ailzhang",
                "html_url": "https://github.com/ailzhang",
                "followers_url": "https://api.github.com/users/ailzhang/followers",
                "following_url": "https://api.github.com/users/ailzhang/following{/other_user}",
                "gists_url": "https://api.github.com/users/ailzhang/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ailzhang/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ailzhang/subscriptions",
                "organizations_url": "https://api.github.com/users/ailzhang/orgs",
                "repos_url": "https://api.github.com/users/ailzhang/repos",
                "events_url": "https://api.github.com/users/ailzhang/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ailzhang/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 6,
        "created_at": "2019-06-05T09:59:21Z",
        "updated_at": "2019-07-30T05:38:12Z",
        "closed_at": "2019-07-30T05:38:12Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\nmatmul in a ScriptModule requires much more memory than in a regular (non-JIT) module.\r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior: Run the following script.\r\n\r\n```python\r\nimport torch\r\nimport torch.nn as nn\r\nimport torch.nn.functional as F\r\n\r\n\r\nclass Net(nn.Module):\r\n    def __init__(self):\r\n        super(Net, self).__init__()\r\n        self.fc = nn.Linear(768, 100000)\r\n\r\n    def forward(self, x):\r\n        x = x * 2\r\n        x = x * 2\r\n        x = x * 2\r\n        x = self.fc(x)\r\n        return x\r\n\r\n# trace on cpu\r\nm = Net()\r\nx = torch.randn(10, 128, 768)\r\njm = torch.jit.trace(m, x)\r\njm = jm.to(\"cuda\")\r\n\r\nfor i in range(0,2):\r\n    x = torch.randn(10, 128, 768, requires_grad=True).to(\"cuda\")\r\n    y = jm(x)\r\n    tgt = torch.randn_like(y)\r\n    y.backward(tgt)\r\n```\r\nI checked the GPU memory usage at the end of the script (by inserting input()).\r\nnvidia-smi said\r\n```\r\n|    0    155985      C   python                                      8109MiB |\r\n```\r\n\r\nThe non-JIT version\r\n```python\r\nimport torch\r\nimport torch.nn as nn\r\nimport torch.nn.functional as F\r\n\r\n\r\nclass Net(nn.Module):\r\n    def __init__(self):\r\n        super(Net, self).__init__()\r\n        self.fc = nn.Linear(768, 100000)\r\n\r\n    def forward(self, x):\r\n        x = x * 2\r\n        x = x * 2\r\n        x = x * 2\r\n        x = self.fc(x)\r\n        return x\r\n\r\n\r\nm = Net().to(\"cuda\")\r\n\r\nfor i in range(0,2):\r\n    x = torch.randn(10, 128, 768, requires_grad=True).to(\"cuda\")\r\n    y = m(x)\r\n    tgt = torch.randn_like(y)\r\n    y.backward(tgt)\r\n```\r\nrequires much less.\r\nnvidia-smi showed\r\n```\r\n|    0    156120      C   python                                      2739MiB |\r\n```\r\n\r\nThe memory usage increases during backward.\r\nMore precisely,  ``matmul`` in ``LinearAlgebra.cpp`` is called in ``DifferentiableGraphOp`` and uses much memory.\r\nThe memory usage even increases by the second call of ``backward``.\r\n\r\nI thought this could be related to #18862, but the latest nightly build ``1.2.0.dev20190605`` didn't solve the problem.\r\n\r\n## Expected behavior\r\n\r\nI expect that the JIT version requires the almost same amount of memory as the non-JIT version.\r\n\r\n## Environment\r\n\r\nI created a new conda environment and installed the latest nightly build (``1.2.0.dev20190605``).\r\n\r\nPyTorch version: 1.2.0.dev20190605\r\nIs debug build: No\r\nCUDA used to build PyTorch: 9.0.176\r\n\r\nOS: CentOS Linux release 7.5.1804 (Core)\r\nGCC version: (GCC) 4.8.5 20150623 (Red Hat 4.8.5-28)\r\nCMake version: version 3.14.4\r\n\r\nPython version: 3.7\r\nIs CUDA available: Yes\r\nCUDA runtime version: 9.2.88\r\nGPU models and configuration:\r\nGPU 0: Tesla P100-PCIE-16GB\r\nGPU 1: Tesla P100-PCIE-16GB\r\n\r\nNvidia driver version: 396.26\r\ncuDNN version: Could not collect\r\n\r\nVersions of relevant libraries:\r\n[pip] numpy==1.16.4\r\n[pip] torch==1.2.0.dev20190605\r\n[conda] blas                      1.0                         mkl\r\n[conda] mkl                       2019.4                      243\r\n[conda] mkl_fft                   1.0.12           py37ha843d7b_0\r\n[conda] mkl_random                1.0.2            py37hd81dba3_0\r\n[conda] pytorch-nightly           1.2.0.dev20190605 py3.7_cuda9.0.176_cudnn7.5.1_0    pytorch\r\n## Additional context\r\n\r\n<!-- Add any other context about the problem here. -->\r\n",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/21406/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/21406/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/20978",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/20978/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/20978/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/20978/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/20978",
        "id": 448672730,
        "node_id": "MDU6SXNzdWU0NDg2NzI3MzA=",
        "number": 20978,
        "title": "Cannot print LayerNorm in ScriptModule",
        "user": {
            "login": "draplater",
            "id": 6349758,
            "node_id": "MDQ6VXNlcjYzNDk3NTg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6349758?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/draplater",
            "html_url": "https://github.com/draplater",
            "followers_url": "https://api.github.com/users/draplater/followers",
            "following_url": "https://api.github.com/users/draplater/following{/other_user}",
            "gists_url": "https://api.github.com/users/draplater/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/draplater/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/draplater/subscriptions",
            "organizations_url": "https://api.github.com/users/draplater/orgs",
            "repos_url": "https://api.github.com/users/draplater/repos",
            "events_url": "https://api.github.com/users/draplater/events{/privacy}",
            "received_events_url": "https://api.github.com/users/draplater/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "driazati",
            "id": 9407960,
            "node_id": "MDQ6VXNlcjk0MDc5NjA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9407960?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/driazati",
            "html_url": "https://github.com/driazati",
            "followers_url": "https://api.github.com/users/driazati/followers",
            "following_url": "https://api.github.com/users/driazati/following{/other_user}",
            "gists_url": "https://api.github.com/users/driazati/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/driazati/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/driazati/subscriptions",
            "organizations_url": "https://api.github.com/users/driazati/orgs",
            "repos_url": "https://api.github.com/users/driazati/repos",
            "events_url": "https://api.github.com/users/driazati/events{/privacy}",
            "received_events_url": "https://api.github.com/users/driazati/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "driazati",
                "id": 9407960,
                "node_id": "MDQ6VXNlcjk0MDc5NjA=",
                "avatar_url": "https://avatars.githubusercontent.com/u/9407960?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/driazati",
                "html_url": "https://github.com/driazati",
                "followers_url": "https://api.github.com/users/driazati/followers",
                "following_url": "https://api.github.com/users/driazati/following{/other_user}",
                "gists_url": "https://api.github.com/users/driazati/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/driazati/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/driazati/subscriptions",
                "organizations_url": "https://api.github.com/users/driazati/orgs",
                "repos_url": "https://api.github.com/users/driazati/repos",
                "events_url": "https://api.github.com/users/driazati/events{/privacy}",
                "received_events_url": "https://api.github.com/users/driazati/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2019-05-27T05:34:15Z",
        "updated_at": "2019-05-29T20:58:19Z",
        "closed_at": "2019-05-29T20:58:19Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\nVersion: master (1.2.0.dev20190526)\r\nGot KeyError: 'elementwise_affine' when printing a ScriptModule with a LayerNorm in it.\r\n\r\n## To Reproduce\r\n```python\r\nimport torch\r\nfrom torch.nn import LayerNorm\r\nfrom torch.jit import ScriptModule\r\n\r\n\r\nclass Test(ScriptModule):\r\n    def __init__(self, dim):\r\n        super().__init__()\r\n        self.layer_norm = LayerNorm(dim)\r\n\r\n\r\nif __name__ == '__main__':\r\n    m = Test(100)\r\n    print(m)\r\n```\r\n\r\nThe result is:\r\n```\r\nraceback (most recent call last):\r\n  File \"/home/chenyufei/Development/nn-parser/local_scripts/pytorch_1_2_master_bug.py\", line 14, in <module>\r\n    print(m)\r\n  File \"/home/chenyufei/.local/anaconda3.7/lib/python3.7/site-packages/torch/nn/modules/module.py\", line 1044, in __repr__\r\n    mod_str = repr(module)\r\n  File \"/home/chenyufei/.local/anaconda3.7/lib/python3.7/site-packages/torch/nn/modules/module.py\", line 1038, in __repr__\r\n    extra_repr = self.extra_repr()\r\n  File \"/home/chenyufei/.local/anaconda3.7/lib/python3.7/site-packages/torch/nn/modules/normalization.py\", line 161, in extra_repr\r\n    'elementwise_affine={elementwise_affine}'.format(**self.__dict__)\r\nKeyError: 'elementwise_affine'\r\n```\r\n\r\n## Expected behavior\r\nIn stable version, it is:\r\n```\r\nTest(\r\n  (layer_norm): WeakScriptModuleProxy()\r\n)\r\n```\r\n\r\n## Environment\r\nCollecting environment information...\r\nPyTorch version: 1.2.0.dev20190526\r\nIs debug build: No\r\nCUDA used to build PyTorch: 9.0.176\r\n\r\nOS: Ubuntu 18.04.1 LTS\r\nGCC version: (Ubuntu 6.5.0-2ubuntu1~18.04) 6.5.0 20181026\r\nCMake version: version 3.10.2\r\n\r\nPython version: 3.7\r\nIs CUDA available: Yes\r\nCUDA runtime version: Could not collect\r\nGPU models and configuration: \r\nGPU 0: GeForce GTX 980 Ti\r\nGPU 1: GeForce GTX TITAN X\r\n\r\nNvidia driver version: 390.116\r\ncuDNN version: /usr/lib/x86_64-linux-gnu/libcudnn.so.7.1.4\r\n\r\nVersions of relevant libraries:\r\n[pip3] msgpack-numpy==0.4.3.1\r\n[pip3] numpy==1.16.2\r\n[pip3] numpydoc==0.8.0\r\n[pip3] pytorch-pretrained-bert==0.6.1\r\n[pip3] torch==1.0.0\r\n[pip3] torchfile==0.1.0\r\n[pip3] torchtext==0.4.0\r\n[pip3] torchvision==0.2.1\r\n[conda] Could not collect\r\n",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/20978/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/20978/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/20862",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/20862/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/20862/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/20862/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/20862",
        "id": 447737447,
        "node_id": "MDU6SXNzdWU0NDc3Mzc0NDc=",
        "number": 20862,
        "title": "torch.jit.trace crash in presence of hooks, even in well determined models.",
        "user": {
            "login": "jeremycochoy",
            "id": 4193259,
            "node_id": "MDQ6VXNlcjQxOTMyNTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4193259?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jeremycochoy",
            "html_url": "https://github.com/jeremycochoy",
            "followers_url": "https://api.github.com/users/jeremycochoy/followers",
            "following_url": "https://api.github.com/users/jeremycochoy/following{/other_user}",
            "gists_url": "https://api.github.com/users/jeremycochoy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jeremycochoy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jeremycochoy/subscriptions",
            "organizations_url": "https://api.github.com/users/jeremycochoy/orgs",
            "repos_url": "https://api.github.com/users/jeremycochoy/repos",
            "events_url": "https://api.github.com/users/jeremycochoy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jeremycochoy/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2019-05-23T15:41:01Z",
        "updated_at": "2019-08-01T16:54:25Z",
        "closed_at": "2019-08-01T16:54:25Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\nIf one want to compile a model using hook but with a well determined behavior while traced, the trace function raise anyway. There doesn't seams to be a way to force the trace function to ignore the raise:\r\n```python\r\nif orig._backward_hooks or orig._forward_hooks or orig._forward_pre_hooks:\r\n    raise ValueError(\"Modules that have hooks assigned can't be compiled\")\r\n```\r\n\r\n## To Reproduce\r\n\r\nJust take a model with a dummy hook. Trace will fail.\r\n\r\n## Expected behavior\r\n\r\nTrace should only warn, or ask a special argument (something like `torch.jit.trace(model, dummy, ignore_hooks=True)` )\r\n\r\n## Additional context\r\n\r\nA quick fix would be to transform the raise into a warning. A better fix would be to ask the user to explicitly tell he want trace to ignore the presence of hooks.\r\n\r\n\r\nBest regards,\r\n",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/20862/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/20862/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/20615",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/20615/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/20615/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/20615/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/20615",
        "id": 445196027,
        "node_id": "MDU6SXNzdWU0NDUxOTYwMjc=",
        "number": 20615,
        "title": "[jit] del statements aren't supported",
        "user": {
            "login": "driazati",
            "id": 9407960,
            "node_id": "MDQ6VXNlcjk0MDc5NjA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9407960?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/driazati",
            "html_url": "https://github.com/driazati",
            "followers_url": "https://api.github.com/users/driazati/followers",
            "following_url": "https://api.github.com/users/driazati/following{/other_user}",
            "gists_url": "https://api.github.com/users/driazati/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/driazati/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/driazati/subscriptions",
            "organizations_url": "https://api.github.com/users/driazati/orgs",
            "repos_url": "https://api.github.com/users/driazati/repos",
            "events_url": "https://api.github.com/users/driazati/events{/privacy}",
            "received_events_url": "https://api.github.com/users/driazati/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            },
            {
                "id": 1301447942,
                "node_id": "MDU6TGFiZWwxMzAxNDQ3OTQy",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/enhancement",
                "name": "enhancement",
                "color": "ffc6f4",
                "default": true,
                "description": "Not as big of a feature, but technically not a bug. Should be easy to fix"
            },
            {
                "id": 1594104112,
                "node_id": "MDU6TGFiZWwxNTk0MTA0MTEy",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/jit-backlog",
                "name": "jit-backlog",
                "color": "eacf96",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2019-05-16T23:09:13Z",
        "updated_at": "2019-12-19T02:19:35Z",
        "closed_at": "2019-12-19T02:19:35Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "`del` isn't currently supported for dicts or lists:\r\n\r\n```python\r\n@torch.jit.script\r\ndef fn(x):\r\n    # type: (Dict[str, int])\r\n    x.pop(\"hi\")\t\t# ok\r\n    del x[\"hello\"]\t# torch.jit.frontend.UnsupportedNodeError: del statements aren't supported\r\n```\r\n\r\n`del` can also be used on lists:\r\n```python\r\n@torch.jit.script\r\ndef fn(x):\r\n    # type: (List[str])\r\n    del x[0]\t\t# torch.jit.frontend.UnsupportedNodeError: del statements aren't supported:\r\n```\r\n\r\ncc @suo",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/20615/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/20615/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/20495",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/20495/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/20495/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/20495/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/20495",
        "id": 444065735,
        "node_id": "MDU6SXNzdWU0NDQwNjU3MzU=",
        "number": 20495,
        "title": "Improve attribute missing error message.",
        "user": {
            "login": "zdevito",
            "id": 370202,
            "node_id": "MDQ6VXNlcjM3MDIwMg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/370202?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zdevito",
            "html_url": "https://github.com/zdevito",
            "followers_url": "https://api.github.com/users/zdevito/followers",
            "following_url": "https://api.github.com/users/zdevito/following{/other_user}",
            "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions",
            "organizations_url": "https://api.github.com/users/zdevito/orgs",
            "repos_url": "https://api.github.com/users/zdevito/repos",
            "events_url": "https://api.github.com/users/zdevito/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zdevito/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "Chillee",
            "id": 6355099,
            "node_id": "MDQ6VXNlcjYzNTUwOTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6355099?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Chillee",
            "html_url": "https://github.com/Chillee",
            "followers_url": "https://api.github.com/users/Chillee/followers",
            "following_url": "https://api.github.com/users/Chillee/following{/other_user}",
            "gists_url": "https://api.github.com/users/Chillee/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Chillee/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Chillee/subscriptions",
            "organizations_url": "https://api.github.com/users/Chillee/orgs",
            "repos_url": "https://api.github.com/users/Chillee/repos",
            "events_url": "https://api.github.com/users/Chillee/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Chillee/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "Chillee",
                "id": 6355099,
                "node_id": "MDQ6VXNlcjYzNTUwOTk=",
                "avatar_url": "https://avatars.githubusercontent.com/u/6355099?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/Chillee",
                "html_url": "https://github.com/Chillee",
                "followers_url": "https://api.github.com/users/Chillee/followers",
                "following_url": "https://api.github.com/users/Chillee/following{/other_user}",
                "gists_url": "https://api.github.com/users/Chillee/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/Chillee/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Chillee/subscriptions",
                "organizations_url": "https://api.github.com/users/Chillee/orgs",
                "repos_url": "https://api.github.com/users/Chillee/repos",
                "events_url": "https://api.github.com/users/Chillee/events{/privacy}",
                "received_events_url": "https://api.github.com/users/Chillee/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-05-14T18:39:35Z",
        "updated_at": "2019-05-28T19:30:20Z",
        "closed_at": "2019-05-28T19:30:20Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "When accessing a non-existent attribute on a script module, it gives the error below. It should instead say the attribute does not exist (which is different from it being None).\r\n```\r\n        class A(torch.jit.ScriptModule):\r\n            def __init__(self):\r\n                super(A, self).__init__()\r\n\r\n            @torch.jit.script_method\r\n            def forward(self, x):\r\n                return x + self.whatisgoingon\r\n\r\n        class B(A):\r\n            def __init__(self):\r\n                super(B, self).__init__()\r\n            @torch.jit.script_method\r\n            def bar(self, x):\r\n                return x * x \r\n        \r\n        A()\r\n```\r\n\r\n```\r\nattribute 'whatisgoingon' of type 'NoneType' is not usable in a script method (did you forget to add it __constants__?):\r\n@torch.jit.script_method\r\ndef forward(self, x):\r\n    return x + self.whatisgoingon\r\n               ~~~~~~~~~~~~~~~~~~ <--- HERE\r\n```",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/20495/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/20495/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/20399",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/20399/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/20399/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/20399/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/20399",
        "id": 443044646,
        "node_id": "MDU6SXNzdWU0NDMwNDQ2NDY=",
        "number": 20399,
        "title": "[jit] can't use script classes as torch.jit.Attribute",
        "user": {
            "login": "suo",
            "id": 1617424,
            "node_id": "MDQ6VXNlcjE2MTc0MjQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1617424?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/suo",
            "html_url": "https://github.com/suo",
            "followers_url": "https://api.github.com/users/suo/followers",
            "following_url": "https://api.github.com/users/suo/following{/other_user}",
            "gists_url": "https://api.github.com/users/suo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/suo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/suo/subscriptions",
            "organizations_url": "https://api.github.com/users/suo/orgs",
            "repos_url": "https://api.github.com/users/suo/repos",
            "events_url": "https://api.github.com/users/suo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/suo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "driazati",
            "id": 9407960,
            "node_id": "MDQ6VXNlcjk0MDc5NjA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9407960?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/driazati",
            "html_url": "https://github.com/driazati",
            "followers_url": "https://api.github.com/users/driazati/followers",
            "following_url": "https://api.github.com/users/driazati/following{/other_user}",
            "gists_url": "https://api.github.com/users/driazati/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/driazati/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/driazati/subscriptions",
            "organizations_url": "https://api.github.com/users/driazati/orgs",
            "repos_url": "https://api.github.com/users/driazati/repos",
            "events_url": "https://api.github.com/users/driazati/events{/privacy}",
            "received_events_url": "https://api.github.com/users/driazati/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "driazati",
                "id": 9407960,
                "node_id": "MDQ6VXNlcjk0MDc5NjA=",
                "avatar_url": "https://avatars.githubusercontent.com/u/9407960?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/driazati",
                "html_url": "https://github.com/driazati",
                "followers_url": "https://api.github.com/users/driazati/followers",
                "following_url": "https://api.github.com/users/driazati/following{/other_user}",
                "gists_url": "https://api.github.com/users/driazati/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/driazati/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/driazati/subscriptions",
                "organizations_url": "https://api.github.com/users/driazati/orgs",
                "repos_url": "https://api.github.com/users/driazati/repos",
                "events_url": "https://api.github.com/users/driazati/events{/privacy}",
                "received_events_url": "https://api.github.com/users/driazati/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 3,
        "created_at": "2019-05-11T23:08:36Z",
        "updated_at": "2019-08-16T19:47:22Z",
        "closed_at": "2019-08-16T19:47:22Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "```\r\n@torch.jit.script\r\nclass BoundingBoxList:\r\n    def __init__(self, bbox, image_size: Tuple[int, int], mode: str):\r\n        self.size = image_size\r\n        self.mode = mode\r\n        self.bbox = bbox\r\n\r\nclass Foo(torch.jit.ScriptModule):\r\n    def __init__(self, bbox):\r\n        super(Foo, self).__init__(False)\r\n        self.words = torch.jit.Attribute(bbox, BoundingBoxList)\r\n\r\n    @torch.jit.script_method\r\n    def forward(self, input):\r\n        # type: (str) -> int\r\n        return self.words.convert(\"xyxy\")\r\n\r\nf = Foo(BoundingBoxList(torch.rand(3, 4), (2, 3), \"xyxy\"))\r\n```\r\nresults in:\r\n```\r\nTraceback (most recent call last):\r\n  File \"/Users/suo/scratch/test.py\", line 64, in <module>\r\n    f = Foo(BoundingBoxList(torch.rand(3, 4), (2, 3), \"xyxy\"))\r\n  File \"/Users/suo/pytorch/torch/jit/__init__.py\", line 1178, in init_then_register\r\n    original_init(self, *args, **kwargs)\r\n  File \"/Users/suo/scratch/test.py\", line 57, in __init__\r\n    self.words = torch.jit.Attribute(bbox, BoundingBoxList)\r\n  File \"/Users/suo/pytorch/torch/jit/__init__.py\", line 1377, in __setattr__\r\n    the_type = torch.jit.annotations.ann_to_type(value.type)\r\n  File \"/Users/suo/pytorch/torch/jit/annotations.py\", line 184, in ann_to_type\r\n    raise ValueError(\"Unknown type annotation: '{}'\".format(ann.__name__))\r\nValueError: Unknown type annotation: 'BoundingBoxList'\r\n```",
        "closed_by": {
            "login": "driazati",
            "id": 9407960,
            "node_id": "MDQ6VXNlcjk0MDc5NjA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9407960?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/driazati",
            "html_url": "https://github.com/driazati",
            "followers_url": "https://api.github.com/users/driazati/followers",
            "following_url": "https://api.github.com/users/driazati/following{/other_user}",
            "gists_url": "https://api.github.com/users/driazati/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/driazati/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/driazati/subscriptions",
            "organizations_url": "https://api.github.com/users/driazati/orgs",
            "repos_url": "https://api.github.com/users/driazati/repos",
            "events_url": "https://api.github.com/users/driazati/events{/privacy}",
            "received_events_url": "https://api.github.com/users/driazati/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/20399/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/20399/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/20356",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/20356/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/20356/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/20356/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/20356",
        "id": 442624521,
        "node_id": "MDU6SXNzdWU0NDI2MjQ1MjE=",
        "number": 20356,
        "title": "Load tensor from file in C++ fails ",
        "user": {
            "login": "jbcdnr",
            "id": 6209990,
            "node_id": "MDQ6VXNlcjYyMDk5OTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6209990?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jbcdnr",
            "html_url": "https://github.com/jbcdnr",
            "followers_url": "https://api.github.com/users/jbcdnr/followers",
            "following_url": "https://api.github.com/users/jbcdnr/following{/other_user}",
            "gists_url": "https://api.github.com/users/jbcdnr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jbcdnr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jbcdnr/subscriptions",
            "organizations_url": "https://api.github.com/users/jbcdnr/orgs",
            "repos_url": "https://api.github.com/users/jbcdnr/repos",
            "events_url": "https://api.github.com/users/jbcdnr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jbcdnr/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 443484135,
                "node_id": "MDU6TGFiZWw0NDM0ODQxMzU=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/high%20priority",
                "name": "high priority",
                "color": "F22613",
                "default": false,
                "description": null
            },
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 917150434,
                "node_id": "MDU6TGFiZWw5MTcxNTA0MzQ=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20cpp",
                "name": "module: cpp",
                "color": "f7e101",
                "default": false,
                "description": "Related to C++ API"
            },
            {
                "id": 1300977106,
                "node_id": "MDU6TGFiZWwxMzAwOTc3MTA2",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20serialization",
                "name": "module: serialization",
                "color": "f7e101",
                "default": false,
                "description": "Issues related to serialization (e.g., via pickle, or otherwise) of PyTorch objects"
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 28,
        "created_at": "2019-05-10T09:27:51Z",
        "updated_at": "2023-02-16T18:17:55Z",
        "closed_at": "2019-11-23T08:06:19Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\nI don't manage to import a tensor saved in PyTorch from C++. Any help on this is welcome \ud83d\ude04 \r\n\r\n## To Reproduce\r\n\r\nSave a tensor to a file in python.\r\n\r\n```python\r\n>>> import torch\r\n>>> torch.save(torch.tensor([1., 2., 3.]), \"tensor.pt\")\r\n>>> torch.load(\"tensor.pt\")\r\ntensor([1., 2., 3.])\r\n```\r\n\r\nBuild this small C++ program\r\n\r\n```cpp\r\n#include <torch/torch.h>\r\n\r\nint main() {\r\n  torch::Tensor tensor;\r\n  torch::load(tensor, \"tensor.pt\");\r\n  std::cout << tensor << std::endl;\r\n}\r\n```\r\n\r\nAt runtime I get:\r\n\r\n```\r\nterminate called after throwing an instance of 'c10::Error'\r\n  what():  [enforce fail at inline_container.cc:137] . PytorchStreamReader failed reading zip archive: failed finding central directory\r\nframe #0: std::function<std::string ()>::operator()() const + 0x11 (0x7f1da515e691 in /___/libtorch/lib/libc10.so)\r\nframe #1: c10::ThrowEnforceNotMet(char const*, int, char const*, std::string const&, void const*) + 0x49 (0x7f1da515e4a9 in /__/libtorch/lib/libc10.so)\r\nframe #2: caffe2::serialize::PyTorchStreamReader::valid(char const*) + 0x6b (0x7f1d9c69735b in /__/libtorch/lib/libcaffe2.so)\r\nframe #3: caffe2::serialize::PyTorchStreamReader::init() + 0x9d (0x7f1d9c69912d in /___/libtorch/lib/libcaffe2.so)\r\nframe #4: caffe2::serialize::PyTorchStreamReader::PyTorchStreamReader(std::unique_ptr<caffe2::serialize::ReadAdapterInterface, std::default_delete<caffe2::serialize::ReadAdapterInterface> >) + 0x3b (0x7f1d9c69ab8b in /__/libtorch/lib/libcaffe2.so)\r\nframe #5: <unknown function> + 0xa9b5bf (0x7f1da5e125bf in /__/libtorch/lib/libtorch.so.1)\r\nframe #6: torch::jit::load(std::unique_ptr<caffe2::serialize::ReadAdapterInterface, std::default_delete<caffe2::serialize::ReadAdapterInterface> >, c10::optional<c10::Device>, std::unordered_map<std::string, std::string, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<std::string const, std::string> > >&) + 0x9a (0x7f1da5e15d2a in /__/libtorch/lib/libtorch.so.1)\r\nframe #7: torch::jit::load(std::string const&, c10::optional<c10::Device>, std::unordered_map<std::string, std::string, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<std::string const, std::string> > >&) + 0x68 (0x7f1da5e15ec8 in /___/libtorch/lib/libtorch.so.1)\r\nframe #8: torch::serialize::InputArchive::load_from(std::string const&, c10::optional<c10::Device>) + 0x38 (0x7f1da604c058 in /___/libtorch/lib/libtorch.so.1)\r\nframe #9: void torch::load<at::Tensor, char const (&) [10]>(at::Tensor&, char const (&) [10]) + 0x86 (0x55a502f5fe97 in ./load)\r\nframe #10: main + 0x37 (0x55a502f5fb51 in ./load)\r\nframe #11: __libc_start_main + 0xe7 (0x7f1d9a338b97 in /lib/x86_64-linux-gnu/libc.so.6)\r\nframe #12: _start + 0x2a (0x55a502f5f96a in ./load)\r\n\r\n[1]    30788 abort      ./load\r\n```\r\n## Expected behavior\r\n\r\nI would expect to be able to load a tensor from the PyTorch dump in the C++ program.\r\n\r\n## Environment\r\n\r\nPyTorch version: 1.1.0\r\nIs debug build: No\r\nCUDA used to build PyTorch: 9.0.176\r\n\r\nOS: Ubuntu 18.04.2 LTS\r\nGCC version: (Ubuntu 7.3.0-27ubuntu1~18.04) 7.3.0\r\nCMake version: version 3.10.2\r\n\r\nPython version: 3.7\r\nIs CUDA available: Yes\r\nCUDA runtime version: 10.1.105\r\nGPU models and configuration:\r\nGPU 0: GeForce GTX TITAN X\r\nGPU 1: GeForce GTX TITAN X\r\nGPU 2: GeForce GTX TITAN X\r\nGPU 3: GeForce GTX TITAN X\r\nGPU 4: GeForce GTX TITAN X\r\nGPU 5: GeForce GTX TITAN X\r\nGPU 6: GeForce GTX TITAN X\r\nGPU 7: GeForce GTX TITAN X\r\n\r\nNvidia driver version: 418.56\r\ncuDNN version: Could not collect\r\n\r\nVersions of relevant libraries:\r\n[pip] msgpack-numpy==0.4.3.2\r\n[pip] numpy==1.15.4\r\n[pip] numpydoc==0.8.0\r\n[pip] pytorch-nlp==0.4.1\r\n[pip] torch==1.1.0\r\n[pip] torchvision==0.2.2\r\n[conda] blas                      1.0                         mkl\r\n[conda] mkl                       2018.0.3                      1\r\n[conda] mkl-service               1.1.2            py37h90e4bf4_5\r\n[conda] mkl_fft                   1.0.6            py37h7dd41cf_0\r\n[conda] mkl_random                1.0.1            py37h4414c95_1\r\n[conda] pytorch                   1.1.0           py3.7_cuda9.0.176_cudnn7.5.1_0    pytorch\r\n[conda] pytorch-nlp               0.4.1                    pypi_0    pypi\r\n[conda] torchvision               0.2.2                      py_3    pytorch\r\n\r\n## Additional context\r\n\r\nI downloaded the C++ frontend from [https://download.pytorch.org/libtorch/nightly/cpu/libtorch-shared-with-deps-latest.zip](https://download.pytorch.org/libtorch/nightly/cpu/libtorch-shared-with-deps-latest.zip) yesterday.\r\n",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/20356/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/20356/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/20215",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/20215/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/20215/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/20215/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/20215",
        "id": 441301275,
        "node_id": "MDU6SXNzdWU0NDEzMDEyNzU=",
        "number": 20215,
        "title": "The JIT sometimes does not repeat values in the output_size argument.",
        "user": {
            "login": "skrah",
            "id": 16530421,
            "node_id": "MDQ6VXNlcjE2NTMwNDIx",
            "avatar_url": "https://avatars.githubusercontent.com/u/16530421?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skrah",
            "html_url": "https://github.com/skrah",
            "followers_url": "https://api.github.com/users/skrah/followers",
            "following_url": "https://api.github.com/users/skrah/following{/other_user}",
            "gists_url": "https://api.github.com/users/skrah/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skrah/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skrah/subscriptions",
            "organizations_url": "https://api.github.com/users/skrah/orgs",
            "repos_url": "https://api.github.com/users/skrah/repos",
            "events_url": "https://api.github.com/users/skrah/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skrah/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1076922764,
                "node_id": "MDU6TGFiZWwxMDc2OTIyNzY0",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20nn",
                "name": "module: nn",
                "color": "f7e101",
                "default": false,
                "description": "Related to torch.nn"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "ailzhang",
            "id": 5248122,
            "node_id": "MDQ6VXNlcjUyNDgxMjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5248122?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ailzhang",
            "html_url": "https://github.com/ailzhang",
            "followers_url": "https://api.github.com/users/ailzhang/followers",
            "following_url": "https://api.github.com/users/ailzhang/following{/other_user}",
            "gists_url": "https://api.github.com/users/ailzhang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ailzhang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ailzhang/subscriptions",
            "organizations_url": "https://api.github.com/users/ailzhang/orgs",
            "repos_url": "https://api.github.com/users/ailzhang/repos",
            "events_url": "https://api.github.com/users/ailzhang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ailzhang/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "ailzhang",
                "id": 5248122,
                "node_id": "MDQ6VXNlcjUyNDgxMjI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/5248122?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ailzhang",
                "html_url": "https://github.com/ailzhang",
                "followers_url": "https://api.github.com/users/ailzhang/followers",
                "following_url": "https://api.github.com/users/ailzhang/following{/other_user}",
                "gists_url": "https://api.github.com/users/ailzhang/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ailzhang/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ailzhang/subscriptions",
                "organizations_url": "https://api.github.com/users/ailzhang/orgs",
                "repos_url": "https://api.github.com/users/ailzhang/repos",
                "events_url": "https://api.github.com/users/ailzhang/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ailzhang/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 4,
        "created_at": "2019-05-07T15:36:46Z",
        "updated_at": "2019-05-09T16:31:38Z",
        "closed_at": "2019-05-09T16:31:38Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "**Background**\r\n\r\nThis issue came up during the port of `adaptive_max_pool2d()` to `ATen`. The relevant function signature in `native_functions.yaml` is:\r\n\r\n   `func: adaptive_max_pool2d(Tensor self, int[2] output_size) -> (Tensor, Tensor)`\r\n\r\n\r\n**The issue**\r\n\r\nWhen `output_size` is a single `int` on the Python level (square image H x H), `adaptive_max_pool2d()` receives an `output_size` argument with `output_size.size()==1` instead of `2`.\r\n\r\nCurrently `adaptive_max_pool2d()` has a workaround that also accepts `output_size.size()==1`  and repeats `H` inside the function.\r\n\r\n**How to reproduce**\r\n\r\nThe cause is difficult to isolate since the tests are generated and quite complex. I think also a module export/import is involved.\r\n\r\n1) Apply this diff:\r\n\r\n```\r\ndiff --git a/aten/src/ATen/native/AdaptiveMaxPooling2d.cpp b/aten/src/ATen/native/AdaptiveMaxPooling2d.cpp\r\nindex b3b77c5..ec16c5e 100644\r\n--- a/aten/src/ATen/native/AdaptiveMaxPooling2d.cpp\r\n+++ b/aten/src/ATen/native/AdaptiveMaxPooling2d.cpp\r\n@@ -322,6 +322,7 @@ std::tuple<Tensor, Tensor> adaptive_max_pool2d_cpu(\r\n {\r\n   Tensor output = at::empty({0}, input.options());\r\n   Tensor indices = at::empty({0}, input.options().dtype(kLong));\r\n+  assert(output_size.size() == 2);\r\n   adaptive_max_pool2d_out_cpu_template(\r\n     output,\r\n     indices,\r\n```\r\n\r\n2) Run the relevant test case:\r\n\r\n`python3 -m pytest -v test_jit.py::TestJitGeneratedModule::test_nn_AdaptiveMaxPool2d_single`\r\n\r\n\r\n**Backtrace**\r\n\r\n```\r\n(gdb) f 9\r\n#9  0x00007fffcdeb2127 in torch::jit::(anonymous namespace)::<lambda(torch::jit::Stack&)>::operator()(torch::jit::Stack &) const (__closure=0x44ba5580, \r\n    stack=std::vector of length 2, capacity 2 = {...}) at /home/stefan/pytorch/torch/csrc/jit/generated/register_aten_ops_1.cpp:2948\r\n2948              );\r\n(gdb) f 8\r\n#8  0x00007fffcde9aa4d in at::adaptive_max_pool2d (self=..., output_size=...) at /home/stefan/pytorch/build/aten/src/ATen/Functions.h:5728\r\n5728        return detail::infer_type(self).adaptive_max_pool2d(self, output_size);\r\n(gdb) p output_size.size()\r\n$1 = 1\r\n```\r\n\r\n",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/20215/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/20215/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/20113",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/20113/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/20113/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/20113/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/20113",
        "id": 440232638,
        "node_id": "MDU6SXNzdWU0NDAyMzI2Mzg=",
        "number": 20113,
        "title": "[JIT][script] JIT for torch.norm ignores argument defaults",
        "user": {
            "login": "milos-popovic",
            "id": 158481,
            "node_id": "MDQ6VXNlcjE1ODQ4MQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/158481?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/milos-popovic",
            "html_url": "https://github.com/milos-popovic",
            "followers_url": "https://api.github.com/users/milos-popovic/followers",
            "following_url": "https://api.github.com/users/milos-popovic/following{/other_user}",
            "gists_url": "https://api.github.com/users/milos-popovic/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/milos-popovic/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/milos-popovic/subscriptions",
            "organizations_url": "https://api.github.com/users/milos-popovic/orgs",
            "repos_url": "https://api.github.com/users/milos-popovic/repos",
            "events_url": "https://api.github.com/users/milos-popovic/events{/privacy}",
            "received_events_url": "https://api.github.com/users/milos-popovic/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            },
            {
                "id": 1594104112,
                "node_id": "MDU6TGFiZWwxNTk0MTA0MTEy",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/jit-backlog",
                "name": "jit-backlog",
                "color": "eacf96",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "eellison",
            "id": 11477974,
            "node_id": "MDQ6VXNlcjExNDc3OTc0",
            "avatar_url": "https://avatars.githubusercontent.com/u/11477974?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eellison",
            "html_url": "https://github.com/eellison",
            "followers_url": "https://api.github.com/users/eellison/followers",
            "following_url": "https://api.github.com/users/eellison/following{/other_user}",
            "gists_url": "https://api.github.com/users/eellison/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eellison/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eellison/subscriptions",
            "organizations_url": "https://api.github.com/users/eellison/orgs",
            "repos_url": "https://api.github.com/users/eellison/repos",
            "events_url": "https://api.github.com/users/eellison/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eellison/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "eellison",
                "id": 11477974,
                "node_id": "MDQ6VXNlcjExNDc3OTc0",
                "avatar_url": "https://avatars.githubusercontent.com/u/11477974?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/eellison",
                "html_url": "https://github.com/eellison",
                "followers_url": "https://api.github.com/users/eellison/followers",
                "following_url": "https://api.github.com/users/eellison/following{/other_user}",
                "gists_url": "https://api.github.com/users/eellison/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/eellison/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eellison/subscriptions",
                "organizations_url": "https://api.github.com/users/eellison/orgs",
                "repos_url": "https://api.github.com/users/eellison/repos",
                "events_url": "https://api.github.com/users/eellison/events{/privacy}",
                "received_events_url": "https://api.github.com/users/eellison/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 3,
        "created_at": "2019-05-03T21:40:45Z",
        "updated_at": "2022-08-19T13:40:53Z",
        "closed_at": "2021-01-26T21:35:48Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\ntorch.norm `p` argument default is ignored by JIT\r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior:\r\n\r\n1.\r\n```python\r\nimport torch\r\n\r\n@torch.jit.script\r\ndef norm_test():\r\n  t = torch.ones(10, 5)\r\n  return torch.norm(t, dim=1, keepdim=True)\r\n```\r\n\r\nfails with:\r\n\r\n> RuntimeError:\r\n> arguments for call are not valid:\r\n>   \r\n>   for operator aten::norm(Tensor self, Scalar p=<default>) -> Tensor:\r\n>   keyword argument dim unknown\r\n>   \r\n>   for operator aten::norm(Tensor self, Scalar? p, *, int dtype) -> Tensor:\r\n>   argument p not provided.\r\n>   @torch.jit.script\r\n>   def norm_test():\r\n>     t = torch.ones(10, 5)\r\n>     return torch.norm(t, dim=1, keepdim=True)\r\n>            ~~~~~~~~~~ <--- HERE\r\n\r\n2.\r\n```python\r\nimport torch\r\n\r\n@torch.jit.script\r\ndef norm_test():\r\n  t = torch.ones(10, 5)\r\n  return torch.norm(t, p=2, dim=1)\r\n```\r\nWorks fine\r\n\r\n## Environment\r\n\r\nCollecting environment information...\r\nPyTorch version: 1.1.0\r\nIs debug build: No\r\nCUDA used to build PyTorch: 9.0\r\n\r\nOS: Microsoft Windows 10 Pro\r\nGCC version: Could not collect\r\nCMake version: version 3.9.0-rc5\r\n\r\nPython version: 3.6\r\nIs CUDA available: Yes\r\nCUDA runtime version: 9.0.176\r\nGPU models and configuration: GPU 0: GeForce GTX 1080 Ti\r\nNvidia driver version: 419.67\r\ncuDNN version: C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v9.0\\bin\\cudnn64_7.dll\r\n\r\nVersions of relevant libraries:\r\n[pip] numpy==1.14.3\r\n[pip] numpydoc==0.8.0\r\n[pip] pytorch-ignite==0.1.0\r\n[pip] torch==1.1.0\r\n[pip] torchvision==0.2.2\r\n[conda] blas                      1.0                         mkl\r\n[conda] cuda91                    1.0                           0    pytorch\r\n[conda] cuda92                    1.0                           0    pytorch\r\n[conda] mkl                       2018.0.2                      1\r\n[conda] mkl-service               1.1.2            py36h57e144c_4\r\n[conda] mkl_fft                   1.0.1            py36h452e1ab_0\r\n[conda] mkl_random                1.0.1            py36h9258bd6_0\r\n[conda] pytorch                   1.1.0           py3.6_cuda90_cudnn7_1    pytorch\r\n[conda] pytorch-ignite            0.1.0                    pypi_0    pypi\r\n[conda] torchvision               0.2.1                    pypi_0    pypi\r\n\n\ncc @suo",
        "closed_by": {
            "login": "eellison",
            "id": 11477974,
            "node_id": "MDQ6VXNlcjExNDc3OTc0",
            "avatar_url": "https://avatars.githubusercontent.com/u/11477974?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eellison",
            "html_url": "https://github.com/eellison",
            "followers_url": "https://api.github.com/users/eellison/followers",
            "following_url": "https://api.github.com/users/eellison/following{/other_user}",
            "gists_url": "https://api.github.com/users/eellison/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eellison/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eellison/subscriptions",
            "organizations_url": "https://api.github.com/users/eellison/orgs",
            "repos_url": "https://api.github.com/users/eellison/repos",
            "events_url": "https://api.github.com/users/eellison/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eellison/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/20113/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/20113/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/20017",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/20017/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/20017/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/20017/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/20017",
        "id": 439237149,
        "node_id": "MDU6SXNzdWU0MzkyMzcxNDk=",
        "number": 20017,
        "title": "torch.jit.trace returns unwrapped C type",
        "user": {
            "login": "VitalyFedyunin",
            "id": 1163042,
            "node_id": "MDQ6VXNlcjExNjMwNDI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1163042?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/VitalyFedyunin",
            "html_url": "https://github.com/VitalyFedyunin",
            "followers_url": "https://api.github.com/users/VitalyFedyunin/followers",
            "following_url": "https://api.github.com/users/VitalyFedyunin/following{/other_user}",
            "gists_url": "https://api.github.com/users/VitalyFedyunin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/VitalyFedyunin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/VitalyFedyunin/subscriptions",
            "organizations_url": "https://api.github.com/users/VitalyFedyunin/orgs",
            "repos_url": "https://api.github.com/users/VitalyFedyunin/repos",
            "events_url": "https://api.github.com/users/VitalyFedyunin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/VitalyFedyunin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1313495464,
                "node_id": "MDU6TGFiZWwxMzEzNDk1NDY0",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20regression",
                "name": "module: regression",
                "color": "f7e101",
                "default": false,
                "description": "It used to work, and now it doesn't"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "Krovatkin",
            "id": 5086322,
            "node_id": "MDQ6VXNlcjUwODYzMjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5086322?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Krovatkin",
            "html_url": "https://github.com/Krovatkin",
            "followers_url": "https://api.github.com/users/Krovatkin/followers",
            "following_url": "https://api.github.com/users/Krovatkin/following{/other_user}",
            "gists_url": "https://api.github.com/users/Krovatkin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Krovatkin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Krovatkin/subscriptions",
            "organizations_url": "https://api.github.com/users/Krovatkin/orgs",
            "repos_url": "https://api.github.com/users/Krovatkin/repos",
            "events_url": "https://api.github.com/users/Krovatkin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Krovatkin/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "Krovatkin",
                "id": 5086322,
                "node_id": "MDQ6VXNlcjUwODYzMjI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/5086322?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/Krovatkin",
                "html_url": "https://github.com/Krovatkin",
                "followers_url": "https://api.github.com/users/Krovatkin/followers",
                "following_url": "https://api.github.com/users/Krovatkin/following{/other_user}",
                "gists_url": "https://api.github.com/users/Krovatkin/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/Krovatkin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Krovatkin/subscriptions",
                "organizations_url": "https://api.github.com/users/Krovatkin/orgs",
                "repos_url": "https://api.github.com/users/Krovatkin/repos",
                "events_url": "https://api.github.com/users/Krovatkin/events{/privacy}",
                "received_events_url": "https://api.github.com/users/Krovatkin/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 13,
        "created_at": "2019-05-01T16:59:02Z",
        "updated_at": "2019-12-12T08:03:29Z",
        "closed_at": "2019-12-12T08:03:29Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\n### With pytorch 1.1.0\r\n\r\n```\r\nimport torch\r\ndef f(x):\r\n  return x*2\r\nz = torch.jit.trace(f, (torch.zeros(10),))\r\nprint(type(z))\r\n```\r\n\r\nReturns `torch._C.Function` and cannot be saved:\r\n\r\n`Traceback (most recent call last):\r\n  File \"1.py\", line 7, in <module>\r\n    torch.jit.save(z, \"filename\")\r\n  File \"/home/vitalyf/local/miniconda/envs/wp_1/lib/python3.7/site-packages/torch/jit/__init__.py\", line 198, in save\r\n    m.save(f, _extra_files=_extra_files)\r\nAttributeError: 'torch._C.Function' object has no attribute 'save'\r\n`\r\n\r\n### Expected as in pytorch 1.0.1\r\n\r\n```\r\nimport torch\r\ndef f(x):\r\n  return x*2\r\nz = torch.jit.trace(f, (torch.zeros(10),))\r\nprint(type(z))\r\n```\r\n\r\nReturns `<class 'torch.jit.TopLevelTracedModule'>`\r\n\r\n",
        "closed_by": {
            "login": "bhosmer",
            "id": 355313,
            "node_id": "MDQ6VXNlcjM1NTMxMw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/355313?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bhosmer",
            "html_url": "https://github.com/bhosmer",
            "followers_url": "https://api.github.com/users/bhosmer/followers",
            "following_url": "https://api.github.com/users/bhosmer/following{/other_user}",
            "gists_url": "https://api.github.com/users/bhosmer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bhosmer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bhosmer/subscriptions",
            "organizations_url": "https://api.github.com/users/bhosmer/orgs",
            "repos_url": "https://api.github.com/users/bhosmer/repos",
            "events_url": "https://api.github.com/users/bhosmer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bhosmer/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/20017/reactions",
            "total_count": 6,
            "+1": 6,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/20017/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/19502",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/19502/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/19502/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/19502/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/19502",
        "id": 435268996,
        "node_id": "MDU6SXNzdWU0MzUyNjg5OTY=",
        "number": 19502,
        "title": "elementMap_.count(v) ASSERT FAILED at csrc/jit/passes/alias_analysis.cpp:536",
        "user": {
            "login": "xsacha",
            "id": 61218,
            "node_id": "MDQ6VXNlcjYxMjE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/61218?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xsacha",
            "html_url": "https://github.com/xsacha",
            "followers_url": "https://api.github.com/users/xsacha/followers",
            "following_url": "https://api.github.com/users/xsacha/following{/other_user}",
            "gists_url": "https://api.github.com/users/xsacha/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xsacha/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xsacha/subscriptions",
            "organizations_url": "https://api.github.com/users/xsacha/orgs",
            "repos_url": "https://api.github.com/users/xsacha/repos",
            "events_url": "https://api.github.com/users/xsacha/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xsacha/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 443484135,
                "node_id": "MDU6TGFiZWw0NDM0ODQxMzU=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/high%20priority",
                "name": "high priority",
                "color": "F22613",
                "default": false,
                "description": null
            },
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "wanchaol",
            "id": 9443650,
            "node_id": "MDQ6VXNlcjk0NDM2NTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9443650?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wanchaol",
            "html_url": "https://github.com/wanchaol",
            "followers_url": "https://api.github.com/users/wanchaol/followers",
            "following_url": "https://api.github.com/users/wanchaol/following{/other_user}",
            "gists_url": "https://api.github.com/users/wanchaol/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wanchaol/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wanchaol/subscriptions",
            "organizations_url": "https://api.github.com/users/wanchaol/orgs",
            "repos_url": "https://api.github.com/users/wanchaol/repos",
            "events_url": "https://api.github.com/users/wanchaol/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wanchaol/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "wanchaol",
                "id": 9443650,
                "node_id": "MDQ6VXNlcjk0NDM2NTA=",
                "avatar_url": "https://avatars.githubusercontent.com/u/9443650?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/wanchaol",
                "html_url": "https://github.com/wanchaol",
                "followers_url": "https://api.github.com/users/wanchaol/followers",
                "following_url": "https://api.github.com/users/wanchaol/following{/other_user}",
                "gists_url": "https://api.github.com/users/wanchaol/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/wanchaol/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wanchaol/subscriptions",
                "organizations_url": "https://api.github.com/users/wanchaol/orgs",
                "repos_url": "https://api.github.com/users/wanchaol/repos",
                "events_url": "https://api.github.com/users/wanchaol/events{/privacy}",
                "received_events_url": "https://api.github.com/users/wanchaol/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 7,
        "created_at": "2019-04-19T18:44:19Z",
        "updated_at": "2019-04-25T06:14:55Z",
        "closed_at": "2019-04-25T06:14:55Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n```\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.7/dist-packages/torch/jit/__init__.py\", line 529, in run_mod_and_filter_tensor_outputs\r\n    outs = wrap_retval(mod(*_clone_inputs(inputs)))\r\n  File \"/usr/local/lib/python3.7/dist-packages/torch/nn/modules/module.py\", line 493, in __call__\r\n    result = self.forward(*input, **kwargs)\r\n  File \"/usr/local/lib/python3.7/dist-packages/torch/jit/__init__.py\", line 1407, in forward\r\n    return self._get_method('forward')(*args, **kwargs)\r\nRuntimeError: elementMap_.count(v) ASSERT FAILED at /pytorch/torch/csrc/jit/passes/alias_analysis.cpp:536, please report a bug to PyTorch. (registerWrite at /pytorch/torch/csrc/jit/passes/alias_analysis.cpp:536)\r\nframe #0: std::function<std::string ()>::operator()() const + 0x11 (0x7fce0a6322a1 in /usr/local/lib/python3.7/dist-packages/torch/lib/libc10.so)\r\nframe #1: c10::Error::Error(c10::SourceLocation, std::string const&) + 0x2a (0x7fce0a631bda in /usr/local/lib/python3.7/dist-packages/torch/lib/libc10.so)\r\nframe #2: torch::jit::AliasDb::registerWrite(torch::jit::Value const*, torch::jit::Node*) + 0x1dd (0x7fce035b48bd in /usr/local/lib/python3.7/dist-packages/torch/lib/libtorch.so.1)\r\nframe #3: torch::jit::AliasDb::analyzeImpl(torch::jit::Node*) + 0x675 (0x7fce035b5aa5 in /usr/local/lib/python3.7/dist-packages/torch/lib/libtorch.so.1)\r\nframe #4: torch::jit::AliasDb::analyze(torch::jit::Node*) + 0xf (0x7fce035b64bf in /usr/local/lib/python3.7/dist-packages/torch/lib/libtorch.so.1)\r\nframe #5: torch::jit::AliasDb::analyze(torch::jit::Block*) + 0x33 (0x7fce035b65a3 in /usr/local/lib/python3.7/dist-packages/torch/lib/libtorch.so.1)\r\nframe #6: torch::jit::AliasDb::analyze(std::shared_ptr<torch::jit::Graph> const&) + 0x92c (0x7fce035b84cc in /usr/local/lib/python3.7/dist-packages/torch/lib/libtorch.so.1)\r\nframe #7: torch::jit::AliasDb::AliasDb(std::shared_ptr<torch::jit::Graph>) + 0x3a8 (0x7fce035b8d98 in /usr/local/lib/python3.7/dist-packages/torch/lib/libtorch.so.1)\r\nframe #8: torch::unique_type_for<torch::jit::AliasDb>::value torch::make_unique<torch::jit::AliasDb, std::shared_ptr<torch::jit::Graph>&>(std::shared_ptr<torch::jit::Graph>&) + 0x45 (0x7fce035d89e5 in /usr/local/lib/python3.7/dist-packages/torch/lib/libtorch.so.1)\r\nframe #9: <unknown function> + 0xace7f5 (0x7fce035ce7f5 in /usr/local/lib/python3.7/dist-packages/torch/lib/libtorch.so.1)\r\nframe #10: <unknown function> + 0xad5758 (0x7fce035d5758 in /usr/local/lib/python3.7/dist-packages/torch/lib/libtorch.so.1)\r\nframe #11: <unknown function> + 0xad71d7 (0x7fce035d71d7 in /usr/local/lib/python3.7/dist-packages/torch/lib/libtorch.so.1)\r\nframe #12: torch::jit::FuseGraph(std::shared_ptr<torch::jit::Graph>&) + 0x65 (0x7fce035d82e5 in /usr/local/lib/python3.7/dist-packages/torch/lib/libtorch.so.1)\r\nframe #13: <unknown function> + 0xa64cd6 (0x7fce03564cd6 in /usr/local/lib/python3.7/dist-packages/torch/lib/libtorch.so.1)\r\nframe #14: <unknown function> + 0x479015 (0x7fce0ad07015 in /usr/local/lib/python3.7/dist-packages/torch/lib/libtorch_python.so)\r\nframe #15: <unknown function> + 0x450c0a (0x7fce0acdec0a in /usr/local/lib/python3.7/dist-packages/torch/lib/libtorch_python.so)\r\nframe #16: <unknown function> + 0x1302fc (0x7fce0a9be2fc in /usr/local/lib/python3.7/dist-packages/torch/lib/libtorch_python.so)\r\n<omitting python frames>\r\nframe #18: python3() [0x4d9dc7]\r\nframe #20: python3() [0x58f132]\r\nframe #25: python3() [0x4d9e62]\r\nframe #30: python3() [0x58f08b]\r\nframe #44: python3() [0x54af20]\r\nframe #50: python3() [0x630f22]\r\nframe #53: python3() [0x65414e]\r\nframe #55: __libc_start_main + 0xeb (0x7fce0ea74b6b in /lib/x86_64-linux-gnu/libc.so.6)\r\n```\r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior:\r\n\r\n1. Tracing a model in python\r\n\r\n\r\n## Expected behavior\r\n\r\nTraces\r\n\r\n## Environment\r\n\r\n - PyTorch Version (e.g., 1.0): Latest nightly 19th April\r\n - OS (e.g., Linux): Linux\r\n - How you installed PyTorch (`conda`, `pip`, source): pip nightly\r\n - Build command you used (if compiling from source): N/A\r\n - Python version: 3.7\r\n - CUDA/cuDNN version: 10.0/7.5\r\n - GPU models and configuration: Titan V\r\n\r\n",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/19502/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/19502/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/19363",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/19363/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/19363/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/19363/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/19363",
        "id": 434417692,
        "node_id": "MDU6SXNzdWU0MzQ0MTc2OTI=",
        "number": 19363,
        "title": "[JIT] Cannot access nn.Linear.in_features in ScriptModule",
        "user": {
            "login": "qbx2",
            "id": 5977817,
            "node_id": "MDQ6VXNlcjU5Nzc4MTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5977817?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/qbx2",
            "html_url": "https://github.com/qbx2",
            "followers_url": "https://api.github.com/users/qbx2/followers",
            "following_url": "https://api.github.com/users/qbx2/following{/other_user}",
            "gists_url": "https://api.github.com/users/qbx2/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/qbx2/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/qbx2/subscriptions",
            "organizations_url": "https://api.github.com/users/qbx2/orgs",
            "repos_url": "https://api.github.com/users/qbx2/repos",
            "events_url": "https://api.github.com/users/qbx2/events{/privacy}",
            "received_events_url": "https://api.github.com/users/qbx2/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "driazati",
            "id": 9407960,
            "node_id": "MDQ6VXNlcjk0MDc5NjA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9407960?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/driazati",
            "html_url": "https://github.com/driazati",
            "followers_url": "https://api.github.com/users/driazati/followers",
            "following_url": "https://api.github.com/users/driazati/following{/other_user}",
            "gists_url": "https://api.github.com/users/driazati/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/driazati/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/driazati/subscriptions",
            "organizations_url": "https://api.github.com/users/driazati/orgs",
            "repos_url": "https://api.github.com/users/driazati/repos",
            "events_url": "https://api.github.com/users/driazati/events{/privacy}",
            "received_events_url": "https://api.github.com/users/driazati/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "driazati",
                "id": 9407960,
                "node_id": "MDQ6VXNlcjk0MDc5NjA=",
                "avatar_url": "https://avatars.githubusercontent.com/u/9407960?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/driazati",
                "html_url": "https://github.com/driazati",
                "followers_url": "https://api.github.com/users/driazati/followers",
                "following_url": "https://api.github.com/users/driazati/following{/other_user}",
                "gists_url": "https://api.github.com/users/driazati/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/driazati/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/driazati/subscriptions",
                "organizations_url": "https://api.github.com/users/driazati/orgs",
                "repos_url": "https://api.github.com/users/driazati/repos",
                "events_url": "https://api.github.com/users/driazati/events{/privacy}",
                "received_events_url": "https://api.github.com/users/driazati/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-04-17T18:11:27Z",
        "updated_at": "2019-05-11T00:17:06Z",
        "closed_at": "2019-05-11T00:17:06Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\n```python\r\nimport torch.nn as nn\r\nimport torch.jit as jit\r\n\r\nclass TestModule(jit.ScriptModule):\r\n  def __init__(self):\r\n    super().__init__()\r\n    self.linear = nn.Linear(16, 16)\r\n\r\n\r\nm = TestModule()\r\nprint(m.linear.in_features)\r\n```\r\n\r\nThe code above throws AttributeError\r\n\r\n```python\r\n>>> m.linear.in_features\r\nTraceback (most recent call last):\r\n  File \"/home/qbx2/anaconda3/lib/python3.7/site-packages/torch/jit/__init__.py\", line 1197, in __getattr__\r\n    return ScriptModule.__getattr__(self, attr)\r\n  File \"/home/qbx2/anaconda3/lib/python3.7/site-packages/torch/jit/__init__.py\", line 1102, in __getattr__\r\n    return Module.__getattr__(self, attr)\r\n  File \"/home/qbx2/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py\", line 535, in __getattr__\r\n    type(self).__name__, name))\r\nAttributeError: 'WeakScriptModuleProxy' object has no attribute 'in_features'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/home/qbx2/anaconda3/lib/python3.7/site-packages/torch/jit/__init__.py\", line 1200, in __getattr__\r\n    return getattr(self.__dict__[\"_original\"](), attr)\r\nAttributeError: 'NoneType' object has no attribute 'in_features'\r\n```\r\n\r\n## Expected behavior\r\n\r\nLooking at the code (https://github.com/pytorch/pytorch/blob/master/torch/jit/__init__.py#L1226), I think WeakScriptModuleProxy should have copied in_features and other fields to self here.\r\n\r\n## Environment\r\n\r\nCollecting environment information...\r\nPyTorch version: 1.0.1.post2\r\nIs debug build: No\r\nCUDA used to build PyTorch: 10.0.130\r\n\r\nOS: Ubuntu 18.04.1 LTS\r\nGCC version: (Ubuntu 7.3.0-27ubuntu1~18.04) 7.3.0\r\nCMake version: Could not collect\r\n\r\nPython version: 3.7\r\nIs CUDA available: Yes\r\nCUDA runtime version: 10.0.130\r\nGPU models and configuration: GPU 0: GeForce RTX 2080\r\nNvidia driver version: 410.48\r\ncuDNN version: /usr/local/cuda-10.0/lib64/libcudnn.so.7.4.1\r\n\r\nVersions of relevant libraries:\r\n[pip] numpy==1.15.4\r\n[pip] numpydoc==0.8.0\r\n[pip] torch==1.0.1.post2\r\n[conda] blas 1.0 mkl\r\n[conda] mkl 2019.1 144\r\n[conda] mkl-service 1.1.2 py37he904b0f_5\r\n[conda] mkl_fft 1.0.6 py37hd81dba3_0\r\n[conda] mkl_random 1.0.2 py37hd81dba3_0\r\n[conda] pytorch 1.0.1 py3.7_cuda10.0.130_cudnn7.4.2_2 pytorch\r\n\r\nhttps://discuss.pytorch.org/t/cannot-access-nn-linear-in-features-in-scriptmodule/42833",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/19363/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/19363/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/19351",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/19351/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/19351/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/19351/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/19351",
        "id": 434254730,
        "node_id": "MDU6SXNzdWU0MzQyNTQ3MzA=",
        "number": 19351,
        "title": "Printing gc.get_objects() makes Runtime Error when importing torch",
        "user": {
            "login": "Ricocotam",
            "id": 9447752,
            "node_id": "MDQ6VXNlcjk0NDc3NTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9447752?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Ricocotam",
            "html_url": "https://github.com/Ricocotam",
            "followers_url": "https://api.github.com/users/Ricocotam/followers",
            "following_url": "https://api.github.com/users/Ricocotam/following{/other_user}",
            "gists_url": "https://api.github.com/users/Ricocotam/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Ricocotam/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Ricocotam/subscriptions",
            "organizations_url": "https://api.github.com/users/Ricocotam/orgs",
            "repos_url": "https://api.github.com/users/Ricocotam/repos",
            "events_url": "https://api.github.com/users/Ricocotam/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Ricocotam/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "suo",
            "id": 1617424,
            "node_id": "MDQ6VXNlcjE2MTc0MjQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1617424?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/suo",
            "html_url": "https://github.com/suo",
            "followers_url": "https://api.github.com/users/suo/followers",
            "following_url": "https://api.github.com/users/suo/following{/other_user}",
            "gists_url": "https://api.github.com/users/suo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/suo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/suo/subscriptions",
            "organizations_url": "https://api.github.com/users/suo/orgs",
            "repos_url": "https://api.github.com/users/suo/repos",
            "events_url": "https://api.github.com/users/suo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/suo/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "suo",
                "id": 1617424,
                "node_id": "MDQ6VXNlcjE2MTc0MjQ=",
                "avatar_url": "https://avatars.githubusercontent.com/u/1617424?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/suo",
                "html_url": "https://github.com/suo",
                "followers_url": "https://api.github.com/users/suo/followers",
                "following_url": "https://api.github.com/users/suo/following{/other_user}",
                "gists_url": "https://api.github.com/users/suo/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/suo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/suo/subscriptions",
                "organizations_url": "https://api.github.com/users/suo/orgs",
                "repos_url": "https://api.github.com/users/suo/repos",
                "events_url": "https://api.github.com/users/suo/events{/privacy}",
                "received_events_url": "https://api.github.com/users/suo/received_events",
                "type": "User",
                "site_admin": false
            },
            {
                "login": "ailzhang",
                "id": 5248122,
                "node_id": "MDQ6VXNlcjUyNDgxMjI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/5248122?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ailzhang",
                "html_url": "https://github.com/ailzhang",
                "followers_url": "https://api.github.com/users/ailzhang/followers",
                "following_url": "https://api.github.com/users/ailzhang/following{/other_user}",
                "gists_url": "https://api.github.com/users/ailzhang/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ailzhang/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ailzhang/subscriptions",
                "organizations_url": "https://api.github.com/users/ailzhang/orgs",
                "repos_url": "https://api.github.com/users/ailzhang/repos",
                "events_url": "https://api.github.com/users/ailzhang/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ailzhang/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 3,
        "created_at": "2019-04-17T12:26:29Z",
        "updated_at": "2019-06-18T15:49:23Z",
        "closed_at": "2019-06-18T15:49:23Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\nI'd like to print the return of the `gc.get_objects()` function (I have memory issues) but I can't. Whenever I do it, I get the following error :\r\n```python\r\nTraceback (most recent call last):\r\n  File \"test.py\", line 5, in <module>\r\n    print(gc.get_objects())\r\n  File \"<frozen importlib._bootstrap>\", line 302, in _module_repr\r\n  File \"<frozen importlib._bootstrap>\", line 295, in _module_repr\r\n  File \".../site-packages/torch/_ops.py\", line 60, in __getattr__\r\n    op = torch._C._jit_get_operation(qualified_op_name)\r\nRuntimeError: No such operator __file__::__file__\r\n```\r\nBut what's more strange is that using the length are affecting it to a variable (not printing it) doesn't produce an error.\r\n\r\n## To Reproduce\r\n\r\nI'm using python3.7.0 and latest version of pytorch (1.0.1.post2). Just run the following code in a file :\r\n```python\r\nimport gc\r\nimport torch\r\nprint(len(gc.get_objects))  # Works\r\na = gc.get_objects()  # works\r\nprint(gc.get_objects())  # Fails\r\nfor obj in gc.get_objects():\r\n    print(obj)  # Works until encountering torch\r\n                    # Though it works on some files\r\nprint(sum(map(sys.getsizeof, gc.get_objects())))  # Works\r\nprint(collections.Counter(map(type, gc.get_objects())))  # Works\r\n```\r\n\r\n## Possible understanding\r\nI think there's a use of the `__file__` variable somewhere and according to [this](https://stackoverflow.com/a/41546830) answer of SO, if the application is frozen it just fails using the variable.\r\n\r\nHope you can help\r\n\r\nEdit : added more working examples\r\nEdit 2 : I conducted some experiments, and it seems it's only due to the printing part. I navigated in the files but don't understand where to look when I encounter torch._C",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/19351/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/19351/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/19348",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/19348/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/19348/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/19348/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/19348",
        "id": 434196169,
        "node_id": "MDU6SXNzdWU0MzQxOTYxNjk=",
        "number": 19348,
        "title": "[JIT] isinstance(m, nn.Linear) returns False in ScriptModules",
        "user": {
            "login": "qbx2",
            "id": 5977817,
            "node_id": "MDQ6VXNlcjU5Nzc4MTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5977817?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/qbx2",
            "html_url": "https://github.com/qbx2",
            "followers_url": "https://api.github.com/users/qbx2/followers",
            "following_url": "https://api.github.com/users/qbx2/following{/other_user}",
            "gists_url": "https://api.github.com/users/qbx2/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/qbx2/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/qbx2/subscriptions",
            "organizations_url": "https://api.github.com/users/qbx2/orgs",
            "repos_url": "https://api.github.com/users/qbx2/repos",
            "events_url": "https://api.github.com/users/qbx2/events{/privacy}",
            "received_events_url": "https://api.github.com/users/qbx2/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1264724882,
                "node_id": "MDU6TGFiZWwxMjY0NzI0ODgy",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/low%20priority",
                "name": "low priority",
                "color": "b2ffe1",
                "default": false,
                "description": "We're unlikely to get around to doing this in the near future"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2019-04-17T09:59:36Z",
        "updated_at": "2020-01-08T05:10:42Z",
        "closed_at": "2019-05-23T17:19:11Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\nWe usually use `for m in self.modules()` loop to initialize weights and biases. However, `isinstance()` is not working properly when the module is JIT-supported (all modules except for `Unsupported torch.nn Modules` https://pytorch.org/docs/stable/jit.html#builtin-functions).\r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior:\r\n\r\n```python\r\nimport torch.nn as nn\r\nimport torch.jit as jit\r\n\r\n\r\nclass SomeScriptModule(jit.ScriptModule):\r\n    def __init__(self):\r\n        super().__init__()\r\n\r\n        self.linear = nn.Linear(16, 16)\r\n        self.conv2d = nn.Conv2d(3, 8, 3)\r\n        self.conv3d = nn.Conv3d(3, 8, 3)\r\n        self.gru = nn.GRU(16, 16)\r\n        self.lstm = nn.LSTM(16, 16)\r\n\r\n        for m in self.modules():\r\n            print(m, type(m))\r\n\r\n            if isinstance(m, nn.Linear):\r\n                print(f'm is Linear')\r\n                continue\r\n\r\n            if isinstance(m, nn.Conv2d):\r\n                print(f'm is Conv2d')\r\n                continue\r\n\r\n            if isinstance(m, nn.Conv3d):\r\n                print(f'm is Conv3d')\r\n                continue\r\n\r\n            if isinstance(m, nn.GRU):\r\n                print(f'm is GRU')\r\n                continue\r\n\r\n            if isinstance(m, nn.LSTM):\r\n                print(f'm is LSTM')\r\n                continue\r\n\r\n            print('??????')\r\n\r\n\r\nSomeScriptModule()\r\n```\r\n\r\n```\r\n$ python test.py\r\nSomeScriptModule(\r\n  (linear): WeakScriptModuleProxy()\r\n  (conv2d): WeakScriptModuleProxy()\r\n  (conv3d): WeakScriptModuleProxy()\r\n  (gru): GRU(16, 16)\r\n  (lstm): LSTM(16, 16)\r\n) <class '__main__.SomeScriptModule'>\r\n??????\r\nWeakScriptModuleProxy() <class 'torch.jit.WeakScriptModuleProxy'>\r\n??????\r\nWeakScriptModuleProxy() <class 'torch.jit.WeakScriptModuleProxy'>\r\n??????\r\nWeakScriptModuleProxy() <class 'torch.jit.WeakScriptModuleProxy'>\r\n??????\r\nGRU(16, 16) <class 'torch.nn.modules.rnn.GRU'>\r\nm is GRU\r\nLSTM(16, 16) <class 'torch.nn.modules.rnn.LSTM'>\r\nm is LSTM\r\n```\r\n\r\n## Expected behavior\r\n\r\n<!-- A clear and concise description of what you expected to happen. -->\r\n`isinstance()` should return True in the code above. It does not seem to be possible, however. If then, I think that torch should provide `torch.isinstance()` or any method to support WeakScriptModuleProxy.\r\n\r\n## Environment\r\n\r\n$ python collect_env.py\r\nCollecting environment information...\r\nPyTorch version: 1.0.1.post2\r\nIs debug build: No\r\nCUDA used to build PyTorch: 10.0.130\r\n\r\nOS: Ubuntu 18.04.1 LTS\r\nGCC version: (Ubuntu 7.3.0-27ubuntu1~18.04) 7.3.0\r\nCMake version: Could not collect\r\n\r\nPython version: 3.7\r\nIs CUDA available: Yes\r\nCUDA runtime version: 10.0.130\r\nGPU models and configuration: GPU 0: GeForce RTX 2080\r\nNvidia driver version: 410.48\r\ncuDNN version: /usr/local/cuda-10.0/lib64/libcudnn.so.7.4.1\r\n\r\nVersions of relevant libraries:\r\n[pip] numpy==1.15.4\r\n[pip] numpydoc==0.8.0\r\n[pip] torch==1.0.1.post2\r\n[conda] blas                      1.0                         mkl  \r\n[conda] mkl                       2019.1                      144  \r\n[conda] mkl-service               1.1.2            py37he904b0f_5  \r\n[conda] mkl_fft                   1.0.6            py37hd81dba3_0  \r\n[conda] mkl_random                1.0.2            py37hd81dba3_0  \r\n[conda] pytorch                   1.0.1           py3.7_cuda10.0.130_cudnn7.4.2_2    pytorch\r\n\r\n## Additional context\r\n\r\n<!-- Add any other context about the problem here. -->\r\n",
        "closed_by": {
            "login": "ailzhang",
            "id": 5248122,
            "node_id": "MDQ6VXNlcjUyNDgxMjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5248122?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ailzhang",
            "html_url": "https://github.com/ailzhang",
            "followers_url": "https://api.github.com/users/ailzhang/followers",
            "following_url": "https://api.github.com/users/ailzhang/following{/other_user}",
            "gists_url": "https://api.github.com/users/ailzhang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ailzhang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ailzhang/subscriptions",
            "organizations_url": "https://api.github.com/users/ailzhang/orgs",
            "repos_url": "https://api.github.com/users/ailzhang/repos",
            "events_url": "https://api.github.com/users/ailzhang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ailzhang/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/19348/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/19348/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/19314",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/19314/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/19314/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/19314/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/19314",
        "id": 433924267,
        "node_id": "MDU6SXNzdWU0MzM5MjQyNjc=",
        "number": 19314,
        "title": "[JIT] Iterating over a tensor using `for-in` doesn't work",
        "user": {
            "login": "jamesr66a",
            "id": 4685384,
            "node_id": "MDQ6VXNlcjQ2ODUzODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4685384?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesr66a",
            "html_url": "https://github.com/jamesr66a",
            "followers_url": "https://api.github.com/users/jamesr66a/followers",
            "following_url": "https://api.github.com/users/jamesr66a/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesr66a/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesr66a/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesr66a/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesr66a/orgs",
            "repos_url": "https://api.github.com/users/jamesr66a/repos",
            "events_url": "https://api.github.com/users/jamesr66a/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesr66a/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "Krovatkin",
            "id": 5086322,
            "node_id": "MDQ6VXNlcjUwODYzMjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5086322?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Krovatkin",
            "html_url": "https://github.com/Krovatkin",
            "followers_url": "https://api.github.com/users/Krovatkin/followers",
            "following_url": "https://api.github.com/users/Krovatkin/following{/other_user}",
            "gists_url": "https://api.github.com/users/Krovatkin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Krovatkin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Krovatkin/subscriptions",
            "organizations_url": "https://api.github.com/users/Krovatkin/orgs",
            "repos_url": "https://api.github.com/users/Krovatkin/repos",
            "events_url": "https://api.github.com/users/Krovatkin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Krovatkin/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "Krovatkin",
                "id": 5086322,
                "node_id": "MDQ6VXNlcjUwODYzMjI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/5086322?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/Krovatkin",
                "html_url": "https://github.com/Krovatkin",
                "followers_url": "https://api.github.com/users/Krovatkin/followers",
                "following_url": "https://api.github.com/users/Krovatkin/following{/other_user}",
                "gists_url": "https://api.github.com/users/Krovatkin/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/Krovatkin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Krovatkin/subscriptions",
                "organizations_url": "https://api.github.com/users/Krovatkin/orgs",
                "repos_url": "https://api.github.com/users/Krovatkin/repos",
                "events_url": "https://api.github.com/users/Krovatkin/events{/privacy}",
                "received_events_url": "https://api.github.com/users/Krovatkin/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-04-16T18:29:22Z",
        "updated_at": "2019-05-02T01:00:11Z",
        "closed_at": "2019-05-02T01:00:11Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "Repro:\r\n\r\n```\r\nimport torch\r\n\r\n# works\r\ndef foo(x):\r\n    rv = x[0]\r\n    for x_i in x:\r\n        rv += x_i\r\n    return rv\r\n\r\nprint(foo(torch.rand(3, 4, 5)))\r\n\r\n# doesn't work\r\n@torch.jit.script\r\ndef foo(x):\r\n    rv = x[0]\r\n    for x_i in x:\r\n        rv += x_i\r\n    return rv\r\n\r\nprint(foo(torch.rand(3, 4, 5)))\r\n```\r\n\r\nOutput:\r\n\r\n```\r\ntensor([[1.8719, 1.6158, 1.0286, 1.0959, 1.1366],\r\n        [1.5421, 0.4732, 1.1207, 1.4857, 3.2413],\r\n        [2.4948, 2.7028, 2.1719, 2.7762, 3.3651],\r\n        [1.9806, 2.5796, 1.4602, 1.5482, 1.9668]])\r\nTraceback (most recent call last):\r\n  File \"iter_test.py\", line 13, in <module>\r\n    @torch.jit.script\r\n  File \"/Users/jamesreed/onnx-fairseq/pytorch/torch/jit/__init__.py\", line 745, in script\r\n    _jit_script_compile(mod, ast, _rcb, get_default_args(obj))\r\nRuntimeError: \r\nTensor cannot be used as a tuple:\r\n@torch.jit.script\r\ndef foo(x):\r\n    rv = x[0]\r\n    for x_i in x:\r\n    ~~~~~~~~~~~~~...  <--- HERE\r\n        rv += x_i\r\n    return rv\r\n```\r\n\r\n",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/19314/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/19314/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/19253",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/19253/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/19253/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/19253/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/19253",
        "id": 433065886,
        "node_id": "MDU6SXNzdWU0MzMwNjU4ODY=",
        "number": 19253,
        "title": "torch.pow() in a script module produces an error",
        "user": {
            "login": "nict-wisdom",
            "id": 5086659,
            "node_id": "MDQ6VXNlcjUwODY2NTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5086659?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nict-wisdom",
            "html_url": "https://github.com/nict-wisdom",
            "followers_url": "https://api.github.com/users/nict-wisdom/followers",
            "following_url": "https://api.github.com/users/nict-wisdom/following{/other_user}",
            "gists_url": "https://api.github.com/users/nict-wisdom/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nict-wisdom/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nict-wisdom/subscriptions",
            "organizations_url": "https://api.github.com/users/nict-wisdom/orgs",
            "repos_url": "https://api.github.com/users/nict-wisdom/repos",
            "events_url": "https://api.github.com/users/nict-wisdom/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nict-wisdom/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "ailzhang",
            "id": 5248122,
            "node_id": "MDQ6VXNlcjUyNDgxMjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5248122?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ailzhang",
            "html_url": "https://github.com/ailzhang",
            "followers_url": "https://api.github.com/users/ailzhang/followers",
            "following_url": "https://api.github.com/users/ailzhang/following{/other_user}",
            "gists_url": "https://api.github.com/users/ailzhang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ailzhang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ailzhang/subscriptions",
            "organizations_url": "https://api.github.com/users/ailzhang/orgs",
            "repos_url": "https://api.github.com/users/ailzhang/repos",
            "events_url": "https://api.github.com/users/ailzhang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ailzhang/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "ailzhang",
                "id": 5248122,
                "node_id": "MDQ6VXNlcjUyNDgxMjI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/5248122?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ailzhang",
                "html_url": "https://github.com/ailzhang",
                "followers_url": "https://api.github.com/users/ailzhang/followers",
                "following_url": "https://api.github.com/users/ailzhang/following{/other_user}",
                "gists_url": "https://api.github.com/users/ailzhang/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ailzhang/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ailzhang/subscriptions",
                "organizations_url": "https://api.github.com/users/ailzhang/orgs",
                "repos_url": "https://api.github.com/users/ailzhang/repos",
                "events_url": "https://api.github.com/users/ailzhang/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ailzhang/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2019-04-15T02:06:22Z",
        "updated_at": "2019-04-19T01:00:18Z",
        "closed_at": "2019-04-19T01:00:18Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\nThe backward of torch.pow() in a traced module produces an error when the input is on cuda.\r\n\r\n> RuntimeError:\r\nExpected tensor to have CUDA Backend, but got tensor with CPU Backend (while checking arguments for CUDA_tensor_apply4) (checkBackend at ../aten/src/ATen/TensorUtils.cpp:202)\r\n\r\nThe backward is defined in torch/csrc/jit/symbolic_script.cpp.\r\nI think the reason is that the backend of the first argument of torch.where() is always CPU.\r\n\r\n```\r\ndef pow_0(self,\r\n          exponent: float):\r\n    def backward(grad_output):\r\n        grad_self = torch.where(torch.tensor(exponent == 0.0), torch.zeros_like(self), grad_output * exponent * torch.pow(self, exponent - 1))\r\n        return grad_self, None\r\n    return torch.pow(self, exponent), backward\r\n```\r\n\r\n## To Reproduce\r\n\r\nThe following model is the one in\r\nhttps://github.com/pytorch/examples/blob/master/mnist/main.py\r\nbut I just inserted torch.pow().\r\n\r\n```\r\nimport torch\r\nimport torch.nn as nn\r\nimport torch.nn.functional as F\r\n\r\nclass Net(nn.Module):\r\n    def __init__(self):\r\n        super(Net, self).__init__()\r\n        self.conv1 = nn.Conv2d(1, 20, 5, 1)\r\n        self.conv2 = nn.Conv2d(20, 50, 5, 1)\r\n        self.fc1 = nn.Linear(4*4*50, 500)\r\n        self.fc2 = nn.Linear(500, 10)\r\n\r\n    def forward(self, x):\r\n        x = F.relu(self.conv1(x))\r\n        x = F.max_pool2d(x, 2, 2)\r\n        x = F.relu(self.conv2(x))\r\n        x = F.max_pool2d(x, 2, 2)\r\n        x = x.view(64, 4*4*50)\r\n        x = self.fc1(x)\r\n        x = F.relu(x)\r\n        x = self.fc2(x)\r\n        x = torch.pow(x, 1.1)\r\n        x = F.log_softmax(x, dim=1)\r\n        return x\r\n\r\nm = Net().cuda()\r\nx = torch.randn(64, 1, 28, 28, requires_grad=True).cuda()\r\ntraced_net = torch.jit.trace(m, x)\r\ntraced_output = traced_net(x)\r\ntgt = torch.randn(traced_output.size()).cuda()\r\ntraced_output.backward(tgt)\r\n```\r\n\r\n## Environment\r\nPyTorch version: 1.1.0a0+7e73783\r\nIs debug build: No\r\nCUDA used to build PyTorch: 9.2.88\r\n\r\nOS: CentOS Linux release 7.5.1804 (Core)\r\nGCC version: (GCC) 4.8.5 20150623 (Red Hat 4.8.5-28)\r\nCMake version: version 3.12.2\r\n\r\nPython version: 3.7\r\nIs CUDA available: Yes\r\nCUDA runtime version: 9.2.88\r\nGPU models and configuration:\r\nGPU 0: Tesla P100-PCIE-16GB\r\nGPU 1: Tesla P100-PCIE-16GB\r\n\r\nNvidia driver version: 396.26\r\ncuDNN version: Could not collect\r\n\r\nVersions of relevant libraries:\r\n[pip] numpy==1.15.4\r\n[pip] numpydoc==0.8.0\r\n[pip] torch==1.1.0a0+7e73783\r\n[pip] torchvision==0.2.2.post3\r\n[conda] blas                      1.0                         mkl\r\n[conda] magma-cuda90              2.5.0                         1    pytorch\r\n[conda] magma-cuda92              2.5.0                         1    pytorch\r\n[conda] mkl                       2019.1                      144\r\n[conda] mkl-include               2019.3                      199\r\n[conda] mkl-service               1.1.2            py37he904b0f_5\r\n[conda] mkl_fft                   1.0.6            py37hd81dba3_0\r\n[conda] mkl_random                1.0.2            py37hd81dba3_0\r\n[conda] torch                     1.1.0a0+7e73783           dev_0    <develop>\r\n[conda] torchvision               0.2.2.post3              pypi_0    pypi\r\n\r\n",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/19253/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/19253/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/19039",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/19039/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/19039/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/19039/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/19039",
        "id": 430660990,
        "node_id": "MDU6SXNzdWU0MzA2NjA5OTA=",
        "number": 19039,
        "title": "Cannot change device of JIT module after initial loading using C++ frontend",
        "user": {
            "login": "abonnet",
            "id": 3926919,
            "node_id": "MDQ6VXNlcjM5MjY5MTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3926919?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/abonnet",
            "html_url": "https://github.com/abonnet",
            "followers_url": "https://api.github.com/users/abonnet/followers",
            "following_url": "https://api.github.com/users/abonnet/following{/other_user}",
            "gists_url": "https://api.github.com/users/abonnet/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/abonnet/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/abonnet/subscriptions",
            "organizations_url": "https://api.github.com/users/abonnet/orgs",
            "repos_url": "https://api.github.com/users/abonnet/repos",
            "events_url": "https://api.github.com/users/abonnet/events{/privacy}",
            "received_events_url": "https://api.github.com/users/abonnet/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 443484135,
                "node_id": "MDU6TGFiZWw0NDM0ODQxMzU=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/high%20priority",
                "name": "high priority",
                "color": "F22613",
                "default": false,
                "description": null
            },
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "wanchaol",
            "id": 9443650,
            "node_id": "MDQ6VXNlcjk0NDM2NTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9443650?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wanchaol",
            "html_url": "https://github.com/wanchaol",
            "followers_url": "https://api.github.com/users/wanchaol/followers",
            "following_url": "https://api.github.com/users/wanchaol/following{/other_user}",
            "gists_url": "https://api.github.com/users/wanchaol/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wanchaol/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wanchaol/subscriptions",
            "organizations_url": "https://api.github.com/users/wanchaol/orgs",
            "repos_url": "https://api.github.com/users/wanchaol/repos",
            "events_url": "https://api.github.com/users/wanchaol/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wanchaol/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "wanchaol",
                "id": 9443650,
                "node_id": "MDQ6VXNlcjk0NDM2NTA=",
                "avatar_url": "https://avatars.githubusercontent.com/u/9443650?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/wanchaol",
                "html_url": "https://github.com/wanchaol",
                "followers_url": "https://api.github.com/users/wanchaol/followers",
                "following_url": "https://api.github.com/users/wanchaol/following{/other_user}",
                "gists_url": "https://api.github.com/users/wanchaol/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/wanchaol/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wanchaol/subscriptions",
                "organizations_url": "https://api.github.com/users/wanchaol/orgs",
                "repos_url": "https://api.github.com/users/wanchaol/repos",
                "events_url": "https://api.github.com/users/wanchaol/events{/privacy}",
                "received_events_url": "https://api.github.com/users/wanchaol/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 5,
        "created_at": "2019-04-08T21:12:30Z",
        "updated_at": "2019-04-26T20:09:00Z",
        "closed_at": "2019-04-26T20:09:00Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\nI exported a JIT model on GPU, then try to load it and run it on CPU, using C++ frontend. \r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior:\r\n\r\n1. Create a demo model and export it on GPU\r\n```\r\nimport torch\r\n\r\nclass BatchNormModel(torch.jit.ScriptModule):\r\n    def __init__(self):\r\n        super(BatchNormModel, self).__init__(optimize=False)\r\n        self.bn = torch.nn.BatchNorm1d(10)\r\n\r\n    @torch.jit.script_method\r\n    def forward(self, x):\r\n        return self.bn(x)\r\n\r\n\r\nmodel = BatchNormModel()\r\nmodel.eval()\r\nmodel.cuda()\r\nmodel.save(\"/tmp/bn_gpu.pt\")\r\n```\r\n2. Try to load the model and execute on CPU\r\n```\r\n#include <torch/script.h>\r\n\r\n#include <memory>\r\n\r\nint main() {\r\n    std::shared_ptr<torch::jit::script::Module> module = torch::jit::load(\"/tmp/bn_gpu.pt\");\r\n    module->to(torch::kCPU);\r\n\r\n    std::vector<torch::jit::IValue> inputs;\r\n    inputs.emplace_back(torch::randn({6, 10}));\r\n    auto output = module->forward(inputs).toTensor();\r\n}\r\n```\r\nError\r\n```\r\nTerminate std::runtime_error( Expected tensor to have CPU Backend, but got tensor with CUDA Backend (while checking arguments for batch_norm_cpu) (checkBackend at ../aten/src/ATen/TensorUtils.cpp:202)\r\n```\r\n\r\n## Expected behavior\r\n\r\nExpect `->to` function to recursively move all the parameters on CPU.\r\n\r\n## Environment\r\n\r\nPlease copy and paste the output from our\r\nPyTorch version: 1.1.0a0+9696f06\r\nIs debug build: No\r\nCUDA used to build PyTorch: 10.0.130\r\n\r\nOS: Ubuntu 14.04.6 LTS\r\nGCC version: (Ubuntu 4.8.4-2ubuntu1~14.04.4) 4.8.4\r\nCMake version: version 3.11.1\r\n\r\nPython version: 2.7\r\nIs CUDA available: Yes\r\nCUDA runtime version: Could not collect\r\nGPU models and configuration: \r\nGPU 0: TITAN V\r\nGPU 1: TITAN Xp\r\nGPU 2: GeForce RTX 2080 Ti\r\n\r\nNvidia driver version: 410.78\r\ncuDNN version: Probably one of the following:\r\n/usr/lib/x86_64-linux-gnu/libcudnn.so.5.1.5\r\n/usr/lib/x86_64-linux-gnu/libcudnn.so.6.0.21\r\n\r\nVersions of relevant libraries:\r\n[pip] numpy==1.13.3\r\n[pip] pyarrow==0.10.0+numpy1.13.1\r\n[conda] Could not collect\r\n\r\n## Additional context\r\n\r\nI have seen similar behavior when trying to cast weights to be half (FP16). If I pass a `torch::Device` object to `torch::jit::load`, model is correctly loaded on CPU so the issue seems to be related to the `->to` function.\r\n",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/19039/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/19039/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/19030",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/19030/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/19030/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/19030/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/19030",
        "id": 430598304,
        "node_id": "MDU6SXNzdWU0MzA1OTgzMDQ=",
        "number": 19030,
        "title": "Support __get_state__/__set_state__ for JIT serialization",
        "user": {
            "login": "dzhulgakov",
            "id": 17890620,
            "node_id": "MDQ6VXNlcjE3ODkwNjIw",
            "avatar_url": "https://avatars.githubusercontent.com/u/17890620?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dzhulgakov",
            "html_url": "https://github.com/dzhulgakov",
            "followers_url": "https://api.github.com/users/dzhulgakov/followers",
            "following_url": "https://api.github.com/users/dzhulgakov/following{/other_user}",
            "gists_url": "https://api.github.com/users/dzhulgakov/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dzhulgakov/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dzhulgakov/subscriptions",
            "organizations_url": "https://api.github.com/users/dzhulgakov/orgs",
            "repos_url": "https://api.github.com/users/dzhulgakov/repos",
            "events_url": "https://api.github.com/users/dzhulgakov/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dzhulgakov/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 443484135,
                "node_id": "MDU6TGFiZWw0NDM0ODQxMzU=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/high%20priority",
                "name": "high priority",
                "color": "F22613",
                "default": false,
                "description": null
            },
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1076922351,
                "node_id": "MDU6TGFiZWwxMDc2OTIyMzUx",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/feature",
                "name": "feature",
                "color": "ffceba",
                "default": false,
                "description": "A request for a proper, new feature."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "driazati",
            "id": 9407960,
            "node_id": "MDQ6VXNlcjk0MDc5NjA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9407960?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/driazati",
            "html_url": "https://github.com/driazati",
            "followers_url": "https://api.github.com/users/driazati/followers",
            "following_url": "https://api.github.com/users/driazati/following{/other_user}",
            "gists_url": "https://api.github.com/users/driazati/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/driazati/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/driazati/subscriptions",
            "organizations_url": "https://api.github.com/users/driazati/orgs",
            "repos_url": "https://api.github.com/users/driazati/repos",
            "events_url": "https://api.github.com/users/driazati/events{/privacy}",
            "received_events_url": "https://api.github.com/users/driazati/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "driazati",
                "id": 9407960,
                "node_id": "MDQ6VXNlcjk0MDc5NjA=",
                "avatar_url": "https://avatars.githubusercontent.com/u/9407960?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/driazati",
                "html_url": "https://github.com/driazati",
                "followers_url": "https://api.github.com/users/driazati/followers",
                "following_url": "https://api.github.com/users/driazati/following{/other_user}",
                "gists_url": "https://api.github.com/users/driazati/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/driazati/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/driazati/subscriptions",
                "organizations_url": "https://api.github.com/users/driazati/orgs",
                "repos_url": "https://api.github.com/users/driazati/repos",
                "events_url": "https://api.github.com/users/driazati/events{/privacy}",
                "received_events_url": "https://api.github.com/users/driazati/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2019-04-08T18:36:28Z",
        "updated_at": "2019-08-16T19:48:42Z",
        "closed_at": "2019-08-16T19:48:42Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "## \ud83d\ude80 Feature\r\nFor custom C classes or for complex modules in JIT, there needs to be ability to supply customer serialization code.\r\n\r\n## Motivation\r\n\r\nWe want to support custom opaque representations with the ability to serialize them. This is pretty important for opaque optimized layouts in inference (e.g. when using fbgemm), currently we use a hack with pack/unpack: https://github.com/pytorch/pytorch/blob/master/torch/jit/quantized.py#L27\r\n\r\nThis functionality will also be useful for custom C class bindings which would need to be serialized as well.\r\n\r\n## Pitch\r\n\r\nProposal is to implement get_state/set_state similarly how they are handled in pickle: one can return any value (`IValue`) that will be serialized and later passed to `__set_state__` for deserialization.\r\n\r\n```python\r\nclass MyLayerPacked(torch.nn.Module):\r\n    # same as before\r\n    def __init__(self, original: MyLayer):\r\n        self.packed_weight = self.__pack__(original.weight) # ByteTensor with pointer\r\n    def forward(self, x):\r\n        return torch.my_mm_fast(self.packed_weight, x)\r\n    # it has to be script method to work in C++\r\n    @torch.jit.script_method\r\n    def __getstate__(self):\r\n        return {'weight': torch.unpack_from_my_mm(self.packed_weight)}\r\n    def __setstate__(self, state):\r\n        # attribute mutability is required here\r\n        self.packed_weight = torch.pack_for_my_mm(state['weight'])\r\n```\r\n\r\n## Alternatives\r\n\r\nInstead of following Pickle style we can define some other interface for it",
        "closed_by": {
            "login": "driazati",
            "id": 9407960,
            "node_id": "MDQ6VXNlcjk0MDc5NjA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9407960?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/driazati",
            "html_url": "https://github.com/driazati",
            "followers_url": "https://api.github.com/users/driazati/followers",
            "following_url": "https://api.github.com/users/driazati/following{/other_user}",
            "gists_url": "https://api.github.com/users/driazati/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/driazati/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/driazati/subscriptions",
            "organizations_url": "https://api.github.com/users/driazati/orgs",
            "repos_url": "https://api.github.com/users/driazati/repos",
            "events_url": "https://api.github.com/users/driazati/events{/privacy}",
            "received_events_url": "https://api.github.com/users/driazati/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/19030/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/19030/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/18744",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/18744/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/18744/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/18744/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/18744",
        "id": 428376713,
        "node_id": "MDU6SXNzdWU0MjgzNzY3MTM=",
        "number": 18744,
        "title": "Shape analysis for _unwrap_optional has confusing control flow",
        "user": {
            "login": "zdevito",
            "id": 370202,
            "node_id": "MDQ6VXNlcjM3MDIwMg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/370202?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zdevito",
            "html_url": "https://github.com/zdevito",
            "followers_url": "https://api.github.com/users/zdevito/followers",
            "following_url": "https://api.github.com/users/zdevito/following{/other_user}",
            "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions",
            "organizations_url": "https://api.github.com/users/zdevito/orgs",
            "repos_url": "https://api.github.com/users/zdevito/repos",
            "events_url": "https://api.github.com/users/zdevito/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zdevito/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "wanchaol",
            "id": 9443650,
            "node_id": "MDQ6VXNlcjk0NDM2NTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9443650?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wanchaol",
            "html_url": "https://github.com/wanchaol",
            "followers_url": "https://api.github.com/users/wanchaol/followers",
            "following_url": "https://api.github.com/users/wanchaol/following{/other_user}",
            "gists_url": "https://api.github.com/users/wanchaol/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wanchaol/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wanchaol/subscriptions",
            "organizations_url": "https://api.github.com/users/wanchaol/orgs",
            "repos_url": "https://api.github.com/users/wanchaol/repos",
            "events_url": "https://api.github.com/users/wanchaol/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wanchaol/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "wanchaol",
                "id": 9443650,
                "node_id": "MDQ6VXNlcjk0NDM2NTA=",
                "avatar_url": "https://avatars.githubusercontent.com/u/9443650?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/wanchaol",
                "html_url": "https://github.com/wanchaol",
                "followers_url": "https://api.github.com/users/wanchaol/followers",
                "following_url": "https://api.github.com/users/wanchaol/following{/other_user}",
                "gists_url": "https://api.github.com/users/wanchaol/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/wanchaol/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wanchaol/subscriptions",
                "organizations_url": "https://api.github.com/users/wanchaol/orgs",
                "repos_url": "https://api.github.com/users/wanchaol/repos",
                "events_url": "https://api.github.com/users/wanchaol/events{/privacy}",
                "received_events_url": "https://api.github.com/users/wanchaol/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-04-02T18:27:41Z",
        "updated_at": "2019-06-21T01:54:10Z",
        "closed_at": "2019-06-21T01:54:10Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "https://github.com/pytorch/pytorch/blame/01c03caacc266ad18cb19f1ee4131e9d16ea316f/torch/csrc/jit/passes/shape_analysis.cpp#L531\r\n\r\nAll the cases above this return at the end of the case. `_wrap_optional` conditionally returns. If it doesn't then it falls through to default case!!!! None of this is commented and is highly surprising. This caused bugs when I tried updating the code.",
        "closed_by": {
            "login": "wanchaol",
            "id": 9443650,
            "node_id": "MDQ6VXNlcjk0NDM2NTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9443650?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wanchaol",
            "html_url": "https://github.com/wanchaol",
            "followers_url": "https://api.github.com/users/wanchaol/followers",
            "following_url": "https://api.github.com/users/wanchaol/following{/other_user}",
            "gists_url": "https://api.github.com/users/wanchaol/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wanchaol/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wanchaol/subscriptions",
            "organizations_url": "https://api.github.com/users/wanchaol/orgs",
            "repos_url": "https://api.github.com/users/wanchaol/repos",
            "events_url": "https://api.github.com/users/wanchaol/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wanchaol/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/18744/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/18744/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/18671",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/18671/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/18671/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/18671/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/18671",
        "id": 427488976,
        "node_id": "MDU6SXNzdWU0Mjc0ODg5NzY=",
        "number": 18671,
        "title": "[jit] crash in unpickler code",
        "user": {
            "login": "suo",
            "id": 1617424,
            "node_id": "MDQ6VXNlcjE2MTc0MjQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1617424?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/suo",
            "html_url": "https://github.com/suo",
            "followers_url": "https://api.github.com/users/suo/followers",
            "following_url": "https://api.github.com/users/suo/following{/other_user}",
            "gists_url": "https://api.github.com/users/suo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/suo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/suo/subscriptions",
            "organizations_url": "https://api.github.com/users/suo/orgs",
            "repos_url": "https://api.github.com/users/suo/repos",
            "events_url": "https://api.github.com/users/suo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/suo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "driazati",
            "id": 9407960,
            "node_id": "MDQ6VXNlcjk0MDc5NjA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9407960?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/driazati",
            "html_url": "https://github.com/driazati",
            "followers_url": "https://api.github.com/users/driazati/followers",
            "following_url": "https://api.github.com/users/driazati/following{/other_user}",
            "gists_url": "https://api.github.com/users/driazati/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/driazati/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/driazati/subscriptions",
            "organizations_url": "https://api.github.com/users/driazati/orgs",
            "repos_url": "https://api.github.com/users/driazati/repos",
            "events_url": "https://api.github.com/users/driazati/events{/privacy}",
            "received_events_url": "https://api.github.com/users/driazati/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "driazati",
                "id": 9407960,
                "node_id": "MDQ6VXNlcjk0MDc5NjA=",
                "avatar_url": "https://avatars.githubusercontent.com/u/9407960?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/driazati",
                "html_url": "https://github.com/driazati",
                "followers_url": "https://api.github.com/users/driazati/followers",
                "following_url": "https://api.github.com/users/driazati/following{/other_user}",
                "gists_url": "https://api.github.com/users/driazati/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/driazati/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/driazati/subscriptions",
                "organizations_url": "https://api.github.com/users/driazati/orgs",
                "repos_url": "https://api.github.com/users/driazati/repos",
                "events_url": "https://api.github.com/users/driazati/events{/privacy}",
                "received_events_url": "https://api.github.com/users/driazati/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2019-04-01T02:55:55Z",
        "updated_at": "2019-04-02T00:36:53Z",
        "closed_at": "2019-04-02T00:36:53Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "See this test result: https://fburl.com/testinfra/6yuycydh\r\n\r\n```\r\ntest_cumprod_zeros_dim2_neg0 (test_jit.TestJitGeneratedAutograd) ... ../fbcode/third-party-buck/gcc-5-glibc-2.23/build/libgcc/include/c++/5.5.0/bits/stl_iterator.h:810:45: runtime error: pointer index expression with base 0x000000000000 overflowed to 0xfffffffffffffff0\r\n    #0 0x7fdca4075dd8 in __gnu_cxx::__normal_iterator<c10::IValue*, std::vector<c10::IValue, std::allocator<c10::IValue> > >::operator-(long) const ../fbcode/third-party-buck/gcc-5-glibc-2.23/build/libgcc/include/c++/5.5.0/bits/stl_iterator.h:810\r\n    #1 0x7fdca483d2e4 in std::vector<c10::IValue, std::allocator<c10::IValue> >::back() ../fbcode/third-party-buck/gcc-5-glibc-2.23/build/libgcc/include/c++/5.5.0/bits/stl_vector.h:882\r\n    #2 0x7fdca4e9027b in torch::jit::Unpickler::readInstruction() caffe2/torch/csrc/jit/pickler.cpp:342\r\n    #3 0x7fdca4e8db77 in torch::jit::Unpickler::run() caffe2/torch/csrc/jit/pickler.cpp:324\r\n    #4 0x7fdca4e8d0b2 in torch::jit::Unpickler::parse_ivalue_list() caffe2/torch/csrc/jit/pickler.cpp:294\r\n    #5 0x7fdca4af3128 in torch::jit::(anonymous namespace)::ScriptModuleDeserializer::loadAttributeTable() caffe2/torch/csrc/jit/import.cpp:157\r\n    #6 0x7fdca4aeee51 in torch::jit::(anonymous namespace)::ScriptModuleDeserializer::deserialize(std::function<std::shared_ptr<torch::jit::script::Module> (std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)>, c10::optional<c10::Device>, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&) caffe2/torch/csrc/jit/import.cpp:135\r\n    #7 0x7fdca4aed3c0 in torch::jit::import_ir_module(std::function<std::shared_ptr<torch::jit::script::Module> (std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)>, std::istream&, c10::optional<c10::Device>, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&) caffe2/torch/csrc/jit/import.cpp:293\r\n    #8 0x7fdca8bd94c7 in torch::jit::script::initJitScriptBindings(_object*)::$_35::operator()(std::function<std::shared_ptr<torch::jit::script::Module> (std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, pybind11::object, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&) const caffe2/torch/csrc/jit/script/init.cpp:1080\r\n    #9 0x7fdca8bd8d04 in void pybind11::detail::argument_loader<std::function<std::shared_ptr<torch::jit::script::Module> (std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, pybind11::object, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&>::call_impl<void, torch::jit::script::initJitScriptBindings(_object*)::$_35&, 0ul, 1ul, 2ul, 3ul, pybind11::detail::void_type>(torch::jit::script::initJitScriptBindings(_object*)::$_35&&&, std::integer_sequence<unsigned long, 0ul, 1ul, 2ul, 3ul>, pybind11::detail::void_type&&) third-party-buck/gcc-5-glibc-2.23/build/pybind11/889256a/include/pybind11/cast.h:1860\r\n    #10 0x7fdca8bd8acc in std::enable_if<std::is_void<void>::value, pybind11::detail::void_type>::type pybind11::detail::argument_loader<std::function<std::shared_ptr<torch::jit::script::Module> (std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, pybind11::object, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&>::call<void, pybind11::detail::void_type, torch::jit::script::initJitScriptBindings(_object*)::$_35&>(torch::jit::script::initJitScriptBindings(_object*)::$_35&&&) && third-party-buck/gcc-5-glibc-2.23/build/pybind11/889256a/include/pybind11/cast.h:1842\r\n    #11 0x7fdca8bd86dd in void pybind11::cpp_function::initialize<torch::jit::script::initJitScriptBindings(_object*)::$_35, void, std::function<std::shared_ptr<torch::jit::script::Module> (std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, pybind11::object, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&, pybind11::name, pybind11::scope, pybind11::sibling>(torch::jit::script::initJitScriptBindings(_object*)::$_35&&, void (*)(std::function<std::shared_ptr<torch::jit::script::Module> (std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, pybind11::object, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&), pybind11::name const&, pybind11::scope const&, pybind11::sibling const&)::'lambda'(pybind11::detail::function_call&)::operator()(pybind11::detail::function_call&) const third-party-buck/gcc-5-glibc-2.23/build/pybind11/889256a/include/pybind11/pybind11.h:154\r\n    #12 0x7fdca8bd82f8 in void pybind11::cpp_function::initialize<torch::jit::script::initJitScriptBindings(_object*)::$_35, void, std::function<std::shared_ptr<torch::jit::script::Module> (std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, pybind11::object, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&, pybind11::name, pybind11::scope, pybind11::sibling>(torch::jit::script::initJitScriptBindings(_object*)::$_35&&, void (*)(std::function<std::shared_ptr<torch::jit::script::Module> (std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, pybind11::object, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&), pybind11::name const&, pybind11::scope const&, pybind11::sibling const&)::'lambda'(pybind11::detail::function_call&)::__invoke(pybind11::detail::function_call&) third-party-buck/gcc-5-glibc-2.23/build/pybind11/889256a/include/pybind11/pybind11.h:131\r\n```",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/18671/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/18671/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/18627",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/18627/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/18627/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/18627/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/18627",
        "id": 427135521,
        "node_id": "MDU6SXNzdWU0MjcxMzU1MjE=",
        "number": 18627,
        "title": "[jit] Python built-in function support",
        "user": {
            "login": "driazati",
            "id": 9407960,
            "node_id": "MDQ6VXNlcjk0MDc5NjA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9407960?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/driazati",
            "html_url": "https://github.com/driazati",
            "followers_url": "https://api.github.com/users/driazati/followers",
            "following_url": "https://api.github.com/users/driazati/following{/other_user}",
            "gists_url": "https://api.github.com/users/driazati/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/driazati/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/driazati/subscriptions",
            "organizations_url": "https://api.github.com/users/driazati/orgs",
            "repos_url": "https://api.github.com/users/driazati/repos",
            "events_url": "https://api.github.com/users/driazati/events{/privacy}",
            "received_events_url": "https://api.github.com/users/driazati/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            },
            {
                "id": 1594104112,
                "node_id": "MDU6TGFiZWwxNTk0MTA0MTEy",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/jit-backlog",
                "name": "jit-backlog",
                "color": "eacf96",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 34,
        "created_at": "2019-03-29T18:59:53Z",
        "updated_at": "2021-02-19T07:05:46Z",
        "closed_at": "2021-02-19T07:05:46Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "We support many built-in functions ([Python 2](https://docs.python.org/2/library/functions.html), [Python 3](https://docs.python.org/3/library/functions.html)), but not all of them. Some of these need some more discussion (i.e. what about builtins that exist in Python 2 but not 3 and vice versa), but many can be done piecemeal and should be straightforward to implement. When you implement a builtin please check to see if it is a [magic method](https://rszalski.github.io/magicmethods/).\r\n\r\nTo do\r\n- [x] `abs()`\r\n- [ ] `all()`\r\n- [ ] `any()`\r\n- [x] `bin()`\r\n- [x] `bool()`\r\n- [ ] `bytearray()`\r\n- [x] `chr()`\r\n- [x] `dict()`\r\n- [x] `divmod()`\r\n- [x] `enumerate()`\r\n- [x] `float()`\r\n- [x] `getattr()`\r\n- [x] `hash()`\r\n- [x] `hex()`\r\n- [x] `int()`\r\n- [x] `isinstance()`\r\n- [x] `len()`\r\n- [x] `list()`\r\n- [x] `long()` (long is deprecated in py3 builtins)\r\n- [x] `max()`\r\n- [x] `min()`\r\n- [x] `oct()`\r\n- [x] `ord()`\r\n- [x] `pow()`\r\n- [x] `print()`\r\n- [x] `range()`\r\n- [x] `reversed()`\r\n- [x] `round()`\r\n- [ ] `set()`\r\n- [ ] `slice()`\r\n- [x] `sorted()` ([separate issue](https://github.com/pytorch/pytorch/issues/19372), implemented for lists)\r\n- [x] `str()`\r\n- [ ] `sum()`\r\n- [ ] `type()`\r\n\r\nMaybe to do later (when things like first class modules are in, or if we ever have something like iterators)\r\n- [ ] `callable()`\r\n- [x] `tuple()`\r\n- [ ] `complex()`\r\n- [ ] `delattr()`\r\n- [ ] `filter()`\r\n- [ ] `format()`\r\n- [ ] `frozenset()`\r\n- [ ] `globals()`\r\n- [ ] `hasattr()`\r\n- [ ] `issubclass()`\r\n- [ ] `iter()`\r\n- [ ] `locals()`\r\n- [ ] `next()`\r\n- [ ] `object()`\r\n- [ ] `property()`\r\n- [ ] `reduce()`\r\n- [ ] `setattr()`\r\n- [ ] `repr()`\r\n- [ ] `super()`\r\n- [ ] `vars()`\r\n- [x] `zip()`\r\n\r\nProbably won't do\r\n- [ ] `__import__()`\r\n- [ ] `basestring()`\r\n- [ ] `classmethod()`\r\n- [ ] `cmp()`\r\n- [ ] `compile()`\r\n- [ ] `dir()`\r\n- [ ] `eval()`\r\n- [ ] `execfile()`\r\n- [ ] `file()`\r\n- [ ] `help()`\r\n- [ ] `id()`\r\n- [ ] `input()`\r\n- [ ] `map()`\r\n- [ ] `memoryview()`\r\n- [ ] `open()`\r\n- [ ] `raw_input()`\r\n- [ ] `reload()`\r\n- [ ] `staticmethod()`\r\n- [ ] `unichr()`\r\n- [ ] `unicode()`\r\n- [ ] `xrange()`\r\n\r\n\r\n\r\n\r\n\n\ncc @suo",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/18627/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/18627/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/18616",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/18616/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/18616/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/18616/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/18616",
        "id": 426927315,
        "node_id": "MDU6SXNzdWU0MjY5MjczMTU=",
        "number": 18616,
        "title": "[JIT] Bug with indexing when passing lists instead of tensors",
        "user": {
            "login": "fmassa",
            "id": 9110200,
            "node_id": "MDQ6VXNlcjkxMTAyMDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9110200?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fmassa",
            "html_url": "https://github.com/fmassa",
            "followers_url": "https://api.github.com/users/fmassa/followers",
            "following_url": "https://api.github.com/users/fmassa/following{/other_user}",
            "gists_url": "https://api.github.com/users/fmassa/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fmassa/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fmassa/subscriptions",
            "organizations_url": "https://api.github.com/users/fmassa/orgs",
            "repos_url": "https://api.github.com/users/fmassa/repos",
            "events_url": "https://api.github.com/users/fmassa/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fmassa/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1301347167,
                "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                "name": "triaged",
                "color": "006b75",
                "default": false,
                "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
            },
            {
                "id": 1594104112,
                "node_id": "MDU6TGFiZWwxNTk0MTA0MTEy",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/jit-backlog",
                "name": "jit-backlog",
                "color": "eacf96",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "efaust",
            "id": 1195281,
            "node_id": "MDQ6VXNlcjExOTUyODE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1195281?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/efaust",
            "html_url": "https://github.com/efaust",
            "followers_url": "https://api.github.com/users/efaust/followers",
            "following_url": "https://api.github.com/users/efaust/following{/other_user}",
            "gists_url": "https://api.github.com/users/efaust/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/efaust/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/efaust/subscriptions",
            "organizations_url": "https://api.github.com/users/efaust/orgs",
            "repos_url": "https://api.github.com/users/efaust/repos",
            "events_url": "https://api.github.com/users/efaust/events{/privacy}",
            "received_events_url": "https://api.github.com/users/efaust/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "efaust",
                "id": 1195281,
                "node_id": "MDQ6VXNlcjExOTUyODE=",
                "avatar_url": "https://avatars.githubusercontent.com/u/1195281?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/efaust",
                "html_url": "https://github.com/efaust",
                "followers_url": "https://api.github.com/users/efaust/followers",
                "following_url": "https://api.github.com/users/efaust/following{/other_user}",
                "gists_url": "https://api.github.com/users/efaust/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/efaust/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/efaust/subscriptions",
                "organizations_url": "https://api.github.com/users/efaust/orgs",
                "repos_url": "https://api.github.com/users/efaust/repos",
                "events_url": "https://api.github.com/users/efaust/events{/privacy}",
                "received_events_url": "https://api.github.com/users/efaust/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2019-03-29T10:49:37Z",
        "updated_at": "2020-05-06T17:46:43Z",
        "closed_at": "2020-05-06T17:46:43Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\n<!-- A clear and concise description of what the bug is. -->\r\n\r\nThere is a mismatch in semantics between torchscript and pytorch when indexing with a list of integers.\r\nIn PyTorch (which follows numpy semantics), the list is converted into a `int64` tensor, and advanced indexing is performed.\r\nIn torchscript, the list is treated as a tuple (in pytorch semantics), and it dispatches to several calls to `select`.\r\n\r\nSo\r\n```python\r\nx[[1, 2]]\r\n```\r\nbecomes in TorchScript\r\n```python\r\nx[1, 2]\r\n```\r\nwhich is not semantics-preserving.\r\n\r\n## To Reproduce\r\n\r\n```python\r\nIn [4]: @torch.jit.script\r\n   ...: def f(x):\r\n   ...:     x[[1, 2]] = 1\r\n   ...:     return x\r\n   ...:\r\n\r\nIn [5]: x = torch.zeros(4, 4)\r\n\r\nIn [6]: f(x)\r\nOut[6]:\r\ntensor([[0., 0., 0., 0.],\r\n        [0., 0., 1., 0.],\r\n        [0., 0., 0., 0.],\r\n        [0., 0., 0., 0.]])\r\n\r\nIn [7]: x = torch.zeros(4, 4)\r\n\r\nIn [8]: x[[1, 2]] = 1\r\n\r\nIn [9]: x\r\nOut[9]:\r\ntensor([[0., 0., 0., 0.],\r\n        [1., 1., 1., 1.],\r\n        [1., 1., 1., 1.],\r\n        [0., 0., 0., 0.]])\r\n```\r\n\r\nBy inspecting `f.code`, we see that it is performing the equivalent of `x[1][2]`:\r\n```python\r\ndef forward(self,\r\n    x: Tensor) -> Tensor:\r\n  _0 = torch.select(torch.select(x, 0, 1), 0, 2)\r\n  _1 = torch.copy_(_0, 1)\r\n  return x\r\n```\r\nIt should instead dispatch to `index_fill_` or `index_copy` (or more generally, `index_put_`).\r\n\r\nNote that the same (wrong) behavior happens for selection:\r\n```python\r\nIn [14]: @torch.jit.script\r\n    ...: def g(x):\r\n    ...:     return x[[1, 2]]\r\n    ...:\r\n\r\nIn [15]: a = torch.arange(16).reshape(4,4)\r\n\r\nIn [16]: a\r\nOut[16]:\r\ntensor([[ 0,  1,  2,  3],\r\n        [ 4,  5,  6,  7],\r\n        [ 8,  9, 10, 11],\r\n        [12, 13, 14, 15]])\r\n\r\nIn [17]: g(x)\r\nOut[17]: tensor(1.)\r\n\r\nIn [18]: print(g.code)\r\ndef forward(self,\r\n    x: Tensor) -> Tensor:\r\n  _0 = torch.select(torch.select(x, 0, 1), 0, 2)\r\n  return _0\r\n```\r\n\r\nNote that if instead we pass `int64` tensors for the indices, everything work as expected.\r\n\r\nI'm using PyTorch nightly 1.0.0.dev20190321\r\n\r\n## Context\r\n\r\nThis is potentially related to https://github.com/pytorch/pytorch/issues/14332, but the situation presented in #14332 gives a compiler error, while the one here silently fails\n\ncc @suo",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/18616/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/18616/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/18440",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/18440/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/18440/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/18440/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/18440",
        "id": 425056326,
        "node_id": "MDU6SXNzdWU0MjUwNTYzMjY=",
        "number": 18440,
        "title": "[JIT] Support `range(start, stop[, step])` in script",
        "user": {
            "login": "jamesr66a",
            "id": 4685384,
            "node_id": "MDQ6VXNlcjQ2ODUzODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4685384?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesr66a",
            "html_url": "https://github.com/jamesr66a",
            "followers_url": "https://api.github.com/users/jamesr66a/followers",
            "following_url": "https://api.github.com/users/jamesr66a/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesr66a/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesr66a/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesr66a/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesr66a/orgs",
            "repos_url": "https://api.github.com/users/jamesr66a/repos",
            "events_url": "https://api.github.com/users/jamesr66a/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesr66a/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-03-25T18:37:04Z",
        "updated_at": "2019-05-29T19:34:17Z",
        "closed_at": "2019-05-29T19:34:17Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "This should work:\r\n\r\n```\r\nimport torch\r\n\r\n@torch.jit.script\r\ndef foo(x):\r\n    for i in range(1, 10):\r\n        x += float(i)\r\n    return x\r\n\r\nprint(foo.code)\r\n```\r\n\r\nRight now it does this:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"param.py\", line 3, in <module>\r\n    @torch.jit.script\r\n  File \"/Users/jamesreed/onnx-fairseq/pytorch/torch/jit/__init__.py\", line 739, in script\r\n    _jit_script_compile(mod, ast, _rcb, get_default_args(obj))\r\nRuntimeError:\r\nrange() expects 1 argument but got 2:\r\n@torch.jit.script\r\ndef foo(x):\r\n    for i in range(1, 10):\r\n    ~~~~~~~~~~~~~~~~~~~~~~...  <--- HERE\r\n        x += float(i)\r\n    return x\r\n```",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/18440/reactions",
            "total_count": 2,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 2,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/18440/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/18232",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/18232/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/18232/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/18232/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/18232",
        "id": 423422901,
        "node_id": "MDU6SXNzdWU0MjM0MjI5MDE=",
        "number": 18232,
        "title": "[jit] Dict membership checks",
        "user": {
            "login": "driazati",
            "id": 9407960,
            "node_id": "MDQ6VXNlcjk0MDc5NjA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9407960?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/driazati",
            "html_url": "https://github.com/driazati",
            "followers_url": "https://api.github.com/users/driazati/followers",
            "following_url": "https://api.github.com/users/driazati/following{/other_user}",
            "gists_url": "https://api.github.com/users/driazati/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/driazati/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/driazati/subscriptions",
            "organizations_url": "https://api.github.com/users/driazati/orgs",
            "repos_url": "https://api.github.com/users/driazati/repos",
            "events_url": "https://api.github.com/users/driazati/events{/privacy}",
            "received_events_url": "https://api.github.com/users/driazati/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2019-03-20T19:01:52Z",
        "updated_at": "2019-07-16T00:49:52Z",
        "closed_at": "2019-07-16T00:49:52Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "There's no way to check if a key is in a dictionary in TorchScript (i.e. these examples should work) \r\n\r\n```python\r\n@torch.jit.script\r\ndef fn(x, y):\r\n    # type: (Dict[int, int], int) -> int\r\n    return x.get(y, 3)\r\n\r\n@torch.jit.script\r\ndef fn(x, y):\r\n    # type: (Dict[int, int], int) -> int\r\n    if y in x:\r\n        return x[y]\r\n    else:\r\n        return 3\r\n\r\nd = {1: 2, 3: 4}\r\nprint(fn.graph)\r\nprint(fn(d, 3))\r\nprint(fn(d, 2))\r\n```",
        "closed_by": {
            "login": "Chillee",
            "id": 6355099,
            "node_id": "MDQ6VXNlcjYzNTUwOTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6355099?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Chillee",
            "html_url": "https://github.com/Chillee",
            "followers_url": "https://api.github.com/users/Chillee/followers",
            "following_url": "https://api.github.com/users/Chillee/following{/other_user}",
            "gists_url": "https://api.github.com/users/Chillee/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Chillee/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Chillee/subscriptions",
            "organizations_url": "https://api.github.com/users/Chillee/orgs",
            "repos_url": "https://api.github.com/users/Chillee/repos",
            "events_url": "https://api.github.com/users/Chillee/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Chillee/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/18232/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/18232/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/18142",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/18142/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/18142/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/18142/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/18142",
        "id": 422451966,
        "node_id": "MDU6SXNzdWU0MjI0NTE5NjY=",
        "number": 18142,
        "title": " export BUILD_CAFFE2_OPS=0 breaks jit tests",
        "user": {
            "login": "zdevito",
            "id": 370202,
            "node_id": "MDQ6VXNlcjM3MDIwMg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/370202?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zdevito",
            "html_url": "https://github.com/zdevito",
            "followers_url": "https://api.github.com/users/zdevito/followers",
            "following_url": "https://api.github.com/users/zdevito/following{/other_user}",
            "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions",
            "organizations_url": "https://api.github.com/users/zdevito/orgs",
            "repos_url": "https://api.github.com/users/zdevito/repos",
            "events_url": "https://api.github.com/users/zdevito/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zdevito/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 890282107,
                "node_id": "MDU6TGFiZWw4OTAyODIxMDc=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/caffe2",
                "name": "caffe2",
                "color": "210aa8",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "smessmer",
            "id": 2373925,
            "node_id": "MDQ6VXNlcjIzNzM5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2373925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/smessmer",
            "html_url": "https://github.com/smessmer",
            "followers_url": "https://api.github.com/users/smessmer/followers",
            "following_url": "https://api.github.com/users/smessmer/following{/other_user}",
            "gists_url": "https://api.github.com/users/smessmer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/smessmer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/smessmer/subscriptions",
            "organizations_url": "https://api.github.com/users/smessmer/orgs",
            "repos_url": "https://api.github.com/users/smessmer/repos",
            "events_url": "https://api.github.com/users/smessmer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/smessmer/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "smessmer",
                "id": 2373925,
                "node_id": "MDQ6VXNlcjIzNzM5MjU=",
                "avatar_url": "https://avatars.githubusercontent.com/u/2373925?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/smessmer",
                "html_url": "https://github.com/smessmer",
                "followers_url": "https://api.github.com/users/smessmer/followers",
                "following_url": "https://api.github.com/users/smessmer/following{/other_user}",
                "gists_url": "https://api.github.com/users/smessmer/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/smessmer/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/smessmer/subscriptions",
                "organizations_url": "https://api.github.com/users/smessmer/orgs",
                "repos_url": "https://api.github.com/users/smessmer/repos",
                "events_url": "https://api.github.com/users/smessmer/events{/privacy}",
                "received_events_url": "https://api.github.com/users/smessmer/received_events",
                "type": "User",
                "site_admin": false
            },
            {
                "login": "houseroad",
                "id": 30275821,
                "node_id": "MDQ6VXNlcjMwMjc1ODIx",
                "avatar_url": "https://avatars.githubusercontent.com/u/30275821?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/houseroad",
                "html_url": "https://github.com/houseroad",
                "followers_url": "https://api.github.com/users/houseroad/followers",
                "following_url": "https://api.github.com/users/houseroad/following{/other_user}",
                "gists_url": "https://api.github.com/users/houseroad/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/houseroad/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/houseroad/subscriptions",
                "organizations_url": "https://api.github.com/users/houseroad/orgs",
                "repos_url": "https://api.github.com/users/houseroad/repos",
                "events_url": "https://api.github.com/users/houseroad/events{/privacy}",
                "received_events_url": "https://api.github.com/users/houseroad/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2019-03-18T21:52:53Z",
        "updated_at": "2019-04-19T06:42:33Z",
        "closed_at": "2019-04-19T06:42:33Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n```\r\nERROR: test_trace_c10_ops (__main__.TestJit)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"test/test_jit.py\", line 1431, in test_trace_c10_ops\r\n    traced_model = torch.jit.trace(model, inputs)\r\n  File \"/data/users/zdevito/pytorch/torch/jit/__init__.py\", line 668, in trace\r\n    var_lookup_fn, _force_outplace)\r\n  File \"/data/users/zdevito/pytorch/torch/nn/modules/module.py\", line 489, in __call__\r\n    result = self._slow_forward(*input, **kwargs)\r\n  File \"/data/users/zdevito/pytorch/torch/nn/modules/module.py\", line 479, in _slow_forward\r\n    result = self.forward(*input, **kwargs)\r\n  File \"test/test_jit.py\", line 1414, in forward\r\n    a, b = torch.ops._caffe2.GenerateProposals(\r\n  File \"/data/users/zdevito/pytorch/torch/_ops.py\", line 60, in __getattr__\r\n    op = torch._C._jit_get_operation(qualified_op_name)\r\nRuntimeError: No such operator _caffe2::GenerateProposals\r\n```\r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior:\r\n\r\nBuilt with\r\n\r\n```\r\nexport BUILD_CAFFE2_OPS=0\r\n```\r\n\r\n## Expected behavior\r\n\r\nTest is disabled or arranged not to fail if CAFFE2_OPS were not built.\r\n",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/18142/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/18142/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/18003",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/18003/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/18003/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/18003/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/18003",
        "id": 420782980,
        "node_id": "MDU6SXNzdWU0MjA3ODI5ODA=",
        "number": 18003,
        "title": "[JIT] Allow Serialization to be exportable for debugging",
        "user": {
            "login": "sidazhang",
            "id": 3519115,
            "node_id": "MDQ6VXNlcjM1MTkxMTU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3519115?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sidazhang",
            "html_url": "https://github.com/sidazhang",
            "followers_url": "https://api.github.com/users/sidazhang/followers",
            "following_url": "https://api.github.com/users/sidazhang/following{/other_user}",
            "gists_url": "https://api.github.com/users/sidazhang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sidazhang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sidazhang/subscriptions",
            "organizations_url": "https://api.github.com/users/sidazhang/orgs",
            "repos_url": "https://api.github.com/users/sidazhang/repos",
            "events_url": "https://api.github.com/users/sidazhang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sidazhang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1076922351,
                "node_id": "MDU6TGFiZWwxMDc2OTIyMzUx",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/feature",
                "name": "feature",
                "color": "ffceba",
                "default": false,
                "description": "A request for a proper, new feature."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "driazati",
            "id": 9407960,
            "node_id": "MDQ6VXNlcjk0MDc5NjA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9407960?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/driazati",
            "html_url": "https://github.com/driazati",
            "followers_url": "https://api.github.com/users/driazati/followers",
            "following_url": "https://api.github.com/users/driazati/following{/other_user}",
            "gists_url": "https://api.github.com/users/driazati/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/driazati/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/driazati/subscriptions",
            "organizations_url": "https://api.github.com/users/driazati/orgs",
            "repos_url": "https://api.github.com/users/driazati/repos",
            "events_url": "https://api.github.com/users/driazati/events{/privacy}",
            "received_events_url": "https://api.github.com/users/driazati/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "driazati",
                "id": 9407960,
                "node_id": "MDQ6VXNlcjk0MDc5NjA=",
                "avatar_url": "https://avatars.githubusercontent.com/u/9407960?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/driazati",
                "html_url": "https://github.com/driazati",
                "followers_url": "https://api.github.com/users/driazati/followers",
                "following_url": "https://api.github.com/users/driazati/following{/other_user}",
                "gists_url": "https://api.github.com/users/driazati/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/driazati/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/driazati/subscriptions",
                "organizations_url": "https://api.github.com/users/driazati/orgs",
                "repos_url": "https://api.github.com/users/driazati/repos",
                "events_url": "https://api.github.com/users/driazati/events{/privacy}",
                "received_events_url": "https://api.github.com/users/driazati/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2019-03-14T00:47:58Z",
        "updated_at": "2019-05-08T23:55:01Z",
        "closed_at": "2019-05-08T23:55:01Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## \ud83d\ude80 Feature\r\n\r\nMake serialization part of the torchscript and compilable. Use case looks like this:\r\n```\r\nclass ModelThatNeedsDebugging(jit.ScriptModule)\r\n  def __init__(self)\r\n      ///\r\n  def forward(self, x):\r\n         y =  self.conv(x)\r\n         y.save(\"./attention_input.pt\")\r\n         output = self.attention(y)\r\n         output.save(\"./attention_feature_map.pt\")\r\n         return output\r\n```\r\nThis way it allows me to conveniently debug the model inside a production workflow\r\n```\r\nauto module = torch::jit::load(\"./ModelThatNeedsDebugging.pt\");\r\nmodule->forward(input);\r\n```\r\n## Motivation\r\n\r\nA common way of debugging neural networks is to visualize the intermediate feature maps. This is super easy to do in Python. However, if you wanted to debug on the production side. There is no way of doing so.\r\n\r\nBy allowing serialization to be compilable. It allows us to serialize and debug intermediate tensors.\r\n",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/18003/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/18003/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/17962",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/17962/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/17962/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/17962/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/17962",
        "id": 420346267,
        "node_id": "MDU6SXNzdWU0MjAzNDYyNjc=",
        "number": 17962,
        "title": "[JIT] state[input] != State::Unknown ASSERT FAILED at /pytorch/torch/csrc/jit/passes/specialize_autogradzero.cpp:57",
        "user": {
            "login": "YashSinha1996",
            "id": 9105507,
            "node_id": "MDQ6VXNlcjkxMDU1MDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9105507?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/YashSinha1996",
            "html_url": "https://github.com/YashSinha1996",
            "followers_url": "https://api.github.com/users/YashSinha1996/followers",
            "following_url": "https://api.github.com/users/YashSinha1996/following{/other_user}",
            "gists_url": "https://api.github.com/users/YashSinha1996/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/YashSinha1996/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/YashSinha1996/subscriptions",
            "organizations_url": "https://api.github.com/users/YashSinha1996/orgs",
            "repos_url": "https://api.github.com/users/YashSinha1996/repos",
            "events_url": "https://api.github.com/users/YashSinha1996/events{/privacy}",
            "received_events_url": "https://api.github.com/users/YashSinha1996/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "wanchaol",
            "id": 9443650,
            "node_id": "MDQ6VXNlcjk0NDM2NTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9443650?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wanchaol",
            "html_url": "https://github.com/wanchaol",
            "followers_url": "https://api.github.com/users/wanchaol/followers",
            "following_url": "https://api.github.com/users/wanchaol/following{/other_user}",
            "gists_url": "https://api.github.com/users/wanchaol/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wanchaol/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wanchaol/subscriptions",
            "organizations_url": "https://api.github.com/users/wanchaol/orgs",
            "repos_url": "https://api.github.com/users/wanchaol/repos",
            "events_url": "https://api.github.com/users/wanchaol/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wanchaol/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "wanchaol",
                "id": 9443650,
                "node_id": "MDQ6VXNlcjk0NDM2NTA=",
                "avatar_url": "https://avatars.githubusercontent.com/u/9443650?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/wanchaol",
                "html_url": "https://github.com/wanchaol",
                "followers_url": "https://api.github.com/users/wanchaol/followers",
                "following_url": "https://api.github.com/users/wanchaol/following{/other_user}",
                "gists_url": "https://api.github.com/users/wanchaol/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/wanchaol/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wanchaol/subscriptions",
                "organizations_url": "https://api.github.com/users/wanchaol/orgs",
                "repos_url": "https://api.github.com/users/wanchaol/repos",
                "events_url": "https://api.github.com/users/wanchaol/events{/privacy}",
                "received_events_url": "https://api.github.com/users/wanchaol/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 11,
        "created_at": "2019-03-13T07:02:35Z",
        "updated_at": "2019-04-03T19:50:03Z",
        "closed_at": "2019-04-03T19:50:03Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n```\r\nstate[input] != State::Unknown ASSERT FAILED at /pytorch/torch/csrc/jit/passes/specialize_autogradzero.cpp:57, please report a bug to PyTorch.\r\n```\r\nAssert failing when trying to train a pytorch model where only a part of the model is JIT traced. \r\nForward works without a hitch, backward gives this error\r\n## To Reproduce\r\n\r\nRefer: https://github.com/huggingface/pytorch-pretrained-BERT\r\nInstall: `pip install pytorch-pretrained-bert`\r\n\r\n```\r\nfrom pytorch_pretrained_bert.modeling import BertPreTrainedModel, BertEmbeddings, BertEncoder, BertPooler\r\n\r\n\r\nclass BertModel(BertPreTrainedModel):\r\n    def __init__(self, config):\r\n        super(BertModel, self).__init__(config)\r\n        self.embeddings = BertEmbeddings(config)\r\n        self.encoder = BertEncoder(config)\r\n        self.pooler = BertPooler(config)\r\n        self.apply(self.init_bert_weights)\r\n\r\n    def forward(self, input_ids, token_type_ids, attention_mask):\r\n\r\n        extended_attention_mask = attention_mask.unsqueeze(1).unsqueeze(2)\r\n\r\n        extended_attention_mask = extended_attention_mask.to(dtype=next(self.parameters()).dtype) # fp16 compatibility\r\n        extended_attention_mask = (1.0 - extended_attention_mask) * -10000.0\r\n\r\n        embedding_output = self.embeddings(input_ids, token_type_ids)\r\n        encoded_layers = self.encoder(embedding_output,\r\n                                      extended_attention_mask,\r\n                                      output_all_encoded_layers=True)\r\n        sequence_output = encoded_layers[-1]\r\n        pooled_output = self.pooler(sequence_output)\r\n\r\n        return tuple([tuple(encoded_layers), pooled_output])\r\n\r\n\r\nclass BertForPreTraining(BertPreTrainedModel):\r\n    def __init__(self, config):\r\n        super(BertForPreTraining, self).__init__(config)\r\n        self.bert = BertModel(config)\r\n        self.traced_bert = self.bert\r\n\r\n        self.cls = BertPreTrainingHeads(config, self.bert.embeddings.word_embeddings.weight)\r\n        self.apply(self.init_bert_weights)\r\n        self.traced = False\r\n\r\n    def trace_bert(self, input_ids, token_type_ids, attention_mask):\r\n        if attention_mask is None:\r\n            attention_mask = torch.ones_like(input_ids)\r\n        if token_type_ids is None:\r\n            token_type_ids = torch.zeros_like(input_ids)\r\n\r\n        if not self.traced:\r\n            self.traced_bert = torch.jit.trace(self.bert, tuple([input_ids, token_type_ids, attention_mask]))\r\n            self.traced = True\r\n\r\n        sequence_output, pooled_output = self.traced_bert(input_ids, token_type_ids, attention_mask)\r\n        return sequence_output, pooled_output\r\n\r\n\r\n\r\n    def forward(self, input_ids, token_type_ids=None, attention_mask=None, masked_lm_labels=None, next_sentence_label=None):\r\n        sequence_output_all, pooled_output = self.trace_bert(input_ids, token_type_ids, attention_mask)\r\n        sequence_output = sequence_output_all[-1]\r\n\r\n        prediction_scores, seq_relationship_score = self.cls(sequence_output, pooled_output)\r\n\r\n        if masked_lm_labels is not None and next_sentence_label is not None:\r\n            loss_fct = CrossEntropyLoss(ignore_index=-1)\r\n            masked_lm_loss = loss_fct(prediction_scores.view(-1, self.config.vocab_size), masked_lm_labels.view(-1))\r\n            next_sentence_loss = loss_fct(seq_relationship_score.view(-1, 2), next_sentence_label.view(-1))\r\n            total_loss = masked_lm_loss + next_sentence_loss\r\n            return total_loss\r\n        else:\r\n            return prediction_scores, seq_relationship_score\r\n```\r\n\r\nTraining:\r\n```\r\nmodel = BertForPreTraining.from_pretrained('path_to_pretrained_model')\r\nloss = model(input_ids, token_type_ids, attention_mask, lm_labels, next_sent)\r\nloss.backward()\r\n```\r\n\r\n## Expected behavior\r\nTraining on this kind of model would be nice\r\n\r\n## Environment\r\n - PyTorch Version (e.g., 1.0): 1.0.0.dev20190312\r\n - OS (e.g., Linux): Linux\r\n - How you installed PyTorch (`conda`, `pip`, source): pip\r\n - Build command you used (if compiling from source):\r\n - Python version: Python 3.6.5\r\n - CUDA/cuDNN version: None\r\n - GPU models and configuration: None\r\n - Any other relevant information:\r\n\r\n## Additional context\r\nI believe this is because during autograd it has no knowledge of the state of the input tensors? \r\nSorry for any mistakes, Newbie at pytorch. \r\n",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/17962/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/17962/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/17683",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/17683/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/17683/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/17683/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/17683",
        "id": 417360002,
        "node_id": "MDU6SXNzdWU0MTczNjAwMDI=",
        "number": 17683,
        "title": "[JIT] Allow CPP frontend to access config attributes from the .pt",
        "user": {
            "login": "sidazhang",
            "id": 3519115,
            "node_id": "MDQ6VXNlcjM1MTkxMTU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3519115?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sidazhang",
            "html_url": "https://github.com/sidazhang",
            "followers_url": "https://api.github.com/users/sidazhang/followers",
            "following_url": "https://api.github.com/users/sidazhang/following{/other_user}",
            "gists_url": "https://api.github.com/users/sidazhang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sidazhang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sidazhang/subscriptions",
            "organizations_url": "https://api.github.com/users/sidazhang/orgs",
            "repos_url": "https://api.github.com/users/sidazhang/repos",
            "events_url": "https://api.github.com/users/sidazhang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sidazhang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "driazati",
            "id": 9407960,
            "node_id": "MDQ6VXNlcjk0MDc5NjA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9407960?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/driazati",
            "html_url": "https://github.com/driazati",
            "followers_url": "https://api.github.com/users/driazati/followers",
            "following_url": "https://api.github.com/users/driazati/following{/other_user}",
            "gists_url": "https://api.github.com/users/driazati/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/driazati/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/driazati/subscriptions",
            "organizations_url": "https://api.github.com/users/driazati/orgs",
            "repos_url": "https://api.github.com/users/driazati/repos",
            "events_url": "https://api.github.com/users/driazati/events{/privacy}",
            "received_events_url": "https://api.github.com/users/driazati/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "driazati",
                "id": 9407960,
                "node_id": "MDQ6VXNlcjk0MDc5NjA=",
                "avatar_url": "https://avatars.githubusercontent.com/u/9407960?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/driazati",
                "html_url": "https://github.com/driazati",
                "followers_url": "https://api.github.com/users/driazati/followers",
                "following_url": "https://api.github.com/users/driazati/following{/other_user}",
                "gists_url": "https://api.github.com/users/driazati/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/driazati/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/driazati/subscriptions",
                "organizations_url": "https://api.github.com/users/driazati/orgs",
                "repos_url": "https://api.github.com/users/driazati/repos",
                "events_url": "https://api.github.com/users/driazati/events{/privacy}",
                "received_events_url": "https://api.github.com/users/driazati/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 3,
        "created_at": "2019-03-05T15:37:04Z",
        "updated_at": "2019-05-23T16:09:26Z",
        "closed_at": "2019-03-19T01:20:13Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## \ud83d\ude80 Feature\r\nAllow CPP frontend to access config attributes from the .pt\r\nSomething that looks like this:\r\n\r\n```\r\nauto model = torch::jit::load(\"model.pt\");\r\nconst int prediction_horizon_s = model.get_attribute(\"prediction_horizon_s\");\r\n```\r\n\r\n## Motivation\r\n\r\nThe configurations related to the model right now needs to be kept in 2 places. Once in the model, and then once in the inference code. Since the inference code is driven by the model anyway, it would be much cleaner if the model itself can carry the configurations. \r\n\r\nIn Python, this is trivial because it is just a python class attribute. But this is not possible in JIT right now. It would be great if you could expose that in the CPP front end too.\r\n\r\n\r\n## Alternatives\r\n\r\nHave a config file for the inference code.\r\n",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/17683/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/17683/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/17669",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/17669/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/17669/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/17669/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/17669",
        "id": 417033401,
        "node_id": "MDU6SXNzdWU0MTcwMzM0MDE=",
        "number": 17669,
        "title": "[jit] Bad optional access during training for ScriptModule",
        "user": {
            "login": "wanchaol",
            "id": 9443650,
            "node_id": "MDQ6VXNlcjk0NDM2NTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9443650?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wanchaol",
            "html_url": "https://github.com/wanchaol",
            "followers_url": "https://api.github.com/users/wanchaol/followers",
            "following_url": "https://api.github.com/users/wanchaol/following{/other_user}",
            "gists_url": "https://api.github.com/users/wanchaol/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wanchaol/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wanchaol/subscriptions",
            "organizations_url": "https://api.github.com/users/wanchaol/orgs",
            "repos_url": "https://api.github.com/users/wanchaol/repos",
            "events_url": "https://api.github.com/users/wanchaol/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wanchaol/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "ailzhang",
            "id": 5248122,
            "node_id": "MDQ6VXNlcjUyNDgxMjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5248122?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ailzhang",
            "html_url": "https://github.com/ailzhang",
            "followers_url": "https://api.github.com/users/ailzhang/followers",
            "following_url": "https://api.github.com/users/ailzhang/following{/other_user}",
            "gists_url": "https://api.github.com/users/ailzhang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ailzhang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ailzhang/subscriptions",
            "organizations_url": "https://api.github.com/users/ailzhang/orgs",
            "repos_url": "https://api.github.com/users/ailzhang/repos",
            "events_url": "https://api.github.com/users/ailzhang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ailzhang/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "ailzhang",
                "id": 5248122,
                "node_id": "MDQ6VXNlcjUyNDgxMjI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/5248122?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ailzhang",
                "html_url": "https://github.com/ailzhang",
                "followers_url": "https://api.github.com/users/ailzhang/followers",
                "following_url": "https://api.github.com/users/ailzhang/following{/other_user}",
                "gists_url": "https://api.github.com/users/ailzhang/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ailzhang/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ailzhang/subscriptions",
                "organizations_url": "https://api.github.com/users/ailzhang/orgs",
                "repos_url": "https://api.github.com/users/ailzhang/repos",
                "events_url": "https://api.github.com/users/ailzhang/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ailzhang/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2019-03-04T23:03:24Z",
        "updated_at": "2019-03-06T04:52:32Z",
        "closed_at": "2019-03-06T04:52:32Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\nThere appears to be some regression recently, the following script produce a error saying bad optional access, it used to work several days ago. \r\n\r\n## To Reproduce\r\n\r\n```python\r\nimport torch\r\nimport torch.nn as nn\r\n\r\n\r\nclass ScriptClassifier(torch.jit.ScriptModule):\r\n\r\n    def __init__(self):\r\n        super(ScriptClassifier, self).__init__()\r\n        self.fc1 = nn.Linear(50, 50)\r\n        self.relu1 = nn.ReLU()\r\n        self.dout = nn.Dropout(0.2)\r\n        self.fc2 = nn.Linear(50, 100)\r\n        self.prelu = nn.PReLU(1)\r\n        self.out = nn.Linear(100, 1)\r\n        self.out_act = nn.Sigmoid()\r\n\r\n    @torch.jit.script_method\r\n    def forward(self, input_):\r\n        a1 = self.fc1(input_)\r\n        h1 = self.relu1(a1)\r\n        dout = self.dout(h1)\r\n        a2 = self.fc2(dout)\r\n        h2 = self.prelu(a2)\r\n        a3 = self.out(h2)\r\n        y = self.out_act(a3)\r\n        return y\r\n\r\n\r\nscript_model = ScriptClassifier()\r\n\r\nopt = torch.optim.Adam(script_model.parameters(), lr=0.001, betas=(0.9, 0.999))\r\ncriterion = nn.BCELoss()\r\n\r\n\r\ndef train_epoch(model, opt, criterion, batch_size=50):\r\n    model.train()\r\n    losses = []\r\n    for beg_i in range(0, X.size(0), batch_size):\r\n        x_batch = X[beg_i:beg_i + batch_size, :]\r\n        y_batch = Y[beg_i:beg_i + batch_size, :]\r\n        #x_batch = Variable(x_batch)\r\n        #y_batch = Variable(y_batch)\r\n\r\n        opt.zero_grad()\r\n        # (1) Forward\r\n        y_hat = model(x_batch)\r\n        # (2) Compute diff\r\n        loss = criterion(y_hat, y_batch)\r\n        # (3) Compute gradients\r\n        loss.backward()\r\n        # (4) update weights\r\n        opt.step()\r\n        losses.append(loss.data.numpy())\r\n    return losses\r\n\r\n\r\nX1 = torch.randn(1000, 50)\r\nX2 = torch.randn(1000, 50) + 1.5\r\nX = torch.cat([X1, X2], dim=0)\r\nY1 = torch.zeros(1000, 1)\r\nY2 = torch.ones(1000, 1)\r\nY = torch.cat([Y1, Y2], dim=0)\r\n\r\ne_losses = []\r\nnum_epochs = 20\r\nfor e in range(num_epochs):\r\n    e_losses += train_epoch(script_model, opt, criterion)\r\n```\r\n\r\nit gives error like:\r\n```\r\nTraceback (most recent call last):\r\n  File \"test_toy.py\", line 67, in <module>\r\n    e_losses += train_epoch(script_model, opt, criterion)\r\n  File \"test_toy.py\", line 46, in train_epoch\r\n    y_hat = model(x_batch)\r\n  File \"/scratch/wanchaol/local/pytorch/torch/nn/modules/module.py\", line 491, in __call__\r\n    result = self.forward(*input, **kwargs)\r\nRuntimeError: bad optional access\r\n```\r\n\r\nneed to bisect and see whats going on",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/17669/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/17669/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/17662",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/17662/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/17662/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/17662/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/17662",
        "id": 416948049,
        "node_id": "MDU6SXNzdWU0MTY5NDgwNDk=",
        "number": 17662,
        "title": "torch.arange dtype mismatch with and without jit",
        "user": {
            "login": "zasdfgbnm",
            "id": 1032377,
            "node_id": "MDQ6VXNlcjEwMzIzNzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1032377?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zasdfgbnm",
            "html_url": "https://github.com/zasdfgbnm",
            "followers_url": "https://api.github.com/users/zasdfgbnm/followers",
            "following_url": "https://api.github.com/users/zasdfgbnm/following{/other_user}",
            "gists_url": "https://api.github.com/users/zasdfgbnm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zasdfgbnm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zasdfgbnm/subscriptions",
            "organizations_url": "https://api.github.com/users/zasdfgbnm/orgs",
            "repos_url": "https://api.github.com/users/zasdfgbnm/repos",
            "events_url": "https://api.github.com/users/zasdfgbnm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zasdfgbnm/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "eellison",
            "id": 11477974,
            "node_id": "MDQ6VXNlcjExNDc3OTc0",
            "avatar_url": "https://avatars.githubusercontent.com/u/11477974?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eellison",
            "html_url": "https://github.com/eellison",
            "followers_url": "https://api.github.com/users/eellison/followers",
            "following_url": "https://api.github.com/users/eellison/following{/other_user}",
            "gists_url": "https://api.github.com/users/eellison/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eellison/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eellison/subscriptions",
            "organizations_url": "https://api.github.com/users/eellison/orgs",
            "repos_url": "https://api.github.com/users/eellison/repos",
            "events_url": "https://api.github.com/users/eellison/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eellison/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "eellison",
                "id": 11477974,
                "node_id": "MDQ6VXNlcjExNDc3OTc0",
                "avatar_url": "https://avatars.githubusercontent.com/u/11477974?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/eellison",
                "html_url": "https://github.com/eellison",
                "followers_url": "https://api.github.com/users/eellison/followers",
                "following_url": "https://api.github.com/users/eellison/following{/other_user}",
                "gists_url": "https://api.github.com/users/eellison/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/eellison/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eellison/subscriptions",
                "organizations_url": "https://api.github.com/users/eellison/orgs",
                "repos_url": "https://api.github.com/users/eellison/repos",
                "events_url": "https://api.github.com/users/eellison/events{/privacy}",
                "received_events_url": "https://api.github.com/users/eellison/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 10,
        "created_at": "2019-03-04T19:05:03Z",
        "updated_at": "2019-11-11T19:26:32Z",
        "closed_at": "2019-11-11T19:26:32Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "```python\r\nimport torch\r\n\r\ndef f():\r\n    return torch.arange(5)\r\n\r\nprint(f().dtype)\r\nprint(torch.jit.script(f)().dtype)\r\n```\r\n\r\nprints\r\n\r\n```\r\ntorch.int64\r\ntorch.float32\r\n```",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/17662/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/17662/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/17652",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/17652/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/17652/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/17652/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/17652",
        "id": 416648349,
        "node_id": "MDU6SXNzdWU0MTY2NDgzNDk=",
        "number": 17652,
        "title": "Unable to jit.script `a[0].item() == 1`",
        "user": {
            "login": "zasdfgbnm",
            "id": 1032377,
            "node_id": "MDQ6VXNlcjEwMzIzNzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1032377?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zasdfgbnm",
            "html_url": "https://github.com/zasdfgbnm",
            "followers_url": "https://api.github.com/users/zasdfgbnm/followers",
            "following_url": "https://api.github.com/users/zasdfgbnm/following{/other_user}",
            "gists_url": "https://api.github.com/users/zasdfgbnm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zasdfgbnm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zasdfgbnm/subscriptions",
            "organizations_url": "https://api.github.com/users/zasdfgbnm/orgs",
            "repos_url": "https://api.github.com/users/zasdfgbnm/repos",
            "events_url": "https://api.github.com/users/zasdfgbnm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zasdfgbnm/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "eellison",
            "id": 11477974,
            "node_id": "MDQ6VXNlcjExNDc3OTc0",
            "avatar_url": "https://avatars.githubusercontent.com/u/11477974?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eellison",
            "html_url": "https://github.com/eellison",
            "followers_url": "https://api.github.com/users/eellison/followers",
            "following_url": "https://api.github.com/users/eellison/following{/other_user}",
            "gists_url": "https://api.github.com/users/eellison/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eellison/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eellison/subscriptions",
            "organizations_url": "https://api.github.com/users/eellison/orgs",
            "repos_url": "https://api.github.com/users/eellison/repos",
            "events_url": "https://api.github.com/users/eellison/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eellison/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "eellison",
                "id": 11477974,
                "node_id": "MDQ6VXNlcjExNDc3OTc0",
                "avatar_url": "https://avatars.githubusercontent.com/u/11477974?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/eellison",
                "html_url": "https://github.com/eellison",
                "followers_url": "https://api.github.com/users/eellison/followers",
                "following_url": "https://api.github.com/users/eellison/following{/other_user}",
                "gists_url": "https://api.github.com/users/eellison/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/eellison/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eellison/subscriptions",
                "organizations_url": "https://api.github.com/users/eellison/orgs",
                "repos_url": "https://api.github.com/users/eellison/repos",
                "events_url": "https://api.github.com/users/eellison/events{/privacy}",
                "received_events_url": "https://api.github.com/users/eellison/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2019-03-04T06:18:34Z",
        "updated_at": "2019-03-12T17:54:48Z",
        "closed_at": "2019-03-12T17:54:48Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\n```python\r\nimport torch\r\n\r\n@torch.jit.script\r\ndef f(a):\r\n    return a[0].item() == 1\r\n```\r\n\r\ngives error\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"test.py\", line 3, in <module>\r\n    @torch.jit.script\r\n  File \"/home/gaoxiang/.virtualenvs/pt/lib/python3.7/site-packages/torch/jit/__init__.py\", line 734, in script\r\n    _jit_script_compile(mod, ast, _rcb, get_default_args(obj))\r\nRuntimeError: \r\narguments for call are not valid:\r\n  \r\n  for operator aten::eq(Tensor self, Tensor other) -> Tensor:\r\n  expected a value of type Tensor for argument 'self' but found Scalar\r\n  @torch.jit.script\r\n  def f(a):\r\n      return a[0].item() == 1\r\n             ~~~~~~~~~ <--- HERE\r\n  \r\n  for operator aten::eq(Tensor self, Scalar other) -> Tensor:\r\n  expected a value of type Tensor for argument 'self' but found Scalar\r\n  @torch.jit.script\r\n  def f(a):\r\n      return a[0].item() == 1\r\n             ~~~~~~~~~ <--- HERE\r\n  \r\n  for operator aten::eq(Tensor self, Tensor other, *, Tensor out) -> Tensor:\r\n  expected a value of type Tensor for argument 'self' but found Scalar\r\n  @torch.jit.script\r\n  def f(a):\r\n      return a[0].item() == 1\r\n             ~~~~~~~~~ <--- HERE\r\n  \r\n  for operator aten::eq(Tensor self, Scalar other, *, Tensor out) -> Tensor:\r\n  expected a value of type Tensor for argument 'self' but found Scalar\r\n  @torch.jit.script\r\n  def f(a):\r\n      return a[0].item() == 1\r\n             ~~~~~~~~~ <--- HERE\r\n  \r\n  for operator aten::eq(Device a, Device b) -> bool:\r\n  expected a value of type Device for argument 'a' but found Scalar\r\n  @torch.jit.script\r\n  def f(a):\r\n      return a[0].item() == 1\r\n             ~~~~~~~~~ <--- HERE\r\n  \r\n  for operator aten::eq(string a, string b) -> bool:\r\n  expected a value of type string for argument 'a' but found Scalar\r\n  @torch.jit.script\r\n  def f(a):\r\n      return a[0].item() == 1\r\n             ~~~~~~~~~ <--- HERE\r\n  \r\n  for operator aten::eq(int[] a, int[] b) -> bool:\r\n  expected a value of type int[] for argument 'a' but found Scalar\r\n  @torch.jit.script\r\n  def f(a):\r\n      return a[0].item() == 1\r\n             ~~~~~~~~~ <--- HERE\r\n  \r\n  for operator aten::eq(float[] a, float[] b) -> bool:\r\n  expected a value of type float[] for argument 'a' but found Scalar\r\n  @torch.jit.script\r\n  def f(a):\r\n      return a[0].item() == 1\r\n             ~~~~~~~~~ <--- HERE\r\n  \r\n  for operator aten::eq(Tensor[] a, Tensor[] b) -> bool:\r\n  expected a value of type Tensor[] for argument 'a' but found Scalar\r\n  @torch.jit.script\r\n  def f(a):\r\n      return a[0].item() == 1\r\n             ~~~~~~~~~ <--- HERE\r\n  \r\n  for operator aten::eq(bool[] a, bool[] b) -> bool:\r\n  expected a value of type bool[] for argument 'a' but found Scalar\r\n  @torch.jit.script\r\n  def f(a):\r\n      return a[0].item() == 1\r\n             ~~~~~~~~~ <--- HERE\r\n  \r\n  for operator aten::eq(int a, int b) -> bool:\r\n  expected a value of type int for argument 'a' but found Scalar\r\n  @torch.jit.script\r\n  def f(a):\r\n      return a[0].item() == 1\r\n             ~~~~~~~~~ <--- HERE\r\n  \r\n  for operator aten::eq(float a, float b) -> bool:\r\n  expected a value of type float for argument 'a' but found Scalar\r\n  @torch.jit.script\r\n  def f(a):\r\n      return a[0].item() == 1\r\n             ~~~~~~~~~ <--- HERE\r\n  \r\n  for operator aten::eq(int a, float b) -> bool:\r\n  expected a value of type int for argument 'a' but found Scalar\r\n  @torch.jit.script\r\n  def f(a):\r\n      return a[0].item() == 1\r\n             ~~~~~~~~~ <--- HERE\r\n  \r\n  for operator aten::eq(float a, int b) -> bool:\r\n  expected a value of type float for argument 'a' but found Scalar\r\n  @torch.jit.script\r\n  def f(a):\r\n      return a[0].item() == 1\r\n             ~~~~~~~~~ <--- HERE\r\n  \r\n  for operator eq(float a, Tensor b) -> Tensor:\r\n  expected a value of type float for argument 'a' but found Scalar\r\n  @torch.jit.script\r\n  def f(a):\r\n      return a[0].item() == 1\r\n             ~~~~~~~~~ <--- HERE\r\n  \r\n  for operator eq(int a, Tensor b) -> Tensor:\r\n  expected a value of type int for argument 'a' but found Scalar\r\n  @torch.jit.script\r\n  def f(a):\r\n      return a[0].item() == 1\r\n             ~~~~~~~~~ <--- HERE\r\nfor call at:\r\n@torch.jit.script\r\ndef f(a):\r\n    return a[0].item() == 1\r\n           ~~~~~~~~~~~~~~~~ <--- HERE\r\n```",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/17652/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/17652/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/17571",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/17571/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/17571/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/17571/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/17571",
        "id": 415561605,
        "node_id": "MDU6SXNzdWU0MTU1NjE2MDU=",
        "number": 17571,
        "title": "[jit] Support for modules that have hooks when compiling",
        "user": {
            "login": "rami3e",
            "id": 28493835,
            "node_id": "MDQ6VXNlcjI4NDkzODM1",
            "avatar_url": "https://avatars.githubusercontent.com/u/28493835?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rami3e",
            "html_url": "https://github.com/rami3e",
            "followers_url": "https://api.github.com/users/rami3e/followers",
            "following_url": "https://api.github.com/users/rami3e/following{/other_user}",
            "gists_url": "https://api.github.com/users/rami3e/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rami3e/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rami3e/subscriptions",
            "organizations_url": "https://api.github.com/users/rami3e/orgs",
            "repos_url": "https://api.github.com/users/rami3e/repos",
            "events_url": "https://api.github.com/users/rami3e/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rami3e/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1264724882,
                "node_id": "MDU6TGFiZWwxMjY0NzI0ODgy",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/low%20priority",
                "name": "low priority",
                "color": "b2ffe1",
                "default": false,
                "description": "We're unlikely to get around to doing this in the near future"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 11,
        "created_at": "2019-02-28T10:51:32Z",
        "updated_at": "2019-08-02T02:13:45Z",
        "closed_at": "2019-08-01T16:54:25Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## \ud83d\ude80 Feature\r\n\r\nCurrently forward or backward hooks (i.e concatenation of features in UNET) are not supported in jit tracing.  \r\n\r\nRun into this error when attempting: `ValueError: Modules that have hooks assigned can't be compiled` \r\n\r\nsource: torch.jit.TracedModule(ScriptModule)",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/17571/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/17571/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/17558",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/17558/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/17558/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/17558/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/17558",
        "id": 415388328,
        "node_id": "MDU6SXNzdWU0MTUzODgzMjg=",
        "number": 17558,
        "title": "Optional parameters for Tuple",
        "user": {
            "login": "akurniawan",
            "id": 4723643,
            "node_id": "MDQ6VXNlcjQ3MjM2NDM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4723643?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/akurniawan",
            "html_url": "https://github.com/akurniawan",
            "followers_url": "https://api.github.com/users/akurniawan/followers",
            "following_url": "https://api.github.com/users/akurniawan/following{/other_user}",
            "gists_url": "https://api.github.com/users/akurniawan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/akurniawan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/akurniawan/subscriptions",
            "organizations_url": "https://api.github.com/users/akurniawan/orgs",
            "repos_url": "https://api.github.com/users/akurniawan/repos",
            "events_url": "https://api.github.com/users/akurniawan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/akurniawan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "wanchaol",
            "id": 9443650,
            "node_id": "MDQ6VXNlcjk0NDM2NTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9443650?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wanchaol",
            "html_url": "https://github.com/wanchaol",
            "followers_url": "https://api.github.com/users/wanchaol/followers",
            "following_url": "https://api.github.com/users/wanchaol/following{/other_user}",
            "gists_url": "https://api.github.com/users/wanchaol/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wanchaol/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wanchaol/subscriptions",
            "organizations_url": "https://api.github.com/users/wanchaol/orgs",
            "repos_url": "https://api.github.com/users/wanchaol/repos",
            "events_url": "https://api.github.com/users/wanchaol/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wanchaol/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "wanchaol",
                "id": 9443650,
                "node_id": "MDQ6VXNlcjk0NDM2NTA=",
                "avatar_url": "https://avatars.githubusercontent.com/u/9443650?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/wanchaol",
                "html_url": "https://github.com/wanchaol",
                "followers_url": "https://api.github.com/users/wanchaol/followers",
                "following_url": "https://api.github.com/users/wanchaol/following{/other_user}",
                "gists_url": "https://api.github.com/users/wanchaol/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/wanchaol/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wanchaol/subscriptions",
                "organizations_url": "https://api.github.com/users/wanchaol/orgs",
                "repos_url": "https://api.github.com/users/wanchaol/repos",
                "events_url": "https://api.github.com/users/wanchaol/events{/privacy}",
                "received_events_url": "https://api.github.com/users/wanchaol/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2019-02-28T00:20:48Z",
        "updated_at": "2019-03-14T23:57:07Z",
        "closed_at": "2019-03-14T23:57:07Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\nThe following script doesn't work\r\n```\r\n@torch.jit.script\r\ndef b(x: Optional[Tuple[int, int]] = None):\r\n    if x is None:\r\n        x = (1, 2)\r\n    else:\r\n        x = torch.jit._unwrap_optional(x)\r\n        \r\n    return x\r\n```\r\nBut this works\r\n```\r\n@torch.jit.script\r\ndef b(x: Optional[int] = None):\r\n    if x is None:\r\n        x = 1\r\n    else:\r\n        x = torch.jit._unwrap_optional(x)\r\n        \r\n    return x\r\n```\r\n\r\nI'm using `torch.jit._unwrap_optional` because the [implicit optional unwrapper](https://github.com/pytorch/pytorch/pull/15587) not working\r\n\r\nOr this feature is not ready to be used yet?\r\n<!-- A clear and concise description of what the bug is. -->\r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior:\r\n\r\n1. Run the script above is enough to reproduce\r\n\r\n<!-- If you have a code sample, error messages, stack traces, please provide it here as well -->\r\n\r\n## Expected behavior\r\n\r\nRunning `b` with parameter such as `b((1, 2))` leads to the following error\r\n```\r\noffset < args.size() ASSERT FAILED at /Users/soumith/mc3build/conda-bld/pytorch_1549593514549/work/torch/csrc/jit/argument_spec.h:99, please report a bug to PyTorch. (addInput at /Users/soumith/mc3build/conda-bld/pytorch_1549593514549/work/torch/csrc/jit/argument_spec.h:99)\r\nframe #0: c10::Error::Error(c10::SourceLocation, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) + 64 (0x10d3ddff0 in libc10.dylib)\r\nframe #1: torch::jit::ArgumentSpec::addInput(c10::IValue const&, unsigned long&, bool) + 1100 (0x115e1df9c in libtorch.1.dylib)\r\nframe #2: torch::jit::ArgumentSpec::addInput(c10::IValue const&, unsigned long&, bool) + 401 (0x115e1dce1 in libtorch.1.dylib)\r\nframe #3: torch::jit::ArgumentSpec::ArgumentSpec(bool, c10::ArrayRef<c10::IValue>, unsigned long) + 145 (0x115e1da01 in libtorch.1.dylib)\r\nframe #4: torch::jit::GraphExecutorImpl::run(std::__1::vector<c10::IValue, std::__1::allocator<c10::IValue> >&) + 184 (0x115e145d8 in libtorch.1.dylib)\r\nframe #5: torch::jit::script::Method::run(std::__1::vector<c10::IValue, std::__1::allocator<c10::IValue> >&) + 216 (0x109a6d908 in libtorch_python.dylib)\r\nframe #6: torch::jit::invokeScriptMethodFromPython(torch::jit::script::Method&, torch::jit::tuple_slice, pybind11::kwargs) + 163 (0x109a6d773 in libtorch_python.dylib)\r\nframe #7: void pybind11::cpp_function::initialize<torch::jit::script::initJitScriptBindings(_object*)::$_17, pybind11::object, pybind11::args, pybind11::kwargs, pybind11::name, pybind11::is_method, pybind11::sibling>(torch::jit::script::initJitScriptBindings(_object*)::$_17&&, pybind11::object (*)(pybind11::args, pybind11::kwargs), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&)::'lambda'(pybind11::detail::function_call&)::__invoke(pybind11::detail::function_call&) + 342 (0x109a6d3f6 in libtorch_python.dylib)\r\nframe #8: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) + 3482 (0x1096b55fa in libtorch_python.dylib)\r\n<omitting python frames>\r\n```\r\nBut without parameter like `b()`, it runs fine.\r\nThe expected output of `b((1, 2))` should be the same as `b()` (different in value but the same in type).\r\n<!-- A clear and concise description of what you expected to happen. -->\r\n\r\n## Environment\r\n\r\nPlease copy and paste the output from our\r\n[environment collection script](https://raw.githubusercontent.com/pytorch/pytorch/master/torch/utils/collect_env.py)\r\n(or fill out the checklist below manually).\r\n\r\nYou can get the script and run it with:\r\n```\r\nwget https://raw.githubusercontent.com/pytorch/pytorch/master/torch/utils/collect_env.py\r\n# For security purposes, please check the contents of collect_env.py before running it.\r\npython collect_env.py\r\n```\r\n\r\n - PyTorch Version (e.g., 1.0): **1.0.1.post2**\r\n - OS (e.g., Linux): **Mac OSX Mojave**\r\n - How you installed PyTorch (`conda`, `pip`, source): **conda**\r\n - Build command you used (if compiling from source):\r\n - Python version: **3.6.7**\r\n - CUDA/cuDNN version:\r\n - GPU models and configuration:\r\n - Any other relevant information:\r\n\r\n## Additional context\r\n\r\n<!-- Add any other context about the problem here. -->\r\n",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/17558/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/17558/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/17531",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/17531/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/17531/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/17531/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/17531",
        "id": 414903001,
        "node_id": "MDU6SXNzdWU0MTQ5MDMwMDE=",
        "number": 17531,
        "title": "JIT graph to ONNX Loop cond variable should be tensor(bool)",
        "user": {
            "login": "heydavid525",
            "id": 1715658,
            "node_id": "MDQ6VXNlcjE3MTU2NTg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1715658?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/heydavid525",
            "html_url": "https://github.com/heydavid525",
            "followers_url": "https://api.github.com/users/heydavid525/followers",
            "following_url": "https://api.github.com/users/heydavid525/following{/other_user}",
            "gists_url": "https://api.github.com/users/heydavid525/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/heydavid525/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/heydavid525/subscriptions",
            "organizations_url": "https://api.github.com/users/heydavid525/orgs",
            "repos_url": "https://api.github.com/users/heydavid525/repos",
            "events_url": "https://api.github.com/users/heydavid525/events{/privacy}",
            "received_events_url": "https://api.github.com/users/heydavid525/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 693805995,
                "node_id": "MDU6TGFiZWw2OTM4MDU5OTU=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20onnx",
                "name": "module: onnx",
                "color": "f7e101",
                "default": false,
                "description": "Related to torch.onnx"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "houseroad",
            "id": 30275821,
            "node_id": "MDQ6VXNlcjMwMjc1ODIx",
            "avatar_url": "https://avatars.githubusercontent.com/u/30275821?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houseroad",
            "html_url": "https://github.com/houseroad",
            "followers_url": "https://api.github.com/users/houseroad/followers",
            "following_url": "https://api.github.com/users/houseroad/following{/other_user}",
            "gists_url": "https://api.github.com/users/houseroad/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houseroad/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houseroad/subscriptions",
            "organizations_url": "https://api.github.com/users/houseroad/orgs",
            "repos_url": "https://api.github.com/users/houseroad/repos",
            "events_url": "https://api.github.com/users/houseroad/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houseroad/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "houseroad",
                "id": 30275821,
                "node_id": "MDQ6VXNlcjMwMjc1ODIx",
                "avatar_url": "https://avatars.githubusercontent.com/u/30275821?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/houseroad",
                "html_url": "https://github.com/houseroad",
                "followers_url": "https://api.github.com/users/houseroad/followers",
                "following_url": "https://api.github.com/users/houseroad/following{/other_user}",
                "gists_url": "https://api.github.com/users/houseroad/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/houseroad/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/houseroad/subscriptions",
                "organizations_url": "https://api.github.com/users/houseroad/orgs",
                "repos_url": "https://api.github.com/users/houseroad/repos",
                "events_url": "https://api.github.com/users/houseroad/events{/privacy}",
                "received_events_url": "https://api.github.com/users/houseroad/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 3,
        "created_at": "2019-02-27T01:37:19Z",
        "updated_at": "2019-06-03T20:02:41Z",
        "closed_at": "2019-06-03T20:02:41Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\nONNX Loop produced by `ScriptModule` and `onnx._export` does not conform to ONNX loop spec: The second input to ONNX loop--the conditional variable `cond`--should be `tensor(bool)`, but I got `tensor(int64)`. \r\n\r\n## To Reproduce\r\n\r\nRun the following script (environment details below):\r\n\r\n```\r\nfrom __future__ import print_function\r\nimport torch\r\nimport onnx\r\nfrom onnx.onnx_pb2 import TensorProto\r\n\r\nclass SimpleModel(torch.jit.ScriptModule):\r\n    def __init__(self):\r\n        super(SimpleModel, self).__init__()\r\n        #self.xx = torch.zeros(2, 2)\r\n\r\n    @torch.jit.script_method\r\n    def forward(self, num_iter : int):\r\n        x = torch.ones([2, 2], dtype=torch.float32)\r\n        y = torch.ones(2, 2, dtype=torch.float32)\r\n        v = torch.ones(2, 1, dtype=torch.float32)\r\n        for i in range(num_iter):\r\n            v = x * v\r\n        return x, v\r\n\r\nmodel = SimpleModel()\r\n\r\nmodel_onnx = torch.onnx._export(model, torch.tensor(5), \"simple_loop.onnx\",\r\n        verbose=True,\r\n        operator_export_type=torch.onnx.OperatorExportTypes.ONNX,\r\n        example_outputs=(torch.zeros(2,2), torch.zeros(2,1)))\r\n\r\nprog = onnx.load(\"simple_loop.onnx\")\r\nprint(\"%1 tensor type is int64? \", prog.graph.node[0].attribute[0].t.data_type\r\n        == TensorProto.INT64)\r\n```\r\n\r\nproduces the following ONNX program:\r\n\r\n```\r\ngraph(%num_iter : Long()) {\r\n  %1 : Long() = onnx::Constant[value={1}]()\r\n  %2 : Float(2, 2) = onnx::Constant[value= 1  1  1  1 [ CPUFloatType{2,2} ]]()\r\n  %3 : Float(2, 1) = onnx::Constant[value= 1  1 [ CPUFloatType{2,1} ]]()\r\n  %4 : Tensor = onnx::Loop(%num_iter, %1, %3)\r\n    block0(%i : int, %cond : Tensor, %7 : Tensor) {\r\n      %8 : Tensor = onnx::Mul(%2, %7)\r\n      -> (%1, %8)\r\n    }\r\n  return (%2, %4);\r\n}\r\n```\r\n\r\n`%1` is tensor of type `TensorProto.INT64` (see the program print out). However, `%1` is the second input to `block0`, which is required to be `tensor(bool)` by the [ONNX spec](https://github.com/onnx/onnx/blob/master/docs/Operators.md#Loop). \r\n\r\n## Environment\r\nPyTorch version: 1.0.1.post2\r\nIs debug build: No\r\nCUDA used to build PyTorch: None\r\n\r\nOS: Mac OSX 10.14.1\r\nGCC version: Could not collect\r\nCMake version: version 3.13.4\r\n\r\nPython version: 3.7\r\nIs CUDA available: No\r\nCUDA runtime version: No CUDA\r\nGPU models and configuration: No CUDA\r\nNvidia driver version: No CUDA\r\ncuDNN version: No CUDA\r\n\r\nVersions of relevant libraries:\r\n[pip3] numpy==1.16.1\r\n[pip3] torch==1.0.1.post2\r\n[conda] Could not collect\r\n\r\n",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/17531/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/17531/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/17483",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/17483/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/17483/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/17483/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/17483",
        "id": 414352147,
        "node_id": "MDU6SXNzdWU0MTQzNTIxNDc=",
        "number": 17483,
        "title": "[JIT] support range of int",
        "user": {
            "login": "ailzhang",
            "id": 5248122,
            "node_id": "MDQ6VXNlcjUyNDgxMjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5248122?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ailzhang",
            "html_url": "https://github.com/ailzhang",
            "followers_url": "https://api.github.com/users/ailzhang/followers",
            "following_url": "https://api.github.com/users/ailzhang/following{/other_user}",
            "gists_url": "https://api.github.com/users/ailzhang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ailzhang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ailzhang/subscriptions",
            "organizations_url": "https://api.github.com/users/ailzhang/orgs",
            "repos_url": "https://api.github.com/users/ailzhang/repos",
            "events_url": "https://api.github.com/users/ailzhang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ailzhang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "ailzhang",
            "id": 5248122,
            "node_id": "MDQ6VXNlcjUyNDgxMjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5248122?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ailzhang",
            "html_url": "https://github.com/ailzhang",
            "followers_url": "https://api.github.com/users/ailzhang/followers",
            "following_url": "https://api.github.com/users/ailzhang/following{/other_user}",
            "gists_url": "https://api.github.com/users/ailzhang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ailzhang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ailzhang/subscriptions",
            "organizations_url": "https://api.github.com/users/ailzhang/orgs",
            "repos_url": "https://api.github.com/users/ailzhang/repos",
            "events_url": "https://api.github.com/users/ailzhang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ailzhang/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "ailzhang",
                "id": 5248122,
                "node_id": "MDQ6VXNlcjUyNDgxMjI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/5248122?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ailzhang",
                "html_url": "https://github.com/ailzhang",
                "followers_url": "https://api.github.com/users/ailzhang/followers",
                "following_url": "https://api.github.com/users/ailzhang/following{/other_user}",
                "gists_url": "https://api.github.com/users/ailzhang/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ailzhang/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ailzhang/subscriptions",
                "organizations_url": "https://api.github.com/users/ailzhang/orgs",
                "repos_url": "https://api.github.com/users/ailzhang/repos",
                "events_url": "https://api.github.com/users/ailzhang/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ailzhang/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-02-25T23:12:00Z",
        "updated_at": "2019-02-28T05:43:38Z",
        "closed_at": "2019-02-28T05:43:38Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "\r\nCurrently there's no easy way to create [0, 1, 2, ..., x - 1] given x in torchscript, unless we do it in a for loop. \r\nAs discussed offline with @zdevito  and @driazati , we propose adding `prim::range` and let it return a List. \r\nThe behavior doesn't match Python exactly, as range and list in Python are not exactly the same. But this is sufficient for our current need, and I don't see a need to differentiate them atm. \r\n\r\nI have this implemented in a PR I'm working on. Will link to it once that's ready. ",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/17483/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/17483/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/17449",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/17449/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/17449/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/17449/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/17449",
        "id": 413857147,
        "node_id": "MDU6SXNzdWU0MTM4NTcxNDc=",
        "number": 17449,
        "title": "[JIT] encodeRHS val.isInt() ASSERT FAILED during fusion",
        "user": {
            "login": "fmassa",
            "id": 9110200,
            "node_id": "MDQ6VXNlcjkxMTAyMDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9110200?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fmassa",
            "html_url": "https://github.com/fmassa",
            "followers_url": "https://api.github.com/users/fmassa/followers",
            "following_url": "https://api.github.com/users/fmassa/following{/other_user}",
            "gists_url": "https://api.github.com/users/fmassa/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fmassa/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fmassa/subscriptions",
            "organizations_url": "https://api.github.com/users/fmassa/orgs",
            "repos_url": "https://api.github.com/users/fmassa/repos",
            "events_url": "https://api.github.com/users/fmassa/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fmassa/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "wanchaol",
            "id": 9443650,
            "node_id": "MDQ6VXNlcjk0NDM2NTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9443650?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wanchaol",
            "html_url": "https://github.com/wanchaol",
            "followers_url": "https://api.github.com/users/wanchaol/followers",
            "following_url": "https://api.github.com/users/wanchaol/following{/other_user}",
            "gists_url": "https://api.github.com/users/wanchaol/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wanchaol/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wanchaol/subscriptions",
            "organizations_url": "https://api.github.com/users/wanchaol/orgs",
            "repos_url": "https://api.github.com/users/wanchaol/repos",
            "events_url": "https://api.github.com/users/wanchaol/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wanchaol/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "wanchaol",
                "id": 9443650,
                "node_id": "MDQ6VXNlcjk0NDM2NTA=",
                "avatar_url": "https://avatars.githubusercontent.com/u/9443650?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/wanchaol",
                "html_url": "https://github.com/wanchaol",
                "followers_url": "https://api.github.com/users/wanchaol/followers",
                "following_url": "https://api.github.com/users/wanchaol/following{/other_user}",
                "gists_url": "https://api.github.com/users/wanchaol/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/wanchaol/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wanchaol/subscriptions",
                "organizations_url": "https://api.github.com/users/wanchaol/orgs",
                "repos_url": "https://api.github.com/users/wanchaol/repos",
                "events_url": "https://api.github.com/users/wanchaol/events{/privacy}",
                "received_events_url": "https://api.github.com/users/wanchaol/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-02-24T19:19:48Z",
        "updated_at": "2019-03-04T21:20:21Z",
        "closed_at": "2019-03-04T21:20:21Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\nFusing the following function crashes the interpreter\r\n\r\n```python\r\nimport torch\r\n\r\ntorch._C._jit_override_can_fuse_on_cpu(True)\r\n\r\n@torch.jit.script\r\ndef box_iou(box1, box2, eps:float=1e-5):\r\n    # box1: [N, 4], box2: [M, 4]\r\n    x1, y1, w1, h1 = box1.unsqueeze(1).unbind(2)\r\n    x2, y2, w2, h2 = box2.unbind(1)\r\n\r\n    xi = torch.max(x1, x2)  # Intersection\r\n    yi = torch.max(y1, y2)\r\n\r\n    wi = torch.clamp(torch.min(x1 + w1, x2 + w2) - xi, min=0)\r\n    hi = torch.clamp(torch.min(y1 + h1, y2 + h2) - yi, min=0)\r\n    return wi, hi\r\n\r\nbox_iou(torch.rand(4, 4), torch.rand(5, 4))\r\nprint(box_iou.graph_for(torch.rand(4, 4), torch.rand(5, 4)))\r\n```\r\nwith the following error\r\n```\r\nfmassa-mbp:~ fmassa$ python tst4.py\r\nTraceback (most recent call last):\r\n  File \"tst4.py\", line 30, in <module>\r\n    box_iou(torch.rand(4, 4), torch.rand(5, 4))\r\n  File \"/Users/fmassa/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py\", line 491, in __call__\r\n    result = self.forward(*input, **kwargs)\r\nRuntimeError: val.isInt() ASSERT FAILED at /Users/distiller/project/conda/conda-bld/pytorch-nightly_1550985177969/work/torch/csrc/jit/fuser/codegen.cpp:220, please report a bug to PyTorch. (encodeRHS at /Users/distiller/project/conda/conda-bld/pytorch-nightly_1550985177969/work/torch/csrc/jit/fuser/codegen.cpp:220)\r\nframe #0: c10::Error::Error(c10::SourceLocation, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) + 135 (0x10879d6e7 in libc10.dylib)\r\nframe #1: torch::jit::fuser::generateKernel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, torch::jit::Graph const&, std::__1::vector<std::__1::pair<torch::jit::Value const*, torch::jit::fuser::TensorDesc const>, std::__1::allocator<std::__1::pair<torch::jit::Value const*, torch::jit::fuser::TensorDesc const> > > const&, std::__1::vector<std::__1::pair<torch::jit::Value const*, torch::jit::fuser::TensorDesc const>, std::__1::allocator<std::__1::pair<torch::jit::Value const*, torch::jit::fuser::TensorDesc const> > > const&, bool) + 20806 (0x10ed300c6 in libtorch.1.dylib)\r\nframe #2: torch::jit::fuser::compileKernel(torch::jit::fuser::KernelSpec const&, torch::jit::fuser::ArgSpec const&, std::__1::vector<long long, std::__1::allocator<long long> > const&, c10::Device) + 3696 (0x10ed1e980 in libtorch.1.dylib)\r\nframe #3: torch::jit::fuser::runFusion(long long, std::__1::vector<c10::IValue, std::__1::allocator<c10::IValue> >&) + 1632 (0x10ed26830 in libtorch.1.dylib)\r\nframe #4: torch::jit::runFusion(long long, std::__1::vector<c10::IValue, std::__1::allocator<c10::IValue> >&) + 18 (0x10ec2f5f2 in libtorch.1.dylib)\r\nframe #5: std::__1::__function::__func<torch::jit::(anonymous namespace)::$_1::operator()(torch::jit::Node const*) const::'lambda'(std::__1::vector<c10::IValue, std::__1::allocator<c10::IValue> >&), std::__1::allocator<torch::jit::(anonymous namespace)::$_1::operator()(torch::jit::Node const*) const::'lambda'(std::__1::vector<c10::IValue, std::__1::allocator<c10::IValue> >&)>, int (std::__1::vector<c10::IValue, std::__1::allocator<c10::IValue> >&)>::operator()(std::__1::vector<c10::IValue, std::__1::allocator<c10::IValue> >&) + 45 (0x10ec2ff8d in libtorch.1.dylib)\r\nframe #6: torch::jit::InterpreterStateImpl::runImpl(std::__1::vector<c10::IValue, std::__1::allocator<c10::IValue> >&) + 245 (0x10eb7b015 in libtorch.1.dylib)\r\nframe #7: torch::jit::InterpreterStateImpl::run(std::__1::vector<c10::IValue, std::__1::allocator<c10::IValue> >&) + 28 (0x10eb7354c in libtorch.1.dylib)\r\nframe #8: torch::jit::GraphExecutorImpl::run(std::__1::vector<c10::IValue, std::__1::allocator<c10::IValue> >&) + 4274 (0x10eb4ffa2 in libtorch.1.dylib)\r\nframe #9: torch::jit::script::Method::run(std::__1::vector<c10::IValue, std::__1::allocator<c10::IValue> >&) + 216 (0x1047f66e8 in libtorch_python.dylib)\r\nframe #10: torch::jit::invokeScriptMethodFromPython(torch::jit::script::Method&, torch::jit::tuple_slice, pybind11::kwargs) + 73 (0x1047f65a9 in libtorch_python.dylib)\r\nframe #11: void pybind11::cpp_function::initialize<torch::jit::script::initJitScriptBindings(_object*)::$_17, pybind11::object, pybind11::args, pybind11::kwargs, pybind11::name, pybind11::is_method, pybind11::sibling>(torch::jit::script::initJitScriptBindings(_object*)::$_17&&, pybind11::object (*)(pybind11::args, pybind11::kwargs), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&)::'lambda'(pybind11::detail::function_call&)::__invoke(pybind11::detail::function_call&) + 340 (0x1047f62b4 in libtorch_python.dylib)\r\nframe #12: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) + 3324 (0x10439785c in libtorch_python.dylib)\r\n<omitting python frames>\r\nframe #32: start + 1 (0x7fff59ab1ed9 in libdyld.dylib)\r\n```\r\n\r\nI'm using latest nightly `1.0.0.dev20190223`",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/17449/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/17449/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/17291",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/17291/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/17291/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/17291/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/17291",
        "id": 412225094,
        "node_id": "MDU6SXNzdWU0MTIyMjUwOTQ=",
        "number": 17291,
        "title": "Exceptions have a hardcoded message",
        "user": {
            "login": "driazati",
            "id": 9407960,
            "node_id": "MDQ6VXNlcjk0MDc5NjA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9407960?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/driazati",
            "html_url": "https://github.com/driazati",
            "followers_url": "https://api.github.com/users/driazati/followers",
            "following_url": "https://api.github.com/users/driazati/following{/other_user}",
            "gists_url": "https://api.github.com/users/driazati/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/driazati/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/driazati/subscriptions",
            "organizations_url": "https://api.github.com/users/driazati/orgs",
            "repos_url": "https://api.github.com/users/driazati/repos",
            "events_url": "https://api.github.com/users/driazati/events{/privacy}",
            "received_events_url": "https://api.github.com/users/driazati/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 443484135,
                "node_id": "MDU6TGFiZWw0NDM0ODQxMzU=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/high%20priority",
                "name": "high priority",
                "color": "F22613",
                "default": false,
                "description": null
            },
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 2203967632,
                "node_id": "MDU6TGFiZWwyMjAzOTY3NjMy",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/weeks",
                "name": "weeks",
                "color": "e5808f",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "gmagogsfm",
            "id": 1817752,
            "node_id": "MDQ6VXNlcjE4MTc3NTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1817752?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gmagogsfm",
            "html_url": "https://github.com/gmagogsfm",
            "followers_url": "https://api.github.com/users/gmagogsfm/followers",
            "following_url": "https://api.github.com/users/gmagogsfm/following{/other_user}",
            "gists_url": "https://api.github.com/users/gmagogsfm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gmagogsfm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gmagogsfm/subscriptions",
            "organizations_url": "https://api.github.com/users/gmagogsfm/orgs",
            "repos_url": "https://api.github.com/users/gmagogsfm/repos",
            "events_url": "https://api.github.com/users/gmagogsfm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gmagogsfm/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "gmagogsfm",
                "id": 1817752,
                "node_id": "MDQ6VXNlcjE4MTc3NTI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/1817752?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/gmagogsfm",
                "html_url": "https://github.com/gmagogsfm",
                "followers_url": "https://api.github.com/users/gmagogsfm/followers",
                "following_url": "https://api.github.com/users/gmagogsfm/following{/other_user}",
                "gists_url": "https://api.github.com/users/gmagogsfm/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/gmagogsfm/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gmagogsfm/subscriptions",
                "organizations_url": "https://api.github.com/users/gmagogsfm/orgs",
                "repos_url": "https://api.github.com/users/gmagogsfm/repos",
                "events_url": "https://api.github.com/users/gmagogsfm/events{/privacy}",
                "received_events_url": "https://api.github.com/users/gmagogsfm/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 5,
        "created_at": "2019-02-20T03:16:42Z",
        "updated_at": "2020-08-02T03:07:21Z",
        "closed_at": "2020-08-02T03:07:21Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "`raise` statements in the JIT always raise with the string \"Exception\". They should instead use the user supplied arguments\r\n\r\nExample\r\n```python\r\n@torch.jit.script\r\ndef fn(x):\r\n    # type: (int) -> int\r\n    if x > 2:\r\n        raise RuntimeError(\"bad input, {} is too high\".format(x))\r\n    return x + 3\r\n\r\nprint(fn.graph)\r\nprint(fn(4))\r\n```\r\nOutputs the graph\r\n```\r\ngraph(%x : int):\r\n  %3 : string = prim::Constant[value=\"Exception\"]()\r\n  %1 : int = prim::Constant[value=2]()\r\n  %5 : int = prim::Constant[value=3]()\r\n  %2 : bool = aten::gt(%x, %1)\r\n   = prim::If(%2)\r\n    block0():\r\n       = prim::RaiseException(%3)\r\n      -> ()\r\n    block1():\r\n      -> ()\r\n  %6 : int = aten::add(%x, %5)\r\n  return (%6)\r\n```\n\ncc @ezyang @gchanan @zou3519 @suo @gmagogsfm",
        "closed_by": {
            "login": "gmagogsfm",
            "id": 1817752,
            "node_id": "MDQ6VXNlcjE4MTc3NTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1817752?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gmagogsfm",
            "html_url": "https://github.com/gmagogsfm",
            "followers_url": "https://api.github.com/users/gmagogsfm/followers",
            "following_url": "https://api.github.com/users/gmagogsfm/following{/other_user}",
            "gists_url": "https://api.github.com/users/gmagogsfm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gmagogsfm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gmagogsfm/subscriptions",
            "organizations_url": "https://api.github.com/users/gmagogsfm/orgs",
            "repos_url": "https://api.github.com/users/gmagogsfm/repos",
            "events_url": "https://api.github.com/users/gmagogsfm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gmagogsfm/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/17291/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/17291/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/17140",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/17140/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/17140/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/17140/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/17140",
        "id": 410560587,
        "node_id": "MDU6SXNzdWU0MTA1NjA1ODc=",
        "number": 17140,
        "title": "[jit] Error: 'List must contain only a single type' when loading Python model into C++",
        "user": {
            "login": "sto-chastic",
            "id": 18616211,
            "node_id": "MDQ6VXNlcjE4NjE2MjEx",
            "avatar_url": "https://avatars.githubusercontent.com/u/18616211?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sto-chastic",
            "html_url": "https://github.com/sto-chastic",
            "followers_url": "https://api.github.com/users/sto-chastic/followers",
            "following_url": "https://api.github.com/users/sto-chastic/following{/other_user}",
            "gists_url": "https://api.github.com/users/sto-chastic/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sto-chastic/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sto-chastic/subscriptions",
            "organizations_url": "https://api.github.com/users/sto-chastic/orgs",
            "repos_url": "https://api.github.com/users/sto-chastic/repos",
            "events_url": "https://api.github.com/users/sto-chastic/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sto-chastic/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "suo",
            "id": 1617424,
            "node_id": "MDQ6VXNlcjE2MTc0MjQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1617424?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/suo",
            "html_url": "https://github.com/suo",
            "followers_url": "https://api.github.com/users/suo/followers",
            "following_url": "https://api.github.com/users/suo/following{/other_user}",
            "gists_url": "https://api.github.com/users/suo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/suo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/suo/subscriptions",
            "organizations_url": "https://api.github.com/users/suo/orgs",
            "repos_url": "https://api.github.com/users/suo/repos",
            "events_url": "https://api.github.com/users/suo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/suo/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "suo",
                "id": 1617424,
                "node_id": "MDQ6VXNlcjE2MTc0MjQ=",
                "avatar_url": "https://avatars.githubusercontent.com/u/1617424?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/suo",
                "html_url": "https://github.com/suo",
                "followers_url": "https://api.github.com/users/suo/followers",
                "following_url": "https://api.github.com/users/suo/following{/other_user}",
                "gists_url": "https://api.github.com/users/suo/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/suo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/suo/subscriptions",
                "organizations_url": "https://api.github.com/users/suo/orgs",
                "repos_url": "https://api.github.com/users/suo/repos",
                "events_url": "https://api.github.com/users/suo/events{/privacy}",
                "received_events_url": "https://api.github.com/users/suo/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 2,
        "created_at": "2019-02-15T01:04:09Z",
        "updated_at": "2021-10-14T08:07:18Z",
        "closed_at": "2019-02-21T08:20:25Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\nI have generated and saved a model in Python using `torch.git.save()`. Now I am attempting to load it into my C++ implementation for inference, however I get the error:\r\n\r\n```\r\n> terminate called after throwing an instance of 'torch::jit::script::ErrorReport'\r\n>   what():  \r\n> Lists must contain only a single type, expected: Float(1, 1083, 11) but found Float(1, 4332, 11) instead:\r\n> op_version_set = 0\r\n> def forward(self,\r\n>     input_1: Tensor) -> Tensor:\r\n>   _0 = [CONSTANTS.c0, CONSTANTS.c1, CONSTANTS.c2]\r\n>        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ <--- HERE\r\n>   return torch.cat(_0, 1)\r\n> \r\n> Aborted (core dumped)\r\n```\r\n\r\n## To Reproduce\r\n\r\nIt does not specify the code source of the failure, however I am thinking it could be this (following) forward function on my Python implementation due to the similarities with the error report:\r\n\r\n```python\r\nclass YOLOv3(nn.Module):\r\n\r\n    def __init__(self, anchors, anch_mask, n_classes, ignore_thre=0.7):\r\n        \"\"\"\r\n        Initialization of YOLOv3 class.\r\n        Args:\r\n            config_model (dict): used in YOLOLayer.\r\n            ignore_thre (float): used in YOLOLayer.\r\n        \"\"\"\r\n        super(YOLOv3, self).__init__()\r\n        self.loss_list = []\r\n        self.module_list= create_yolov3_modules(anchors, anch_mask, n_classes, ignore_thre)\r\n        self.length = len(self.module_list) \r\n\r\n    def forward(self, x, targets=None):\r\n        \"\"\"\r\n        Forward path of YOLOv3.\r\n        Args:\r\n            x (torch.Tensor) : input data whose shape is :math:`(N, C, H, W)`, \\\r\n                where N, C are batchsize and num. of channels.\r\n            targets (torch.Tensor) : label array whose shape is :math:`(N, 50, 5)`\r\n\r\n        Returns:\r\n            training:\r\n                output (torch.Tensor): loss tensor for backpropagation.\r\n            test:\r\n                output (torch.Tensor): concatenated detection results.\r\n        \"\"\"\r\n        train = targets is not None\r\n        output = []\r\n        route_layers = []\r\n        for i in range(self.length):\r\n            # yolo layers\r\n            if i == 14 or i == 22 or i == 28:\r\n                if train:\r\n                    x, *loss_dict = self.module_list[i](x, targets)\r\n                    #for name, loss in zip(['xy', 'wh', 'conf', 'cls', 'l2'] , loss_dict):\r\n                    self.loss_list += loss_dict\r\n                else:\r\n                    x = self.module_list[i](x)\r\n                output.append(x)\r\n            else:\r\n                x = self.module_list[i](x)\r\n\r\n            # route layers\r\n            if i == 6 or i == 8 or i == 12 or i == 20:\r\n                route_layers.append(x)\r\n            if i == 14:\r\n                x = route_layers[2]\r\n            if i == 22:  # yolo 2nd\r\n                x = route_layers[3]\r\n            if i == 16:\r\n                x = torch.cat((x, route_layers[1]), 1)\r\n            if i == 24:\r\n                x = torch.cat((x, route_layers[0]), 1)\r\n\r\n            i+=1\r\n        if train:\r\n            return sum(output)\r\n        else:\r\n            return torch.cat(output, 1)\r\n```\r\n\r\nI think it is important to notice that on the error the \"expected Float(1,*1083*,11)\" id exactly 4 times larger than \"found Float(1, *4332*, 11)\"\r\n\r\n## Expected behavior\r\n\r\nThe model should be loaded successfully for inference.\r\n\r\n## Environment\r\n\r\nPyTorch version: 1.0.1.post2\r\nIs debug build: No\r\nCUDA used to build PyTorch: 10.0.130\r\n\r\nOS: Ubuntu 16.04.5 LTS\r\nGCC version: (Ubuntu 5.4.0-6ubuntu1~16.04.11) 5.4.0 20160609\r\nCMake version: version 3.5.1\r\n\r\nPython version: 3.6\r\nIs CUDA available: Yes\r\nCUDA runtime version: 9.2.148\r\nGPU models and configuration: GPU 0: GeForce GTX 1070 Ti\r\nNvidia driver version: 410.48\r\ncuDNN version: Could not collect\r\n\r\nVersions of relevant libraries:\r\n[pip] numpy==1.12.1\r\n[pip] torch==1.0.1.post2\r\n[pip] torchvision==0.2.1\r\n[conda] blas 1.0 mkl\r\n[conda] mkl 2018.0.3 1\r\n[conda] pytorch 1.0.1 py3.6_cuda10.0.130_cudnn7.4.2_2 pytorch\r\n[conda] torchvision 0.2.1 py_2 pytorch\r\n",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/17140/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/17140/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/17130",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/17130/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/17130/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/17130/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/17130",
        "id": 410519323,
        "node_id": "MDU6SXNzdWU0MTA1MTkzMjM=",
        "number": 17130,
        "title": "torch.jit.load hangs indefinitely if called from inside python thread",
        "user": {
            "login": "ChrisDoohan",
            "id": 10932304,
            "node_id": "MDQ6VXNlcjEwOTMyMzA0",
            "avatar_url": "https://avatars.githubusercontent.com/u/10932304?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ChrisDoohan",
            "html_url": "https://github.com/ChrisDoohan",
            "followers_url": "https://api.github.com/users/ChrisDoohan/followers",
            "following_url": "https://api.github.com/users/ChrisDoohan/following{/other_user}",
            "gists_url": "https://api.github.com/users/ChrisDoohan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ChrisDoohan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ChrisDoohan/subscriptions",
            "organizations_url": "https://api.github.com/users/ChrisDoohan/orgs",
            "repos_url": "https://api.github.com/users/ChrisDoohan/repos",
            "events_url": "https://api.github.com/users/ChrisDoohan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ChrisDoohan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-02-14T22:21:41Z",
        "updated_at": "2019-02-15T19:25:57Z",
        "closed_at": "2019-02-15T19:25:57Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\n<!-- A clear and concise description of what the bug is. -->\r\n\r\n## To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Create dummy model using the following code.\r\n```\r\nimport torch\r\n\r\n\r\nclass DummyModel(torch.nn.Module):\r\n\r\n    def __init__(self):\r\n        super().__init__()\r\n        self.layer = torch.nn.Conv2d(1, 2, 3)\r\n\r\n    def forward(self, x):\r\n        return torch.mean(self.layer(x))\r\n\r\n\r\nm = DummyModel()\r\ntraced = torch.jit.trace(m, torch.rand([1, 1, 100, 300]))\r\ntraced.save('dummy_model.pt')\r\n```\r\n\r\n2. \r\n```\r\nimport torch\r\nfrom concurrent.futures import ThreadPoolExecutor\r\n\r\nwith ThreadPoolExecutor(max_workers=1) as executor:\r\n    executor.submit(torch.jit.load, 'dummy_model.pt')\r\n```\r\n\r\n<!-- If you have a code sample, error messages, stack traces, please provide it here as well -->\r\n\r\n## Expected behavior\r\nThread loads the model without issue, or an exception is raised. Hang is not expected.\r\n\r\n## Environment\r\nCollecting environment information...\r\nPyTorch version: 1.0.0\r\nIs debug build: No\r\nCUDA used to build PyTorch: None\r\n\r\nOS: Debian GNU/Linux 9 (stretch)\r\nGCC version: (Debian 6.3.0-18+deb9u1) 6.3.0 20170516\r\nCMake version: version 3.7.2\r\n\r\nPython version: 2.7\r\nIs CUDA available: No\r\nCUDA runtime version: No CUDA\r\nGPU models and configuration: No CUDA\r\nNvidia driver version: No CUDA\r\ncuDNN version: No CUDA\r\n\r\nVersions of relevant libraries:\r\n[pip] numpy==1.16.0\r\n[pip] torch==1.0.0\r\n[conda] Could not collect\r\n",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/17130/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/17130/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/17106",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/17106/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/17106/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/17106/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/17106",
        "id": 410185349,
        "node_id": "MDU6SXNzdWU0MTAxODUzNDk=",
        "number": 17106,
        "title": "[JIT] Scripting arguments for call are not valid",
        "user": {
            "login": "sto-chastic",
            "id": 18616211,
            "node_id": "MDQ6VXNlcjE4NjE2MjEx",
            "avatar_url": "https://avatars.githubusercontent.com/u/18616211?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sto-chastic",
            "html_url": "https://github.com/sto-chastic",
            "followers_url": "https://api.github.com/users/sto-chastic/followers",
            "following_url": "https://api.github.com/users/sto-chastic/following{/other_user}",
            "gists_url": "https://api.github.com/users/sto-chastic/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sto-chastic/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sto-chastic/subscriptions",
            "organizations_url": "https://api.github.com/users/sto-chastic/orgs",
            "repos_url": "https://api.github.com/users/sto-chastic/repos",
            "events_url": "https://api.github.com/users/sto-chastic/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sto-chastic/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "driazati",
            "id": 9407960,
            "node_id": "MDQ6VXNlcjk0MDc5NjA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9407960?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/driazati",
            "html_url": "https://github.com/driazati",
            "followers_url": "https://api.github.com/users/driazati/followers",
            "following_url": "https://api.github.com/users/driazati/following{/other_user}",
            "gists_url": "https://api.github.com/users/driazati/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/driazati/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/driazati/subscriptions",
            "organizations_url": "https://api.github.com/users/driazati/orgs",
            "repos_url": "https://api.github.com/users/driazati/repos",
            "events_url": "https://api.github.com/users/driazati/events{/privacy}",
            "received_events_url": "https://api.github.com/users/driazati/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "driazati",
                "id": 9407960,
                "node_id": "MDQ6VXNlcjk0MDc5NjA=",
                "avatar_url": "https://avatars.githubusercontent.com/u/9407960?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/driazati",
                "html_url": "https://github.com/driazati",
                "followers_url": "https://api.github.com/users/driazati/followers",
                "following_url": "https://api.github.com/users/driazati/following{/other_user}",
                "gists_url": "https://api.github.com/users/driazati/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/driazati/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/driazati/subscriptions",
                "organizations_url": "https://api.github.com/users/driazati/orgs",
                "repos_url": "https://api.github.com/users/driazati/repos",
                "events_url": "https://api.github.com/users/driazati/events{/privacy}",
                "received_events_url": "https://api.github.com/users/driazati/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 5,
        "created_at": "2019-02-14T08:35:07Z",
        "updated_at": "2019-03-08T23:31:47Z",
        "closed_at": "2019-03-08T23:31:47Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\nI am converting my model to TorchScript in order to be able to save it and load it in C++. After solving various errors that arose along the way, I am left with a  _RuntimeError:  arguments for call are not valid:_ which I do not know where it originates exactly.\r\n\r\n## To Reproduce\r\n\r\nThe latest reference to my code comes from a calling to this function:\r\n```python\r\n\r\ndef create_yolov3_modules(anchors, anch_mask, n_classes, ignore_thre):\r\n    mlist = nn.ModuleList()\r\n    mlist.append(add_conv(in_ch=3, out_ch=32, ksize=3, stride=1))\r\n    mlist.append(add_conv(in_ch=32, out_ch=64, ksize=3, stride=2))\r\n    mlist.append(resblock(ch=64))\r\n    mlist.append(add_conv(in_ch=64, out_ch=128, ksize=3, stride=2))\r\n    mlist.append(resblock(ch=128, nblocks=2))\r\n    ...\r\n```\r\nwhere\r\n\r\n```python\r\ndef add_conv(in_ch, out_ch, ksize, stride):\r\n    stage = nn.Sequential()\r\n    pad = (ksize - 1) // 2\r\n    stage.add_module('conv', nn.Conv2d(in_channels=in_ch,\r\n                                       out_channels=out_ch, kernel_size=ksize, stride=stride,\r\n                                       padding=pad, bias=False))\r\n    stage.add_module('batch_norm', nn.BatchNorm2d(out_ch))\r\n    stage.add_module('leaky', nn.LeakyReLU(0.1))\r\n    return stage\r\n```\r\n\r\nand\r\n\r\n```python\r\nclass resblock(ScriptModule):\r\n\r\n    __constants__ = [\"nblocks\",\"ch\",\"shortcut\"]\r\n\r\n    def __init__(self, ch, nblocks=1, shortcut=True):\r\n\r\n        super().__init__()\r\n        self.shortcut = shortcut\r\n        self.nblocks = nblocks\r\n        self.ch = ch\r\n        self.module_list = nn.ModuleList()\r\n        self.blockt1=add_conv(self.ch, self.ch//2, 1, 1)\r\n        self.blockt2=add_conv(self.ch//2, self.ch, 3, 1)\r\n        for _ in range(nblocks):\r\n            resblock_one = nn.ModuleList()\r\n            self.blockt1\r\n            self.blockt2\r\n            self.module_list.append(resblock_one)\r\n\r\n    @script_method\r\n    def forward(self, x):\r\n        for _ in range(self.nblocks):#in_ch, out_ch, ksize, stride\r\n            h = x\r\n            h = self.blockt1(h)\r\n            h = self.blockt2(h)\r\n            x = x + h if self.shortcut else h\r\n        return x\r\n```\r\nproduces this error:\r\n```\r\n> RuntimeError: \r\n> arguments for call are not valid:\r\n>   \r\n>   for operator aten::__interpolate(Tensor input, int? size=<default>, float[]? scale_factor=<default>, string mode=<default>, bool? align_corners=<default>) -> Tensor:\r\n>   expected a value of type float[]? for argument 'scale_factor' but found int\r\n>   @weak_script_method\r\n>   def forward(self, input):\r\n>       warnings.warn(\"nn.{} is deprecated. Use nn.functional.interpolate instead.\".format(self.name))\r\n>       return F.interpolate(input, self.size, self.scale_factor, self.mode, self.align_corners)\r\n>                                              ~~~~~~~~~~ <--- HERE\r\n>   \r\n>   for operator aten::__interpolate(Tensor input, int[]? size=<default>, float[]? scale_factor=<default>, string mode=<default>, bool? align_corners=<default>) -> Tensor:\r\n>   expected a value of type float[]? for argument 'scale_factor' but found int\r\n>   @weak_script_method\r\n>   def forward(self, input):\r\n>       warnings.warn(\"nn.{} is deprecated. Use nn.functional.interpolate instead.\".format(self.name))\r\n>       return F.interpolate(input, self.size, self.scale_factor, self.mode, self.align_corners)\r\n>                                              ~~~~~~~~~~ <--- HERE\r\n>   \r\n>   for operator aten::__interpolate(Tensor input, int? size=<default>, float? scale_factor=<default>, string mode=<default>, bool? align_corners=<default>) -> Tensor:\r\n>   expected a value of type float? for argument 'scale_factor' but found int\r\n>   @weak_script_method\r\n>   def forward(self, input):\r\n>       warnings.warn(\"nn.{} is deprecated. Use nn.functional.interpolate instead.\".format(self.name))\r\n>       return F.interpolate(input, self.size, self.scale_factor, self.mode, self.align_corners)\r\n>                                              ~~~~~~~~~~ <--- HERE\r\n>   \r\n>   for operator aten::__interpolate(Tensor input, int[]? size=<default>, float? scale_factor=<default>, string mode=<default>, bool? align_corners=<default>) -> Tensor:\r\n>   expected a value of type float? for argument 'scale_factor' but found int\r\n>   @weak_script_method\r\n>   def forward(self, input):\r\n>       warnings.warn(\"nn.{} is deprecated. Use nn.functional.interpolate instead.\".format(self.name))\r\n>       return F.interpolate(input, self.size, self.scale_factor, self.mode, self.align_corners)\r\n>                                              ~~~~~~~~~~ <--- HERE\r\n> for call at:\r\n> @weak_script_method\r\n> def forward(self, input):\r\n>     warnings.warn(\"nn.{} is deprecated. Use nn.functional.interpolate instead.\".format(self.name))\r\n>     return F.interpolate(input, self.size, self.scale_factor, self.mode, self.align_corners)\r\n>            ~~~~~~~~~~~~~ <--- HERE\r\n\r\nand the traceback is:\r\n\r\n> Traceback (most recent call last):\r\n>   File \"train.py\", line 204, in <module>\r\n>     main()\r\n>   File \"train.py\", line 80, in main\r\n>     model = YOLOv3(anchors, anch_mask, n_classes, ignore_thre=ignore_thre)\r\n>   File \"/home/.conda/envs/python36_ocv_pytorch/lib/python3.6/site-packages/torch/jit/__init__.py\", line 951, in init_then_register\r\n>     original_init(self, *args, **kwargs)\r\n>   File \"/home/Documents/yolotorch/training_implementation/models/yolov3.py\", line 294, in __init__\r\n>     self.module_list= create_yolov3_modules(anchors, anch_mask, n_classes, ignore_thre)\r\n>   File \"/home/.conda/envs/python36_ocv_pytorch/lib/python3.6/site-packages/torch/jit/__init__.py\", line 1123, in __setattr__\r\n>     super(ScriptModule, self).__setattr__(attr, _ConstModuleList(value))\r\n>   File \"/home/.conda/envs/python36_ocv_pytorch/lib/python3.6/site-packages/torch/jit/__init__.py\", line 951, in init_then_register\r\n>     original_init(self, *args, **kwargs)\r\n>   File \"/home/.conda/envs/python36_ocv_pytorch/lib/python3.6/site-packages/torch/jit/__init__.py\", line 1355, in __init__\r\n>     module = _make_strong(module)\r\n>   File \"/home/.conda/envs/python36_ocv_pytorch/lib/python3.6/site-packages/torch/jit/__init__.py\", line 1254, in _make_strong\r\n>     proxy = WeakScriptModuleProxy(mod, stubs)\r\n>   File \"/home/.conda/envs/python36_ocv_pytorch/lib/python3.6/site-packages/torch/jit/__init__.py\", line 951, in init_then_register\r\n>     original_init(self, *args, **kwargs)\r\n>   File \"/home/.conda/envs/python36_ocv_pytorch/lib/python3.6/site-packages/torch/jit/__init__.py\", line 1191, in __init__\r\n>     _create_methods_from_stubs(self, stubs)\r\n>   File \"/home/.conda/envs/python36_ocv_pytorch/lib/python3.6/site-packages/torch/jit/__init__.py\", line 913, in _create_methods_from_stubs\r\n>     self._create_methods(defs, rcbs, defaults)\r\n```\r\n\r\n## Expected behavior\r\n\r\nThe code should produce a ScriptModule which I should be able to save. \r\n\r\n## Environment\r\n\r\nPyTorch version: 1.0.1.post2\r\nIs debug build: No\r\nCUDA used to build PyTorch: 10.0.130\r\n\r\nOS: Ubuntu 16.04.5 LTS\r\nGCC version: (Ubuntu 5.4.0-6ubuntu1~16.04.11) 5.4.0 20160609\r\nCMake version: version 3.5.1\r\n\r\nPython version: 3.6\r\nIs CUDA available: Yes\r\nCUDA runtime version: 9.2.148\r\nGPU models and configuration: GPU 0: GeForce GTX 1070 Ti\r\nNvidia driver version: 410.48\r\ncuDNN version: Could not collect\r\n\r\nVersions of relevant libraries:\r\n[pip] numpy==1.12.1\r\n[pip] torch==1.0.1.post2\r\n[pip] torchvision==0.2.1\r\n[conda] blas                      1.0                         mkl  \r\n[conda] mkl                       2018.0.3                      1  \r\n[conda] pytorch                   1.0.1           py3.6_cuda10.0.130_cudnn7.4.2_2    pytorch\r\n[conda] torchvision               0.2.1                      py_2    pytorch\r\n",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/17106/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/17106/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/17017",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/17017/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/17017/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/17017/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/17017",
        "id": 409454669,
        "node_id": "MDU6SXNzdWU0MDk0NTQ2Njk=",
        "number": 17017,
        "title": "[jit] Custom ops can't take std::vector<std::string> as input",
        "user": {
            "login": "suo",
            "id": 1617424,
            "node_id": "MDQ6VXNlcjE2MTc0MjQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1617424?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/suo",
            "html_url": "https://github.com/suo",
            "followers_url": "https://api.github.com/users/suo/followers",
            "following_url": "https://api.github.com/users/suo/following{/other_user}",
            "gists_url": "https://api.github.com/users/suo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/suo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/suo/subscriptions",
            "organizations_url": "https://api.github.com/users/suo/orgs",
            "repos_url": "https://api.github.com/users/suo/repos",
            "events_url": "https://api.github.com/users/suo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/suo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "driazati",
            "id": 9407960,
            "node_id": "MDQ6VXNlcjk0MDc5NjA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9407960?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/driazati",
            "html_url": "https://github.com/driazati",
            "followers_url": "https://api.github.com/users/driazati/followers",
            "following_url": "https://api.github.com/users/driazati/following{/other_user}",
            "gists_url": "https://api.github.com/users/driazati/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/driazati/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/driazati/subscriptions",
            "organizations_url": "https://api.github.com/users/driazati/orgs",
            "repos_url": "https://api.github.com/users/driazati/repos",
            "events_url": "https://api.github.com/users/driazati/events{/privacy}",
            "received_events_url": "https://api.github.com/users/driazati/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "driazati",
                "id": 9407960,
                "node_id": "MDQ6VXNlcjk0MDc5NjA=",
                "avatar_url": "https://avatars.githubusercontent.com/u/9407960?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/driazati",
                "html_url": "https://github.com/driazati",
                "followers_url": "https://api.github.com/users/driazati/followers",
                "following_url": "https://api.github.com/users/driazati/following{/other_user}",
                "gists_url": "https://api.github.com/users/driazati/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/driazati/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/driazati/subscriptions",
                "organizations_url": "https://api.github.com/users/driazati/orgs",
                "repos_url": "https://api.github.com/users/driazati/repos",
                "events_url": "https://api.github.com/users/driazati/events{/privacy}",
                "received_events_url": "https://api.github.com/users/driazati/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-02-12T19:07:40Z",
        "updated_at": "2019-02-22T22:51:17Z",
        "closed_at": "2019-02-22T22:51:17Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "This is because `Tracer::addInputs` doesn't have the properly overloads. We should probably add one that corresponds to GenericList and GenericDict so people can use vecs/maps in custom ops.\r\n\r\nRepro: try making a custom op like this\r\n```\r\n#include <torch/csrc/jit/custom_operator.h>\r\n\r\ntorch::Tensor new_string_op(vector<string> input, torch::Tensor warp) {\r\n\r\n  torch::Tensor output = torch::from_blob(warp.ptr<float>(), /*sizes=*/{8, 8});\r\n  return output.clone();\r\n}\r\n\r\nstatic auto registry =\r\n  torch::jit::RegisterOperators(\"my_ops::new_string_op\", &new_string_op)\r\n```",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/17017/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/17017/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/16921",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/16921/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/16921/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/16921/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/16921",
        "id": 408451995,
        "node_id": "MDU6SXNzdWU0MDg0NTE5OTU=",
        "number": 16921,
        "title": "[JIT] Support keyword-only arguments in Torchscript",
        "user": {
            "login": "ailzhang",
            "id": 5248122,
            "node_id": "MDQ6VXNlcjUyNDgxMjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5248122?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ailzhang",
            "html_url": "https://github.com/ailzhang",
            "followers_url": "https://api.github.com/users/ailzhang/followers",
            "following_url": "https://api.github.com/users/ailzhang/following{/other_user}",
            "gists_url": "https://api.github.com/users/ailzhang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ailzhang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ailzhang/subscriptions",
            "organizations_url": "https://api.github.com/users/ailzhang/orgs",
            "repos_url": "https://api.github.com/users/ailzhang/repos",
            "events_url": "https://api.github.com/users/ailzhang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ailzhang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-02-09T17:32:28Z",
        "updated_at": "2019-02-21T23:28:31Z",
        "closed_at": "2019-02-21T23:28:31Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "Add support for keyword-only arguments in Torchscript and remove the hack introduced in autodiff from #16689 .\r\nExample: \r\n```\r\ndef compare(a, b, *, key=None):\r\n```\r\nPython specs: https://www.python.org/dev/peps/pep-3102/",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/16921/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/16921/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/16860",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/16860/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/16860/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/16860/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/16860",
        "id": 407908776,
        "node_id": "MDU6SXNzdWU0MDc5MDg3NzY=",
        "number": 16860,
        "title": "Not easy to use JIT from libtorch due to lack of explicit nvrtc dependency",
        "user": {
            "login": "ezyang",
            "id": 13564,
            "node_id": "MDQ6VXNlcjEzNTY0",
            "avatar_url": "https://avatars.githubusercontent.com/u/13564?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ezyang",
            "html_url": "https://github.com/ezyang",
            "followers_url": "https://api.github.com/users/ezyang/followers",
            "following_url": "https://api.github.com/users/ezyang/following{/other_user}",
            "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions",
            "organizations_url": "https://api.github.com/users/ezyang/orgs",
            "repos_url": "https://api.github.com/users/ezyang/repos",
            "events_url": "https://api.github.com/users/ezyang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ezyang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2019-02-07T21:38:04Z",
        "updated_at": "2019-02-22T21:53:21Z",
        "closed_at": "2019-02-22T21:53:21Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "Take a look at the output of ldd on `libtorch.so`:\r\n\r\n```\r\n(/home/ezyang/Dev/pytorch-tmp-env) [ezyang@devgpu005.ash6 ~/Dev/pytorch-tmp] ldd torch/lib/libtorch.so\r\n        linux-vdso.so.1 =>  (0x00007ffef81fe000)\r\n        libgomp.so.1 => /data/users/ezyang/pytorch-tmp-env/lib/libgomp.so.1 (0x00007f653e6f5000)\r\n        libpthread.so.0 => /lib64/libpthread.so.0 (0x00007f653e4c7000)\r\n        libnvToolsExt.so.1 => /usr/local/cuda/lib64/libnvToolsExt.so.1 (0x00007f653e2be000)\r\n        libdl.so.2 => /lib64/libdl.so.2 (0x00007f653e0ba000)\r\n        librt.so.1 => /lib64/librt.so.1 (0x00007f653deb1000)\r\n        libcaffe2.so => /data/users/ezyang/pytorch-tmp/torch/lib/libcaffe2.so (0x00007f653be13000)\r\n        libcaffe2_gpu.so => /data/users/ezyang/pytorch-tmp/torch/lib/libcaffe2_gpu.so (0x00007f652947b000)\r\n        libc10_cuda.so => /data/users/ezyang/pytorch-tmp/torch/lib/libc10_cuda.so (0x00007f65293ec000)\r\n        libc10.so => /data/users/ezyang/pytorch-tmp/torch/lib/libc10.so (0x00007f65293bc000)\r\n        libm.so.6 => /lib64/libm.so.6 (0x00007f65290ba000)\r\n        libstdc++.so.6 => /data/users/ezyang/pytorch-tmp-env/lib/libstdc++.so.6 (0x00007f6528d7f000)\r\n        libgcc_s.so.1 => /data/users/ezyang/pytorch-tmp-env/lib/libgcc_s.so.1 (0x00007f6528b6d000)\r\n        libc.so.6 => /lib64/libc.so.6 (0x00007f65287a0000)\r\n        /lib64/ld-linux-x86-64.so.2 (0x0000561fb9155000)\r\n        libmkl_intel_lp64.so => /data/users/ezyang/pytorch-tmp-env/lib/libmkl_intel_lp64.so (0x00007f6527cb2000)\r\n        libmkl_gnu_thread.so => /data/users/ezyang/pytorch-tmp-env/lib/libmkl_gnu_thread.so (0x00007f652659f000)\r\n        libmkl_core.so => /data/users/ezyang/pytorch-tmp-env/lib/libmkl_core.so (0x00007f6522595000)\r\n        libcudart.so.9.2 => /usr/local/cuda/lib64/libcudart.so.9.2 (0x00007f652232b000)\r\n        libcusparse.so.9.2 => /usr/local/cuda/lib64/libcusparse.so.9.2 (0x00007f651e010000)\r\n        libcurand.so.9.2 => /usr/local/cuda/lib64/libcurand.so.9.2 (0x00007f651a0d1000)\r\n        libcudnn.so.7 => /usr/local/cuda/lib64/libcudnn.so.7 (0x00007f6507aef000)\r\n        libcufft.so.9.2 => /usr/local/cuda/lib64/libcufft.so.9.2 (0x00007f6502495000)\r\n        libcublas.so.9.2 => /usr/local/cuda/lib64/libcublas.so.9.2 (0x00007f64fea61000)\r\n```\r\n\r\nNotice that `libcuda.so` and `libnvrtc.so` are conspicuously missing. Now take a look at the undefined symbols in this library:\r\n\r\n```\r\nreadelf --syms torch/lib/libtorch.so\r\n[snip]\r\n   912: 0000000000000000     0 NOTYPE  GLOBAL DEFAULT  UND nvrtcGetErrorString\r\n   913: 0000000000000000     0 NOTYPE  GLOBAL DEFAULT  UND nvrtcDestroyProgram\r\n   914: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND _ZN3c104cuda20setCurrentC\r\n   915: 0000000000000000     0 NOTYPE  GLOBAL DEFAULT  UND cuModuleUnload\r\n   916: 0000000000000000     0 NOTYPE  GLOBAL DEFAULT  UND cuCtxGetCurrent\r\n   917: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND _ZN2at4cuda26getCurrentDe\r\n   918: 0000000000000000     0 NOTYPE  GLOBAL DEFAULT  UND nvrtcVersion\r\n   919: 0000000000000000     0 NOTYPE  GLOBAL DEFAULT  UND nvrtcCreateProgram\r\n   920: 0000000000000000     0 NOTYPE  GLOBAL DEFAULT  UND nvrtcCompileProgram\r\n   921: 0000000000000000     0 NOTYPE  GLOBAL DEFAULT  UND nvrtcGetPTXSize\r\n   922: 0000000000000000     0 NOTYPE  GLOBAL DEFAULT  UND nvrtcGetPTX\r\n   923: 0000000000000000     0 NOTYPE  GLOBAL DEFAULT  UND cuModuleLoadData\r\n   924: 0000000000000000     0 NOTYPE  GLOBAL DEFAULT  UND cuModuleGetFunction\r\n   925: 0000000000000000     0 NOTYPE  GLOBAL DEFAULT  UND cuOccupancyMaxActiveBlock\r\n   926: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND _ZN3c104cuda20CUDACaching\r\n   927: 0000000000000000     0 NOTYPE  GLOBAL DEFAULT  UND nvrtcGetProgramLogSize\r\n   928: 0000000000000000     0 NOTYPE  GLOBAL DEFAULT  UND nvrtcGetProgramLog\r\n```\r\n\r\nWhat's going on?\r\n\r\nThis was prompted by discussion with @ebetica, where he was trying to use JIT from C++ API and he was encountering missing symbols from libcuda.so and libnvrtc.so\r\n\r\ncc @pjh5 @soumith ",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/16860/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/16860/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/16856",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/16856/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/16856/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/16856/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/16856",
        "id": 407903113,
        "node_id": "MDU6SXNzdWU0MDc5MDMxMTM=",
        "number": 16856,
        "title": "Type cannot be accurately recovered from this IValue for unordered_map",
        "user": {
            "login": "luisa-uber",
            "id": 41020509,
            "node_id": "MDQ6VXNlcjQxMDIwNTA5",
            "avatar_url": "https://avatars.githubusercontent.com/u/41020509?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/luisa-uber",
            "html_url": "https://github.com/luisa-uber",
            "followers_url": "https://api.github.com/users/luisa-uber/followers",
            "following_url": "https://api.github.com/users/luisa-uber/following{/other_user}",
            "gists_url": "https://api.github.com/users/luisa-uber/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/luisa-uber/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/luisa-uber/subscriptions",
            "organizations_url": "https://api.github.com/users/luisa-uber/orgs",
            "repos_url": "https://api.github.com/users/luisa-uber/repos",
            "events_url": "https://api.github.com/users/luisa-uber/events{/privacy}",
            "received_events_url": "https://api.github.com/users/luisa-uber/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "driazati",
            "id": 9407960,
            "node_id": "MDQ6VXNlcjk0MDc5NjA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9407960?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/driazati",
            "html_url": "https://github.com/driazati",
            "followers_url": "https://api.github.com/users/driazati/followers",
            "following_url": "https://api.github.com/users/driazati/following{/other_user}",
            "gists_url": "https://api.github.com/users/driazati/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/driazati/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/driazati/subscriptions",
            "organizations_url": "https://api.github.com/users/driazati/orgs",
            "repos_url": "https://api.github.com/users/driazati/repos",
            "events_url": "https://api.github.com/users/driazati/events{/privacy}",
            "received_events_url": "https://api.github.com/users/driazati/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "driazati",
                "id": 9407960,
                "node_id": "MDQ6VXNlcjk0MDc5NjA=",
                "avatar_url": "https://avatars.githubusercontent.com/u/9407960?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/driazati",
                "html_url": "https://github.com/driazati",
                "followers_url": "https://api.github.com/users/driazati/followers",
                "following_url": "https://api.github.com/users/driazati/following{/other_user}",
                "gists_url": "https://api.github.com/users/driazati/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/driazati/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/driazati/subscriptions",
                "organizations_url": "https://api.github.com/users/driazati/orgs",
                "repos_url": "https://api.github.com/users/driazati/repos",
                "events_url": "https://api.github.com/users/driazati/events{/privacy}",
                "received_events_url": "https://api.github.com/users/driazati/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2019-02-07T21:22:17Z",
        "updated_at": "2019-02-08T02:46:19Z",
        "closed_at": "2019-02-08T02:46:19Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\nHi, I'm trying to pass a dictionary to a jit model. It fails when checking that the input type matches the schema, in the `c10::isSubvalueOf` or `c10::incompleteInferTypeFrom` method. \r\n\r\nThe stack trace is as follows:\r\n```\r\nTerminate c10::Error(Type cannot be accurately recovered from this IValue. (incompleteInferTypeFrom at ../aten/src/ATen/core/type.cpp:149) frame #0: c10::Error::Error(c10::SourceLocation, std::string const&) + 0x45 ( in ../lib/third_party/libc10.so) frame #1: c10::incompleteInferTypeFrom(c10::IValue const&) + 0x3b4 ( in ../lib/third_party/libcaffe2.so) frame #2: c10::isSubvalueOf(c10::IValue const&, std::shared_ptr<c10::Type>) + 0x25 ( in ../lib/third_party/libcaffe2.so) frame #3: <unknown function> + 0x5b54d0 ( in ../lib/third_party/libcaffe2.so) frame #4: c10::isSubvalueOf(c10::IValue const&, std::shared_ptr<c10::Type>) + 0x15e ( in ../lib/third_party/libcaffe2.so) frame #5: torch::jit::script::Method::checkInputsAgainstSchema(std::vector<c10::IValue, std::allocator<c10::IValue> >&) + 0x268 ( in ../lib/libml_libtorch_estimator.so) frame #6: torch::jit::script::Module::forward(std::vector<c10::IValue, std::allocator<c10::IValue> >) + 0x71 ( in ../lib/libml_libtorch_estimator.so) frame #7: std::map<std::string, at::Tensor, std::less<std::string>, std::allocator<std::pair<std::string const, at::Tensor> > > ml::libtorch_estimator::infer<at::Tensor>(bool) + 0x228 ( in ../lib/libml_libtorch_estimator.so) frame #8: load_and_run_model(std::string) + 0x1643 ( in ./bin/inference) frame #9: main + 0x154 ( in ./bin/inference) frame #10: __libc_start_main + 0xf5 ( in /lib/x86_64-linux-gnu/libc.so.6) frame #11: ./bin/inference() [] ) {\r\n  libstdc++.so.6.0.19 5e6d6 eh_terminate.cc:42 __cxxabiv1::__terminate(void (*)())\r\n  libstdc++.so.6.0.19 5e703\r\n  libstdc++.so.6.0.19 5e922\r\n  libcaffe2.so 5b4dbb c10::incompleteInferTypeFrom(c10::IValue const&)\r\n  libcaffe2.so 5b5275 c10::isSubvalueOf(c10::IValue const&, std::shared_ptr<c10::Type>)\r\n  libcaffe2.so 5b54d0 c10::isSubvalueOf(c10::IValue const&, std::shared_ptr<c10::Type>)::{lambda(c10::IValue const&)#1}::operator()(c10::IValue const&) const\r\n  libcaffe2.so 5b53ae c10::isSubvalueOf(c10::IValue const&, std::shared_ptr<c10::Type>)\r\n  libml_libtorch_estimator.so 1c448 torch::jit::script::Method::checkInputsAgainstSchema(std::vector<c10::IValue, std::allocator<c10::IValue> >&)\r\n  libml_libtorch_estimator.so 141d1 torch::jit::script::Module::forward(std::vector<c10::IValue, std::allocator<c10::IValue> >)\r\n  libml_libtorch_estimator.so 10b48 std::map<std::string, at::Tensor, std::less<std::string>, std::allocator<std::pair<std::string const, at::Tensor> > > ml::libtorch_estimator::infer<at::Tensor>(bool)\r\n  inference 40c483 load_and_run_model(std::string)\r\n  inference 40e184 main\r\n  libc-2.19.so 21f45 libc-start.c:321 __libc_start_main\r\n  inference 40ad77 _start\r\n}\r\nterminate called after throwing an instance of 'c10::Error'\r\n  what():  Type cannot be accurately recovered from this IValue. (incompleteInferTypeFrom at ../aten/src/ATen/core/type.cpp:149)\r\nframe #0: c10::Error::Error(c10::SourceLocation, std::string const&) + 0x45 ( in ../lib/third_party/libc10.so)\r\nframe #1: c10::incompleteInferTypeFrom(c10::IValue const&) + 0x3b4 ( in ../lib/third_party/libcaffe2.so)\r\nframe #2: c10::isSubvalueOf(c10::IValue const&, std::shared_ptr<c10::Type>) + 0x25 ( in ../lib/third_party/libcaffe2.so)\r\nframe #3: <unknown function> + 0x5b54d0 ( in ../lib/third_party/libcaffe2.so)\r\nframe #4: c10::isSubvalueOf(c10::IValue const&, std::shared_ptr<c10::Type>) + 0x15e ( in ../lib/third_party/libcaffe2.so)\r\nframe #5: torch::jit::script::Method::checkInputsAgainstSchema(std::vector<c10::IValue, std::allocator<c10::IValue> >&) + 0x268 ( in ../lib/libml_libtorch_estimator.so)\r\nframe #6: torch::jit::script::Module::forward(std::vector<c10::IValue, std::allocator<c10::IValue> >) + 0x71 ( in ../lib/libml_libtorch_estimator.so)\r\nframe #7: std::map<std::string, at::Tensor, std::less<std::string>, std::allocator<std::pair<std::string const, at::Tensor> > > ml::libtorch_estimator::infer<at::Tensor>(bool) + 0x228 ( in ../lib/libml_libtorch_estimator.so)\r\nframe #8: load_and_run_model(std::string) + 0x1643 ( in ./bin/inference)\r\nframe #9: main + 0x154 ( in ./bin/inference)\r\nframe #10: __libc_start_main + 0xf5 ( in /lib/x86_64-linux-gnu/libc.so.6)\r\nframe #11: ./bin/inference() []\r\n```\r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior:\r\n\r\nThe python model's input is defined like so:\r\n```\r\n@torch.jit.script_method\r\n    def forward(self, list_of_frame_dictionaries):\r\n        # type: (List[Dict[str, Tensor]]) -> Tuple[Tensor, Tensor, Tensor, Tensor, Tensor] # noqa\r\n```\r\nThe C++ code to format the data:\r\nMethod param: `const std::vector<std::unordered_map<std::string, torch::Tensor>> input_data`\r\n```\r\n    std::vector<c10::IValue> input;\r\n    for (size_t pos = 0; pos < input_data.size(); ++pos)\r\n    {\r\n        c10::ivalue::DictUnorderedMap<c10::IValue, c10::IValue> ivalue_map;\r\n        for (auto x: input_data[pos])\r\n        {\r\n            c10::IValue key = x.first;\r\n            c10::IValue value = x.second.to(device_);\r\n            ivalue_map[key] = value;\r\n        }\r\n        c10::IValue map_as_ivalue = ivalue_map;\r\n        input.push_back(map_as_ivalue);\r\n    }\r\n    auto arg_index = schema.argumentIndexWithName(input_name);\r\n    std::vector<torch::jit::IValue> inputs_;\r\n    inputs_.at(arg_index.value()) = input;\r\n```\r\n\r\n<!-- If you have a code sample, error messages, stack traces, please provide it here as well -->\r\n\r\n## Expected behavior\r\n\r\n<!-- A clear and concise description of what you expected to happen. -->\r\n\r\n## Environment\r\n\r\nPlease copy and paste the output from our\r\n[environment collection script](https://raw.githubusercontent.com/pytorch/pytorch/master/torch/utils/collect_env.py)\r\n(or fill out the checklist below manually).\r\n\r\nYou can get the script and run it with:\r\n```\r\nwget https://raw.githubusercontent.com/pytorch/pytorch/master/torch/utils/collect_env.py\r\n# For security purposes, please check the contents of collect_env.py before running it.\r\npython collect_env.py\r\n```\r\n\r\nPyTorch version: 1.1.0a0+a3f600e_1_ge44ddff\r\nPython version: 2.7\r\n\r\n## Additional context\r\n\r\n<!-- Add any other context about the problem here. -->\r\n",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/16856/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/16856/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/16642",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/16642/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/16642/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/16642/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/16642",
        "id": 405522621,
        "node_id": "MDU6SXNzdWU0MDU1MjI2MjE=",
        "number": 16642,
        "title": "Jitted batch norm breaks for half inputs float module (non-jitted works ok)",
        "user": {
            "login": "ngimel",
            "id": 15841449,
            "node_id": "MDQ6VXNlcjE1ODQxNDQ5",
            "avatar_url": "https://avatars.githubusercontent.com/u/15841449?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ngimel",
            "html_url": "https://github.com/ngimel",
            "followers_url": "https://api.github.com/users/ngimel/followers",
            "following_url": "https://api.github.com/users/ngimel/following{/other_user}",
            "gists_url": "https://api.github.com/users/ngimel/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ngimel/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ngimel/subscriptions",
            "organizations_url": "https://api.github.com/users/ngimel/orgs",
            "repos_url": "https://api.github.com/users/ngimel/repos",
            "events_url": "https://api.github.com/users/ngimel/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ngimel/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "apaszke",
            "id": 4583066,
            "node_id": "MDQ6VXNlcjQ1ODMwNjY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4583066?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/apaszke",
            "html_url": "https://github.com/apaszke",
            "followers_url": "https://api.github.com/users/apaszke/followers",
            "following_url": "https://api.github.com/users/apaszke/following{/other_user}",
            "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions",
            "organizations_url": "https://api.github.com/users/apaszke/orgs",
            "repos_url": "https://api.github.com/users/apaszke/repos",
            "events_url": "https://api.github.com/users/apaszke/events{/privacy}",
            "received_events_url": "https://api.github.com/users/apaszke/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "apaszke",
                "id": 4583066,
                "node_id": "MDQ6VXNlcjQ1ODMwNjY=",
                "avatar_url": "https://avatars.githubusercontent.com/u/4583066?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/apaszke",
                "html_url": "https://github.com/apaszke",
                "followers_url": "https://api.github.com/users/apaszke/followers",
                "following_url": "https://api.github.com/users/apaszke/following{/other_user}",
                "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions",
                "organizations_url": "https://api.github.com/users/apaszke/orgs",
                "repos_url": "https://api.github.com/users/apaszke/repos",
                "events_url": "https://api.github.com/users/apaszke/events{/privacy}",
                "received_events_url": "https://api.github.com/users/apaszke/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 2,
        "created_at": "2019-02-01T02:13:36Z",
        "updated_at": "2019-02-11T03:39:27Z",
        "closed_at": "2019-02-11T03:39:27Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior:\r\n\r\n```\r\n\r\nimport torch\r\nimport torch.nn as nn\r\ndef test_fuse_batch_norm():\r\n\t\r\n    class ResLike(torch.jit.ScriptModule):\r\n        def __init__(self, optimize=True):\r\n            super(ResLike, self).__init__(optimize)\r\n            self.bn = nn.BatchNorm2d(16)\r\n    \r\n        @torch.jit.script_method\r\n        def forward(self, x, y):\r\n            return y + torch.relu(self.bn(x))\r\n    \r\n    model = ResLike().cuda()\r\n    model_noopt = ResLike(optimize=False).cuda()\r\n    model_noopt.load_state_dict(model.state_dict())\r\n    x = torch.randn(2, 16, 8, 8, device='cuda')\r\n    y = torch.randn(2, 16, 8, 8, device='cuda')\r\n    with torch.no_grad():\r\n        out = model(x, y)\r\n        graph = model.graph_for(x, y)\r\n        rep = str(graph)\r\n    \r\n        out_noopt = model_noopt(x, y)\r\n        rep_noopt = str(model_noopt.graph_for(x, y))\r\n        x = x.half()\r\n        y = y.half()\r\n        out_noopt = model_noopt(x,y)\r\n        print(\"no jit\", out_noopt.abs().max())\r\n        out_opt = model(x,y)\r\n        print(\"jit\", out_opt.abs().max())\r\n    \r\n\r\nif __name__ == \"__main__\":\r\n    test_fuse_batch_norm()\r\n```\r\n\r\noutputs\r\n\r\n```\r\nno jit tensor(5.0859, device='cuda:0', dtype=torch.float16)\r\nTraceback (most recent call last):\r\n  File \"fused_bn.py\", line 35, in <module>\r\n    test_fuse_batch_norm()\r\n  File \"fused_bn.py\", line 30, in test_fuse_batch_norm\r\n    out_opt = model(x,y)\r\n  File \"/workspace/ALL/pytorch_upstream/torch/nn/modules/module.py\", line 492, in __call__\r\n    result = self.forward(*input, **kwargs)\r\nRuntimeError: \r\nexpected scalar type Half but found Float (data<c10::Half> at /workspace/ALL/pytorch_upstream/aten/src/ATen/core/TensorMethods.h:1314)\r\nframe #0: c10::Error::Error(c10::SourceLocation, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) + 0x6a (0x7f9332568f2a in /workspace/ALL/pytorch_upstream/torch/lib/libc10.so)\r\nframe #1: <unknown function> + 0x1e7d826 (0x7f933770a826 in /workspace/ALL/pytorch_upstream/torch/lib/libcaffe2_gpu.so)\r\nframe #2: <unknown function> + 0x2104fe9 (0x7f9337991fe9 in /workspace/ALL/pytorch_upstream/torch/lib/libcaffe2_gpu.so)\r\nframe #3: std::tuple<at::Tensor, at::Tensor> at::native::batch_norm_update_stats_cuda_template<c10::Half, int>(at::Tensor const&, at::Tensor const&, at::Tensor const&, double) + 0x1af (0x7f93379a046f in /workspace/ALL/pytorch_upstream/torch/lib/libcaffe2_gpu.so)\r\nframe #4: at::native::batch_norm_update_stats_cuda(at::Tensor const&, at::Tensor const&, at::Tensor const&, double) + 0x4e5 (0x7f9337992e65 in /workspace/ALL/pytorch_upstream/torch/lib/libcaffe2_gpu.so)\r\nframe #5: at::CUDAHalfType::batch_norm_update_stats(at::Tensor const&, at::Tensor const&, at::Tensor const&, double) const + 0x9d (0x7f933812777d in /workspace/ALL/pytorch_upstream/torch/lib/libcaffe2_gpu.so)\r\nframe #6: torch::autograd::VariableType::batch_norm_update_stats(at::Tensor const&, at::Tensor const&, at::Tensor const&, double) const + 0x271 (0x7f9331a2fca1 in /workspace/ALL/pytorch_upstream/torch/lib/libtorch.so.1)\r\nframe #7: <unknown function> + 0x5400fe (0x7f9331c4c0fe in /workspace/ALL/pytorch_upstream/torch/lib/libtorch.so.1)\r\nframe #8: <unknown function> + 0x62f1ed (0x7f9331d3b1ed in /workspace/ALL/pytorch_upstream/torch/lib/libtorch.so.1)\r\nframe #9: torch::jit::InterpreterState::run(std::vector<c10::IValue, std::allocator<c10::IValue> >&) + 0x31 (0x7f9331d36451 in /workspace/ALL/pytorch_upstream/torch/lib/libtorch.so.1)\r\nframe #10: torch::jit::GraphExecutor::run(std::vector<c10::IValue, std::allocator<c10::IValue> >&) + 0x1da (0x7f9331d17cfa in /workspace/ALL/pytorch_upstream/torch/lib/libtorch.so.1)\r\nframe #11: <unknown function> + 0x3dcbfd (0x7f93496debfd in /workspace/ALL/pytorch_upstream/torch/lib/libtorch_python.so)\r\nframe #12: <unknown function> + 0x3b8c86 (0x7f93496bac86 in /workspace/ALL/pytorch_upstream/torch/lib/libtorch_python.so)\r\nframe #13: <unknown function> + 0x10ad8d (0x7f934940cd8d in /workspace/ALL/pytorch_upstream/torch/lib/libtorch_python.so)\r\n<omitting python frames>\r\nframe #39: __libc_start_main + 0xf0 (0x7f935acf1830 in /lib/x86_64-linux-gnu/libc.so.6)\r\n:\r\noperation failed in interpreter:\r\n\r\n        def batch_norm(input : Tensor, running_mean : Optional[Tensor], running_var : Optional[Tensor], training : bool, momentum : float, eps : float) -> Tensor:\r\n            if training:\r\n                norm_mean, norm_var = torch.batch_norm_update_stats(input, running_mean, running_var, momentum)\r\n                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ <--- HERE\r\n            else:\r\n                norm_mean = torch._unwrap_optional(running_mean)\r\n                norm_var = torch._unwrap_optional(running_var)\r\n            norm_mean = torch._ncf_unsqueeze(norm_mean, input.dim())\r\n            norm_var = torch._ncf_unsqueeze(norm_var, input.dim())\r\n            norm_invstd = 1 / (eps + torch.sqrt(norm_var))\r\n            return ((input - norm_mean) * norm_invstd)\r\n```\r\n\r\n## Expected behavior\r\n\r\nSimilar behavior for jitted and non-jitted cases\r\n\r\n## Environment\r\n\r\n - PyTorch Version (recent master):\r\n - OS (e.g., Linux):\r\n - How you installed PyTorch (source):\r\n\r\nCaused by https://github.com/pytorch/pytorch/pull/15897. Having bn model in float for half inputs is a hack that is used to trigger cudnn batch norm, so it is used pretty much for all fp16 convnet workloads. \r\ncc @apaszke \r\n@slayton58 @mruberry",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/16642/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/16642/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/16591",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/16591/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/16591/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/16591/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/16591",
        "id": 405059972,
        "node_id": "MDU6SXNzdWU0MDUwNTk5NzI=",
        "number": 16591,
        "title": "[JIT] Sometimes rewrite argument name",
        "user": {
            "login": "sidazhang",
            "id": 3519115,
            "node_id": "MDQ6VXNlcjM1MTkxMTU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3519115?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sidazhang",
            "html_url": "https://github.com/sidazhang",
            "followers_url": "https://api.github.com/users/sidazhang/followers",
            "following_url": "https://api.github.com/users/sidazhang/following{/other_user}",
            "gists_url": "https://api.github.com/users/sidazhang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sidazhang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sidazhang/subscriptions",
            "organizations_url": "https://api.github.com/users/sidazhang/orgs",
            "repos_url": "https://api.github.com/users/sidazhang/repos",
            "events_url": "https://api.github.com/users/sidazhang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sidazhang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 553773019,
                "node_id": "MDU6TGFiZWw1NTM3NzMwMTk=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/needs%20reproduction",
                "name": "needs reproduction",
                "color": "cc9fe0",
                "default": false,
                "description": "Someone else needs to try reproducing the issue given the instructions. No action needed from user"
            },
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "zdevito",
            "id": 370202,
            "node_id": "MDQ6VXNlcjM3MDIwMg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/370202?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zdevito",
            "html_url": "https://github.com/zdevito",
            "followers_url": "https://api.github.com/users/zdevito/followers",
            "following_url": "https://api.github.com/users/zdevito/following{/other_user}",
            "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions",
            "organizations_url": "https://api.github.com/users/zdevito/orgs",
            "repos_url": "https://api.github.com/users/zdevito/repos",
            "events_url": "https://api.github.com/users/zdevito/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zdevito/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "zdevito",
                "id": 370202,
                "node_id": "MDQ6VXNlcjM3MDIwMg==",
                "avatar_url": "https://avatars.githubusercontent.com/u/370202?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/zdevito",
                "html_url": "https://github.com/zdevito",
                "followers_url": "https://api.github.com/users/zdevito/followers",
                "following_url": "https://api.github.com/users/zdevito/following{/other_user}",
                "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions",
                "organizations_url": "https://api.github.com/users/zdevito/orgs",
                "repos_url": "https://api.github.com/users/zdevito/repos",
                "events_url": "https://api.github.com/users/zdevito/events{/privacy}",
                "received_events_url": "https://api.github.com/users/zdevito/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 2,
        "created_at": "2019-01-31T03:04:50Z",
        "updated_at": "2019-02-06T00:42:42Z",
        "closed_at": "2019-02-05T20:52:52Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\nSometimes JIT will rewrite the argument name. For example, if your argument is `input_tensor`. JIT can sometimes rewrite the argument name to `input_tensor_2`\r\n\r\n## To Reproduce\r\n\r\nI am unable to provide repo yet. Please mark as waiting for repo. I am creating this ticket just to track the issue for when I can provide repo",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/16591/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/16591/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/16367",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/16367/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/16367/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/16367/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/16367",
        "id": 403207737,
        "node_id": "MDU6SXNzdWU0MDMyMDc3Mzc=",
        "number": 16367,
        "title": "[CPP] Support CPP <> Python serialization",
        "user": {
            "login": "sidazhang",
            "id": 3519115,
            "node_id": "MDQ6VXNlcjM1MTkxMTU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3519115?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sidazhang",
            "html_url": "https://github.com/sidazhang",
            "followers_url": "https://api.github.com/users/sidazhang/followers",
            "following_url": "https://api.github.com/users/sidazhang/following{/other_user}",
            "gists_url": "https://api.github.com/users/sidazhang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sidazhang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sidazhang/subscriptions",
            "organizations_url": "https://api.github.com/users/sidazhang/orgs",
            "repos_url": "https://api.github.com/users/sidazhang/repos",
            "events_url": "https://api.github.com/users/sidazhang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sidazhang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 917150434,
                "node_id": "MDU6TGFiZWw5MTcxNTA0MzQ=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20cpp",
                "name": "module: cpp",
                "color": "f7e101",
                "default": false,
                "description": "Related to C++ API"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "zdevito",
            "id": 370202,
            "node_id": "MDQ6VXNlcjM3MDIwMg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/370202?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zdevito",
            "html_url": "https://github.com/zdevito",
            "followers_url": "https://api.github.com/users/zdevito/followers",
            "following_url": "https://api.github.com/users/zdevito/following{/other_user}",
            "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions",
            "organizations_url": "https://api.github.com/users/zdevito/orgs",
            "repos_url": "https://api.github.com/users/zdevito/repos",
            "events_url": "https://api.github.com/users/zdevito/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zdevito/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "zdevito",
                "id": 370202,
                "node_id": "MDQ6VXNlcjM3MDIwMg==",
                "avatar_url": "https://avatars.githubusercontent.com/u/370202?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/zdevito",
                "html_url": "https://github.com/zdevito",
                "followers_url": "https://api.github.com/users/zdevito/followers",
                "following_url": "https://api.github.com/users/zdevito/following{/other_user}",
                "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions",
                "organizations_url": "https://api.github.com/users/zdevito/orgs",
                "repos_url": "https://api.github.com/users/zdevito/repos",
                "events_url": "https://api.github.com/users/zdevito/events{/privacy}",
                "received_events_url": "https://api.github.com/users/zdevito/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 8,
        "created_at": "2019-01-25T15:36:15Z",
        "updated_at": "2019-03-28T09:04:31Z",
        "closed_at": "2019-03-19T01:20:13Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## \ud83d\ude80 Feature\r\nOfficially support the ability to serialize a tensor (or any JIT::IValue) in CPP or Python and then load it in CPP / Python.\r\n\r\n## Motivation\r\n\r\nThis is very useful for debugging. For example, \r\n\r\n1. I want to use python to generate input data and load it in CPP (which is my production envrionment) for testing and debugging.\r\n2. I want to use CPP to dump model outputs and load it in Python so that I can use jupyter notebook / matplotlib for visualization and debugging.\r\n3. I want to dump inputs from CPP and load it in Python to compare to with the Python input. To make sure that the data preprocessing is the same between CPP and Python (because I serve the model in CPP but I train the model in Python)\r\n\r\nTraditionally, we do this kind of debugging purely in python and we serialize using pickle. But with C++, we need a serialization format that works in both CPP and PyTorch\r\n",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/16367/reactions",
            "total_count": 5,
            "+1": 5,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/16367/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/16326",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/16326/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/16326/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/16326/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/16326",
        "id": 402843586,
        "node_id": "MDU6SXNzdWU0MDI4NDM1ODY=",
        "number": 16326,
        "title": "[JIT] C++ frontend is unable to support std::vector<std::vector<Tensor>>",
        "user": {
            "login": "sidazhang",
            "id": 3519115,
            "node_id": "MDQ6VXNlcjM1MTkxMTU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3519115?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sidazhang",
            "html_url": "https://github.com/sidazhang",
            "followers_url": "https://api.github.com/users/sidazhang/followers",
            "following_url": "https://api.github.com/users/sidazhang/following{/other_user}",
            "gists_url": "https://api.github.com/users/sidazhang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sidazhang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sidazhang/subscriptions",
            "organizations_url": "https://api.github.com/users/sidazhang/orgs",
            "repos_url": "https://api.github.com/users/sidazhang/repos",
            "events_url": "https://api.github.com/users/sidazhang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sidazhang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "eellison",
            "id": 11477974,
            "node_id": "MDQ6VXNlcjExNDc3OTc0",
            "avatar_url": "https://avatars.githubusercontent.com/u/11477974?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eellison",
            "html_url": "https://github.com/eellison",
            "followers_url": "https://api.github.com/users/eellison/followers",
            "following_url": "https://api.github.com/users/eellison/following{/other_user}",
            "gists_url": "https://api.github.com/users/eellison/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eellison/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eellison/subscriptions",
            "organizations_url": "https://api.github.com/users/eellison/orgs",
            "repos_url": "https://api.github.com/users/eellison/repos",
            "events_url": "https://api.github.com/users/eellison/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eellison/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "eellison",
                "id": 11477974,
                "node_id": "MDQ6VXNlcjExNDc3OTc0",
                "avatar_url": "https://avatars.githubusercontent.com/u/11477974?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/eellison",
                "html_url": "https://github.com/eellison",
                "followers_url": "https://api.github.com/users/eellison/followers",
                "following_url": "https://api.github.com/users/eellison/following{/other_user}",
                "gists_url": "https://api.github.com/users/eellison/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/eellison/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eellison/subscriptions",
                "organizations_url": "https://api.github.com/users/eellison/orgs",
                "repos_url": "https://api.github.com/users/eellison/repos",
                "events_url": "https://api.github.com/users/eellison/events{/privacy}",
                "received_events_url": "https://api.github.com/users/eellison/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 2,
        "created_at": "2019-01-24T18:41:33Z",
        "updated_at": "2019-01-30T22:22:21Z",
        "closed_at": "2019-01-30T22:22:21Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\nC++ frontend is unable to support std::vector<std::vector<Tensor>>\r\n\r\n## To Reproduce\r\nPython Code\r\n\r\n```\r\nimport torch\r\nclass Model(torch.jit.ScriptModule):\r\n    def __init__(self):\r\n        super(Model, self).__init__()\r\n\r\n    @torch.jit.script_method\r\n    def forward(self, x_list_list):\r\n        # type: (List[List[Tensor]]) -> Tensor\r\n\r\n        return x_list_list[0][0]\r\n\r\n\r\nm = Model()\r\nm.save(\"./model.pt\")\r\n```\r\n\r\nCPP code\r\n```\r\n    std::string path = \"./model.pt\";\r\n    std::shared_ptr<torch::jit::script::Module> module = torch::jit::load(path);\r\n\r\n    std::vector<torch::Tensor> one_frame = {\r\n            torch::rand({4, 4}),\r\n            torch::rand({4, 4}),\r\n            torch::rand({4, 4}),\r\n            torch::rand({4, 4}),\r\n\r\n    };\r\n\r\n    std::vector<torch::jit::IValue> frames;\r\n    frames.push_back(one_frame);\r\n    frames.push_back(one_frame);\r\n    std::vector<torch::jit::IValue> inputs;\r\n    inputs.push_back(frames);\r\n\r\n    auto result = module->forward(inputs);\r\n    log_info(\"finished inference\")\r\n\r\n```\r\nError Message\r\n\r\n```\r\nunknown file: Failure\r\nC++ exception with description \"Type cannot be accurately recovered from this IValue. (incompleteInferTypeFrom at aten/src/ATen/core/type.cpp:149)\r\nframe #0: c10::Error::Error(c10::SourceLocation, std::string const&) + 0x45 (0x7fccd18b6dd5 in /home/sidney/bazel/av/bin/tests/../../lib/third_party/libc10.so)\r\nframe #1: c10::incompleteInferTypeFrom(c10::IValue const&) + 0x3b4 (0x7fccbc189ac4 in /home/sidney/bazel/av/bin/tests/../../lib/third_party/libcaffe2.so)\r\nframe #2: torch::jit::script::Method::checkInputsAgainstSchema(std::vector<c10::IValue, std::allocator<c10::IValue> >&) + 0xa8 (0x40f448 in ./bin/tests/intentnet_test)\r\n\r\n```\r\n\r\n\r\n## Some preliminary debugging\r\nIn particular, this is the offending function\r\n\r\n```\r\n// why incomplete? You cannot completely recover a type from\r\n// an IValue, List[List[int]] and List[List[Tensor]] will both\r\n// become ivalue.isGenericList() and cannot be recovered.\r\n// The only appropriate place to use this is where you know that\r\n// you are only dealing with a subset of objects where you can recover\r\n// the type, like in the tracer.\r\nTypePtr incompleteInferTypeFrom(const IValue& value) {\r\n  if (value.isTensor()) {\r\n    return CompleteTensorType::create(value.toTensor());\r\n  } else if (value.isDouble()) {\r\n    return FloatType::get();\r\n  } else if (value.isInt()) {\r\n    return IntType::get();\r\n  } else if (value.isBool()) {\r\n    return BoolType::get();\r\n  } else if (value.isString()) {\r\n    return StringType::get();\r\n  } else if (value.isIntList()) {\r\n    return ListType::ofInts();\r\n  } else if (value.isTensorList()) {\r\n    return ListType::ofTensors();\r\n  } else if (value.isBoolList()) {\r\n    return ListType::ofBools();\r\n  } else if (value.isDoubleList()) {\r\n    return ListType::ofFloats();\r\n  } else if (value.isTuple()) {\r\n    return TupleType::create(fmap(value.toTuple()->elements(), incompleteInferTypeFrom));\r\n  } else if (value.isDevice()) {\r\n    return DeviceObjType::get();\r\n  }\r\n  AT_ERROR(\"Type cannot be accurately recovered from this IValue.\");\r\n}\r\n```\r\n\r\n\r\nthis is the call site of the offending function. It does not seem to check generic types. Like `ivalue.isGenericList()`. Instead, it goes straight to `incompleteInferType`\r\n\r\n```\r\n\r\n    for (size_t pos = 0; pos < schema.arguments().size(); ++pos) {\r\n      const auto& argument = schema.arguments()[pos];\r\n      if (pos < inputs.size()) {\r\n        // XXX - this fails to handle generic aggregates\r\n        // and should be replaced with a function isSubvalueOf(ivalue, type)\r\n        // That asks if the specific value is a valid instance of type.\r\n        const TypePtr inputType = incompleteInferTypeFrom(inputs[pos]);\r\n        AT_CHECK(\r\n            inputType->isSubtypeOf(argument.type()),\r\n            \"Expected value of type \",\r\n            *argument.type(),\r\n            \" for argument '\",\r\n            argument.name(),\r\n            \"' in position \",\r\n            pos,\r\n            \", but instead got value of type \",\r\n            *inputType,\r\n            \". Declaration: \",\r\n            schema);\r\n      } else if (argument.default_value()) {\r\n        inputs.push_back(*argument.default_value());\r\n      } else {\r\n        AT_ERROR(\r\n            schema.name(),\r\n            \"() is missing value for argument '\",\r\n            argument.name(),\r\n            \"'. Declaration: \",\r\n            schema);\r\n      }\r\n    }\r\n\r\n```\r\n\r\n## Environment\r\nPytorch version: 4edc8273eb223785929c0017caf15c101964d480\r\n\r\n",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/16326/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/16326/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/16285",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/16285/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/16285/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/16285/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/16285",
        "id": 402470640,
        "node_id": "MDU6SXNzdWU0MDI0NzA2NDA=",
        "number": 16285,
        "title": "[JIT] ScriptModule is not able to take optimize=False as a flag when you have PYTORCH_JIT=0",
        "user": {
            "login": "sidazhang",
            "id": 3519115,
            "node_id": "MDQ6VXNlcjM1MTkxMTU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3519115?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sidazhang",
            "html_url": "https://github.com/sidazhang",
            "followers_url": "https://api.github.com/users/sidazhang/followers",
            "following_url": "https://api.github.com/users/sidazhang/following{/other_user}",
            "gists_url": "https://api.github.com/users/sidazhang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sidazhang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sidazhang/subscriptions",
            "organizations_url": "https://api.github.com/users/sidazhang/orgs",
            "repos_url": "https://api.github.com/users/sidazhang/repos",
            "events_url": "https://api.github.com/users/sidazhang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sidazhang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "driazati",
            "id": 9407960,
            "node_id": "MDQ6VXNlcjk0MDc5NjA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9407960?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/driazati",
            "html_url": "https://github.com/driazati",
            "followers_url": "https://api.github.com/users/driazati/followers",
            "following_url": "https://api.github.com/users/driazati/following{/other_user}",
            "gists_url": "https://api.github.com/users/driazati/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/driazati/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/driazati/subscriptions",
            "organizations_url": "https://api.github.com/users/driazati/orgs",
            "repos_url": "https://api.github.com/users/driazati/repos",
            "events_url": "https://api.github.com/users/driazati/events{/privacy}",
            "received_events_url": "https://api.github.com/users/driazati/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "driazati",
                "id": 9407960,
                "node_id": "MDQ6VXNlcjk0MDc5NjA=",
                "avatar_url": "https://avatars.githubusercontent.com/u/9407960?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/driazati",
                "html_url": "https://github.com/driazati",
                "followers_url": "https://api.github.com/users/driazati/followers",
                "following_url": "https://api.github.com/users/driazati/following{/other_user}",
                "gists_url": "https://api.github.com/users/driazati/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/driazati/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/driazati/subscriptions",
                "organizations_url": "https://api.github.com/users/driazati/orgs",
                "repos_url": "https://api.github.com/users/driazati/repos",
                "events_url": "https://api.github.com/users/driazati/events{/privacy}",
                "received_events_url": "https://api.github.com/users/driazati/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-01-23T23:09:16Z",
        "updated_at": "2019-01-31T20:30:38Z",
        "closed_at": "2019-01-31T20:30:38Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\nScriptModule is not able to take optimize=False as a flag when you have PYTORCH_JIT=0\r\n\r\n\r\n## To Reproduce\r\n```\r\nimport torch\r\nclass ConstantTensor(torch.jit.ScriptModule):\r\n    def __init__(self):\r\n        super(ConstantTensor, self).__init__(optimize=False)\r\n```\r\n\r\n\r\nThis breaks as soon as I use PYTORCH_JIT=0. It should just ignore the kwarg. (rather than breaking)",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/16285/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/16285/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/16284",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/16284/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/16284/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/16284/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/16284",
        "id": 402470063,
        "node_id": "MDU6SXNzdWU0MDI0NzAwNjM=",
        "number": 16284,
        "title": "[JIT] Improve error messaging for using a tensor attribute in ScriptModule",
        "user": {
            "login": "sidazhang",
            "id": 3519115,
            "node_id": "MDQ6VXNlcjM1MTkxMTU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3519115?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sidazhang",
            "html_url": "https://github.com/sidazhang",
            "followers_url": "https://api.github.com/users/sidazhang/followers",
            "following_url": "https://api.github.com/users/sidazhang/following{/other_user}",
            "gists_url": "https://api.github.com/users/sidazhang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sidazhang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sidazhang/subscriptions",
            "organizations_url": "https://api.github.com/users/sidazhang/orgs",
            "repos_url": "https://api.github.com/users/sidazhang/repos",
            "events_url": "https://api.github.com/users/sidazhang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sidazhang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "driazati",
            "id": 9407960,
            "node_id": "MDQ6VXNlcjk0MDc5NjA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9407960?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/driazati",
            "html_url": "https://github.com/driazati",
            "followers_url": "https://api.github.com/users/driazati/followers",
            "following_url": "https://api.github.com/users/driazati/following{/other_user}",
            "gists_url": "https://api.github.com/users/driazati/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/driazati/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/driazati/subscriptions",
            "organizations_url": "https://api.github.com/users/driazati/orgs",
            "repos_url": "https://api.github.com/users/driazati/repos",
            "events_url": "https://api.github.com/users/driazati/events{/privacy}",
            "received_events_url": "https://api.github.com/users/driazati/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "driazati",
                "id": 9407960,
                "node_id": "MDQ6VXNlcjk0MDc5NjA=",
                "avatar_url": "https://avatars.githubusercontent.com/u/9407960?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/driazati",
                "html_url": "https://github.com/driazati",
                "followers_url": "https://api.github.com/users/driazati/followers",
                "following_url": "https://api.github.com/users/driazati/following{/other_user}",
                "gists_url": "https://api.github.com/users/driazati/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/driazati/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/driazati/subscriptions",
                "organizations_url": "https://api.github.com/users/driazati/orgs",
                "repos_url": "https://api.github.com/users/driazati/repos",
                "events_url": "https://api.github.com/users/driazati/events{/privacy}",
                "received_events_url": "https://api.github.com/users/driazati/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2019-01-23T23:07:07Z",
        "updated_at": "2019-02-07T20:29:58Z",
        "closed_at": "2019-02-07T20:29:58Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\nScriptModule is not able to have a tensor as an attribute\r\n\r\n## To Reproduce\r\nNot Constant\r\n```\r\nimport torch\r\nclass ConstantTensor(torch.jit.ScriptModule):\r\n    def __init__(self):\r\n        self.cx = torch.ones(100, 100, dtype=torch.float, device='cuda')\r\n\r\n    @torch.jit.script_method\r\n    def forward(self, x):\r\n        return x + self.cx\r\n\r\n\r\nc = ConstantTensor()\r\nprint c.graph\r\n\r\n```\r\n\r\n\r\n```\r\nattribute 'cx' of type 'Tensor' is not usable in a script method (did you forget to add it __constants__?):\r\n```\r\n\r\nConstant\r\n```\r\nimport torch\r\nclass ConstantTensor(torch.jit.ScriptModule):\r\n    __constants__ = ['cx']\r\n    def __init__(self):\r\n        self.cx = torch.ones(100, 100, dtype=torch.float, device='cuda')\r\n\r\n    @torch.jit.script_method\r\n    def forward(self, x):\r\n        return x + self.cx\r\n\r\n\r\nc = ConstantTensor()\r\nprint c.graph\r\n```\r\n\r\n```\r\nTypeError: 'Tensor' object for attribute 'cx' is not a valid constant.\r\nValid constants are:\r\n  1. a nn.ModuleList\r\n  2. a value of type {bool, float, int, str, NoneType, function, device, layout, dtype}\r\n  3. a list or tuple of (2)\r\n\r\n\r\n```\r\n\r\n\r\nUPDATE:\r\n\r\nSeems like the right way to use a tensor attribute is to declare it to be a buffer\r\n\r\n`self.register_buffer('cx', torch.ones(100, 100, dtype=torch.float, device='cuda'))`\r\n\r\nPlease improve the error message when a user tries to use a tensor as an attribute\r\n\r\n",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/16284/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/16284/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/16233",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/16233/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/16233/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/16233/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/16233",
        "id": 401915983,
        "node_id": "MDU6SXNzdWU0MDE5MTU5ODM=",
        "number": 16233,
        "title": "[jit] Support named tuple return from operators",
        "user": {
            "login": "ezyang",
            "id": 13564,
            "node_id": "MDQ6VXNlcjEzNTY0",
            "avatar_url": "https://avatars.githubusercontent.com/u/13564?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ezyang",
            "html_url": "https://github.com/ezyang",
            "followers_url": "https://api.github.com/users/ezyang/followers",
            "following_url": "https://api.github.com/users/ezyang/following{/other_user}",
            "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions",
            "organizations_url": "https://api.github.com/users/ezyang/orgs",
            "repos_url": "https://api.github.com/users/ezyang/repos",
            "events_url": "https://api.github.com/users/ezyang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ezyang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2019-01-22T19:23:33Z",
        "updated_at": "2019-02-11T02:17:24Z",
        "closed_at": "2019-02-11T02:17:24Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "#15429 makes the following syntax valid in PyTorch programs:\r\n\r\n```\r\nret = a.svd()\r\nU = ret.U  # previously, only ret[0] was supported\r\n```\r\n\r\nThis syntax is not currently understood by TorchScript. It should be handled.\r\n\r\ncc @zasdfgbnm (not saying you have to do this, but just to let you know :)",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/16233/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/16233/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/15815",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/15815/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/15815/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/15815/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/15815",
        "id": 396724570,
        "node_id": "MDU6SXNzdWUzOTY3MjQ1NzA=",
        "number": 15815,
        "title": "[JIT] Support Meta programming on If self.training to conditionally NOT compile training only code",
        "user": {
            "login": "sidazhang",
            "id": 3519115,
            "node_id": "MDQ6VXNlcjM1MTkxMTU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3519115?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sidazhang",
            "html_url": "https://github.com/sidazhang",
            "followers_url": "https://api.github.com/users/sidazhang/followers",
            "following_url": "https://api.github.com/users/sidazhang/following{/other_user}",
            "gists_url": "https://api.github.com/users/sidazhang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sidazhang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sidazhang/subscriptions",
            "organizations_url": "https://api.github.com/users/sidazhang/orgs",
            "repos_url": "https://api.github.com/users/sidazhang/repos",
            "events_url": "https://api.github.com/users/sidazhang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sidazhang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "driazati",
            "id": 9407960,
            "node_id": "MDQ6VXNlcjk0MDc5NjA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9407960?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/driazati",
            "html_url": "https://github.com/driazati",
            "followers_url": "https://api.github.com/users/driazati/followers",
            "following_url": "https://api.github.com/users/driazati/following{/other_user}",
            "gists_url": "https://api.github.com/users/driazati/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/driazati/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/driazati/subscriptions",
            "organizations_url": "https://api.github.com/users/driazati/orgs",
            "repos_url": "https://api.github.com/users/driazati/repos",
            "events_url": "https://api.github.com/users/driazati/events{/privacy}",
            "received_events_url": "https://api.github.com/users/driazati/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "driazati",
                "id": 9407960,
                "node_id": "MDQ6VXNlcjk0MDc5NjA=",
                "avatar_url": "https://avatars.githubusercontent.com/u/9407960?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/driazati",
                "html_url": "https://github.com/driazati",
                "followers_url": "https://api.github.com/users/driazati/followers",
                "following_url": "https://api.github.com/users/driazati/following{/other_user}",
                "gists_url": "https://api.github.com/users/driazati/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/driazati/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/driazati/subscriptions",
                "organizations_url": "https://api.github.com/users/driazati/orgs",
                "repos_url": "https://api.github.com/users/driazati/repos",
                "events_url": "https://api.github.com/users/driazati/events{/privacy}",
                "received_events_url": "https://api.github.com/users/driazati/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 6,
        "created_at": "2019-01-08T02:22:36Z",
        "updated_at": "2019-02-02T00:47:34Z",
        "closed_at": "2019-02-02T00:47:34Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Follow up on pull request #14533\r\n\r\n## \ud83d\ude80 Feature\r\nSupport metaprogramming for `if self.training`. Cos many many models have different training code vs inference code.\r\n\r\n## Example\r\n\r\n ```\r\nclass MyJITModule(torch.jit.ScriptModule):\r\n     def __init__(self):\r\n         super(MyJITModule, self).__init__()\r\n         self.lnorm = nn.LayerNorm([10, 10, 10])\r\n\r\n     @torch.jit.script_method\r\n     def forward(self, x):\r\n         if self.training:\r\n             self.training_code_only(x)\r\n         return x\r\n\r\n     def training_code_only(self, x):\r\n         # do some torchscript incompatible logic\r\n         arr = [1,2,3]\r\n         for i, k in enumerate(arr):\r\n             x[k] += x[k]\r\n\r\n         return self.lnorm(x)\r\n\r\n\r\n print MyJITModule().graph\r\n MyJITModule().save(\"./conditional.pt\")\r\n\r\ngraph(%x : Tensor\r\n      %1 : Tensor) {\r\n  %2 : bool = prim::Bool(%1)\r\n   = prim::If(%2)\r\n    block0() {\r\n      %3 : () = ^training_code_only()(%x)\r\n      -> ()\r\n    }\r\n    block1() {\r\n      -> ()\r\n    }\r\n  return (%x);\r\n}\r\n\r\nRuntimeError:\r\ncould not export python function call training_code_only. Remove calls to python functions before export.:\r\n@torch.jit.script_method\r\ndef forward(self, x):\r\n    if self.training:\r\n        self.training_code_only(x)\r\n        ~~~~~~~~~~~~~ <--- HERE\r\n    return x\r\n\r\n```\r\n\r\n## Pitch\r\n\r\nIf we support metaprogramming, the most obvious use case of metaprogramming is the separate training code from inference code. Hence, we should be able to support this.\r\n\r\n\r\n## Alternatives\r\n\r\nOr maybe you can suggest a workaround?",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/15815/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/15815/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/15768",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/15768/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/15768/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/15768/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/15768",
        "id": 396233223,
        "node_id": "MDU6SXNzdWUzOTYyMzMyMjM=",
        "number": 15768,
        "title": "[JIT] 1 // 0 in script does not raise error",
        "user": {
            "login": "qbx2",
            "id": 5977817,
            "node_id": "MDQ6VXNlcjU5Nzc4MTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5977817?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/qbx2",
            "html_url": "https://github.com/qbx2",
            "followers_url": "https://api.github.com/users/qbx2/followers",
            "following_url": "https://api.github.com/users/qbx2/following{/other_user}",
            "gists_url": "https://api.github.com/users/qbx2/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/qbx2/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/qbx2/subscriptions",
            "organizations_url": "https://api.github.com/users/qbx2/orgs",
            "repos_url": "https://api.github.com/users/qbx2/repos",
            "events_url": "https://api.github.com/users/qbx2/events{/privacy}",
            "received_events_url": "https://api.github.com/users/qbx2/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-01-06T06:43:06Z",
        "updated_at": "2019-01-08T21:45:46Z",
        "closed_at": "2019-01-08T21:45:46Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\n`1 // 0` in script does not raise error.\r\n\r\n## To Reproduce\r\n\r\n```python\r\n@torch.jit.script\r\ndef test():\r\n    return 1 // 0\r\n\r\n\r\nprint(test())\r\n```\r\n\r\nIt outputs\r\n```\r\n$ python test_jit.py\r\n-9223372036854775808\r\n```\r\n\r\n## Expected behavior\r\n\r\nExpected to raise some error like ZeroDivisionError\r\n\r\n## Environment\r\n\r\nPyTorch version: 1.0.0a0+db5d313\r\nIs debug build: No\r\nCUDA used to build PyTorch: 10.0.130\r\n\r\nOS: Ubuntu 18.04.1 LTS\r\nGCC version: (Ubuntu 7.3.0-27ubuntu1~18.04) 7.3.0\r\nCMake version: version 3.12.2\r\n\r\nPython version: 3.7\r\nIs CUDA available: Yes\r\nCUDA runtime version: 10.0.130\r\nGPU models and configuration: GPU 0: GeForce RTX 2080\r\nNvidia driver version: 410.48\r\ncuDNN version: Probably one of the following:\r\n/usr/local/cuda-10.0/lib64/libcudnn.so.7.4.1\r\n/usr/local/cuda-10.0/lib64/libcudnn_static.a\r\n\r\nVersions of relevant libraries:\r\n[pip] Could not collect\r\n[conda] magma-cuda100             2.4.0                         1    pytorch\r\n[conda] torch                     1.0.0a0+db5d313           <pip>\r\n\r\n\r\n## Additional context\r\n\r\n<!-- Add any other context about the problem here. -->\r\n",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/15768/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/15768/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/15669",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/15669/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/15669/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/15669/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/15669",
        "id": 395346717,
        "node_id": "MDU6SXNzdWUzOTUzNDY3MTc=",
        "number": 15669,
        "title": "[jit] in-place ops don't behave correctly after chunking",
        "user": {
            "login": "suo",
            "id": 1617424,
            "node_id": "MDQ6VXNlcjE2MTc0MjQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1617424?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/suo",
            "html_url": "https://github.com/suo",
            "followers_url": "https://api.github.com/users/suo/followers",
            "following_url": "https://api.github.com/users/suo/following{/other_user}",
            "gists_url": "https://api.github.com/users/suo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/suo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/suo/subscriptions",
            "organizations_url": "https://api.github.com/users/suo/orgs",
            "repos_url": "https://api.github.com/users/suo/repos",
            "events_url": "https://api.github.com/users/suo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/suo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-01-02T19:05:27Z",
        "updated_at": "2019-01-02T22:36:53Z",
        "closed_at": "2019-01-02T22:36:53Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "repro:\r\n```\r\nimport torch\r\n\r\n@torch.jit.script\r\ndef foo(x):\r\n    chunked = torch.chunk(x, 2)\r\n    foo = chunked[0]\r\n    foo.add_(5)\r\n\r\nfoo(torch.zeros(12))\r\n```\r\nresults in:\r\n```\r\nTraceback (most recent call last):\r\n  File \"/Users/suo/scratch/test.py\", line 11, in <module>\r\n    foo(torch.zeros(12))\r\n  File \"/Users/suo/pytorch/torch/nn/modules/module.py\", line 489, in __call__\r\n    result = self.forward(*input, **kwargs)\r\nRuntimeError: Couldn't find an argument called attr::b\r\n```",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/15669/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/15669/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/15661",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/15661/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/15661/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/15661/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/15661",
        "id": 395292800,
        "node_id": "MDU6SXNzdWUzOTUyOTI4MDA=",
        "number": 15661,
        "title": "[jit] Python functions can't take list argument",
        "user": {
            "login": "zou3519",
            "id": 5652049,
            "node_id": "MDQ6VXNlcjU2NTIwNDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5652049?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zou3519",
            "html_url": "https://github.com/zou3519",
            "followers_url": "https://api.github.com/users/zou3519/followers",
            "following_url": "https://api.github.com/users/zou3519/following{/other_user}",
            "gists_url": "https://api.github.com/users/zou3519/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zou3519/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zou3519/subscriptions",
            "organizations_url": "https://api.github.com/users/zou3519/orgs",
            "repos_url": "https://api.github.com/users/zou3519/repos",
            "events_url": "https://api.github.com/users/zou3519/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zou3519/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2019-01-02T15:57:14Z",
        "updated_at": "2019-01-08T14:52:29Z",
        "closed_at": "2019-01-07T21:53:19Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\nCalling a python function from TorchScript that takes in arguments other than Tensors results in a not-understandable error message\r\n\r\n## To Reproduce\r\n\r\n```\r\nimport torch\r\n\r\ndef python_list_op(lst):\r\n    # type: (List[Tensor]) -> Tensor\r\n    return lst[0]\r\n\r\n@torch.jit.script\r\ndef script_fn(lst):\r\n    # type: (List[Tensor]) -> Tensor\r\n    return python_list_op(lst)\r\n\r\n---------------------------------------------------------------------------\r\nNameError                                 Traceback (most recent call last)\r\n<ipython-input-4-81852451e4c4> in <module>()\r\n      5     return lst[0]\r\n      6\r\n----> 7 @torch.jit.script\r\n      8 def script_fn(lst):\r\n      9     # type: (List[Tensor]) -> Tensor\r\n\r\n/scratch/rzou/pt/master/torch/jit/__init__.py in script(fn, optimize, _frames_up, _rcb)\r\n    691     ast = get_jit_ast(fn, is_method=False)\r\n    692     mod = ScriptModule()\r\n--> 693     _jit_script_compile(mod, ast, _rcb, get_default_args(fn))\r\n    694     # Forward docstrings\r\n    695     mod.__doc__ = fn.__doc__\r\n\r\n/scratch/rzou/pt/master/torch/jit/annotations.py in get_signature(fn)\r\n     50         return None\r\n     51\r\n---> 52     return parse_type_line(type_line)\r\n     53\r\n     54\r\n\r\n/scratch/rzou/pt/master/torch/jit/annotations.py in parse_type_line(type_line)\r\n     88\r\n     89     try:\r\n---> 90         arg_ann = eval(arg_ann_str, _eval_env)\r\n     91     except SyntaxError:\r\n     92         raise RuntimeError(\"Failed to parse the argument list of a type annotation\")\r\n\r\n<string> in <module>()\r\n\r\nNameError: name 'List' is not defined\r\n```\r\n\r\n## Expected behavior\r\n\r\nNo crash\r\n\r\n## Environment\r\n\r\nmaster",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/15661/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/15661/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/15570",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/15570/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/15570/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/15570/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/15570",
        "id": 394463392,
        "node_id": "MDU6SXNzdWUzOTQ0NjMzOTI=",
        "number": 15570,
        "title": "User got confused by torch.load and torch.jit.load",
        "user": {
            "login": "houseroad",
            "id": 30275821,
            "node_id": "MDQ6VXNlcjMwMjc1ODIx",
            "avatar_url": "https://avatars.githubusercontent.com/u/30275821?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houseroad",
            "html_url": "https://github.com/houseroad",
            "followers_url": "https://api.github.com/users/houseroad/followers",
            "following_url": "https://api.github.com/users/houseroad/following{/other_user}",
            "gists_url": "https://api.github.com/users/houseroad/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houseroad/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houseroad/subscriptions",
            "organizations_url": "https://api.github.com/users/houseroad/orgs",
            "repos_url": "https://api.github.com/users/houseroad/repos",
            "events_url": "https://api.github.com/users/houseroad/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houseroad/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "houseroad",
            "id": 30275821,
            "node_id": "MDQ6VXNlcjMwMjc1ODIx",
            "avatar_url": "https://avatars.githubusercontent.com/u/30275821?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houseroad",
            "html_url": "https://github.com/houseroad",
            "followers_url": "https://api.github.com/users/houseroad/followers",
            "following_url": "https://api.github.com/users/houseroad/following{/other_user}",
            "gists_url": "https://api.github.com/users/houseroad/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houseroad/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houseroad/subscriptions",
            "organizations_url": "https://api.github.com/users/houseroad/orgs",
            "repos_url": "https://api.github.com/users/houseroad/repos",
            "events_url": "https://api.github.com/users/houseroad/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houseroad/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "houseroad",
                "id": 30275821,
                "node_id": "MDQ6VXNlcjMwMjc1ODIx",
                "avatar_url": "https://avatars.githubusercontent.com/u/30275821?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/houseroad",
                "html_url": "https://github.com/houseroad",
                "followers_url": "https://api.github.com/users/houseroad/followers",
                "following_url": "https://api.github.com/users/houseroad/following{/other_user}",
                "gists_url": "https://api.github.com/users/houseroad/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/houseroad/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/houseroad/subscriptions",
                "organizations_url": "https://api.github.com/users/houseroad/orgs",
                "repos_url": "https://api.github.com/users/houseroad/repos",
                "events_url": "https://api.github.com/users/houseroad/events{/privacy}",
                "received_events_url": "https://api.github.com/users/houseroad/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2018-12-27T18:44:16Z",
        "updated_at": "2018-12-28T21:55:53Z",
        "closed_at": "2018-12-28T21:55:53Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\nIf the regular python model is converted to script module, and user still use `torch.load` to load it, the loading procedure will fail. We should add a hook in `torch.load`, at least provide useful error message. \r\n\r\n",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/15570/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/15570/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/15505",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/15505/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/15505/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/15505/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/15505",
        "id": 393715017,
        "node_id": "MDU6SXNzdWUzOTM3MTUwMTc=",
        "number": 15505,
        "title": "[ONNX] Exporting JIT script with warning subcall fails",
        "user": {
            "login": "nhynes",
            "id": 2353785,
            "node_id": "MDQ6VXNlcjIzNTM3ODU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2353785?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nhynes",
            "html_url": "https://github.com/nhynes",
            "followers_url": "https://api.github.com/users/nhynes/followers",
            "following_url": "https://api.github.com/users/nhynes/following{/other_user}",
            "gists_url": "https://api.github.com/users/nhynes/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nhynes/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nhynes/subscriptions",
            "organizations_url": "https://api.github.com/users/nhynes/orgs",
            "repos_url": "https://api.github.com/users/nhynes/repos",
            "events_url": "https://api.github.com/users/nhynes/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nhynes/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 693805995,
                "node_id": "MDU6TGFiZWw2OTM4MDU5OTU=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20onnx",
                "name": "module: onnx",
                "color": "f7e101",
                "default": false,
                "description": "Related to torch.onnx"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "eellison",
            "id": 11477974,
            "node_id": "MDQ6VXNlcjExNDc3OTc0",
            "avatar_url": "https://avatars.githubusercontent.com/u/11477974?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eellison",
            "html_url": "https://github.com/eellison",
            "followers_url": "https://api.github.com/users/eellison/followers",
            "following_url": "https://api.github.com/users/eellison/following{/other_user}",
            "gists_url": "https://api.github.com/users/eellison/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eellison/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eellison/subscriptions",
            "organizations_url": "https://api.github.com/users/eellison/orgs",
            "repos_url": "https://api.github.com/users/eellison/repos",
            "events_url": "https://api.github.com/users/eellison/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eellison/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "eellison",
                "id": 11477974,
                "node_id": "MDQ6VXNlcjExNDc3OTc0",
                "avatar_url": "https://avatars.githubusercontent.com/u/11477974?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/eellison",
                "html_url": "https://github.com/eellison",
                "followers_url": "https://api.github.com/users/eellison/followers",
                "following_url": "https://api.github.com/users/eellison/following{/other_user}",
                "gists_url": "https://api.github.com/users/eellison/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/eellison/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eellison/subscriptions",
                "organizations_url": "https://api.github.com/users/eellison/orgs",
                "repos_url": "https://api.github.com/users/eellison/repos",
                "events_url": "https://api.github.com/users/eellison/events{/privacy}",
                "received_events_url": "https://api.github.com/users/eellison/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2018-12-23T01:26:07Z",
        "updated_at": "2018-12-27T23:47:20Z",
        "closed_at": "2018-12-27T23:47:20Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\nONNX export fails when a JITted function emits a warning. I probably should fix the warning, but someone (who isn't me) who tries to export a popular open source model should probably not see\r\n```\r\nUnsupported prim::Constant kind: `s`. Send a bug report.\r\n```\r\nIt looks like the issue is that the warning string gets baked into the function during JIT compilation and hence exported.\r\n\r\nMWE:\r\n\r\n```python\r\nimport torch\r\n\r\n@torch.jit.script\r\ndef jit_warner(inp):\r\n    return torch.nn.functional.sigmoid(inp) # triggers a deprecation warning\r\n\r\n@torch.jit.script\r\ndef jit_ok(inp):\r\n    return torch.sigmoid(inp)\r\n\r\nclass JitWarner(torch.nn.Module):\r\n    def __init__(self):\r\n        super().__init__()\r\n        \r\n    def forward(self, x):\r\n        return jit_warner(x)\r\n        # return jit_ok(x) # this works\r\n\r\ntorch.onnx.export(JitWarner(), torch.randn(42), '/dev/null')\r\n```\r\n\r\n## Environment\r\n\r\n - PyTorch Version (e.g., 1.0): 1.0\r\n - OS (e.g., Linux): Linux\r\n - How you installed PyTorch (`conda`, `pip`, source): `pip`\r\n - Python version: 3.6\r\n\r\n\r\n## Additional context\r\n\r\nI'm trying to export the [waveglow](https://github.com/NVIDIA/waveglow/blob/master/glow_old.py) model.\r\n",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/15505/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/15505/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/15409",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/15409/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/15409/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/15409/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/15409",
        "id": 392776338,
        "node_id": "MDU6SXNzdWUzOTI3NzYzMzg=",
        "number": 15409,
        "title": "Bad error message when creating a class instance in script functions",
        "user": {
            "login": "apaszke",
            "id": 4583066,
            "node_id": "MDQ6VXNlcjQ1ODMwNjY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4583066?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/apaszke",
            "html_url": "https://github.com/apaszke",
            "followers_url": "https://api.github.com/users/apaszke/followers",
            "following_url": "https://api.github.com/users/apaszke/following{/other_user}",
            "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions",
            "organizations_url": "https://api.github.com/users/apaszke/orgs",
            "repos_url": "https://api.github.com/users/apaszke/repos",
            "events_url": "https://api.github.com/users/apaszke/events{/privacy}",
            "received_events_url": "https://api.github.com/users/apaszke/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 1150417147,
                "node_id": "MDU6TGFiZWwxMTUwNDE3MTQ3",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/good%20first%20issue",
                "name": "good first issue",
                "color": "34c182",
                "default": true,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2018-12-19T21:02:39Z",
        "updated_at": "2019-03-18T18:05:00Z",
        "closed_at": "2019-03-18T18:05:00Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "This code:\r\n```py\r\nimport torch\r\nimport torch.nn as nn\r\n\r\n@torch.jit.script\r\ndef f(x):\r\n    return nn.Softmax(dim=-1)(x)\r\n```\r\n\r\nproduces the following error:\r\n```\r\nTraceback (most recent call last):\r\n  File \"fail.py\", line 4, in <module>\r\n    @torch.jit.script\r\n  File \"/home/apaszke/pytorch/torch/jit/__init__.py\", line 693, in script\r\n    _jit_script_compile(mod, ast, _rcb, get_default_args(fn))\r\n  File \"/home/apaszke/pytorch/torch/jit/annotations.py\", line 67, in get_num_params\r\n    raise RuntimeError(\"expected a single top-level function\")\r\nRuntimeError: expected a single top-level function\r\n```\r\n\r\nIt seems that the reason for this is that it thinks that `nn.Softmax` is supposed to be a Python function, but sees a `ClassDef` in the AST and throws because of that. We should give a nicer error message in this case, as this pattern is unfortunately somewhat common. An easy fix would be to check for `ast.ClassDef`, but a proper one should really point to the place where the failure originates from.",
        "closed_by": {
            "login": "driazati",
            "id": 9407960,
            "node_id": "MDQ6VXNlcjk0MDc5NjA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9407960?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/driazati",
            "html_url": "https://github.com/driazati",
            "followers_url": "https://api.github.com/users/driazati/followers",
            "following_url": "https://api.github.com/users/driazati/following{/other_user}",
            "gists_url": "https://api.github.com/users/driazati/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/driazati/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/driazati/subscriptions",
            "organizations_url": "https://api.github.com/users/driazati/orgs",
            "repos_url": "https://api.github.com/users/driazati/repos",
            "events_url": "https://api.github.com/users/driazati/events{/privacy}",
            "received_events_url": "https://api.github.com/users/driazati/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/15409/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/15409/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/15319",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/15319/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/15319/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/15319/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/15319",
        "id": 391931580,
        "node_id": "MDU6SXNzdWUzOTE5MzE1ODA=",
        "number": 15319,
        "title": "torch.jit.trace hardcodes batch size with packed input to LSTM",
        "user": {
            "login": "anna-hope",
            "id": 1631585,
            "node_id": "MDQ6VXNlcjE2MzE1ODU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1631585?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/anna-hope",
            "html_url": "https://github.com/anna-hope",
            "followers_url": "https://api.github.com/users/anna-hope/followers",
            "following_url": "https://api.github.com/users/anna-hope/following{/other_user}",
            "gists_url": "https://api.github.com/users/anna-hope/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/anna-hope/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/anna-hope/subscriptions",
            "organizations_url": "https://api.github.com/users/anna-hope/orgs",
            "repos_url": "https://api.github.com/users/anna-hope/repos",
            "events_url": "https://api.github.com/users/anna-hope/events{/privacy}",
            "received_events_url": "https://api.github.com/users/anna-hope/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "driazati",
            "id": 9407960,
            "node_id": "MDQ6VXNlcjk0MDc5NjA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9407960?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/driazati",
            "html_url": "https://github.com/driazati",
            "followers_url": "https://api.github.com/users/driazati/followers",
            "following_url": "https://api.github.com/users/driazati/following{/other_user}",
            "gists_url": "https://api.github.com/users/driazati/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/driazati/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/driazati/subscriptions",
            "organizations_url": "https://api.github.com/users/driazati/orgs",
            "repos_url": "https://api.github.com/users/driazati/repos",
            "events_url": "https://api.github.com/users/driazati/events{/privacy}",
            "received_events_url": "https://api.github.com/users/driazati/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "driazati",
                "id": 9407960,
                "node_id": "MDQ6VXNlcjk0MDc5NjA=",
                "avatar_url": "https://avatars.githubusercontent.com/u/9407960?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/driazati",
                "html_url": "https://github.com/driazati",
                "followers_url": "https://api.github.com/users/driazati/followers",
                "following_url": "https://api.github.com/users/driazati/following{/other_user}",
                "gists_url": "https://api.github.com/users/driazati/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/driazati/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/driazati/subscriptions",
                "organizations_url": "https://api.github.com/users/driazati/orgs",
                "repos_url": "https://api.github.com/users/driazati/repos",
                "events_url": "https://api.github.com/users/driazati/events{/privacy}",
                "received_events_url": "https://api.github.com/users/driazati/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 12,
        "created_at": "2018-12-17T23:22:41Z",
        "updated_at": "2019-03-08T18:38:54Z",
        "closed_at": "2019-03-08T18:38:54Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\nUsing `torch.jit.trace` on a function that feeds inputs to LSTM produces a graph with a hard-coded batch size. This makes it impossible to use the traced function with inputs of different batch sizes.\r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior:\r\n\r\n```\r\nimport torch\r\nimport torch.nn as nn\r\n\r\na = torch.randn((8, 5, 30))\r\na_lengths = torch.randint(low=1, high=a.shape[1], size=(len(a),))\r\na_lengths, _ = torch.sort(a_lengths, descending=True)\r\n\r\nb = torch.randn((16, 5, 30))\r\nb_lengths = torch.randint(low=1, high=b.shape[1], size=(len(b),))\r\nb_lengths, _ = torch.sort(b_lengths, descending=True)\r\n\r\nlstm = nn.LSTM(30, 25, batch_first=True)\r\n\r\ndef feed_rnn(X: torch.Tensor, sorted_lengths: torch.Tensor) -> torch.Tensor:\r\n    X = nn.utils.rnn.pack_padded_sequence(X, sorted_lengths, batch_first=True)\r\n    X, hidden_states = lstm(X)\r\n    # pad_packed_sequence returns a tuple of sequences and lengths\r\n    X, sorted_lengths = nn.utils.rnn.pad_packed_sequence(X, batch_first=True)\r\n    return X\r\n\r\nfunc = torch.jit.trace(feed_rnn, (b, b_lengths), check_inputs=[(b, b_lengths), (a, a_lengths)])\r\n```\r\n\r\nThis results in:\r\n\r\n```\r\nRuntimeError: \r\nThe size of tensor a (8) must match the size of tensor b (16) at non-singleton dimension 0\r\n\r\n...\r\n\r\nERROR: Graphs differed across invocations!\r\n\tGraph diff:\r\n\t\t  graph(%input.1 : Tensor\r\n\t\t        %lengths.1 : Tensor) {\r\n\t\t    %2 : Device = prim::Constant[value=\"cpu\"]()\r\n\t\t    %3 : int = prim::Constant[value=4]()\r\n\t\t    %4 : bool = prim::Constant[value=0]()\r\n\t\t    %5 : bool = prim::Constant[value=0]()\r\n\t\t    %lengths : Tensor = aten::to(%lengths.1, %2, %3, %4, %5)\r\n\t\t    %7 : bool = prim::Constant[value=1]()\r\n\t\t    %input : Tensor, %batch_sizes : Tensor = aten::_pack_padded_sequence(%input.1, %lengths, %7)\r\n\t\t    %10 : int = prim::Constant[value=1](), scope: LSTM\r\n\t\t-   %11 : int = prim::Constant[value=16](), scope: LSTM\r\n\t\t?                                    ^^\r\n\t\t+   %11 : int = prim::Constant[value=8](), scope: LSTM\r\n\t\t?                                    ^\r\n```\r\n\r\n\r\n## Expected behavior\r\n\r\nBoth inputs with different batch sizes should work.\r\n\r\n## Environment\r\n\r\n```\r\nCollecting environment information...\r\nPyTorch version: 1.0.0\r\nIs debug build: No\r\nCUDA used to build PyTorch: 9.0.176\r\n\r\nOS: Ubuntu 18.04.1 LTS\r\nGCC version: (Homebrew gcc 5.5.0_4) 5.5.0\r\nCMake version: Could not collect\r\n\r\nPython version: 3.7\r\nIs CUDA available: Yes\r\nCUDA runtime version: 9.1.85\r\nGPU models and configuration: GPU 0: GeForce GTX 1050\r\nNvidia driver version: 396.54\r\ncuDNN version: Probably one of the following:\r\n/usr/lib/x86_64-linux-gnu/libcudnn.so.7.1.1\r\n/usr/local/cuda-9.1/targets/x86_64-linux/lib/libcudnn.so.7.1.1\r\n/usr/local/cuda-9.1/targets/x86_64-linux/lib/libcudnn_static.a\r\n\r\nVersions of relevant libraries:\r\n[pip] Could not collect\r\n[conda] cuda92                    1.0                           0    pytorch\r\n[conda] pytorch                   1.0.0           py3.7_cuda9.0.176_cudnn7.4.1_1    pytorch\r\n[conda] torch                     1.0.0                     <pip>\r\n[conda] torchfile                 0.1.0                      py_0    conda-forge\r\n[conda] torchfile                 0.1.0                     <pip>\r\n[conda] torchnet                  0.0.4                     <pip>\r\n[conda] torchtext                 0.3.1                     <pip>\r\n[conda] torchvision               0.2.1                 py37_1000    conda-forge\r\n```\r\n",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/15319/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/15319/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/15281",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/15281/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/15281/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/15281/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/15281",
        "id": 391432347,
        "node_id": "MDU6SXNzdWUzOTE0MzIzNDc=",
        "number": 15281,
        "title": "Running any PyTorch-using program with -OO raises docstring-related RuntimeError",
        "user": {
            "login": "JesseTG",
            "id": 1175189,
            "node_id": "MDQ6VXNlcjExNzUxODk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1175189?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JesseTG",
            "html_url": "https://github.com/JesseTG",
            "followers_url": "https://api.github.com/users/JesseTG/followers",
            "following_url": "https://api.github.com/users/JesseTG/following{/other_user}",
            "gists_url": "https://api.github.com/users/JesseTG/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JesseTG/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JesseTG/subscriptions",
            "organizations_url": "https://api.github.com/users/JesseTG/orgs",
            "repos_url": "https://api.github.com/users/JesseTG/repos",
            "events_url": "https://api.github.com/users/JesseTG/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JesseTG/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "driazati",
            "id": 9407960,
            "node_id": "MDQ6VXNlcjk0MDc5NjA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9407960?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/driazati",
            "html_url": "https://github.com/driazati",
            "followers_url": "https://api.github.com/users/driazati/followers",
            "following_url": "https://api.github.com/users/driazati/following{/other_user}",
            "gists_url": "https://api.github.com/users/driazati/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/driazati/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/driazati/subscriptions",
            "organizations_url": "https://api.github.com/users/driazati/orgs",
            "repos_url": "https://api.github.com/users/driazati/repos",
            "events_url": "https://api.github.com/users/driazati/events{/privacy}",
            "received_events_url": "https://api.github.com/users/driazati/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "driazati",
                "id": 9407960,
                "node_id": "MDQ6VXNlcjk0MDc5NjA=",
                "avatar_url": "https://avatars.githubusercontent.com/u/9407960?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/driazati",
                "html_url": "https://github.com/driazati",
                "followers_url": "https://api.github.com/users/driazati/followers",
                "following_url": "https://api.github.com/users/driazati/following{/other_user}",
                "gists_url": "https://api.github.com/users/driazati/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/driazati/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/driazati/subscriptions",
                "organizations_url": "https://api.github.com/users/driazati/orgs",
                "repos_url": "https://api.github.com/users/driazati/repos",
                "events_url": "https://api.github.com/users/driazati/events{/privacy}",
                "received_events_url": "https://api.github.com/users/driazati/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2018-12-16T03:43:21Z",
        "updated_at": "2018-12-17T22:42:27Z",
        "closed_at": "2018-12-17T22:42:27Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\nIf you run Python with the `-OO` flag, you receive a `RuntimeError` as soon as you import `torch`.\r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior:\r\n\r\n1. Run `python -OO` (or write a full script if you'd like)\r\n1. `import torch`\r\n\r\nYou should receive a stack trace that looks something like this:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/local/lib/python3.7/dist-packages/torch/__init__.py\", line 263, in <module>\r\n    from .functional import *\r\n  File \"/usr/local/lib/python3.7/dist-packages/torch/functional.py\", line 2, in <module>\r\n    import torch.nn.functional as F\r\n  File \"/usr/local/lib/python3.7/dist-packages/torch/nn/__init__.py\", line 1, in <module>\r\n    from .modules import *\r\n  File \"/usr/local/lib/python3.7/dist-packages/torch/nn/modules/__init__.py\", line 2, in <module>\r\n    from .linear import Linear, Bilinear\r\n  File \"/usr/local/lib/python3.7/dist-packages/torch/nn/modules/linear.py\", line 5, in <module>\r\n    from .. import functional as F\r\n  File \"/usr/local/lib/python3.7/dist-packages/torch/nn/functional.py\", line 369, in <module>\r\n    if_false=_fractional_max_pool2d)\r\n  File \"/usr/local/lib/python3.7/dist-packages/torch/_jit_internal.py\", line 141, in boolean_dispatch\r\n    raise RuntimeError(\"only one function can have a docstring\")\r\nRuntimeError: only one function can have a docstring\r\n```\r\n\r\n## Expected behavior\r\n\r\nThis shouldn't happen.\r\n\r\n## Environment\r\n\r\nPyTorch version: 1.0.0\r\nIs debug build: No\r\nCUDA used to build PyTorch: 9.0.176\r\n\r\nOS: Ubuntu 18.04.1 LTS\r\nGCC version: (Ubuntu 7.3.0-27ubuntu1~18.04) 7.3.0\r\nCMake version: version 3.10.2\r\n\r\nPython version: 3.7 (also happens in 3.6)\r\nIs CUDA available: Yes\r\nCUDA runtime version: 9.1.85\r\nGPU models and configuration: GPU 0: GeForce GTX 860M\r\nNvidia driver version: 396.54\r\n\r\n\r\n## Additional context\r\n\r\nRunning with `-O` (single `O`) works as expected.  This is the documentation for the `-OO` flag, from `python3 --help`:\r\n\r\n```\r\n-OO    : do -O changes and also discard docstrings; add .opt-2 before\r\n         .pyc extension\r\n```\r\n\r\n\r\nSo it looks like the [`boolean_dispatch`](https://github.com/pytorch/pytorch/blob/25144c8a098cc3b84f9765458a727ad3c17b4d94/torch/_jit_internal.py#L113) function assumes that *exactly* one of the two functions it gets has a docstring.\r\n\r\nhttps://github.com/pytorch/pytorch/blob/25144c8a098cc3b84f9765458a727ad3c17b4d94/torch/_jit_internal.py#L134-L142\r\n\r\nAm I correct to assume that if both `if_true.__doc__` and `if_false.__doc__` are `None`, then `fn.__doc__` should be `None` as well?",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/15281/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/15281/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/15278",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/15278/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/15278/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/15278/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/15278",
        "id": 391425736,
        "node_id": "MDU6SXNzdWUzOTE0MjU3MzY=",
        "number": 15278,
        "title": "[JIT] Support of optional parameters in script methods",
        "user": {
            "login": "norpadon",
            "id": 6224581,
            "node_id": "MDQ6VXNlcjYyMjQ1ODE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6224581?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/norpadon",
            "html_url": "https://github.com/norpadon",
            "followers_url": "https://api.github.com/users/norpadon/followers",
            "following_url": "https://api.github.com/users/norpadon/following{/other_user}",
            "gists_url": "https://api.github.com/users/norpadon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/norpadon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/norpadon/subscriptions",
            "organizations_url": "https://api.github.com/users/norpadon/orgs",
            "repos_url": "https://api.github.com/users/norpadon/repos",
            "events_url": "https://api.github.com/users/norpadon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/norpadon/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "eellison",
            "id": 11477974,
            "node_id": "MDQ6VXNlcjExNDc3OTc0",
            "avatar_url": "https://avatars.githubusercontent.com/u/11477974?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eellison",
            "html_url": "https://github.com/eellison",
            "followers_url": "https://api.github.com/users/eellison/followers",
            "following_url": "https://api.github.com/users/eellison/following{/other_user}",
            "gists_url": "https://api.github.com/users/eellison/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eellison/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eellison/subscriptions",
            "organizations_url": "https://api.github.com/users/eellison/orgs",
            "repos_url": "https://api.github.com/users/eellison/repos",
            "events_url": "https://api.github.com/users/eellison/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eellison/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "eellison",
                "id": 11477974,
                "node_id": "MDQ6VXNlcjExNDc3OTc0",
                "avatar_url": "https://avatars.githubusercontent.com/u/11477974?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/eellison",
                "html_url": "https://github.com/eellison",
                "followers_url": "https://api.github.com/users/eellison/followers",
                "following_url": "https://api.github.com/users/eellison/following{/other_user}",
                "gists_url": "https://api.github.com/users/eellison/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/eellison/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eellison/subscriptions",
                "organizations_url": "https://api.github.com/users/eellison/orgs",
                "repos_url": "https://api.github.com/users/eellison/repos",
                "events_url": "https://api.github.com/users/eellison/events{/privacy}",
                "received_events_url": "https://api.github.com/users/eellison/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 4,
        "created_at": "2018-12-16T01:14:55Z",
        "updated_at": "2020-09-03T13:16:45Z",
        "closed_at": "2019-01-25T23:15:58Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## \ud83d\ude80 Feature\r\nIt would be great to be able to pass optional parameters to the `forward` method, for example:\r\n```\r\nclass Attention(jit.ScriptModule):\r\n    @jit.script_method\r\n    def forward(self, attender, attendee, seq_length=None, mask=None):\r\n        if mask is not None:\r\n            ...\r\n        if seq_length is not None:\r\n            ...\r\n        ...\r\n```\r\n\r\n## Motivation\r\n\r\nFor operations such as self-attention, it is common to pass optional arguments, such as mask which enforces an autoregressive structure of the model. A lot of existing code already uses this approach, so this feature will make switching to JIT an easier task.\r\n\r\n## Pitch\r\n\r\nArguments to the script methods can take a default value of `None`. Any use of the underlying tensor can occur only inside the enclosing `if ... is not None` expression. I suppose it is possible to implement a separate compiled function for each combination of provided arguments, with specific implementation being chosen depending on which variant is being called.",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/15278/reactions",
            "total_count": 13,
            "+1": 10,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 3,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/15278/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/15271",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/15271/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/15271/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/15271/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/15271",
        "id": 391372682,
        "node_id": "MDU6SXNzdWUzOTEzNzI2ODI=",
        "number": 15271,
        "title": "Corrupted RNN parameters in models exported on GPU (torch.jit)",
        "user": {
            "login": "Wizaron",
            "id": 10080524,
            "node_id": "MDQ6VXNlcjEwMDgwNTI0",
            "avatar_url": "https://avatars.githubusercontent.com/u/10080524?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Wizaron",
            "html_url": "https://github.com/Wizaron",
            "followers_url": "https://api.github.com/users/Wizaron/followers",
            "following_url": "https://api.github.com/users/Wizaron/following{/other_user}",
            "gists_url": "https://api.github.com/users/Wizaron/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Wizaron/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Wizaron/subscriptions",
            "organizations_url": "https://api.github.com/users/Wizaron/orgs",
            "repos_url": "https://api.github.com/users/Wizaron/repos",
            "events_url": "https://api.github.com/users/Wizaron/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Wizaron/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "houseroad",
            "id": 30275821,
            "node_id": "MDQ6VXNlcjMwMjc1ODIx",
            "avatar_url": "https://avatars.githubusercontent.com/u/30275821?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/houseroad",
            "html_url": "https://github.com/houseroad",
            "followers_url": "https://api.github.com/users/houseroad/followers",
            "following_url": "https://api.github.com/users/houseroad/following{/other_user}",
            "gists_url": "https://api.github.com/users/houseroad/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/houseroad/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/houseroad/subscriptions",
            "organizations_url": "https://api.github.com/users/houseroad/orgs",
            "repos_url": "https://api.github.com/users/houseroad/repos",
            "events_url": "https://api.github.com/users/houseroad/events{/privacy}",
            "received_events_url": "https://api.github.com/users/houseroad/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "houseroad",
                "id": 30275821,
                "node_id": "MDQ6VXNlcjMwMjc1ODIx",
                "avatar_url": "https://avatars.githubusercontent.com/u/30275821?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/houseroad",
                "html_url": "https://github.com/houseroad",
                "followers_url": "https://api.github.com/users/houseroad/followers",
                "following_url": "https://api.github.com/users/houseroad/following{/other_user}",
                "gists_url": "https://api.github.com/users/houseroad/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/houseroad/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/houseroad/subscriptions",
                "organizations_url": "https://api.github.com/users/houseroad/orgs",
                "repos_url": "https://api.github.com/users/houseroad/repos",
                "events_url": "https://api.github.com/users/houseroad/events{/privacy}",
                "received_events_url": "https://api.github.com/users/houseroad/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 5,
        "created_at": "2018-12-15T12:08:53Z",
        "updated_at": "2019-01-24T05:37:09Z",
        "closed_at": "2019-01-24T05:37:09Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\n### Step 1\r\n\r\nI build a CNN + RNN based model and cast it to both CPU and GPU, then trace them using `torch.jit.trace` as below:\r\n\r\n```python\r\nmodel_cpu = Architecture()\r\nmodel_gpu = copy.deepcopy(model_cpu).to(torch.device(\"cuda\"))\r\n\r\ndummy_input = torch.randn(1, 3, 224, 224)\r\n\r\ntraced_model_cpu = torch.jit.trace(model_cpu, dummy_input)\r\ntraced_model_gpu = torch.jit.trace(model_gpu, dummy_input.to(torch.device('cuda')))\r\n```\r\n\r\nAt this step, the parameters of all models (`model_cpu`, `model_gpu`, `traced_model_cpu`, `traced_model_gpu`) are exactly the same.\r\n\r\n### Step 2\r\n\r\nThen I save and load them using `torch.jit` as below:\r\n\r\n```python\r\ntorch.jit.save(traced_model_cpu, \"model_cpu.pth\")\r\ntorch.jit.save(traced_model_gpu, \"model_gpu.pth\")\r\n\r\ntraced_model_cpu_loaded = torch.jit.load(\"model_cpu.pth\")\r\ntraced_model_gpu_loaded = torch.jit.load(\"model_gpu.pth\")\r\n```\r\n\r\nThe parameters of the RNN layers in `traced_model_gpu_loaded` is totally different from `model_cpu`, `model_gpu`, `traced_model_cpu`, `traced_model_gpu` and `traced_model_cpu_loaded`.\r\n\r\n## To Reproduce\r\n\r\nIn order to reproduce the behavior, run the script given below:\r\n\r\n```python\r\nimport copy\r\nimport torch\r\nimport torch.nn as nn\r\nfrom torchvision import models\r\n\r\n\r\nclass ReNet(nn.Module):\r\n\r\n    def __init__(self, n_input, n_units):\r\n        super(ReNet, self).__init__()\r\n\r\n        self.rnn = nn.GRU(n_input, n_units,\r\n                          num_layers=1, batch_first=False,\r\n                          bidirectional=True)\r\n\r\n    def rnn_forward(self, x):\r\n\r\n        b, n_height, n_width, n_filters = x.size()\r\n\r\n        x = x.view(b * n_height, n_width, n_filters)\r\n        x = x.permute(1, 0, 2)\r\n        x, _ = self.rnn(x)\r\n        x = x.permute(1, 0, 2)\r\n        x = x.view(b, n_height, n_width, -1)\r\n\r\n        return x\r\n\r\n    def forward(self, x):\r\n                                       #b, nf, h, w\r\n        x = x.permute(0, 2, 3, 1)      #b, h, w, nf\r\n        x = self.rnn_forward(x)        #b, h, w, nf\r\n        x = x.permute(0, 3, 1, 2)      #b, nf, h, w\r\n\r\n        return x\r\n\r\n\r\nclass Architecture(nn.Module):\r\n\r\n    def __init__(self):\r\n        super(Architecture, self).__init__()\r\n\r\n        self.cnn = models.resnet50(pretrained=True)\r\n        self.cnn = nn.Sequential(*list(self.cnn.children())[:-5])\r\n\r\n        self.renet1 = ReNet(256, 50)\r\n\r\n    def forward(self, x):\r\n        x = self.cnn(x)\r\n        x = self.renet1(x)\r\n\r\n        return x\r\n\r\n\r\ndef compare_models(cpu_model, gpu_model):\r\n\r\n    is_identical = True\r\n\r\n    cpu_model_state_dict = cpu_model.state_dict()\r\n    gpu_model_state_dict = gpu_model.state_dict()\r\n\r\n    for param_key, cpu_params in cpu_model_state_dict.items():\r\n        gpu_params = gpu_model_state_dict[param_key]\r\n        _identical = torch.all(gpu_params == cpu_params.to(torch.device(\"cuda\")))\r\n        if _identical.item() == 0:\r\n            print(\"\\n\\t# PARAMETER : \", param_key)\r\n            print(\"\\t* GPU : \", gpu_params.view(-1)[:5])\r\n            print(\"\\t* CPU : \", cpu_params.view(-1)[:5])\r\n            is_identical = False\r\n\r\n    return is_identical\r\n\r\n\r\ndef trace(model, usegpu):\r\n    with torch.set_grad_enabled(False):\r\n        model.eval()\r\n\r\n        dummy_input = torch.randn(1, 3, 224, 224)\r\n        \r\n        if usegpu:\r\n            dummy_input = dummy_input.to(torch.device('cuda'))\r\n\r\n        traced_model = torch.jit.trace(model, dummy_input)\r\n\r\n    return traced_model\r\n\r\n\r\ntorch.manual_seed(13)\r\n\r\nmodel_cpu = Architecture()\r\nmodel_gpu = copy.deepcopy(model_cpu).to(torch.device(\"cuda\"))\r\n\r\nprint(\"STEP 1 : \", compare_models(model_cpu, model_gpu))\r\n\r\ntraced_model_cpu = trace(model_cpu, False)\r\ntraced_model_gpu = trace(model_gpu, True)\r\nprint(\"STEP 2 : \", compare_models(traced_model_cpu, traced_model_gpu))\r\nprint(\"STEP 2 : \", compare_models(traced_model_gpu, model_gpu))\r\n\r\ntorch.jit.save(traced_model_cpu, \"model_cpu.pth\")\r\ntorch.jit.save(traced_model_gpu, \"model_gpu.pth\")\r\nprint(\"STEP 3 : \", compare_models(traced_model_cpu, traced_model_gpu))\r\nprint(\"STEP 3 : \", compare_models(traced_model_gpu, model_gpu))\r\n\r\ntraced_model_cpu_loaded = torch.jit.load(\"model_cpu.pth\")\r\ntraced_model_gpu_loaded = torch.jit.load(\"model_gpu.pth\")\r\nprint(\"\\nSTEP 4 : \", compare_models(traced_model_cpu_loaded, model_cpu))\r\nprint(\"\\nSTEP 4 : \", compare_models(traced_model_gpu_loaded, model_cpu))\r\n```\r\n\r\nThis script prints the parameter names (and a small portion of the values) that are different between CPU and GPU.\r\n\r\n## Expected behavior\r\n\r\nIt prints the following output which indicates that the parameters of RNN layers of the model are different between CPU and GPU:\r\n\r\n```\r\n        # PARAMETER :  renet1.rnn.weight_hh_l0\r\n        * GPU :  tensor([-0.5195, -0.7641,  0.7705,  0.6834,  0.0681], device='cuda:0')\r\n        * CPU :  tensor([ 0.0051,  0.0621,  0.0859, -0.0506, -0.1000])\r\n\r\n        # PARAMETER :  renet1.rnn.bias_ih_l0\r\n        * GPU :  tensor([0., 0., 0., 0., 0.], device='cuda:0')\r\n        * CPU :  tensor([-0.0004,  0.0263,  0.0537, -0.0810,  0.0930])\r\n\r\n        # PARAMETER :  renet1.rnn.bias_hh_l0\r\n        * GPU :  tensor([0., 0., 0., 0., 0.], device='cuda:0')\r\n        * CPU :  tensor([ 0.0439, -0.0063,  0.0250,  0.0784,  0.0408])\r\n\r\n        # PARAMETER :  renet1.rnn.weight_ih_l0_reverse\r\n        * GPU :  tensor([0., 0., 0., 0., 0.], device='cuda:0')\r\n        * CPU :  tensor([-0.0755, -0.0730, -0.0435, -0.0522, -0.0979])\r\n\r\n        # PARAMETER :  renet1.rnn.weight_hh_l0_reverse\r\n        * GPU :  tensor([0., 0., 0., 0., 0.], device='cuda:0')\r\n        * CPU :  tensor([ 0.0104,  0.1401, -0.0695,  0.0870, -0.0896])\r\n\r\n        # PARAMETER :  renet1.rnn.bias_ih_l0_reverse\r\n        * GPU :  tensor([0.0165, 0.0165, 0.0383, 0.0383, 0.0000], device='cuda:0')\r\n        * CPU :  tensor([ 0.0596,  0.1129, -0.1282,  0.0738, -0.0051])\r\n\r\n        # PARAMETER :  renet1.rnn.bias_hh_l0_reverse\r\n        * GPU :  tensor([ 0.0419,  0.0845, -0.0466, -0.1143, -0.0606], device='cuda:0')\r\n        * CPU :  tensor([-0.0844,  0.0941, -0.1149,  0.0188, -0.0276])\r\n```\r\n\r\n## Environment\r\n\r\n```\r\nPyTorch version: 1.0.0\r\nIs debug build: No\r\nCUDA used to build PyTorch: 9.0.176\r\n\r\nOS: Ubuntu 16.04.1 LTS\r\nGCC version: (Ubuntu 5.4.0-6ubuntu1~16.04.10) 5.4.0 20160609\r\nCMake version: version 3.5.1\r\n\r\nPython version: 3.7\r\nIs CUDA available: Yes\r\nCUDA runtime version: Could not collect\r\nGPU models and configuration: GPU 0: GeForce GTX 980M\r\nNvidia driver version: 396.44\r\ncuDNN version: Probably one of the following:\r\n/usr/local/cuda-8.0/lib64/libcudnn.so\r\n/usr/local/cuda-8.0/lib64/libcudnn.so.6\r\n/usr/local/cuda-8.0/lib64/libcudnn.so.6.0.21\r\n/usr/local/cuda-8.0/lib64/libcudnn_static.a\r\n/usr/local/cuda-9.0/targets/x86_64-linux/lib/libcudnn.so\r\n/usr/local/cuda-9.0/targets/x86_64-linux/lib/libcudnn.so.7\r\n/usr/local/cuda-9.0/targets/x86_64-linux/lib/libcudnn.so.7.1.4\r\n/usr/local/cuda-9.0/targets/x86_64-linux/lib/libcudnn_static.a\r\n\r\nVersions of relevant libraries:\r\n[pip] Could not collect\r\n[conda] blas                      1.0                         mkl  \r\n[conda] mkl                       2019.1                      144  \r\n[conda] mkl_fft                   1.0.6            py37hd81dba3_0  \r\n[conda] mkl_random                1.0.2            py37hd81dba3_0  \r\n[conda] pytorch                   1.0.0           py3.7_cuda9.0.176_cudnn7.4.1_1    pytorch\r\n[conda] torchvision               0.2.1                      py_2    pytorch\r\n```",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/15271/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/15271/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/15240",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/15240/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/15240/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/15240/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/15240",
        "id": 391304598,
        "node_id": "MDU6SXNzdWUzOTEzMDQ1OTg=",
        "number": 15240,
        "title": "[JIT] LSTM and LSTMCell",
        "user": {
            "login": "bmccann",
            "id": 3359909,
            "node_id": "MDQ6VXNlcjMzNTk5MDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3359909?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bmccann",
            "html_url": "https://github.com/bmccann",
            "followers_url": "https://api.github.com/users/bmccann/followers",
            "following_url": "https://api.github.com/users/bmccann/following{/other_user}",
            "gists_url": "https://api.github.com/users/bmccann/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bmccann/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bmccann/subscriptions",
            "organizations_url": "https://api.github.com/users/bmccann/orgs",
            "repos_url": "https://api.github.com/users/bmccann/repos",
            "events_url": "https://api.github.com/users/bmccann/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bmccann/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "driazati",
            "id": 9407960,
            "node_id": "MDQ6VXNlcjk0MDc5NjA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9407960?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/driazati",
            "html_url": "https://github.com/driazati",
            "followers_url": "https://api.github.com/users/driazati/followers",
            "following_url": "https://api.github.com/users/driazati/following{/other_user}",
            "gists_url": "https://api.github.com/users/driazati/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/driazati/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/driazati/subscriptions",
            "organizations_url": "https://api.github.com/users/driazati/orgs",
            "repos_url": "https://api.github.com/users/driazati/repos",
            "events_url": "https://api.github.com/users/driazati/events{/privacy}",
            "received_events_url": "https://api.github.com/users/driazati/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "driazati",
                "id": 9407960,
                "node_id": "MDQ6VXNlcjk0MDc5NjA=",
                "avatar_url": "https://avatars.githubusercontent.com/u/9407960?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/driazati",
                "html_url": "https://github.com/driazati",
                "followers_url": "https://api.github.com/users/driazati/followers",
                "following_url": "https://api.github.com/users/driazati/following{/other_user}",
                "gists_url": "https://api.github.com/users/driazati/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/driazati/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/driazati/subscriptions",
                "organizations_url": "https://api.github.com/users/driazati/orgs",
                "repos_url": "https://api.github.com/users/driazati/repos",
                "events_url": "https://api.github.com/users/driazati/events{/privacy}",
                "received_events_url": "https://api.github.com/users/driazati/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 2,
        "created_at": "2018-12-14T22:46:43Z",
        "updated_at": "2018-12-20T10:30:30Z",
        "closed_at": "2018-12-20T10:30:30Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\nJIT traces a wrapper around an LSTMCell that unrolls it over time. Also saves to .pt. But, on loading, gives error.\r\n\r\n## To Reproduce\r\n\r\n```\r\nimport torch\r\nimport torch.nn.functional as F\r\nfrom torch import nn\r\n\r\nclass LSTM(nn.Module):\r\n\r\n    def __init__(self, d_in, d_hid, num_layers=1):\r\n        super().__init__()\r\n        self.rnn = nn.LSTMCell(d_in, d_hid)\r\n\r\n    def forward(self, input, hidden):\r\n        for emb_t in input.split(1, dim=1):\r\n            hidden = self.rnn(emb_t.squeeze(1), hidden)\r\n        return hidden\r\n\r\nB, T, C = 1, 5, 3 # batch_size, seq_len, channels\r\nf = LSTM(C, C)\r\nz = torch.randn((B, T, C))\r\nh = torch.randn((B, C))\r\nc = torch.randn((B, C))\r\n\r\ninputs = (z, (h, c))\r\ny = f(*inputs)\r\n\r\nprint('tracing')\r\ntf = torch.jit.trace(f, inputs)\r\nty = tf(*inputs)\r\n\r\nprint('saving')\r\ntf.save('tf.pt')\r\n\r\nprint('loading')\r\ntfl = torch.jit.load('tf.pt')\r\ntyl = tfl(*inputs)\r\n```\r\n\r\n## Error Message\r\n\r\n> tracing\r\nsaving\r\nloading\r\nTraceback (most recent call last):\r\n  File \"/decaNLP/trace_lstm_decoder.py\", line 33, in <module>\r\n    tfl = torch.jit.load('/decaNLP/tf.pt')\r\n  File \"/opt/conda/lib/python3.7/site-packages/torch/jit/__init__.py\", line 131, in load\r\n    torch._C.import_ir_module(module_lookup, f, map_location)\r\nRuntimeError: \r\nattribute lookup is not defined on builtin:\r\nop_version_set = 0\r\ndef forward(self,\r\n    self: Tensor,\r\n    _0: Tuple[Tensor, Tensor]) -> Tuple[Tensor, Tensor]:\r\n  hx_1, hx_2, = _0\r\n  emb_t_1, emb_t_2, emb_t_3, emb_t_4, emb_t, = torch.split(self, 1, 1)\r\n  input_1 = torch.squeeze(emb_t_1, 1)\r\n  _1 = torch.addmm(self.rnn.bias_hh, hx_1, torch.t(self.rnn.weight_hh), beta=1, alpha=1)\r\n                   ~~~~~~~~~~~~~~~~ <--- HERE\r\n  _2 = torch.addmm(self.rnn.bias_ih, input_1, torch.t(self.rnn.weight_ih), beta=1, alpha=1)\r\n  _3 = torch.chunk(torch.add(_2, _1, alpha=1), 4, 1)\r\n  _4, _5, _6, _7, = _3\r\n  _8 = torch.sigmoid(_4)\r\n  _9 = torch.sigmoid(_5)\r\n  _10 = torch.tanh(_6)\r\n  _11 = torch.sigmoid(_7)\r\n  _12 = torch.mul(_8, _10)\r\n  hx_4 = torch.add(torch.mul(_9, hx_2), _12, alpha=1)\r\n\r\n## Expected behavior\r\n\r\nI would expect this to work. If there is some reason why it cannot, then I would expect it to error or warn on tracing or saving. If can't have that either, I would expect it to have a more informative error on loading.\r\n\r\n## Environment\r\n\r\n - PyTorch Version: 1.0\r\n - OS (e.g., Linux): Linux\r\n - How you installed PyTorch (`conda`, `pip`, source): conda\r\n - Build command you used (if compiling from source): N/A\r\n - Python version: 3.7\r\n - CUDA/cuDNN version: >9\r\n - GPU models and configuration: N/A\r\n - Any other relevant information: N/A\r\n",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/15240/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/15240/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/15216",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/15216/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/15216/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/15216/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/15216",
        "id": 391084989,
        "node_id": "MDU6SXNzdWUzOTEwODQ5ODk=",
        "number": 15216,
        "title": "Problem \"torch.jit.trace()\"ing pretrained Inception_v3 model",
        "user": {
            "login": "ShahriarRezghi",
            "id": 24262836,
            "node_id": "MDQ6VXNlcjI0MjYyODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/24262836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ShahriarRezghi",
            "html_url": "https://github.com/ShahriarRezghi",
            "followers_url": "https://api.github.com/users/ShahriarRezghi/followers",
            "following_url": "https://api.github.com/users/ShahriarRezghi/following{/other_user}",
            "gists_url": "https://api.github.com/users/ShahriarRezghi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ShahriarRezghi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ShahriarRezghi/subscriptions",
            "organizations_url": "https://api.github.com/users/ShahriarRezghi/orgs",
            "repos_url": "https://api.github.com/users/ShahriarRezghi/repos",
            "events_url": "https://api.github.com/users/ShahriarRezghi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ShahriarRezghi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 443484135,
                "node_id": "MDU6TGFiZWw0NDM0ODQxMzU=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/high%20priority",
                "name": "high priority",
                "color": "F22613",
                "default": false,
                "description": null
            },
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "zdevito",
            "id": 370202,
            "node_id": "MDQ6VXNlcjM3MDIwMg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/370202?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zdevito",
            "html_url": "https://github.com/zdevito",
            "followers_url": "https://api.github.com/users/zdevito/followers",
            "following_url": "https://api.github.com/users/zdevito/following{/other_user}",
            "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions",
            "organizations_url": "https://api.github.com/users/zdevito/orgs",
            "repos_url": "https://api.github.com/users/zdevito/repos",
            "events_url": "https://api.github.com/users/zdevito/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zdevito/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "zdevito",
                "id": 370202,
                "node_id": "MDQ6VXNlcjM3MDIwMg==",
                "avatar_url": "https://avatars.githubusercontent.com/u/370202?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/zdevito",
                "html_url": "https://github.com/zdevito",
                "followers_url": "https://api.github.com/users/zdevito/followers",
                "following_url": "https://api.github.com/users/zdevito/following{/other_user}",
                "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions",
                "organizations_url": "https://api.github.com/users/zdevito/orgs",
                "repos_url": "https://api.github.com/users/zdevito/repos",
                "events_url": "https://api.github.com/users/zdevito/events{/privacy}",
                "received_events_url": "https://api.github.com/users/zdevito/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 4,
        "created_at": "2018-12-14T12:05:22Z",
        "updated_at": "2020-04-12T10:04:05Z",
        "closed_at": "2019-01-03T20:29:44Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\nHi. I was trying to make inception model available in c++ interface so I was trying to build a script module of it but this simple code fails:\r\n\r\n``` python\r\nimport torch\r\nimport torchvision\r\n\r\n# An instance of your model.\r\nmodel = torchvision.models.inception_v3(pretrained=True)\r\n\r\n# An example input you would normally provide to your model's forward() method.\r\nexample = torch.rand(1, 3, 299, 299)\r\n\r\n# Use torch.jit.trace to generate a torch.jit.ScriptModule via tracing.\r\ntraced_script_module = torch.jit.trace(model, example)\r\n```\r\noutput:\r\nTraceback (most recent call last):\r\n  File \"inception-to-script.py\", line 11, in <module>\r\n    traced_script_module = torch.jit.trace(model, example)\r\n  File \"/home/shahriar/.local/lib/python3.7/site-packages/torch/jit/__init__.py\", line 635, in trace\r\n    var_lookup_fn, _force_outplace)\r\n  File \"/home/shahriar/.local/lib/python3.7/site-packages/torch/nn/modules/module.py\", line 487, in __call__\r\n    result = self._slow_forward(*input, **kwargs)\r\n  File \"/home/shahriar/.local/lib/python3.7/site-packages/torch/nn/modules/module.py\", line 477, in _slow_forward\r\n    result = self.forward(*input, **kwargs)\r\n  File \"/home/shahriar/.local/lib/python3.7/site-packages/torchvision/models/inception.py\", line 109, in forward\r\n    aux = self.AuxLogits(x)\r\n  File \"/home/shahriar/.local/lib/python3.7/site-packages/torch/nn/modules/module.py\", line 487, in __call__\r\n    result = self._slow_forward(*input, **kwargs)\r\n  File \"/home/shahriar/.local/lib/python3.7/site-packages/torch/nn/modules/module.py\", line 477, in _slow_forward\r\n    result = self.forward(*input, **kwargs)\r\n  File \"/home/shahriar/.local/lib/python3.7/site-packages/torchvision/models/inception.py\", line 308, in forward\r\n    x = self.conv1(x)\r\n  File \"/home/shahriar/.local/lib/python3.7/site-packages/torch/nn/modules/module.py\", line 487, in __call__\r\n    result = self._slow_forward(*input, **kwargs)\r\n  File \"/home/shahriar/.local/lib/python3.7/site-packages/torch/nn/modules/module.py\", line 477, in _slow_forward\r\n    result = self.forward(*input, **kwargs)\r\n  File \"/home/shahriar/.local/lib/python3.7/site-packages/torchvision/models/inception.py\", line 326, in forward\r\n    x = self.bn(x)\r\n  File \"/home/shahriar/.local/lib/python3.7/site-packages/torch/nn/modules/module.py\", line 487, in __call__\r\n    result = self._slow_forward(*input, **kwargs)\r\n  File \"/home/shahriar/.local/lib/python3.7/site-packages/torch/nn/modules/module.py\", line 477, in _slow_forward\r\n    result = self.forward(*input, **kwargs)\r\n  File \"/home/shahriar/.local/lib/python3.7/site-packages/torch/nn/modules/batchnorm.py\", line 76, in forward\r\n    exponential_average_factor, self.eps)\r\n  File \"/home/shahriar/.local/lib/python3.7/site-packages/torch/nn/functional.py\", line 1619, in batch_norm\r\n    raise ValueError('Expected more than 1 value per channel when training, got input size {}'.format(size))\r\nValueError: Expected more than 1 value per channel when training, got input size torch.Size([1, 768, 1, 1])\r\n\r\nI also tried with different input size (1, 3, 224, 224) but it failed. output:\r\nTraceback (most recent call last):\r\n  File \"inception-to-script.py\", line 11, in <module>\r\n    traced_script_module = torch.jit.trace(model, example)\r\n  File \"/home/shahriar/.local/lib/python3.7/site-packages/torch/jit/__init__.py\", line 635, in trace\r\n    var_lookup_fn, _force_outplace)\r\n  File \"/home/shahriar/.local/lib/python3.7/site-packages/torch/nn/modules/module.py\", line 487, in __call__\r\n    result = self._slow_forward(*input, **kwargs)\r\n  File \"/home/shahriar/.local/lib/python3.7/site-packages/torch/nn/modules/module.py\", line 477, in _slow_forward\r\n    result = self.forward(*input, **kwargs)\r\n  File \"/home/shahriar/.local/lib/python3.7/site-packages/torchvision/models/inception.py\", line 109, in forward\r\n    aux = self.AuxLogits(x)\r\n  File \"/home/shahriar/.local/lib/python3.7/site-packages/torch/nn/modules/module.py\", line 487, in __call__\r\n    result = self._slow_forward(*input, **kwargs)\r\n  File \"/home/shahriar/.local/lib/python3.7/site-packages/torch/nn/modules/module.py\", line 477, in _slow_forward\r\n    result = self.forward(*input, **kwargs)\r\n  File \"/home/shahriar/.local/lib/python3.7/site-packages/torchvision/models/inception.py\", line 308, in forward\r\n    x = self.conv1(x)\r\n  File \"/home/shahriar/.local/lib/python3.7/site-packages/torch/nn/modules/module.py\", line 487, in __call__\r\n    result = self._slow_forward(*input, **kwargs)\r\n  File \"/home/shahriar/.local/lib/python3.7/site-packages/torch/nn/modules/module.py\", line 477, in _slow_forward\r\n    result = self.forward(*input, **kwargs)\r\n  File \"/home/shahriar/.local/lib/python3.7/site-packages/torchvision/models/inception.py\", line 325, in forward\r\n    x = self.conv(x)\r\n  File \"/home/shahriar/.local/lib/python3.7/site-packages/torch/nn/modules/module.py\", line 487, in __call__\r\n    result = self._slow_forward(*input, **kwargs)\r\n  File \"/home/shahriar/.local/lib/python3.7/site-packages/torch/nn/modules/module.py\", line 477, in _slow_forward\r\n    result = self.forward(*input, **kwargs)\r\n  File \"/home/shahriar/.local/lib/python3.7/site-packages/torch/nn/modules/conv.py\", line 320, in forward\r\n    self.padding, self.dilation, self.groups)\r\nRuntimeError: std::exception\r\n\r\nI don't know if this is a bug or I did something wrong but this happened. I also tried it with resnet but these was no problem there\r\n\r\n## Environment\r\n\r\nOS: fedora\r\nPyTorch version: 1.0.0 stable\r\nInstallation method: pip3\r\nCUDA: not using cuda. installed the cpu version",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/15216/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/15216/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/15135",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/15135/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/15135/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/15135/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/15135",
        "id": 390397399,
        "node_id": "MDU6SXNzdWUzOTAzOTczOTk=",
        "number": 15135,
        "title": "Printing Tensor from traced module results in TypeError: rsplit() takes no keyword arguments",
        "user": {
            "login": "1Reinier",
            "id": 2734335,
            "node_id": "MDQ6VXNlcjI3MzQzMzU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2734335?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/1Reinier",
            "html_url": "https://github.com/1Reinier",
            "followers_url": "https://api.github.com/users/1Reinier/followers",
            "following_url": "https://api.github.com/users/1Reinier/following{/other_user}",
            "gists_url": "https://api.github.com/users/1Reinier/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/1Reinier/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/1Reinier/subscriptions",
            "organizations_url": "https://api.github.com/users/1Reinier/orgs",
            "repos_url": "https://api.github.com/users/1Reinier/repos",
            "events_url": "https://api.github.com/users/1Reinier/events{/privacy}",
            "received_events_url": "https://api.github.com/users/1Reinier/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "soumith",
            "id": 1310570,
            "node_id": "MDQ6VXNlcjEzMTA1NzA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1310570?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/soumith",
            "html_url": "https://github.com/soumith",
            "followers_url": "https://api.github.com/users/soumith/followers",
            "following_url": "https://api.github.com/users/soumith/following{/other_user}",
            "gists_url": "https://api.github.com/users/soumith/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/soumith/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/soumith/subscriptions",
            "organizations_url": "https://api.github.com/users/soumith/orgs",
            "repos_url": "https://api.github.com/users/soumith/repos",
            "events_url": "https://api.github.com/users/soumith/events{/privacy}",
            "received_events_url": "https://api.github.com/users/soumith/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "soumith",
                "id": 1310570,
                "node_id": "MDQ6VXNlcjEzMTA1NzA=",
                "avatar_url": "https://avatars.githubusercontent.com/u/1310570?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/soumith",
                "html_url": "https://github.com/soumith",
                "followers_url": "https://api.github.com/users/soumith/followers",
                "following_url": "https://api.github.com/users/soumith/following{/other_user}",
                "gists_url": "https://api.github.com/users/soumith/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/soumith/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/soumith/subscriptions",
                "organizations_url": "https://api.github.com/users/soumith/orgs",
                "repos_url": "https://api.github.com/users/soumith/repos",
                "events_url": "https://api.github.com/users/soumith/events{/privacy}",
                "received_events_url": "https://api.github.com/users/soumith/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2018-12-12T20:32:57Z",
        "updated_at": "2018-12-17T21:19:24Z",
        "closed_at": "2018-12-17T21:19:24Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\nPython 2.7 errors out on printing tensor generate by traced module.\r\n\r\n```python-traceback\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-9-43405c9b8ee8> in <module>()\r\n----> 1 print features\r\n\r\n/.../lib/python2.7/site-packages/torch/tensor.pyc in __repr__(self)\r\n     67         else:\r\n     68             if hasattr(sys.stdout, 'encoding'):\r\n---> 69                 return torch._tensor_str._str(self).encode(\r\n     70                     sys.stdout.encoding or 'UTF-8', 'replace')\r\n     71             else:\r\n\r\n/.../lib/python2.7/site-packages/torch/_tensor_str.pyc in _str(self)\r\n    283         name = type(self.grad_fn).__name__\r\n    284         if name == 'CppFunction':\r\n--> 285             name = self.grad_fn.name().rsplit('::', maxsplit=1)[-1]\r\n    286         suffixes.append('grad_fn=<{}>'.format(name))\r\n    287     elif self.requires_grad:\r\n\r\nTypeError: rsplit() takes no keyword arguments\r\n```\r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior:\r\n\r\n```python\r\nimport torch\r\nimport torchvision\r\n\r\nresnet = torchvision.models.resnet18()\r\nsample_image = torch.randn(1, 3, 224, 224)\r\nresnet_jit = torch.jit.trace(resnet, sample_image)\r\n\r\nfeatures = resnet_jit(sample_image)\r\nprint features\r\n\r\n```\r\n\r\n## Expected behavior\r\n\r\nPrinted representation of the tensor contents as a string.\r\n\r\n## Environment\r\n\r\nPyTorch version: 1.0.0\r\nIs debug build: No\r\nCUDA used to build PyTorch: 9.0.176\r\n\r\nOS: Ubuntu 16.04.4 LTS\r\nGCC version: (Ubuntu 5.5.0-12ubuntu1~16.04) 5.5.0 20171010\r\nCMake version: version 3.5.2\r\n\r\nPython version: 2.7\r\nIs CUDA available: Yes\r\nCUDA runtime version: 9.0.225\r\nGPU models and configuration:\r\nGPU 0: GeForce GTX 1080 Ti\r\nGPU 1: GeForce GTX 1080 Ti\r\nGPU 2: GeForce GTX 1080 Ti\r\n\r\nNvidia driver version: 390.48\r\ncuDNN version: Probably one of the following:\r\n/usr/local/cuda-9.0/targets/x86_64-linux/lib/libcudnn.so.7.0.4\r\n/usr/local/cuda-9.0/targets/x86_64-linux/lib/libcudnn.so.7.0.5\r\n/usr/local/cuda-9.0/targets/x86_64-linux/lib/libcudnn_static.a\r\n/usr/local/cuda-9.0/targets/x86_64-linux/lib/libcudnn_static.a_for_7.0.4\r\n\r\nVersions of relevant libraries:\r\n[pip] numpy (1.14.5)\r\n[pip] torch (1.0.0)\r\n[pip] torchfile (0.1.0)\r\n[pip] torchvision (0.2.1)\r\n[conda] blas                      1.0                         mkl\r\n[conda] mkl                       2018.0.3                      1\r\n[conda] mkl_fft                   1.0.4            py27h4414c95_1\r\n[conda] mkl_random                1.0.1            py27h4414c95_1\r\n[conda] pytorch                   1.0.0           py2.7_cuda9.0.176_cudnn7.4.1_1    pytorch\r\n[conda] torchfile                 0.1.0                     <pip>\r\n[conda] torchvision               0.2.1                      py_2    pytorch\r\n## Additional context\r\n\r\n<!-- Add any other context about the problem here. -->\r\n",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/15135/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/15135/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/15119",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/15119/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/15119/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/15119/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/15119",
        "id": 390201987,
        "node_id": "MDU6SXNzdWUzOTAyMDE5ODc=",
        "number": 15119,
        "title": "[jit] warnings.warn is always printed",
        "user": {
            "login": "tunz",
            "id": 7830853,
            "node_id": "MDQ6VXNlcjc4MzA4NTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7830853?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tunz",
            "html_url": "https://github.com/tunz",
            "followers_url": "https://api.github.com/users/tunz/followers",
            "following_url": "https://api.github.com/users/tunz/following{/other_user}",
            "gists_url": "https://api.github.com/users/tunz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tunz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tunz/subscriptions",
            "organizations_url": "https://api.github.com/users/tunz/orgs",
            "repos_url": "https://api.github.com/users/tunz/repos",
            "events_url": "https://api.github.com/users/tunz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tunz/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "zou3519",
            "id": 5652049,
            "node_id": "MDQ6VXNlcjU2NTIwNDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5652049?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zou3519",
            "html_url": "https://github.com/zou3519",
            "followers_url": "https://api.github.com/users/zou3519/followers",
            "following_url": "https://api.github.com/users/zou3519/following{/other_user}",
            "gists_url": "https://api.github.com/users/zou3519/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zou3519/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zou3519/subscriptions",
            "organizations_url": "https://api.github.com/users/zou3519/orgs",
            "repos_url": "https://api.github.com/users/zou3519/repos",
            "events_url": "https://api.github.com/users/zou3519/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zou3519/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "zou3519",
                "id": 5652049,
                "node_id": "MDQ6VXNlcjU2NTIwNDk=",
                "avatar_url": "https://avatars.githubusercontent.com/u/5652049?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/zou3519",
                "html_url": "https://github.com/zou3519",
                "followers_url": "https://api.github.com/users/zou3519/followers",
                "following_url": "https://api.github.com/users/zou3519/following{/other_user}",
                "gists_url": "https://api.github.com/users/zou3519/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/zou3519/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zou3519/subscriptions",
                "organizations_url": "https://api.github.com/users/zou3519/orgs",
                "repos_url": "https://api.github.com/users/zou3519/repos",
                "events_url": "https://api.github.com/users/zou3519/events{/privacy}",
                "received_events_url": "https://api.github.com/users/zou3519/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 3,
        "created_at": "2018-12-12T12:22:34Z",
        "updated_at": "2019-01-06T07:42:44Z",
        "closed_at": "2018-12-12T19:36:56Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\n## To Reproduce\r\n\r\nSteps to reproduce the behavior:\r\n\r\n```python\r\nimport torch\r\nimport torch.nn as nn\r\n\r\n\r\nclass M(torch.jit.ScriptModule):\r\n\r\n    def __init__(self):\r\n        super(M, self).__init__()\r\n        self.softmax = nn.Softmax(dim=0)\r\n\r\n    @torch.jit.script_method\r\n    def forward(self, v):\r\n        return self.softmax(v)\r\n\r\ni = torch.Tensor(2)\r\nm = M()\r\no = m(i)\r\n```\r\n\r\n```\r\n/home/tunz/anaconda3/envs/torchdev/lib/python3.7/site-packages/torch/nn/modules/module.py:489: RuntimeWarning: Format options are not supported.\r\n  result = self.forward(*input, **kwargs)\r\n/home/tunz/anaconda3/envs/torchdev/lib/python3.7/site-packages/torch/nn/modules/module.py:489: RuntimeWarning: Implicit dimension choice for softmax has been deprecated. Change the call to include dim=X as an argument.\r\n  result = self.forward(*input, **kwargs)\r\n```\r\n\r\n## Expected behavior\r\n\r\nno warnings\r\n\r\n## Environment\r\n```\r\nPyTorch version: 1.0.0a0+479481b\r\nIs debug build: No\r\nCUDA used to build PyTorch: 9.2.148\r\n\r\nOS: Ubuntu 18.04.1 LTS\r\nGCC version: (Ubuntu 7.3.0-27ubuntu1~18.04) 7.3.0\r\nCMake version: version 3.12.2\r\n\r\nPython version: 3.7\r\nIs CUDA available: Yes\r\nCUDA runtime version: 9.2.148\r\nGPU models and configuration: GPU 0: GeForce GTX 1080 Ti\r\nNvidia driver version: 410.73\r\ncuDNN version: Probably one of the following:\r\n/usr/local/cuda-9.2/lib64/libcudnn.so\r\n/usr/local/cuda-9.2/lib64/libcudnn.so.7\r\n/usr/local/cuda-9.2/lib64/libcudnn.so.7.0.3\r\n/usr/local/cuda-9.2/lib64/libcudnn_static.a\r\n\r\nVersions of relevant libraries:\r\n[pip] Could not collect\r\n[conda] blas                      1.0                         mkl\r\n[conda] magma-cuda92              2.4.0                         1    pytorch\r\n[conda] mkl                       2018.0.3                      1\r\n[conda] mkl-include               2019.1                      144\r\n[conda] mkl_fft                   1.0.6            py37h7dd41cf_0\r\n[conda] mkl_random                1.0.1            py37h4414c95_1\r\n[conda] torch                     1.0.0a0+db5d313           <pip>\r\n[conda] torch                     1.0.0a0+479481b           <pip>\r\n```\r\n## Additional context\r\n\r\nA warning about `dim` parameter is always printed even if `dim` is not None.\r\nhttps://github.com/pytorch/pytorch/blob/00a4c8d41cf8a7504a4300b3fc741d8a4ccc5795/torch/nn/functional.py#L1183-L1184\r\nhttps://github.com/pytorch/pytorch/blob/00a4c8d41cf8a7504a4300b3fc741d8a4ccc5795/torch/nn/functional.py#L1114-L1118\r\n\r\nAfter some debugging, I found that it's actually taking correct paths that don't have warnings. it's just printing every warnings at the start of each function regardless of actual paths. I guess some jit optimization pass is reordering `at::warn` op.",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/15119/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/15119/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/15052",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/15052/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/15052/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/15052/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/15052",
        "id": 389646386,
        "node_id": "MDU6SXNzdWUzODk2NDYzODY=",
        "number": 15052,
        "title": "Tracer doesn't work with join/wait",
        "user": {
            "login": "highker",
            "id": 2192913,
            "node_id": "MDQ6VXNlcjIxOTI5MTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2192913?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/highker",
            "html_url": "https://github.com/highker",
            "followers_url": "https://api.github.com/users/highker/followers",
            "following_url": "https://api.github.com/users/highker/following{/other_user}",
            "gists_url": "https://api.github.com/users/highker/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/highker/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/highker/subscriptions",
            "organizations_url": "https://api.github.com/users/highker/orgs",
            "repos_url": "https://api.github.com/users/highker/repos",
            "events_url": "https://api.github.com/users/highker/events{/privacy}",
            "received_events_url": "https://api.github.com/users/highker/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2018-12-11T08:28:45Z",
        "updated_at": "2018-12-18T04:35:47Z",
        "closed_at": "2018-12-18T04:35:47Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "Reported error: `RuntimeError: output 0 of traced region did not have observable data dependence with trace inputs; this probably indicates your program cannot be understood by the tracer.`\r\n\r\nTo reproduce:\r\n```python\r\ndef test_async_script_trace(self):\r\n        class Module(torch.jit.ScriptModule):\r\n            def __init__(self):\r\n                super(Module, self).__init__(False)\r\n\r\n            @torch.jit.script_method\r\n            def forward(self, x):\r\n                future = torch.jit._fork(torch.neg, x)\r\n                outputs = []\r\n                outputs.append(torch.jit._wait(future))\r\n\r\n                return outputs\r\n\r\n        class Tuple(nn.Module):\r\n            def __init__(self):\r\n                super(Tuple, self).__init__()\r\n                self.module = Module()\r\n\r\n            def forward(self, x):\r\n                return tuple(self.module(x))\r\n\r\n        x = torch.rand(3, 4)\r\n        module = torch.jit.trace(Tuple(), (x), _force_outplace=True)\r\n        self.assertEqual(module(x), torch.neg(x))",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/15052/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/15052/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/15038",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/15038/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/15038/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/15038/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/15038",
        "id": 389565099,
        "node_id": "MDU6SXNzdWUzODk1NjUwOTk=",
        "number": 15038,
        "title": "RuntimeError: unknown scalar type during JIT fusion code generation",
        "user": {
            "login": "beichen2012",
            "id": 10824490,
            "node_id": "MDQ6VXNlcjEwODI0NDkw",
            "avatar_url": "https://avatars.githubusercontent.com/u/10824490?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/beichen2012",
            "html_url": "https://github.com/beichen2012",
            "followers_url": "https://api.github.com/users/beichen2012/followers",
            "following_url": "https://api.github.com/users/beichen2012/following{/other_user}",
            "gists_url": "https://api.github.com/users/beichen2012/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/beichen2012/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/beichen2012/subscriptions",
            "organizations_url": "https://api.github.com/users/beichen2012/orgs",
            "repos_url": "https://api.github.com/users/beichen2012/repos",
            "events_url": "https://api.github.com/users/beichen2012/events{/privacy}",
            "received_events_url": "https://api.github.com/users/beichen2012/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2018-12-11T02:03:33Z",
        "updated_at": "2018-12-12T17:41:22Z",
        "closed_at": "2018-12-12T17:41:21Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "python3.6(anaconda) + pytorch v1.0.0\r\n\r\nthe torch script code(torch.jit.ScriptModule) had been compiled. but when forward, I meet the error: \r\nRuntimeError: unknown scalar type during JIT fusion code generation\u3002\r\n\r\nI have no idea about it.\r\nDoes any one could me ? please.\r\n\r\nthank you.\r\n",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/15038/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/15038/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/14704",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/14704/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/14704/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/14704/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/14704",
        "id": 386869716,
        "node_id": "MDU6SXNzdWUzODY4Njk3MTY=",
        "number": 14704,
        "title": "Flaky test after TestJit test_async_script times out",
        "user": {
            "login": "ezyang",
            "id": 13564,
            "node_id": "MDQ6VXNlcjEzNTY0",
            "avatar_url": "https://avatars.githubusercontent.com/u/13564?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ezyang",
            "html_url": "https://github.com/ezyang",
            "followers_url": "https://api.github.com/users/ezyang/followers",
            "following_url": "https://api.github.com/users/ezyang/following{/other_user}",
            "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions",
            "organizations_url": "https://api.github.com/users/ezyang/orgs",
            "repos_url": "https://api.github.com/users/ezyang/repos",
            "events_url": "https://api.github.com/users/ezyang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ezyang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "highker",
            "id": 2192913,
            "node_id": "MDQ6VXNlcjIxOTI5MTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2192913?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/highker",
            "html_url": "https://github.com/highker",
            "followers_url": "https://api.github.com/users/highker/followers",
            "following_url": "https://api.github.com/users/highker/following{/other_user}",
            "gists_url": "https://api.github.com/users/highker/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/highker/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/highker/subscriptions",
            "organizations_url": "https://api.github.com/users/highker/orgs",
            "repos_url": "https://api.github.com/users/highker/repos",
            "events_url": "https://api.github.com/users/highker/events{/privacy}",
            "received_events_url": "https://api.github.com/users/highker/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "highker",
                "id": 2192913,
                "node_id": "MDQ6VXNlcjIxOTI5MTM=",
                "avatar_url": "https://avatars.githubusercontent.com/u/2192913?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/highker",
                "html_url": "https://github.com/highker",
                "followers_url": "https://api.github.com/users/highker/followers",
                "following_url": "https://api.github.com/users/highker/following{/other_user}",
                "gists_url": "https://api.github.com/users/highker/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/highker/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/highker/subscriptions",
                "organizations_url": "https://api.github.com/users/highker/orgs",
                "repos_url": "https://api.github.com/users/highker/repos",
                "events_url": "https://api.github.com/users/highker/events{/privacy}",
                "received_events_url": "https://api.github.com/users/highker/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 7,
        "created_at": "2018-12-03T15:27:48Z",
        "updated_at": "2018-12-11T19:48:33Z",
        "closed_at": "2018-12-11T19:48:33Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "Sample log: https://circleci.com/gh/pytorch/pytorch/343691?utm_campaign=vcs-integration-link&utm_medium=referral&utm_source=github-build-link/console\r\n\r\n```\r\nDec 01 02:15:18 Running test_indexing_cuda ... [2018-12-01 02:15:18.644554]\r\nDec 01 02:15:18 Skipping test_indexing_cuda.py\r\nDec 01 02:15:18 Running test_jit ... [2018-12-01 02:15:18.902428]\r\nDec 01 02:15:19 test_async_python (__main__.TestAsync) ... ok\r\nDec 01 02:15:19 test_async_script (__main__.TestAsync) ... ok\r\nToo long with no output (exceeded 1h30m0s)\r\n```",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/14704/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/14704/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/14674",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/14674/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/14674/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/14674/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/14674",
        "id": 386524680,
        "node_id": "MDU6SXNzdWUzODY1MjQ2ODA=",
        "number": 14674,
        "title": "Broadcasting rand_like inside fusion group produces wrong results",
        "user": {
            "login": "ngimel",
            "id": 15841449,
            "node_id": "MDQ6VXNlcjE1ODQxNDQ5",
            "avatar_url": "https://avatars.githubusercontent.com/u/15841449?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ngimel",
            "html_url": "https://github.com/ngimel",
            "followers_url": "https://api.github.com/users/ngimel/followers",
            "following_url": "https://api.github.com/users/ngimel/following{/other_user}",
            "gists_url": "https://api.github.com/users/ngimel/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ngimel/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ngimel/subscriptions",
            "organizations_url": "https://api.github.com/users/ngimel/orgs",
            "repos_url": "https://api.github.com/users/ngimel/repos",
            "events_url": "https://api.github.com/users/ngimel/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ngimel/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2018-12-02T04:10:56Z",
        "updated_at": "2018-12-04T16:57:34Z",
        "closed_at": "2018-12-04T16:57:34Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\nWith torch.jit.script, if torch.rand_like is in the fusion group, and output of rand_like is broadcasted, it behaves as if no broadcast happened, generating a new value for each element\r\n\r\n## To Reproduce\r\n```\r\nimport torch\r\nimport torch.jit\r\n\r\ndef fn1(x, y):\r\n    r = torch.rand_like(y)\r\n    return r*x\r\n\r\ndef traceandprint(f, inputs):\r\n   traced_fn = torch.jit.script(f, inputs)\r\n   out = traced_fn(*inputs)\r\n   print(traced_fn.graph_for(*inputs))\r\n   return traced_fn, out\r\n\r\n\r\nx=torch.ones(5,5, device=\"cuda\")\r\ny=torch.ones(5, device=\"cuda\")\r\nfn, out = traceandprint(fn1, (x,y))\r\nprint(fn(x,y))\r\nprint(fn1(x,y))\r\n```\r\nOutput\r\n```\r\ngraph(%x : Float(*, *)\r\n      %y : Float(*)) {\r\n  %4 : Float(*, *) = prim::FusionGroup_0(%x, %y)\r\n  return (%4);\r\n}\r\nwith prim::FusionGroup_0 = graph(%1 : Float(*, *)\r\n      %3 : Float(*)) {\r\n  %r : Float(*) = aten::rand_like(%3)\r\n  %2 : Float(*, *) = aten::mul(%r, %1)\r\n  return (%2);\r\n}\r\n\r\ntensor([[0.7152, 0.3450, 0.4474, 0.5837, 0.8859],\r\n        [0.2538, 0.5151, 0.8275, 0.5852, 0.5209],\r\n        [0.7456, 0.8118, 0.7251, 0.0015, 0.4245],\r\n        [0.9690, 0.8169, 0.3227, 0.9178, 0.6024],\r\n        [0.4949, 0.5693, 0.9874, 0.8518, 0.9711]], device='cuda:0')\r\ntensor([[0.1896, 0.1443, 0.0310, 0.7872, 0.4640],\r\n        [0.1896, 0.1443, 0.0310, 0.7872, 0.4640],\r\n        [0.1896, 0.1443, 0.0310, 0.7872, 0.4640],\r\n        [0.1896, 0.1443, 0.0310, 0.7872, 0.4640],\r\n        [0.1896, 0.1443, 0.0310, 0.7872, 0.4640]], device='cuda:0')\r\n```\r\nNote, in the untraced function output random tensor is properly broadcasted, and all the rows of the output are the same. In the traced function output, all the values in the output tensor are different\r\n## Expected behavior\r\nOutputs of traced and untraced functions are similar\r\n## Environment\r\nrecent master\r\n",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/14674/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/14674/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/14590",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/14590/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/14590/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/14590/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/14590",
        "id": 385991214,
        "node_id": "MDU6SXNzdWUzODU5OTEyMTQ=",
        "number": 14590,
        "title": "[JIT] copy_ in script seems broken",
        "user": {
            "login": "jamesr66a",
            "id": 4685384,
            "node_id": "MDQ6VXNlcjQ2ODUzODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4685384?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesr66a",
            "html_url": "https://github.com/jamesr66a",
            "followers_url": "https://api.github.com/users/jamesr66a/followers",
            "following_url": "https://api.github.com/users/jamesr66a/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesr66a/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesr66a/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesr66a/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesr66a/orgs",
            "repos_url": "https://api.github.com/users/jamesr66a/repos",
            "events_url": "https://api.github.com/users/jamesr66a/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesr66a/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2018-11-30T00:53:30Z",
        "updated_at": "2018-11-30T04:33:29Z",
        "closed_at": "2018-11-30T04:33:29Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "Test case:\r\n\r\n```\r\nimport torch\r\n\r\n@torch.jit.script\r\ndef foo(x):\r\n    y = torch.rand(3, 4)\r\n    y.copy_(x)\r\n    return y\r\n\r\n```\r\n\r\nGives me this error:\r\n\r\n```\r\nRuntimeError:\r\narguments for call are not valid:\r\n\r\n  for operator aten::copy_(Tensor t, Tensor other) -> Tensor:\r\n  argument other not provided.\r\n  @torch.jit.script\r\n  def foo(x):\r\n      y = torch.rand(3, 4)\r\n      y.copy_(x)\r\n      ~~~~~~ <--- HERE\r\n      return y\r\n\r\n  for operator aten::copy_(Tensor t, int other) -> Tensor:\r\n  argument other not provided.\r\n  @torch.jit.script\r\n  def foo(x):\r\n      y = torch.rand(3, 4)\r\n      y.copy_(x)\r\n      ~~~~~~ <--- HERE\r\n      return y\r\n\r\n  for operator aten::copy_(Tensor t, float other) -> Tensor:\r\n  argument other not provided.\r\n  @torch.jit.script\r\n  def foo(x):\r\n      y = torch.rand(3, 4)\r\n      y.copy_(x)\r\n      ~~~~~~ <--- HERE\r\n      return y\r\nfor call at:\r\n@torch.jit.script\r\ndef foo(x):\r\n    y = torch.rand(3, 4)\r\n    y.copy_(x)\r\n    ~~~~~~ <--- HERE\r\n    return y\r\n```\r\n\r\nIt looks like we match the `self` parameter on schema by name:\r\nhttps://github.com/pytorch/pytorch/blob/master/torch/csrc/jit/script/compiler.cpp#L618\r\n\r\nBut the schema for copy_ names the first argument `t`: https://github.com/pytorch/pytorch/blob/master/torch/csrc/jit/register_prim_ops.cpp#L924",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/14590/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/14590/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/14483",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/14483/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/14483/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/14483/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/14483",
        "id": 385397777,
        "node_id": "MDU6SXNzdWUzODUzOTc3Nzc=",
        "number": 14483,
        "title": "FusionGroup seems to think that cat nodes broadcast their inputs",
        "user": {
            "login": "apaszke",
            "id": 4583066,
            "node_id": "MDQ6VXNlcjQ1ODMwNjY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4583066?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/apaszke",
            "html_url": "https://github.com/apaszke",
            "followers_url": "https://api.github.com/users/apaszke/followers",
            "following_url": "https://api.github.com/users/apaszke/following{/other_user}",
            "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions",
            "organizations_url": "https://api.github.com/users/apaszke/orgs",
            "repos_url": "https://api.github.com/users/apaszke/repos",
            "events_url": "https://api.github.com/users/apaszke/events{/privacy}",
            "received_events_url": "https://api.github.com/users/apaszke/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2018-11-28T18:19:49Z",
        "updated_at": "2018-11-29T21:06:39Z",
        "closed_at": "2018-11-29T21:06:39Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "The code below causes us to create a FusionGroup which is invalid in 2nd backward (because the chunk outputs don't have equal sizes). It should skip running the kernel, but it returns an output of incorrect size instead.\r\n\r\n```py\r\nimport torch                                                    \r\n                                                                \r\n@torch.jit.script                                               \r\ndef f(x):                                                       \r\n    a, b, c, d = x.chunk(4, 1)                                  \r\n    r = (a * b) + (c * d)                                       \r\n    return x.sum(), r                                           \r\n                                                                \r\nx = torch.randn(2, 10, device='cuda', requires_grad=True)       \r\ns, r = f(x)                                                     \r\ngrad_x, = torch.autograd.grad(s + r.sum(), x, create_graph=True)\r\ngrad_grad_x = torch.autograd.grad(grad_x.sum() + s + r.sum(), x)\r\n```",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/14483/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/14483/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/14026",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/14026/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/14026/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/14026/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/14026",
        "id": 381110235,
        "node_id": "MDU6SXNzdWUzODExMTAyMzU=",
        "number": 14026,
        "title": "[JIT] TestJit.test_lstm_fusion_concat_cuda is flaky",
        "user": {
            "login": "t-vi",
            "id": 20787943,
            "node_id": "MDQ6VXNlcjIwNzg3OTQz",
            "avatar_url": "https://avatars.githubusercontent.com/u/20787943?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/t-vi",
            "html_url": "https://github.com/t-vi",
            "followers_url": "https://api.github.com/users/t-vi/followers",
            "following_url": "https://api.github.com/users/t-vi/following{/other_user}",
            "gists_url": "https://api.github.com/users/t-vi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/t-vi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/t-vi/subscriptions",
            "organizations_url": "https://api.github.com/users/t-vi/orgs",
            "repos_url": "https://api.github.com/users/t-vi/repos",
            "events_url": "https://api.github.com/users/t-vi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/t-vi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "t-vi",
            "id": 20787943,
            "node_id": "MDQ6VXNlcjIwNzg3OTQz",
            "avatar_url": "https://avatars.githubusercontent.com/u/20787943?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/t-vi",
            "html_url": "https://github.com/t-vi",
            "followers_url": "https://api.github.com/users/t-vi/followers",
            "following_url": "https://api.github.com/users/t-vi/following{/other_user}",
            "gists_url": "https://api.github.com/users/t-vi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/t-vi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/t-vi/subscriptions",
            "organizations_url": "https://api.github.com/users/t-vi/orgs",
            "repos_url": "https://api.github.com/users/t-vi/repos",
            "events_url": "https://api.github.com/users/t-vi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/t-vi/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "t-vi",
                "id": 20787943,
                "node_id": "MDQ6VXNlcjIwNzg3OTQz",
                "avatar_url": "https://avatars.githubusercontent.com/u/20787943?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/t-vi",
                "html_url": "https://github.com/t-vi",
                "followers_url": "https://api.github.com/users/t-vi/followers",
                "following_url": "https://api.github.com/users/t-vi/following{/other_user}",
                "gists_url": "https://api.github.com/users/t-vi/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/t-vi/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/t-vi/subscriptions",
                "organizations_url": "https://api.github.com/users/t-vi/orgs",
                "repos_url": "https://api.github.com/users/t-vi/repos",
                "events_url": "https://api.github.com/users/t-vi/events{/privacy}",
                "received_events_url": "https://api.github.com/users/t-vi/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2018-11-15T11:05:19Z",
        "updated_at": "2018-11-16T19:45:33Z",
        "closed_at": "2018-11-16T19:45:33Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\nPutting a loop with manual seed 0..99 aound in the test tells me it fails for 9 of those 100 seeds.\r\n\r\n## To Reproduce\r\n\r\nOn recent master, amend the test like this:\r\n```python\r\ndiff --git a/test/test_jit.py b/test/test_jit.py\r\nindex a6fd537af..3ae4abe05 100644\r\n--- a/test/test_jit.py\r\n+++ b/test/test_jit.py\r\n@@ -688,9 +688,18 @@ class TestJit(JitTestCase):\r\n     @unittest.skipIf(not RUN_CUDA, \"fuser requires CUDA\")\r\n     @skipIfRocm\r\n     def test_lstm_fusion_concat_cuda(self):\r\n-        inputs = get_lstm_inputs('cuda')\r\n-        ge = self.checkTrace(LSTMCellC, inputs)\r\n-        self.assertExpectedGraph(ge.graph_for(*inputs))\r\n+        fails = 0\r\n+        for i in range(100):\r\n+            print ('\\r',i,'   ', end='')\r\n+            sys.stdout.flush()\r\n+            torch.manual_seed(i)\r\n+            try:\r\n+                inputs = get_lstm_inputs('cuda')\r\n+                ge = self.checkTrace(LSTMCellC, inputs)\r\n+                self.assertExpectedGraph(ge.graph_for(*inputs))\r\n+            except:\r\n+                fails += 1\r\n+        print(\"failures\", fails)\r\n \r\n     @unittest.skipIf(IS_WINDOWS, \"NYI: fuser support for Windows\")\r\n     @unittest.skipIf(not RUN_CUDA, \"fuser requires CUDA\")\r\n```\r\nand run.\r\n\r\n## Expected behavior\r\n\r\nNot to produce pesky CI bugs on my pull requests.\r\n\r\n## Environment\r\n\r\nrecent master\r\n\r\n## Additional context\r\n\r\nSeen on CI at #13985 , fixed there by renaming the test to go after the flaky one.\r\n",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/14026/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/14026/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/13971",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/13971/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/13971/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/13971/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/13971",
        "id": 380776665,
        "node_id": "MDU6SXNzdWUzODA3NzY2NjU=",
        "number": 13971,
        "title": "[JIT] fusing abs doesn't work on cuda",
        "user": {
            "login": "t-vi",
            "id": 20787943,
            "node_id": "MDQ6VXNlcjIwNzg3OTQz",
            "avatar_url": "https://avatars.githubusercontent.com/u/20787943?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/t-vi",
            "html_url": "https://github.com/t-vi",
            "followers_url": "https://api.github.com/users/t-vi/followers",
            "following_url": "https://api.github.com/users/t-vi/following{/other_user}",
            "gists_url": "https://api.github.com/users/t-vi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/t-vi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/t-vi/subscriptions",
            "organizations_url": "https://api.github.com/users/t-vi/orgs",
            "repos_url": "https://api.github.com/users/t-vi/repos",
            "events_url": "https://api.github.com/users/t-vi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/t-vi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "t-vi",
            "id": 20787943,
            "node_id": "MDQ6VXNlcjIwNzg3OTQz",
            "avatar_url": "https://avatars.githubusercontent.com/u/20787943?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/t-vi",
            "html_url": "https://github.com/t-vi",
            "followers_url": "https://api.github.com/users/t-vi/followers",
            "following_url": "https://api.github.com/users/t-vi/following{/other_user}",
            "gists_url": "https://api.github.com/users/t-vi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/t-vi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/t-vi/subscriptions",
            "organizations_url": "https://api.github.com/users/t-vi/orgs",
            "repos_url": "https://api.github.com/users/t-vi/repos",
            "events_url": "https://api.github.com/users/t-vi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/t-vi/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "t-vi",
                "id": 20787943,
                "node_id": "MDQ6VXNlcjIwNzg3OTQz",
                "avatar_url": "https://avatars.githubusercontent.com/u/20787943?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/t-vi",
                "html_url": "https://github.com/t-vi",
                "followers_url": "https://api.github.com/users/t-vi/followers",
                "following_url": "https://api.github.com/users/t-vi/following{/other_user}",
                "gists_url": "https://api.github.com/users/t-vi/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/t-vi/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/t-vi/subscriptions",
                "organizations_url": "https://api.github.com/users/t-vi/orgs",
                "repos_url": "https://api.github.com/users/t-vi/repos",
                "events_url": "https://api.github.com/users/t-vi/events{/privacy}",
                "received_events_url": "https://api.github.com/users/t-vi/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2018-11-14T16:21:01Z",
        "updated_at": "2018-11-15T21:25:28Z",
        "closed_at": "2018-11-15T21:25:28Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\n```python\r\n@torch.jit.script\r\ndef x(a):\r\n     return a.abs()*2\r\nx(torch.randn(5, device='cuda'))\r\n```\r\n\r\n## Expected behavior\r\n\r\nWork\r\n\r\n## Environment\r\n\r\nTodayish master.\r\n\r\nI'll go fix it.",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/13971/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/13971/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/13566",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/13566/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/13566/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/13566/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/13566",
        "id": 377353681,
        "node_id": "MDU6SXNzdWUzNzczNTM2ODE=",
        "number": 13566,
        "title": "[jit] Have a way to trace custom ops with std::vector<Tensor>",
        "user": {
            "login": "t-vi",
            "id": 20787943,
            "node_id": "MDQ6VXNlcjIwNzg3OTQz",
            "avatar_url": "https://avatars.githubusercontent.com/u/20787943?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/t-vi",
            "html_url": "https://github.com/t-vi",
            "followers_url": "https://api.github.com/users/t-vi/followers",
            "following_url": "https://api.github.com/users/t-vi/following{/other_user}",
            "gists_url": "https://api.github.com/users/t-vi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/t-vi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/t-vi/subscriptions",
            "organizations_url": "https://api.github.com/users/t-vi/orgs",
            "repos_url": "https://api.github.com/users/t-vi/repos",
            "events_url": "https://api.github.com/users/t-vi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/t-vi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2018-11-05T11:15:54Z",
        "updated_at": "2018-11-09T14:25:32Z",
        "closed_at": "2018-11-09T14:25:32Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "## \ud83d\ude80 Feature\r\n\r\nSometimes, you want to have a list of tensors in a custom op.\r\nThis works with JIT script by using the `List[Tensor]` type, but apparently not with tracing (which doesn't like lists, but only tuples).\r\n\r\n## Motivation\r\n\r\nI found this while working on https://github.com/facebookresearch/maskrcnn-benchmark/issues/27#issuecomment-435789228\r\nGenerally many operations have lists of tensors as arguments, and so there should be a good JIT path for them.\r\n\r\n## Pitch\r\n\r\nI should be able to trace the custom op here somehow:\r\n```python\r\nimport os\r\nimport torch\r\nimport torch.jit\r\nfrom typing import List, Tuple\r\ncsrc = \"\"\"\r\n#include <torch/extension.h>\r\n#include <torch/script.h>\r\n\r\nusing namespace at;\r\n\r\nTensor test(std::vector<Tensor> inps) {  \r\n  return inps[0] * 2; // not terribly safe!\r\n}\r\n\r\nstatic auto registry =\r\n  torch::jit::RegisterOperators()\r\n    .op(\"mytest::test\", &test);\r\n\r\nPYBIND11_MODULE(TORCH_EXTENSION_NAME, m) {\r\n  m.def(\"test\", &test, \"super test!\");\r\n}\r\n\"\"\"\r\n\r\nimport torch.utils.cpp_extension\r\n\r\next = torch.utils.cpp_extension.load_inline(\"test\", [csrc], verbose=True,\r\n                                            extra_ldflags=['-ltorch','-lcaffe2',\r\n                                                           '-L'+os.path.join(os.path.dirname(torch._C.__file__), 'lib') ])\r\ntorch.ops.load_library(ext.__file__)\r\n\r\nt = torch.randn(5)\r\nprint(torch.ops.mytest.test([t])) # works\r\n\r\n@torch.jit.script\r\ndef test_wrapper(ts : List[torch.Tensor]): # need to do list!\r\n    return torch.ops.mytest.test(ts)\r\n\r\nprint (test_wrapper([t])) # works\r\n\r\nprint (test_wrapper((t,))) # works\r\n\r\nprint (\"doesn't work\")\r\n\r\nprint (torch.jit.trace(test_wrapper, ((t,),)))  # doesn't work\r\n# and I cannot be make it work\r\n\r\n\r\n# the canonical way to do Tuples of arbitrary lengths (?)\r\n@torch.jit.script\r\ndef test_wrapper2(ts : Tuple[torch.Tensor, ...]): # doesn't work\r\n    return torch.ops.mytest.test(ts)\r\n\r\n```\r\n\r\n## Context\r\n\r\nMaybe the easiest way is to accept tuples into lists while tracing, but I didn't check in detail.",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/13566/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/13566/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/13564",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/13564/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/13564/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/13564/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/13564",
        "id": 377340941,
        "node_id": "MDU6SXNzdWUzNzczNDA5NDE=",
        "number": 13564,
        "title": "[JIT] Cannot trace custom ops",
        "user": {
            "login": "t-vi",
            "id": 20787943,
            "node_id": "MDQ6VXNlcjIwNzg3OTQz",
            "avatar_url": "https://avatars.githubusercontent.com/u/20787943?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/t-vi",
            "html_url": "https://github.com/t-vi",
            "followers_url": "https://api.github.com/users/t-vi/followers",
            "following_url": "https://api.github.com/users/t-vi/following{/other_user}",
            "gists_url": "https://api.github.com/users/t-vi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/t-vi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/t-vi/subscriptions",
            "organizations_url": "https://api.github.com/users/t-vi/orgs",
            "repos_url": "https://api.github.com/users/t-vi/repos",
            "events_url": "https://api.github.com/users/t-vi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/t-vi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "goldsborough",
            "id": 6429851,
            "node_id": "MDQ6VXNlcjY0Mjk4NTE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6429851?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/goldsborough",
            "html_url": "https://github.com/goldsborough",
            "followers_url": "https://api.github.com/users/goldsborough/followers",
            "following_url": "https://api.github.com/users/goldsborough/following{/other_user}",
            "gists_url": "https://api.github.com/users/goldsborough/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/goldsborough/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/goldsborough/subscriptions",
            "organizations_url": "https://api.github.com/users/goldsborough/orgs",
            "repos_url": "https://api.github.com/users/goldsborough/repos",
            "events_url": "https://api.github.com/users/goldsborough/events{/privacy}",
            "received_events_url": "https://api.github.com/users/goldsborough/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "goldsborough",
                "id": 6429851,
                "node_id": "MDQ6VXNlcjY0Mjk4NTE=",
                "avatar_url": "https://avatars.githubusercontent.com/u/6429851?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/goldsborough",
                "html_url": "https://github.com/goldsborough",
                "followers_url": "https://api.github.com/users/goldsborough/followers",
                "following_url": "https://api.github.com/users/goldsborough/following{/other_user}",
                "gists_url": "https://api.github.com/users/goldsborough/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/goldsborough/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/goldsborough/subscriptions",
                "organizations_url": "https://api.github.com/users/goldsborough/orgs",
                "repos_url": "https://api.github.com/users/goldsborough/repos",
                "events_url": "https://api.github.com/users/goldsborough/events{/privacy}",
                "received_events_url": "https://api.github.com/users/goldsborough/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2018-11-05T10:40:01Z",
        "updated_at": "2018-11-07T17:24:21Z",
        "closed_at": "2018-11-07T17:24:21Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\nCustom ops can be used in JIT script, but not in tracing.\r\n\r\n## To Reproduce\r\n\r\n```python\r\nimport os\r\nimport torch\r\nimport torch.jit\r\ncsrc = \"\"\"\r\n#include <torch/extension.h>\r\n#include <torch/script.h>\r\n\r\nusing namespace at;\r\n\r\nTensor test(const Tensor& inp) {\r\n  return inp * 2;\r\n}\r\n\r\nstatic auto registry =\r\n  torch::jit::RegisterOperators()\r\n    .op(\"mytest::test\", &test);\r\n\r\nPYBIND11_MODULE(TORCH_EXTENSION_NAME, m) {\r\n  m.def(\"test\", &test, \"super test!\");\r\n}\r\n\"\"\"\r\n\r\nimport torch.utils.cpp_extension\r\n\r\next = torch.utils.cpp_extension.load_inline(\"test\", [csrc], verbose=True,\r\n                                            extra_ldflags=['-ltorch','-lcaffe2',\r\n                                                           '-L'+os.path.join(os.path.dirname(torch._C.__file__), 'lib') ])\r\ntorch.ops.load_library(ext.__file__)\r\n\r\nt = torch.randn(5)\r\nprint(torch.ops.mytest.test(t)) # works\r\n\r\n@torch.jit.script\r\ndef test_wrapper(t):\r\n    return torch.ops.mytest.test(t)\r\n\r\nprint (torch.jit.trace(test_wrapper, (t,)))  # works, too\r\n\r\n\r\nprint (torch.jit.trace(torch.ops.mytest.test, (t,)))  # should work!\r\n```\r\n\r\n## Expected behavior\r\n\r\nEverything to work perfectly!\r\n\r\n## Environment\r\n\r\nToday's master\r\n\r\n## Context\r\n\r\nI noticed this with a formidable JIT challenge (@fmassa ):\r\nhttps://github.com/facebookresearch/maskrcnn-benchmark/issues/27#issuecomment-435789228\r\n\r\n@goldsborough : This is as mentioned on the slack.\r\n",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/13564/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/13564/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/13384",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/13384/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/13384/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/13384/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/13384",
        "id": 375896332,
        "node_id": "MDU6SXNzdWUzNzU4OTYzMzI=",
        "number": 13384,
        "title": "Fuser can incorrectly fuse comparison ops at the end of fusion groups",
        "user": {
            "login": "apaszke",
            "id": 4583066,
            "node_id": "MDQ6VXNlcjQ1ODMwNjY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4583066?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/apaszke",
            "html_url": "https://github.com/apaszke",
            "followers_url": "https://api.github.com/users/apaszke/followers",
            "following_url": "https://api.github.com/users/apaszke/following{/other_user}",
            "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions",
            "organizations_url": "https://api.github.com/users/apaszke/orgs",
            "repos_url": "https://api.github.com/users/apaszke/repos",
            "events_url": "https://api.github.com/users/apaszke/events{/privacy}",
            "received_events_url": "https://api.github.com/users/apaszke/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2018-10-31T10:33:55Z",
        "updated_at": "2018-11-27T19:34:46Z",
        "closed_at": "2018-11-27T19:34:46Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "Currently the fuser hopes that when it will fuse an op that has an `int8` output type, it will be followed by a `type_as` (as is the case in e.g. many ReLU implementations). However, it's not guaranteed to be the case, and since our codegen only supports `float` math, it can sometimes change the run time type of the values:\r\n\r\n```python\r\nimport torch\r\n\r\ndef f(x, y, z):\r\n    return ((x + y) / z) >= z\r\n\r\ninputs = [torch.randn(2, 2, device='cuda') for _ in range(3)]\r\nreal_output = f(*inputs)\r\nfs = torch.jit.script(f)\r\noutput = fs(*inputs)\r\nprint(fs.graph_for(*inputs))\r\nprint(output)\r\nprint(real_output)\r\n```\r\n\r\nThis inconsistency is very unfortunate and I will need to remove it in one of my upcoming fuser refactors. We can safely make those ops fusable again once we expand the codegen to work on arbitrary scalar types.",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/13384/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/13384/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/13376",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/13376/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/13376/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/13376/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/13376",
        "id": 375818684,
        "node_id": "MDU6SXNzdWUzNzU4MTg2ODQ=",
        "number": 13376,
        "title": "`len(Tensor)` doesn't work in script",
        "user": {
            "login": "suo",
            "id": 1617424,
            "node_id": "MDQ6VXNlcjE2MTc0MjQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1617424?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/suo",
            "html_url": "https://github.com/suo",
            "followers_url": "https://api.github.com/users/suo/followers",
            "following_url": "https://api.github.com/users/suo/following{/other_user}",
            "gists_url": "https://api.github.com/users/suo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/suo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/suo/subscriptions",
            "organizations_url": "https://api.github.com/users/suo/orgs",
            "repos_url": "https://api.github.com/users/suo/repos",
            "events_url": "https://api.github.com/users/suo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/suo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2018-10-31T06:35:07Z",
        "updated_at": "2018-10-31T20:15:08Z",
        "closed_at": "2018-10-31T20:15:08Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "Minimal repro:\r\n```\r\nimport torch\r\n\r\ntensor = torch.IntTensor(4, 2).zero_()\r\nprint(len(tensor))  # prints 4\r\n\r\n@torch.jit.script\r\ndef foo(tensor):\r\n    print(len(tensor)) # this is dispatching to aten::len(Tensor[])\r\nfoo(tensor)  # prints 1\r\n```\r\n\r\nIn PyTorch, `len()` should work like in NumPy (print the size of the first dimension). Right now the tensor argument gets promoted to a single-element list via the logic [here](https://github.com/pytorch/pytorch/blob/master/torch/csrc/jit/script/compiler.cpp#L587) and gets passed to `listLen`. This is because we don't have a binding for `aten::len(Tensor)` at all.\r\n\r\nReported by @phi-go in #12780.",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/13376/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/13376/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/13254",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/13254/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/13254/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/13254/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/13254",
        "id": 375084175,
        "node_id": "MDU6SXNzdWUzNzUwODQxNzU=",
        "number": 13254,
        "title": "Make JIT less CUDA-centric",
        "user": {
            "login": "ezyang",
            "id": 13564,
            "node_id": "MDQ6VXNlcjEzNTY0",
            "avatar_url": "https://avatars.githubusercontent.com/u/13564?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ezyang",
            "html_url": "https://github.com/ezyang",
            "followers_url": "https://api.github.com/users/ezyang/followers",
            "following_url": "https://api.github.com/users/ezyang/following{/other_user}",
            "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions",
            "organizations_url": "https://api.github.com/users/ezyang/orgs",
            "repos_url": "https://api.github.com/users/ezyang/repos",
            "events_url": "https://api.github.com/users/ezyang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ezyang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2018-10-29T15:49:09Z",
        "updated_at": "2019-08-21T09:39:38Z",
        "closed_at": "2018-11-19T17:23:39Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "In a bunch of places in the JIT, we store an `int` representing a device index (where it is `-1` for CPU and otherwise represents a CUDA device). We have a perfectly good `at::Device` class which should be used instead, and prevents people from hard-coding assumptions that CPU and CUDA are the only devices.\r\n\r\nIf there are performance considerations, let me know, but at least in terms of memory footprint, `at::Device` still fits in a single 64-bit word.",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/13254/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/13254/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/12907",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/12907/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/12907/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/12907/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/12907",
        "id": 372284099,
        "node_id": "MDU6SXNzdWUzNzIyODQwOTk=",
        "number": 12907,
        "title": "[jit] request: expose torch.jit._enabled",
        "user": {
            "login": "ssnl",
            "id": 5674597,
            "node_id": "MDQ6VXNlcjU2NzQ1OTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5674597?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ssnl",
            "html_url": "https://github.com/ssnl",
            "followers_url": "https://api.github.com/users/ssnl/followers",
            "following_url": "https://api.github.com/users/ssnl/following{/other_user}",
            "gists_url": "https://api.github.com/users/ssnl/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ssnl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ssnl/subscriptions",
            "organizations_url": "https://api.github.com/users/ssnl/orgs",
            "repos_url": "https://api.github.com/users/ssnl/repos",
            "events_url": "https://api.github.com/users/ssnl/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ssnl/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2018-10-21T06:23:18Z",
        "updated_at": "2019-03-11T05:04:41Z",
        "closed_at": "2019-03-11T05:04:41Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "",
        "closed_by": {
            "login": "suo",
            "id": 1617424,
            "node_id": "MDQ6VXNlcjE2MTc0MjQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1617424?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/suo",
            "html_url": "https://github.com/suo",
            "followers_url": "https://api.github.com/users/suo/followers",
            "following_url": "https://api.github.com/users/suo/following{/other_user}",
            "gists_url": "https://api.github.com/users/suo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/suo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/suo/subscriptions",
            "organizations_url": "https://api.github.com/users/suo/orgs",
            "repos_url": "https://api.github.com/users/suo/repos",
            "events_url": "https://api.github.com/users/suo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/suo/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/12907/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/12907/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/12906",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/12906/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/12906/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/12906/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/12906",
        "id": 372281515,
        "node_id": "MDU6SXNzdWUzNzIyODE1MTU=",
        "number": 12906,
        "title": "[JIT] Traced pad_packed_sequence is specialized to the max sequence length seen during tracing",
        "user": {
            "login": "jamesr66a",
            "id": 4685384,
            "node_id": "MDQ6VXNlcjQ2ODUzODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4685384?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesr66a",
            "html_url": "https://github.com/jamesr66a",
            "followers_url": "https://api.github.com/users/jamesr66a/followers",
            "following_url": "https://api.github.com/users/jamesr66a/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesr66a/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesr66a/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesr66a/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesr66a/orgs",
            "repos_url": "https://api.github.com/users/jamesr66a/repos",
            "events_url": "https://api.github.com/users/jamesr66a/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesr66a/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2018-10-21T05:34:19Z",
        "updated_at": "2018-10-29T20:56:51Z",
        "closed_at": "2018-10-29T20:56:51Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "Repro script:\r\n\r\n```\r\nimport torch\r\n\r\nT, B, Cin, Chid, nlayers = 5, 3, 10, 20, 2\r\n\r\nclass RNNTest(torch.nn.Module):\r\n    def __init__(self):\r\n        super(RNNTest, self).__init__()\r\n        self.rnn = torch.nn.RNN(Cin, Chid, nlayers)\r\n\r\n    def forward(self, x, lengths, h0):\r\n        packed = torch.nn.utils.rnn.pack_padded_sequence(x, lengths)\r\n        out, h = self.rnn(packed, h0)\r\n        padded_outs, _ = torch.nn.utils.rnn.pad_packed_sequence(out)\r\n        print(torch._C._get_tracing_state())\r\n        return padded_outs\r\n\r\nx, lengths, h0 = torch.rand(T, B, Cin), torch.LongTensor([5, 4, 3]), torch.randn(nlayers, B, Chid)\r\n\r\ntraced = torch.jit.trace(RNNTest(), (x, lengths, h0))\r\ntraced(x, lengths, h0)\r\n\r\nT = 7\r\nx, lengths, h0 = torch.rand(T, B, Cin), torch.LongTensor([7, 6, 5]), torch.randn(nlayers, B, Chid)\r\n\r\ntraced(x, lengths, h0)\r\n```\r\n\r\nOutput:\r\n\r\n```\r\ngraph(%0 : Float(5, 3, 10)\r\n      %1 : Long(3)\r\n      %2 : Float(2, 3, 20)\r\n      %3 : Float(20, 10)\r\n      %4 : Float(20, 20)\r\n      %5 : Float(20)\r\n      %6 : Float(20)\r\n      %7 : Float(20, 20)\r\n      %8 : Float(20, 20)\r\n      %9 : Float(20)\r\n      %10 : Float(20)) {\r\n  %11 : bool = prim::Constant[value=0](), scope: RNNTest\r\n  %12 : Long(3) = aten::_cast_Long(%1, %11), scope: RNNTest\r\n  %13 : bool = prim::Constant[value=0](), scope: RNNTest\r\n  %14 : Float(12, 10), %15 : Long(5) = aten::_pack_padded_sequence(%0, %12, %13), scope: RNNTest\r\n  %16 : int = prim::Constant[value=0](), scope: RNNTest/RNN[rnn]\r\n  %17 : int = prim::Constant[value=0](), scope: RNNTest/RNN[rnn]\r\n  %18 : Long() = aten::select(%15, %16, %17), scope: RNNTest/RNN[rnn]\r\n  %19 : int = prim::Constant[value=-1](), scope: RNNTest/RNN[rnn]\r\n  %20 : int = aten::size(%14, %19), scope: RNNTest/RNN[rnn]\r\n  %21 : Long() = prim::NumToTensor(%20), scope: RNNTest/RNN[rnn]\r\n  %22 : int = prim::Constant[value=10](), scope: RNNTest/RNN[rnn]\r\n  %23 : Byte() = aten::ne(%21, %22), scope: RNNTest/RNN[rnn]\r\n  %24 : int = prim::Constant[value=0](), scope: RNNTest/RNN[rnn]\r\n  %25 : int = prim::Constant[value=0](), scope: RNNTest/RNN[rnn]\r\n  %26 : Long() = aten::select(%15, %24, %25), scope: RNNTest/RNN[rnn]\r\n  %27 : int = prim::Constant[value=0](), scope: RNNTest/RNN[rnn]\r\n  %28 : int = aten::size(%2, %27), scope: RNNTest/RNN[rnn]\r\n  %29 : Long() = prim::NumToTensor(%28), scope: RNNTest/RNN[rnn]\r\n  %30 : int = prim::Constant[value=1](), scope: RNNTest/RNN[rnn]\r\n  %31 : int = aten::size(%2, %30), scope: RNNTest/RNN[rnn]\r\n  %32 : Long() = prim::NumToTensor(%31), scope: RNNTest/RNN[rnn]\r\n  %33 : int = prim::Constant[value=2](), scope: RNNTest/RNN[rnn]\r\n  %34 : int = aten::size(%2, %33), scope: RNNTest/RNN[rnn]\r\n  %35 : Long() = prim::NumToTensor(%34), scope: RNNTest/RNN[rnn]\r\n  %36 : int = prim::Constant[value=2](), scope: RNNTest/RNN[rnn]\r\n  %37 : Byte() = aten::eq(%29, %36), scope: RNNTest/RNN[rnn]\r\n  %38 : int = prim::Constant[value=3](), scope: RNNTest/RNN[rnn]\r\n  %39 : Byte() = aten::eq(%32, %38), scope: RNNTest/RNN[rnn]\r\n  %40 : int = prim::Constant[value=20](), scope: RNNTest/RNN[rnn]\r\n  %41 : Byte() = aten::eq(%35, %40), scope: RNNTest/RNN[rnn]\r\n  %42 : Dynamic[] = prim::ListConstruct(%3, %4, %5, %6, %7, %8, %9, %10), scope: RNNTest/RNN[rnn]\r\n  %43 : bool = prim::Constant[value=1](), scope: RNNTest/RNN[rnn]\r\n  %44 : int = prim::Constant[value=2](), scope: RNNTest/RNN[rnn]\r\n  %45 : float = prim::Constant[value=0](), scope: RNNTest/RNN[rnn]\r\n  %46 : bool = prim::Constant[value=1](), scope: RNNTest/RNN[rnn]\r\n  %47 : bool = prim::Constant[value=0](), scope: RNNTest/RNN[rnn]\r\n  %48 : Float(12, 20), %49 : Float(2, 3, 20) = aten::rnn_tanh(%14, %15, %2, %42, %43, %44, %45, %46, %47), scope: RNNTest/RNN[rnn]\r\n  %50 : int = prim::Constant[value=0](), scope: RNNTest\r\n  %51 : int = aten::size(%15, %50), scope: RNNTest\r\n  %52 : Long() = prim::NumToTensor(%51), scope: RNNTest\r\n  %53 : bool = prim::Constant[value=0](), scope: RNNTest\r\n  %54 : float = prim::Constant[value=0](), scope: RNNTest\r\n  %55 : int = prim::Constant[value=5](), scope: RNNTest\r\n  %56 : Float(5, 3, 20), %57 : Long(3) = aten::_pad_packed_sequence(%48, %15, %53, %54, %55), scope: RNNTest\r\n  return ();\r\n}\r\n\r\ngraph(%0 : Float(5, 3, 10)\r\n      %1 : Long(3)\r\n      %2 : Float(2, 3, 20)\r\n      %3 : Float(20, 10)\r\n      %4 : Float(20, 20)\r\n      %5 : Float(20)\r\n      %6 : Float(20)\r\n      %7 : Float(20, 20)\r\n      %8 : Float(20, 20)\r\n      %9 : Float(20)\r\n      %10 : Float(20)) {\r\n  %11 : bool = prim::Constant[value=0](), scope: RNNTest\r\n  %12 : Long(3) = aten::_cast_Long(%1, %11), scope: RNNTest\r\n  %13 : bool = prim::Constant[value=0](), scope: RNNTest\r\n  %14 : Float(12, 10), %15 : Long(5) = aten::_pack_padded_sequence(%0, %12, %13), scope: RNNTest\r\n  %16 : int = prim::Constant[value=0](), scope: RNNTest/RNN[rnn]\r\n  %17 : int = prim::Constant[value=0](), scope: RNNTest/RNN[rnn]\r\n  %18 : Long() = aten::select(%15, %16, %17), scope: RNNTest/RNN[rnn]\r\n  %19 : int = prim::Constant[value=-1](), scope: RNNTest/RNN[rnn]\r\n  %20 : int = aten::size(%14, %19), scope: RNNTest/RNN[rnn]\r\n  %21 : Long() = prim::NumToTensor(%20), scope: RNNTest/RNN[rnn]\r\n  %22 : int = prim::Constant[value=10](), scope: RNNTest/RNN[rnn]\r\n  %23 : Byte() = aten::ne(%21, %22), scope: RNNTest/RNN[rnn]\r\n  %24 : int = prim::Constant[value=0](), scope: RNNTest/RNN[rnn]\r\n  %25 : int = prim::Constant[value=0](), scope: RNNTest/RNN[rnn]\r\n  %26 : Long() = aten::select(%15, %24, %25), scope: RNNTest/RNN[rnn]\r\n  %27 : int = prim::Constant[value=0](), scope: RNNTest/RNN[rnn]\r\n  %28 : int = aten::size(%2, %27), scope: RNNTest/RNN[rnn]\r\n  %29 : Long() = prim::NumToTensor(%28), scope: RNNTest/RNN[rnn]\r\n  %30 : int = prim::Constant[value=1](), scope: RNNTest/RNN[rnn]\r\n  %31 : int = aten::size(%2, %30), scope: RNNTest/RNN[rnn]\r\n  %32 : Long() = prim::NumToTensor(%31), scope: RNNTest/RNN[rnn]\r\n  %33 : int = prim::Constant[value=2](), scope: RNNTest/RNN[rnn]\r\n  %34 : int = aten::size(%2, %33), scope: RNNTest/RNN[rnn]\r\n  %35 : Long() = prim::NumToTensor(%34), scope: RNNTest/RNN[rnn]\r\n  %36 : int = prim::Constant[value=2](), scope: RNNTest/RNN[rnn]\r\n  %37 : Byte() = aten::eq(%29, %36), scope: RNNTest/RNN[rnn]\r\n  %38 : int = prim::Constant[value=3](), scope: RNNTest/RNN[rnn]\r\n  %39 : Byte() = aten::eq(%32, %38), scope: RNNTest/RNN[rnn]\r\n  %40 : int = prim::Constant[value=20](), scope: RNNTest/RNN[rnn]\r\n  %41 : Byte() = aten::eq(%35, %40), scope: RNNTest/RNN[rnn]\r\n  %42 : Dynamic[] = prim::ListConstruct(%3, %4, %5, %6, %7, %8, %9, %10), scope: RNNTest/RNN[rnn]\r\n  %43 : bool = prim::Constant[value=1](), scope: RNNTest/RNN[rnn]\r\n  %44 : int = prim::Constant[value=2](), scope: RNNTest/RNN[rnn]\r\n  %45 : float = prim::Constant[value=0](), scope: RNNTest/RNN[rnn]\r\n  %46 : bool = prim::Constant[value=1](), scope: RNNTest/RNN[rnn]\r\n  %47 : bool = prim::Constant[value=0](), scope: RNNTest/RNN[rnn]\r\n  %48 : Float(12, 20), %49 : Float(2, 3, 20) = aten::rnn_tanh(%14, %15, %2, %42, %43, %44, %45, %46, %47), scope: RNNTest/RNN[rnn]\r\n  %50 : int = prim::Constant[value=0](), scope: RNNTest\r\n  %51 : int = aten::size(%15, %50), scope: RNNTest\r\n  %52 : Long() = prim::NumToTensor(%51), scope: RNNTest\r\n  %53 : bool = prim::Constant[value=0](), scope: RNNTest\r\n  %54 : float = prim::Constant[value=0](), scope: RNNTest\r\n  %55 : int = prim::Constant[value=5](), scope: RNNTest\r\n  %56 : Float(5, 3, 20), %57 : Long(3) = aten::_pad_packed_sequence(%48, %15, %53, %54, %55), scope: RNNTest\r\n  return ();\r\n}\r\n\r\nNone\r\nTraceback (most recent call last):\r\n  File \"rnn_test.py\", line 25, in <module>\r\n    traced(x, lengths, h0)\r\n  File \"/Users/jamesreed/onnx-fairseq/pytorch/torch/nn/modules/module.py\", line 477, in __call__\r\n    result = self.forward(*input, **kwargs)\r\n  File \"/Users/jamesreed/onnx-fairseq/pytorch/torch/jit/__init__.py\", line 1179, in forward\r\n    return self._get_method('forward')(*args, **kwargs)\r\nRuntimeError: \r\nExpected total_length to be at least the length of the longest sequence in input, but got total_length=5 and max sequence length being 7 (_pad_packed_sequence at ../aten/src/ATen/native/PackedSequence.cpp:115)\r\nframe #0: at::TypeDefault::_pad_packed_sequence(at::Tensor const&, at::Tensor const&, bool, at::Scalar, long long) const + 167 (0x118ae9397 in libcaffe2.dylib)\r\nframe #1: torch::autograd::VariableType::_pad_packed_sequence(at::Tensor const&, at::Tensor const&, bool, at::Scalar, long long) const + 1836 (0x11c148c6c in libtorch.dylib)\r\nframe #2: at::_pad_packed_sequence(at::Tensor const&, at::Tensor const&, bool, at::Scalar, long long) + 194 (0x11c4ea5b2 in libtorch.dylib)\r\nframe #3: torch::jit::(anonymous namespace)::$_25::operator()(std::__1::vector<c10::IValue, std::__1::allocator<c10::IValue> >&) const + 431 (0x11c4ea41f in libtorch.dylib)\r\nframe #4: int std::__1::__invoke_void_return_wrapper<int>::__call<torch::jit::(anonymous namespace)::$_25&, std::__1::vector<c10::IValue, std::__1::allocator<c10::IValue> >&>(torch::jit::(anonymous namespace)::$_25&&&, std::__1::vector<c10::IValue, std::__1::allocator<c10::IValue> >&&&) + 77 (0x11c4ea25d in libtorch.dylib)\r\nframe #5: std::__1::__function::__func<torch::jit::(anonymous namespace)::$_25, std::__1::allocator<torch::jit::(anonymous namespace)::$_25>, int (std::__1::vector<c10::IValue, std::__1::allocator<c10::IValue> >&)>::operator()(std::__1::vector<c10::IValue, std::__1::allocator<c10::IValue> >&) + 68 (0x11c4ea154 in libtorch.dylib)\r\nframe #6: std::__1::function<int (std::__1::vector<c10::IValue, std::__1::allocator<c10::IValue> >&)>::operator()(std::__1::vector<c10::IValue, std::__1::allocator<c10::IValue> >&) const + 121 (0x1175e6b39 in _C.cpython-36m-darwin.so)\r\nframe #7: torch::jit::InterpreterStateImpl::run(std::__1::vector<c10::IValue, std::__1::allocator<c10::IValue> >&) + 304 (0x11c9436c0 in libtorch.dylib)\r\nframe #8: torch::jit::InterpreterState::run(std::__1::vector<c10::IValue, std::__1::allocator<c10::IValue> >&) + 40 (0x11c943588 in libtorch.dylib)\r\nframe #9: torch::jit::(anonymous namespace)::ExecutionPlan::run(std::__1::vector<c10::IValue, std::__1::allocator<c10::IValue> >&) const + 46 (0x11c8c9f2e in libtorch.dylib)\r\nframe #10: torch::jit::GraphExecutorImpl::run(std::__1::vector<c10::IValue, std::__1::allocator<c10::IValue> >&) + 544 (0x11c8c0b60 in libtorch.dylib)\r\nframe #11: torch::jit::GraphExecutor::run(std::__1::vector<c10::IValue, std::__1::allocator<c10::IValue> >&) + 40 (0x11c8c0938 in libtorch.dylib)\r\nframe #12: torch::jit::script::Method::run(std::__1::vector<c10::IValue, std::__1::allocator<c10::IValue> >&) + 1144 (0x117769838 in _C.cpython-36m-darwin.so)\r\nframe #13: torch::jit::invokeScriptMethodFromPython(torch::jit::script::Method&, torch::jit::tuple_slice, pybind11::kwargs) + 207 (0x1177692ef in _C.cpython-36m-darwin.so)\r\nframe #14: torch::jit::script::initJitScriptBindings(_object*)::$_19::operator()(pybind11::args, pybind11::kwargs) const + 321 (0x11776ad91 in _C.cpython-36m-darwin.so)\r\nframe #15: pybind11::object pybind11::detail::argument_loader<pybind11::args, pybind11::kwargs>::call_impl<pybind11::object, torch::jit::script::initJitScriptBindings(_object*)::$_19&, 0ul, 1ul, pybind11::detail::void_type>(torch::jit::script::initJitScriptBindings(_object*)::$_19&&&, pybind11::detail::index_sequence<0ul, 1ul>, pybind11::detail::void_type&&) + 216 (0x11776abe8 in _C.cpython-36m-darwin.so)\r\nframe #16: std::__1::enable_if<!(std::is_void<pybind11::object>::value), pybind11::object>::type pybind11::detail::argument_loader<pybind11::args, pybind11::kwargs>::call<pybind11::object, pybind11::detail::void_type, torch::jit::script::initJitScriptBindings(_object*)::$_19&>(torch::jit::script::initJitScriptBindings(_object*)::$_19&&&) + 56 (0x11776aaf8 in _C.cpython-36m-darwin.so)\r\nframe #17: void pybind11::cpp_function::initialize<torch::jit::script::initJitScriptBindings(_object*)::$_19, pybind11::object, pybind11::args, pybind11::kwargs, pybind11::name, pybind11::is_method, pybind11::sibling>(torch::jit::script::initJitScriptBindings(_object*)::$_19&&, pybind11::object (*)(pybind11::args, pybind11::kwargs), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&)::'lambda'(pybind11::detail::function_call&)::operator()(pybind11::detail::function_call&) const + 223 (0x11776aa0f in _C.cpython-36m-darwin.so)\r\nframe #18: void pybind11::cpp_function::initialize<torch::jit::script::initJitScriptBindings(_object*)::$_19, pybind11::object, pybind11::args, pybind11::kwargs, pybind11::name, pybind11::is_method, pybind11::sibling>(torch::jit::script::initJitScriptBindings(_object*)::$_19&&, pybind11::object (*)(pybind11::args, pybind11::kwargs), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&)::'lambda'(pybind11::detail::function_call&)::__invoke(pybind11::detail::function_call&) + 24 (0x11776a918 in _C.cpython-36m-darwin.so)\r\nframe #19: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) + 6919 (0x116fa2dd7 in _C.cpython-36m-darwin.so)\r\n<omitting python frames>\r\nframe #48: start + 1 (0x7fff78774015 in libdyld.dylib)\r\n:\r\noperation failed in interpreter:\r\n/Users/jamesreed/onnx-fairseq/pytorch/torch/nn/utils/rnn.py(193): pad_packed_sequence\r\nrnn_test.py(13): forward\r\n/Users/jamesreed/onnx-fairseq/pytorch/torch/nn/modules/module.py(465): _slow_forward\r\n/Users/jamesreed/onnx-fairseq/pytorch/torch/nn/modules/module.py(475): __call__\r\n/Users/jamesreed/onnx-fairseq/pytorch/torch/jit/__init__.py(572): trace\r\nrnn_test.py(19): <module>\r\n```\r\n\r\nIn particular this portion of the graph is problematic:\r\n\r\n```\r\n  %55 : int = prim::Constant[value=5](), scope: RNNTest\r\n  %56 : Float(5, 3, 20), %57 : Long(3) = aten::_pad_packed_sequence(%48, %15, %53, %54, %55), scope: RNNTest\r\n```\r\n\r\nThe max sequence length seen during tracing (5) is hard-coded into the graph, so when we try to run the trace on a generalized input (e.g. with max sequence length 7) we fail. Notice, however, that we actually *do* record the proper size expression in the trace:\r\n\r\n```\r\n%50 : int = prim::Constant[value=0](), scope: RNNTest\r\n  %51 : int = aten::size(%15, %50), scope: RNNTest\r\n  %52 : Long() = prim::NumToTensor(%51), scope: RNNTest\r\n```\r\n\r\nHowever we do not record this as the input to the pad_packed_sequence instruction and rather burn in a constant. ",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/12906/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/12906/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/12810",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/12810/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/12810/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/12810/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/12810",
        "id": 371409832,
        "node_id": "MDU6SXNzdWUzNzE0MDk4MzI=",
        "number": 12810,
        "title": "The JIT does not support Unsqueezing using the `None` keyword",
        "user": {
            "login": "pfrendl",
            "id": 6968154,
            "node_id": "MDQ6VXNlcjY5NjgxNTQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6968154?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pfrendl",
            "html_url": "https://github.com/pfrendl",
            "followers_url": "https://api.github.com/users/pfrendl/followers",
            "following_url": "https://api.github.com/users/pfrendl/following{/other_user}",
            "gists_url": "https://api.github.com/users/pfrendl/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pfrendl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pfrendl/subscriptions",
            "organizations_url": "https://api.github.com/users/pfrendl/orgs",
            "repos_url": "https://api.github.com/users/pfrendl/repos",
            "events_url": "https://api.github.com/users/pfrendl/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pfrendl/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2018-10-18T08:10:42Z",
        "updated_at": "2019-04-08T20:46:43Z",
        "closed_at": "2019-04-08T20:46:43Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\nUnsqueezing using the `None` keyword does not work with the @torch.jit.script notation.\r\n\r\n## To Reproduce\r\n\r\nMWE to reproduce the behavior:\r\n\r\n```\r\nimport torch\r\n\r\n\r\n@torch.jit.script\r\ndef fun(a):\r\n\treturn a[None, :]\r\n\r\n\r\nif __name__ == '__main__':\r\n\ta = torch.tensor([0])\r\n\tfun(a)\r\n```\r\n\r\n```\r\nError message:\r\nTraceback (most recent call last):\r\n  File \"ttt.py\", line 11, in <module>\r\n    fun(a)\r\n  File \"/usr/local/lib/python3.5/dist-packages/torch/nn/modules/module.py\", line 477, in __call__\r\n    result = self.forward(*input, **kwargs)\r\nRuntimeError: \r\nSchema not found for node. File a bug report.\r\nNode: %4 : Dynamic = prim::None()\r\n\r\nInput types:\r\ncandidates were:\r\n:\r\n@torch.jit.script\r\ndef fun(a):\r\n\treturn a[None, :]\r\n          ~~~~ <--- HERE\r\n```\r\n\r\n## Expected behavior\r\n\r\nUnsqueezing using None should work. This is important, because torch.unsqueeze() can only be called for a single dimension atm.\r\n\r\n## Environment\r\n\r\n - PyTorch Version (e.g., 1.0): 1.0.0.dev20181017\r\n - OS (e.g., Linux): Ubuntu 16.04\r\n - How you installed PyTorch (`conda`, `pip`, source): pip3\r\n - Python version: 3.5.2\r\n - CUDA/cuDNN version: 9.2/7104 \r\n - GPU models and configuration: 2 x GTX 1080 Ti\r\n",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/12810/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/12810/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/12780",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/12780/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/12780/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/12780/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/12780",
        "id": 371237234,
        "node_id": "MDU6SXNzdWUzNzEyMzcyMzQ=",
        "number": 12780,
        "title": "[pytorch/jit] all lists get merged during tracing",
        "user": {
            "login": "zeryx",
            "id": 1892175,
            "node_id": "MDQ6VXNlcjE4OTIxNzU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1892175?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zeryx",
            "html_url": "https://github.com/zeryx",
            "followers_url": "https://api.github.com/users/zeryx/followers",
            "following_url": "https://api.github.com/users/zeryx/following{/other_user}",
            "gists_url": "https://api.github.com/users/zeryx/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zeryx/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zeryx/subscriptions",
            "organizations_url": "https://api.github.com/users/zeryx/orgs",
            "repos_url": "https://api.github.com/users/zeryx/repos",
            "events_url": "https://api.github.com/users/zeryx/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zeryx/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "suo",
            "id": 1617424,
            "node_id": "MDQ6VXNlcjE2MTc0MjQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1617424?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/suo",
            "html_url": "https://github.com/suo",
            "followers_url": "https://api.github.com/users/suo/followers",
            "following_url": "https://api.github.com/users/suo/following{/other_user}",
            "gists_url": "https://api.github.com/users/suo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/suo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/suo/subscriptions",
            "organizations_url": "https://api.github.com/users/suo/orgs",
            "repos_url": "https://api.github.com/users/suo/repos",
            "events_url": "https://api.github.com/users/suo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/suo/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "suo",
                "id": 1617424,
                "node_id": "MDQ6VXNlcjE2MTc0MjQ=",
                "avatar_url": "https://avatars.githubusercontent.com/u/1617424?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/suo",
                "html_url": "https://github.com/suo",
                "followers_url": "https://api.github.com/users/suo/followers",
                "following_url": "https://api.github.com/users/suo/following{/other_user}",
                "gists_url": "https://api.github.com/users/suo/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/suo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/suo/subscriptions",
                "organizations_url": "https://api.github.com/users/suo/orgs",
                "repos_url": "https://api.github.com/users/suo/repos",
                "events_url": "https://api.github.com/users/suo/events{/privacy}",
                "received_events_url": "https://api.github.com/users/suo/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 9,
        "created_at": "2018-10-17T19:42:15Z",
        "updated_at": "2019-04-08T16:25:10Z",
        "closed_at": "2018-11-02T02:42:27Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\nIf you define a nn.Module that contains a forward func with multiple lists (That you stack together into a tensor at some point) that process works perfectly fine in the conventional workflow. \r\nHowever, if you attempt to convert your module into a ScriptModule that will be compiled into a graph representation, every list object defined in a `script_method` function seem to merge together somehow.\r\n\r\n## To Reproduce\r\n\r\nCreate a test bench with the source code below, it should be fully self contained\r\n```python\r\n\r\n\r\nimport torch\r\nfrom torch import nn\r\nfrom torch.functional import F\r\n\r\nclass ACTNN(torch.jit.ScriptModule):\r\n\r\n    __constants__ = ['hidden_depth', 'hidden_width']\r\n    # hidden_width = 125\r\n   # hidden_depth = 3\r\n    # output_size = 80\r\n    # input_size = 125\r\n    def __init__(self, input_size, hidden_width, output_size, hidden_depth):\r\n        super(ACTNN, self).__init__()\r\n        self.hidden_depth = hidden_depth\r\n        self.hidden_width = hidden_width\r\n        self.rnn = torch.jit.trace(nn.RNN(input_size, hidden_width,\r\n                                          num_layers=self.hidden_depth, batch_first=True), example_inputs=(torch.rand(1, 1, input_size), torch.rand(self.hidden_depth, 1, hidden_width)))\r\n\r\n        self.proc = torch.jit.trace(nn.Linear(hidden_width, output_size), example_inputs=torch.rand(1, 1, hidden_width))\r\n\r\n\r\n    @torch.jit.script_method\r\n    def forward(self, input: torch.Tensor, hidden: torch.Tensor):\r\n\r\n        input = input.view(1, 1, -1)\r\n        hidden = hidden.view(self.hidden_depth, 1, self.hidden_width)\r\n        # Define the list objects\r\n        states = []\r\n        hiddens = []\r\n        halt_probs = []\r\n        n = 0\r\n        rnn_out, hidden = self.rnn(input, hidden)\r\n        state = self.proc(rnn_out)\r\n        hiddens.append(hidden)\r\n        states.append(state)\r\n        halt_probability = F.sigmoid(hiddens[n].sum())\r\n        halt_probs.append(halt_probability)\r\n       # At this point, both the states & halt_probs lists will contain:\r\n       # 1x 1,1,80 wide tensor\r\n       # 1x 3,1,125 wide tensor\r\n       # 1x 1 wide tensor\r\n\r\n        print(states)\r\n        print(halt_probs)\r\n        residual = torch.sum(torch.cat(halt_probs))\r\n\r\n        states_tensor = torch.stack(states, dim=1)\r\n        hiddens_tensor = torch.stack(hiddens, dim=1)\r\n        halt_subset = halt_probs[0:n-1]\r\n        halt_subset.append(residual)\r\n        halt_prob_tensor = torch.stack(halt_subset).view(-1)\r\n        output = torch.mv(states_tensor, halt_prob_tensor)\r\n        hidden = torch.mv(hiddens_tensor, halt_prob_tensor)\r\n        return output, hidden\r\n```\r\ndimensions of elements in `states`:\r\n```\r\n[ Variable[CPUFloatType]{3,1,125} ],\r\n[ Variable[CPUFloatType]{1,1,80} ],\r\n[ Variable[CPUFloatType]{1} ]]\r\n```\r\n\r\nand here is the error message that causes an overall failure of the trace operation:\r\n```\r\nRuntimeError: \r\ninvalid argument 0: Sizes of tensors must match except in dimension 1. Got 3 and 1 in dimension 0 at /pytorch/aten/src/TH/generic/THTensorMoreMath.cpp:1317:\r\noperation failed in interpreter:\r\n    halt_probability = self.halt_noise(halt_probability, training)\r\n    halt_probs.append(halt_probability)\r\n    print(halt_probs)\r\n    residual = torch.sum(torch.cat(halt_probs))\r\n    states_tensor = torch.stack(states, dim=1)\r\n                    ~~~~~~~~~~~ <--- HERE\r\n```\r\n\r\n\r\n## Expected behavior\r\n\r\nfor the above code sample, \r\n`hiddens` should contain:\r\n```\r\n[ Variable[CPUFloatType]{3,1,125} ],\r\n```\r\n`states` should contain:\r\n```\r\n[ Variable[CPUFloatType]{1,1,80} ]\r\n```\r\n`halt_probs` should contain:\r\n```\r\n[ Variable[CPUFloatType]{1} ]]\r\n```\r\n.\r\n## Environment\r\n\r\n\r\n\r\n - PyTorch Version (e.g., 1.0): 1.0.0.dev20181004\r\n - OS (e.g., Linux): Ubuntu 16.04\r\n - How you installed PyTorch (`conda`, `pip`, source): `pip install /tmp/torch_nightly-1.0.0.dev20181004-cp35-cp35m-linux_x86_64.whl`\r\n - Build command you used (if compiling from source): N/A\r\n - Python version: 3.5.4\r\n - CUDA/cuDNN version: N/A\r\n - GPU models and configuration: N/A\r\n - Any other relevant information: N/A\r\n\r\n## Additional context\r\n\r\nAs I am doing some somewhat advanced pytorch module development, I could understand if my usage here is not supported - however there is currently no error message saying that I can't construct multiple tensors from elements captured in a forward pass.\r\n\r\nIt's certainly possible that some other part of my algorithm is failing, or maybe I'm using torch.jit.ScriptModule incorrectly? That would be great if that was the case,\r\n\r\nI could see this posing issues down the road with other types of dynamic process flow during forward pass loops (like ACT, but also NTMs, etc), which are probably mechanisms we want pytorch 1.0 to support properly.\r\n",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/12780/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/12780/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/12365",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/12365/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/12365/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/12365/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/12365",
        "id": 367083612,
        "node_id": "MDU6SXNzdWUzNjcwODM2MTI=",
        "number": 12365,
        "title": "[JIT] mytuple[0], mytuple[i] does not work in JIT",
        "user": {
            "login": "zasdfgbnm",
            "id": 1032377,
            "node_id": "MDQ6VXNlcjEwMzIzNzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1032377?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zasdfgbnm",
            "html_url": "https://github.com/zasdfgbnm",
            "followers_url": "https://api.github.com/users/zasdfgbnm/followers",
            "following_url": "https://api.github.com/users/zasdfgbnm/following{/other_user}",
            "gists_url": "https://api.github.com/users/zasdfgbnm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zasdfgbnm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zasdfgbnm/subscriptions",
            "organizations_url": "https://api.github.com/users/zasdfgbnm/orgs",
            "repos_url": "https://api.github.com/users/zasdfgbnm/repos",
            "events_url": "https://api.github.com/users/zasdfgbnm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zasdfgbnm/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2018-10-05T06:59:05Z",
        "updated_at": "2018-11-13T01:42:08Z",
        "closed_at": "2018-11-13T01:42:08Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "Current, the following code gives an error:\r\n```python\r\n@torch.jit.script\r\ndef f(x):\r\n    return torch.sort(x)[0]\r\n```\r\nWith error message:\r\n```\r\nTraceback (most recent call last):\r\n  File \"quicktest.py\", line 3, in <module>\r\n    @torch.jit.script\r\n  File \"/Users/gaoxiang/anaconda3/lib/python3.6/site-packages/torch/jit/__init__.py\", line 589, in script\r\n    graph = _jit_script_compile(ast, rcb)\r\nRuntimeError: gatherable->type()->isSubtypeOf(DynamicType::get()) ASSERT FAILED at /Users/administrator/nightlies/2018_09_28/wheel_build_dirs/conda_3.6/conda/conda-bld/pytorch-nightly_1538131714608/work/torch/csrc/jit/script/compiler.cpp:1819, please report a bug to PyTorch. (emitBasicGather at /Users/administrator/nightlies/2018_09_28/wheel_build_dirs/conda_3.6/conda/conda-bld/pytorch-nightly_1538131714608/work/torch/csrc/jit/script/compiler.cpp:1819)\r\nframe #0: torch::jit::script::to_ir::emitSimpleExpr(std::__1::shared_ptr<torch::jit::script::Tree> const&) + 2371 (0x10c3e5e53 in libtorch.dylib)\r\nframe #1: torch::jit::script::to_ir::emitSugaredExpr(torch::jit::script::Expr, unsigned long) + 1446 (0x10c3dd326 in libtorch.dylib)\r\nframe #2: torch::jit::script::to_ir::emitExpr(torch::jit::script::Expr) + 69 (0x10c3dddd5 in libtorch.dylib)\r\nframe #3: torch::jit::script::to_ir::getNamedValues(std::__1::vector<std::__1::shared_ptr<torch::jit::script::Tree>, std::__1::allocator<std::__1::shared_ptr<torch::jit::script::Tree> > >, bool) + 1216 (0x10c3e6a40 in libtorch.dylib)\r\nframe #4: torch::jit::script::to_ir::getValues(std::__1::vector<std::__1::shared_ptr<torch::jit::script::Tree>, std::__1::allocator<std::__1::shared_ptr<torch::jit::script::Tree> > >, bool) + 64 (0x10c3eec30 in libtorch.dylib)\r\nframe #5: torch::jit::script::to_ir::getValues(torch::jit::script::List<torch::jit::script::Expr>, bool) + 86 (0x10c3d8156 in libtorch.dylib)\r\nframe #6: torch::jit::script::to_ir::to_ir(torch::jit::script::Def, std::__1::unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, torch::jit::script::Method&, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, torch::jit::script::Method&> > >&, std::__1::function<std::__1::shared_ptr<torch::jit::script::SugaredValue> (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, torch::jit::script::Method&, torch::jit::SourceRange const&)> const&, std::__1::shared_ptr<torch::jit::script::SugaredValue>, torch::jit::script::Method&) + 2754 (0x10c3d5082 in libtorch.dylib)\r\nframe #7: std::__1::__function::__func<torch::jit::script::defineMethodsInModule(torch::jit::script::Module&, std::__1::vector<torch::jit::script::Def, std::__1::allocator<torch::jit::script::Def> > const&, std::__1::vector<std::__1::function<std::__1::shared_ptr<torch::jit::script::SugaredValue> (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, torch::jit::script::Method&, torch::jit::SourceRange const&)>, std::__1::allocator<std::__1::function<std::__1::shared_ptr<torch::jit::script::SugaredValue> (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, torch::jit::script::Method&, torch::jit::SourceRange const&)> > > const&, std::__1::shared_ptr<torch::jit::script::SugaredValue>)::$_5, std::__1::allocator<torch::jit::script::defineMethodsInModule(torch::jit::script::Module&, std::__1::vector<torch::jit::script::Def, std::__1::allocator<torch::jit::script::Def> > const&, std::__1::vector<std::__1::function<std::__1::shared_ptr<torch::jit::script::SugaredValue> (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, torch::jit::script::Method&, torch::jit::SourceRange const&)>, std::__1::allocator<std::__1::function<std::__1::shared_ptr<torch::jit::script::SugaredValue> (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, torch::jit::script::Method&, torch::jit::SourceRange const&)> > > const&, std::__1::shared_ptr<torch::jit::script::SugaredValue>)::$_5>, void (torch::jit::script::Method&)>::operator()(torch::jit::script::Method&) + 111 (0x10c3d452f in libtorch.dylib)\r\nframe #8: torch::jit::script::Method::ensure_defined() + 175 (0x10c3f7fbf in libtorch.dylib)\r\nframe #9: torch::jit::script::defineMethodsInModule(torch::jit::script::Module&, std::__1::vector<torch::jit::script::Def, std::__1::allocator<torch::jit::script::Def> > const&, std::__1::vector<std::__1::function<std::__1::shared_ptr<torch::jit::script::SugaredValue> (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, torch::jit::script::Method&, torch::jit::SourceRange const&)>, std::__1::allocator<std::__1::function<std::__1::shared_ptr<torch::jit::script::SugaredValue> (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, torch::jit::script::Method&, torch::jit::SourceRange const&)> > > const&, std::__1::shared_ptr<torch::jit::script::SugaredValue>) + 2520 (0x10c3bfa28 in libtorch.dylib)\r\nframe #10: torch::jit::script::compileFunction(torch::jit::script::Def, std::__1::function<std::__1::shared_ptr<torch::jit::script::SugaredValue> (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, torch::jit::script::Method&, torch::jit::SourceRange const&)> const&) + 620 (0x10c3c405c in libtorch.dylib)\r\nframe #11: void pybind11::cpp_function::initialize<torch::jit::script::initJitScriptBindings(_object*)::$_21, std::__1::shared_ptr<torch::jit::Graph>, torch::jit::script::Def const&, std::__1::function<pybind11::function (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >)>, pybind11::name, pybind11::scope, pybind11::sibling>(torch::jit::script::initJitScriptBindings(_object*)::$_21&&, std::__1::shared_ptr<torch::jit::Graph> (*)(torch::jit::script::Def const&, std::__1::function<pybind11::function (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >)>), pybind11::name const&, pybind11::scope const&, pybind11::sibling const&)::'lambda'(pybind11::detail::function_call&)::__invoke(pybind11::detail::function_call&) + 408 (0x10937fe58 in _C.cpython-36m-darwin.so)\r\nframe #12: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) + 3308 (0x108fc570c in _C.cpython-36m-darwin.so)\r\n<omitting python frames>\r\nframe #25: start + 1 (0x7fff67c8f085 in libdyld.dylib)\r\n```",
        "closed_by": {
            "login": "eellison",
            "id": 11477974,
            "node_id": "MDQ6VXNlcjExNDc3OTc0",
            "avatar_url": "https://avatars.githubusercontent.com/u/11477974?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eellison",
            "html_url": "https://github.com/eellison",
            "followers_url": "https://api.github.com/users/eellison/followers",
            "following_url": "https://api.github.com/users/eellison/following{/other_user}",
            "gists_url": "https://api.github.com/users/eellison/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eellison/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eellison/subscriptions",
            "organizations_url": "https://api.github.com/users/eellison/orgs",
            "repos_url": "https://api.github.com/users/eellison/repos",
            "events_url": "https://api.github.com/users/eellison/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eellison/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/12365/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/12365/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/12364",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/12364/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/12364/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/12364/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/12364",
        "id": 367082750,
        "node_id": "MDU6SXNzdWUzNjcwODI3NTA=",
        "number": 12364,
        "title": "[JIT] tensor.device, tensor.dtype, and tensor.shape does not work inside JIT",
        "user": {
            "login": "zasdfgbnm",
            "id": 1032377,
            "node_id": "MDQ6VXNlcjEwMzIzNzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1032377?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zasdfgbnm",
            "html_url": "https://github.com/zasdfgbnm",
            "followers_url": "https://api.github.com/users/zasdfgbnm/followers",
            "following_url": "https://api.github.com/users/zasdfgbnm/following{/other_user}",
            "gists_url": "https://api.github.com/users/zasdfgbnm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zasdfgbnm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zasdfgbnm/subscriptions",
            "organizations_url": "https://api.github.com/users/zasdfgbnm/orgs",
            "repos_url": "https://api.github.com/users/zasdfgbnm/repos",
            "events_url": "https://api.github.com/users/zasdfgbnm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zasdfgbnm/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2018-10-05T06:55:40Z",
        "updated_at": "2018-10-12T18:30:19Z",
        "closed_at": "2018-10-12T18:30:19Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "Sample code:\r\n\r\n```python\r\nimport torch\r\n\r\n@torch.jit.script\r\ndef f(x):\r\n    return torch.zeros(5, device=x.device)\r\n\r\nx = torch.rand(2,3,4)\r\nprint(f(x))\r\n```",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/12364/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/12364/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/12290",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/12290/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/12290/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/12290/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/12290",
        "id": 366466433,
        "node_id": "MDU6SXNzdWUzNjY0NjY0MzM=",
        "number": 12290,
        "title": "[jit] graph fuser doesn't look past broadcasts when fusing",
        "user": {
            "login": "zou3519",
            "id": 5652049,
            "node_id": "MDQ6VXNlcjU2NTIwNDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5652049?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zou3519",
            "html_url": "https://github.com/zou3519",
            "followers_url": "https://api.github.com/users/zou3519/followers",
            "following_url": "https://api.github.com/users/zou3519/following{/other_user}",
            "gists_url": "https://api.github.com/users/zou3519/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zou3519/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zou3519/subscriptions",
            "organizations_url": "https://api.github.com/users/zou3519/orgs",
            "repos_url": "https://api.github.com/users/zou3519/repos",
            "events_url": "https://api.github.com/users/zou3519/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zou3519/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2018-10-03T18:22:01Z",
        "updated_at": "2018-11-26T20:33:26Z",
        "closed_at": "2018-11-26T20:33:26Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "## \ud83d\udc1b Bug\r\n\r\nLet f, g, h be fusible ops.\r\n\r\n```\r\nx = f(w)\r\nz = g(x, y)\r\na, b = chunk(z)\r\nc = h(a, b)\r\n```\r\n\r\nbecomes (with the current graph fuser pass):\r\n\r\n```\r\nx = f(w)\r\nx', y' = broadcast(x, y)\r\nax, bx = chunk(x')\r\nay, by = chunk(y')\r\na = g(ax, ay)\r\nb = g(bx, by)\r\nc = h(a, b)\r\n```\r\n\r\nThe broadcast node prevents f from being fused into the bottom group.\r\nIt would be great if we could move the broadcast node up as well to produce\r\nsomething like:\r\n\r\n```\r\nw', y' = broadcast(w, y)\r\nx' = f(w')\r\nax, bx = chunk(x')\r\nay, by = chunk(y')\r\na = g(ax, ay)\r\nb = g(bx, by)\r\n```\r\n\r\ncc @apaszke @mruberry ",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/12290/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/12290/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/12118",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/12118/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/12118/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/12118/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/12118",
        "id": 364211100,
        "node_id": "MDU6SXNzdWUzNjQyMTExMDA=",
        "number": 12118,
        "title": "JIT segfaults when a Python call throws.",
        "user": {
            "login": "apaszke",
            "id": 4583066,
            "node_id": "MDQ6VXNlcjQ1ODMwNjY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4583066?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/apaszke",
            "html_url": "https://github.com/apaszke",
            "followers_url": "https://api.github.com/users/apaszke/followers",
            "following_url": "https://api.github.com/users/apaszke/following{/other_user}",
            "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions",
            "organizations_url": "https://api.github.com/users/apaszke/orgs",
            "repos_url": "https://api.github.com/users/apaszke/repos",
            "events_url": "https://api.github.com/users/apaszke/events{/privacy}",
            "received_events_url": "https://api.github.com/users/apaszke/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2018-09-26T21:04:28Z",
        "updated_at": "2018-10-04T00:26:27Z",
        "closed_at": "2018-10-04T00:26:27Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "```python\r\nimport torch                \r\n                            \r\ndef pyfn(x):                \r\n    raise RuntimeError('eh')\r\n                            \r\n                            \r\n@torch.jit.script           \r\ndef f(x):                   \r\n    return pyfn(x)          \r\n                            \r\nf(torch.randn(2, 2))        \r\n```\r\n\r\ngives me\r\n\r\n```\r\nzsh: segmentation fault  python3 tmp.py\r\n```\r\n\r\nStack trace points to pybind calling `PyErr_Fetch` (which likely segfaults because we don't hold the GIL and the Python thread state is NULL).\r\n\r\n```\r\n#0  0x000055555563fe37 in PyErr_Fetch ()\r\n#1  0x00007fffe603a9e3 in pybind11::error_scope::error_scope (this=0x7fffffffc130) at /root/pytorch/third_party/pybind11/include/pybind11/detail/common.h:715\r\n#2  pybind11::error_already_set::~error_already_set (this=0x5555b1c9f4f0, __in_chrg=<optimized out>)\r\n    at /root/pytorch/third_party/pybind11/include/pybind11/pybind11.h:1890\r\n#3  0x00007fffcf58bc8a in __gxx_exception_cleanup (code=<optimized out>, exc=0x5555b1c9f4d0)\r\n    at /opt/conda/conda-bld/compilers_linux-64_1534514838838/work/.build/x86_64-conda_cos6-linux-gnu/src/gcc/libstdc++-v3/libsupc++/eh_throw.cc:49\r\n#4  0x00007fffd480c719 in torch::jit::InterpreterStateImpl::runOneStage(std::vector<torch::jit::IValue, std::allocator<torch::jit::IValue> >&) ()\r\n   from /root/miniconda3/lib/python3.5/site-packages/torch/lib/libtorch.so.1\r\n#5  0x00007fffd47eb524 in torch::jit::GraphExecutorImpl::run(std::vector<torch::jit::IValue, std::allocator<torch::jit::IValue> >&) ()\r\n   from /root/miniconda3/lib/python3.5/site-packages/torch/lib/libtorch.so.1\r\n#6  0x00007fffe62e73e0 in torch::jit::script::Method::run (stack=..., this=0x5555b1213450) at /root/pytorch/torch/csrc/jit/script/module.h:60\r\n#7  torch::jit::invokeScriptMethodFromPython (method=..., args=..., kwargs=...) at /root/pytorch/torch/csrc/jit/pybind_utils.h:299\r\n#8  0x00007fffe62ca7ed in torch::jit::script::<lambda(torch::jit::script::Module&, pybind11::args, pybind11::kwargs)>::operator() (__closure=<optimized out>, \r\n    kwargs=..., args=..., self=...) at torch/csrc/jit/script/init.cpp:498\r\n```\r\n",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/12118/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/12118/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/11625",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/11625/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/11625/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/11625/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/11625",
        "id": 359735886,
        "node_id": "MDU6SXNzdWUzNTk3MzU4ODY=",
        "number": 11625,
        "title": "[JIT][script] Don't support elif in string frontend",
        "user": {
            "login": "jamesr66a",
            "id": 4685384,
            "node_id": "MDQ6VXNlcjQ2ODUzODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4685384?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesr66a",
            "html_url": "https://github.com/jamesr66a",
            "followers_url": "https://api.github.com/users/jamesr66a/followers",
            "following_url": "https://api.github.com/users/jamesr66a/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesr66a/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesr66a/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesr66a/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesr66a/orgs",
            "repos_url": "https://api.github.com/users/jamesr66a/repos",
            "events_url": "https://api.github.com/users/jamesr66a/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesr66a/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2018-09-13T04:11:23Z",
        "updated_at": "2018-09-14T17:10:57Z",
        "closed_at": "2018-09-14T17:10:57Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "```\r\nimport torch\r\n\r\ncu = torch.jit.CompilationUnit('''\r\ndef fizzbuzz(niter : int):\r\n    for i in range(niter):\r\n        if i % 3 == 0 and i % 5 == 0:\r\n            print('fizzbuzz')\r\n        elif i % 3 == 0:\r\n            print('fizz')\r\n        elif i % 5 == 0:\r\n            print('buzz')\r\n        else:\r\n            print(i)\r\n    return niter\r\n''')\r\n\r\nprint(cu.fizzbuzz.graph)\r\n```\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"dank.py\", line 15, in <module>\r\n    ''')\r\n  File \"/Users/jamesreed/onnx-fairseq/pytorch/torch/jit/__init__.py\", line 566, in __init__\r\n    self.define(lang, _frames_up=_frames_up + 1)\r\n  File \"/Users/jamesreed/onnx-fairseq/pytorch/torch/jit/__init__.py\", line 572, in define\r\n    self.module._define(lang, rcb, False)\r\nRuntimeError: expected ident but found 'elif' here:\r\n\r\ndef fizzbuzz(niter : int):\r\n    for i in range(niter):\r\n        if i % 3 == 0 and i % 5 == 0:\r\n            print('fizzbuzz')\r\n        elif i % 3 == 0:\r\n        ~~~~ <--- HERE\r\n            print('fizz')\r\n        elif i % 5 == 0:\r\n            print('buzz')\r\n        else:\r\n            print(i)\r\n    return niter\r\n```",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/11625/reactions",
            "total_count": 2,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 2,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/11625/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/11504",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/11504/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/11504/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/11504/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/11504",
        "id": 358855882,
        "node_id": "MDU6SXNzdWUzNTg4NTU4ODI=",
        "number": 11504,
        "title": "[JIT] Tracer throws runtime exception for torch.normal",
        "user": {
            "login": "neerajprad",
            "id": 1762463,
            "node_id": "MDQ6VXNlcjE3NjI0NjM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1762463?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/neerajprad",
            "html_url": "https://github.com/neerajprad",
            "followers_url": "https://api.github.com/users/neerajprad/followers",
            "following_url": "https://api.github.com/users/neerajprad/following{/other_user}",
            "gists_url": "https://api.github.com/users/neerajprad/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/neerajprad/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neerajprad/subscriptions",
            "organizations_url": "https://api.github.com/users/neerajprad/orgs",
            "repos_url": "https://api.github.com/users/neerajprad/repos",
            "events_url": "https://api.github.com/users/neerajprad/events{/privacy}",
            "received_events_url": "https://api.github.com/users/neerajprad/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2018-09-11T01:49:24Z",
        "updated_at": "2018-09-12T00:58:01Z",
        "closed_at": "2018-09-12T00:58:01Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "## Issue description\r\n\r\nThe normal distribution (and hence all distributions that use the `torch.normal` sampler) is throwing a runtime exception under JIT (this seems to be a recent regression). I have isolated the issue to the following code snippet which throws an exception on PyTorch master, and is breaking many PyTorch models. cc. @zou3519, @apaszke, @fritzo. \r\n\r\n## Code example\r\n\r\nThe following code that returns a sample from a normal distribution,\r\n\r\n```python\r\ndef fn(mean, std):\r\n    return torch.normal(mean, std)\r\n\r\ncompiled_fn = torch.jit.trace(fn, (torch.zeros(2, 3), torch.ones(2, 3)))\r\n```\r\n\r\nthrows a Runtime Exception:\r\n```\r\nTraceback (most recent call last):\r\n  File \"/Users/npradhan/workspace/pyro_dev/pyro/examples/ex1.py\", line 10, in <module>\r\n    compiled_fn = torch.jit.trace(fn, (torch.zeros(2, 3), torch.ones(2, 3)))\r\n  File \"/Users/npradhan/miniconda2/envs/pytorch-master/lib/python3.6/site-packages/torch/jit/__init__.py\", line 501, in trace\r\n    module._create_method_from_trace('forward', func, example_inputs)\r\n  File \"/Users/npradhan/workspace/pyro_dev/pyro/examples/ex1.py\", line 7, in fn\r\n    return d.sample()\r\n  File \"/Users/npradhan/miniconda2/envs/pytorch-master/lib/python3.6/site-packages/torch/distributions/normal.py\", line 54, in sample\r\n    return torch.normal(self.loc.expand(shape), self.scale.expand(shape))\r\nRuntimeError: Found an unsupported argument type in the JIT tracer: at::Generator*. File a bug report.\r\n```\r\n\r\n## System Info\r\n\r\n```\r\n  $ python collect_env.py\r\nCollecting environment information...\r\nPyTorch version: 0.5.0a0+f2f43ad\r\nIs debug build: No\r\nCUDA used to build PyTorch: None\r\n\r\nOS: Mac OSX 10.13.3\r\nGCC version: Could not collect\r\nCMake version: version 3.12.0\r\n\r\nPython version: 3.6\r\nIs CUDA available: No\r\nCUDA runtime version: No CUDA\r\nGPU models and configuration: No CUDA\r\nNvidia driver version: No CUDA\r\ncuDNN version: No CUDA\r\n\r\nVersions of relevant libraries:\r\n[pip] numpy (1.15.0)\r\n[pip] torch (0.5.0a0+f2f43ad)\r\n[pip] torchfile (0.1.0)\r\n[pip] torchvision (0.2.1)\r\n[conda] torch                     0.5.0a0+f2f43ad           <pip>\r\n[conda] torch                     0.5.0a0+2158f4a           <pip>\r\n[conda] torchfile                 0.1.0                     <pip>\r\n[conda] torchvision               0.2.1                     <pip>\r\n```\r\n",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/11504/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/11504/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/11419",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/11419/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/11419/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/11419/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/11419",
        "id": 358262097,
        "node_id": "MDU6SXNzdWUzNTgyNjIwOTc=",
        "number": 11419,
        "title": "pybind/GIL-related hang with Python 3.7 when resolving `torch.` in script",
        "user": {
            "login": "jekbradbury",
            "id": 11729078,
            "node_id": "MDQ6VXNlcjExNzI5MDc4",
            "avatar_url": "https://avatars.githubusercontent.com/u/11729078?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jekbradbury",
            "html_url": "https://github.com/jekbradbury",
            "followers_url": "https://api.github.com/users/jekbradbury/followers",
            "following_url": "https://api.github.com/users/jekbradbury/following{/other_user}",
            "gists_url": "https://api.github.com/users/jekbradbury/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jekbradbury/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jekbradbury/subscriptions",
            "organizations_url": "https://api.github.com/users/jekbradbury/orgs",
            "repos_url": "https://api.github.com/users/jekbradbury/repos",
            "events_url": "https://api.github.com/users/jekbradbury/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jekbradbury/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 443484135,
                "node_id": "MDU6TGFiZWw0NDM0ODQxMzU=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/high%20priority",
                "name": "high priority",
                "color": "F22613",
                "default": false,
                "description": null
            },
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "jamesr66a",
            "id": 4685384,
            "node_id": "MDQ6VXNlcjQ2ODUzODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4685384?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesr66a",
            "html_url": "https://github.com/jamesr66a",
            "followers_url": "https://api.github.com/users/jamesr66a/followers",
            "following_url": "https://api.github.com/users/jamesr66a/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesr66a/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesr66a/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesr66a/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesr66a/orgs",
            "repos_url": "https://api.github.com/users/jamesr66a/repos",
            "events_url": "https://api.github.com/users/jamesr66a/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesr66a/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "jamesr66a",
                "id": 4685384,
                "node_id": "MDQ6VXNlcjQ2ODUzODQ=",
                "avatar_url": "https://avatars.githubusercontent.com/u/4685384?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/jamesr66a",
                "html_url": "https://github.com/jamesr66a",
                "followers_url": "https://api.github.com/users/jamesr66a/followers",
                "following_url": "https://api.github.com/users/jamesr66a/following{/other_user}",
                "gists_url": "https://api.github.com/users/jamesr66a/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/jamesr66a/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jamesr66a/subscriptions",
                "organizations_url": "https://api.github.com/users/jamesr66a/orgs",
                "repos_url": "https://api.github.com/users/jamesr66a/repos",
                "events_url": "https://api.github.com/users/jamesr66a/events{/privacy}",
                "received_events_url": "https://api.github.com/users/jamesr66a/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 3,
        "created_at": "2018-09-08T04:07:12Z",
        "updated_at": "2018-09-11T19:41:02Z",
        "closed_at": "2018-09-11T19:41:02Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "- PyTorch or Caffe2: PyTorch\r\n- How you installed PyTorch (conda, pip, source): source\r\n- Build command you used (if compiling from source): `MACOSX_DEPLOYMENT_TARGET=10.9 NO_CUDA=1 DEBUG=1 CC=clang CXX=clang++ python setup.py build_deps develop`\r\n- OS: macOS 10.13.6\r\n- PyTorch version: 0.5.0a0+c9843bd (master from today)\r\n- Python version: 3.7.0 (issue not present with 3.6.6)\r\n- CUDA/cuDNN version: N/A\r\n- GPU models and configuration: N/A\r\n- GCC version (if compiling from source): Apple Clang 9.1.0\r\n- CMake version: 3.12.0\r\n- Versions of any other relevant libraries:\r\n\r\nThis hangs:\r\n```\r\n$ cat mwe.py \r\nimport torch\r\n@torch.jit.script\r\ndef f(x):\r\n    return torch.tanh(x)\r\n$ python mwe.py\r\n\r\n```\r\nThis is the LLDB backtrace:\r\n```\r\n  * frame #0: 0x00007fff773e8a16 libsystem_kernel.dylib`__psynch_cvwait + 10\r\n    frame #1: 0x00007fff775b1589 libsystem_pthread.dylib`_pthread_cond_wait + 732\r\n    frame #2: 0x000000010015ff01 python`take_gil + 417\r\n    frame #3: 0x0000000100160246 python`PyEval_AcquireThread + 22\r\n    frame #4: 0x000000011026543c _C.cpython-37m-darwin.so`pybind11::gil_scoped_acquire::gil_scoped_acquire(this=0x00007ffeefbf6f90) at pybind11.h:1781\r\n    frame #5: 0x0000000110265355 _C.cpython-37m-darwin.so`pybind11::gil_scoped_acquire::gil_scoped_acquire(this=0x00007ffeefbf6f90) at pybind11.h:1756\r\n    frame #6: 0x00000001109efcaf _C.cpython-37m-darwin.so`pybind11::detail::type_caster<std::__1::function<pybind11::function (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >)>, void>::load(this=0x000000011b51e008, args=\"torch\")::'lambda'(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >)::operator()(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >) const at functional.h:58\r\n    frame #7: 0x00000001109efc34 _C.cpython-37m-darwin.so`pybind11::function std::__1::__invoke_void_return_wrapper<pybind11::function>::__call<pybind11::detail::type_caster<std::__1::function<pybind11::function (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >)>, void>::load(pybind11::handle, bool)::'lambda'(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >)&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(pybind11::detail::type_caster<std::__1::function<pybind11::function (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >)>, void>::load(pybind11::handle, bool)::'lambda'(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >)&&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&) [inlined] decltype(__f=0x000000011b51e008, __args=\"\")>, void>::load(pybind11::handle, bool)::'lambda'(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >)&>(fp)(std::__1::forward<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(fp0))) std::__1::__invoke<pybind11::detail::type_caster<std::__1::function<pybind11::function (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >)>, void>::load(pybind11::handle, bool)::'lambda'(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >)&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(pybind11::detail::type_caster<std::__1::function<pybind11::function (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >)>, void>::load(pybind11::handle, bool)::'lambda'(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >)&&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&) at type_traits:4323\r\n    frame #8: 0x00000001109efb5f _C.cpython-37m-darwin.so`pybind11::function std::__1::__invoke_void_return_wrapper<pybind11::function>::__call<pybind11::detail::type_caster<std::__1::function<pybind11::function (__args=0x000000011b51e008, __args=\"\")>, void>::load(pybind11::handle, bool)::'lambda'(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >)&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(pybind11::detail::type_caster<std::__1::function<pybind11::function (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >)>, void>::load(pybind11::handle, bool)::'lambda'(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >)&&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&) at __functional_base:318\r\n    frame #9: 0x00000001109ef970 _C.cpython-37m-darwin.so`std::__1::__function::__func<pybind11::detail::type_caster<std::__1::function<pybind11::function (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >)>, void>::load(pybind11::handle, bool)::'lambda'(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >), std::__1::allocator<pybind11::detail::type_caster<std::__1::function<pybind11::function (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >)>, void>::load(pybind11::handle, bool)::'lambda'(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >)>, pybind11::function (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >)>::operator(this=0x000000011b51e000, __arg=\"\")(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&) at functional:1562\r\n    frame #10: 0x00000001109e5d94 _C.cpython-37m-darwin.so`std::__1::function<pybind11::function (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >)>::operator(this=0x000000011b51e000, __arg=\"\")(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >) const at functional:1921\r\n    frame #11: 0x00000001109e5ab9 _C.cpython-37m-darwin.so`torch::jit::script::pythonResolver(this=0x000000011b5202b0, name=\"torch\", m=0x000000011b520c10, loc=0x00007ffeefbf81a0)>)::$_0::operator()(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, torch::jit::script::Method&, torch::jit::SourceRange const&) const at init.cpp:367\r\n    frame #12: 0x00000001109e5a3a _C.cpython-37m-darwin.so`std::__1::shared_ptr<torch::jit::script::SugaredValue> std::__1::__invoke_void_return_wrapper<std::__1::shared_ptr<torch::jit::script::SugaredValue> >::__call<torch::jit::script::pythonResolver(std::__1::function<pybind11::function (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >)>)::$_0&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, torch::jit::script::Method&, torch::jit::SourceRange const&>(torch::jit::script::pythonResolver(std::__1::function<pybind11::function (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >)>)::$_0&&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&&&, torch::jit::script::Method&&&, torch::jit::SourceRange const&&&) [inlined] decltype(__f=0x000000011b5202b0, __args=\"torch\", __args=0x000000011b520c10, __args=0x00007ffeefbf81a0)>)::$_0&>(fp)(std::__1::forward<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, torch::jit::script::Method&, torch::jit::SourceRange const&>(fp0))) std::__1::__invoke<torch::jit::script::pythonResolver(std::__1::function<pybind11::function (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >)>)::$_0&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, torch::jit::script::Method&, torch::jit::SourceRange const&>(torch::jit::script::pythonResolver(std::__1::function<pybind11::function (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >)>)::$_0&&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&&&, torch::jit::script::Method&&&, torch::jit::SourceRange const&&&) at type_traits:4323\r\n    frame #13: 0x00000001109e59fe _C.cpython-37m-darwin.so`std::__1::shared_ptr<torch::jit::script::SugaredValue> std::__1::__invoke_void_return_wrapper<std::__1::shared_ptr<torch::jit::script::SugaredValue> >::__call<torch::jit::script::pythonResolver(__args=0x000000011b5202b0, __args=\"torch\", __args=0x000000011b520c10, __args=0x00007ffeefbf81a0)>)::$_0&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, torch::jit::script::Method&, torch::jit::SourceRange const&>(torch::jit::script::pythonResolver(std::__1::function<pybind11::function (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >)>)::$_0&&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&&&, torch::jit::script::Method&&&, torch::jit::SourceRange const&&&) at __functional_base:318\r\n    frame #14: 0x00000001109e5670 _C.cpython-37m-darwin.so`std::__1::__function::__func<torch::jit::script::pythonResolver(std::__1::function<pybind11::function (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >)>)::$_0, std::__1::allocator<torch::jit::script::pythonResolver(std::__1::function<pybind11::function (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >)>)::$_0>, std::__1::shared_ptr<torch::jit::script::SugaredValue> (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, torch::jit::script::Method&, torch::jit::SourceRange const&)>::operator(this=0x000000011b5202a0, __arg=\"torch\", __arg=0x000000011b520c10, __arg=0x00007ffeefbf81a0)(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, torch::jit::script::Method&, torch::jit::SourceRange const&) at functional:1562\r\n    frame #15: 0x0000000118fa2a0f libtorch.dylib`std::__1::function<std::__1::shared_ptr<torch::jit::script::SugaredValue> (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, torch::jit::script::Method&, torch::jit::SourceRange const&)>::operator(this=0x000000011b5202a0, __arg=\"torch\", __arg=0x000000011b520c10, __arg=0x00007ffeefbf81a0)(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, torch::jit::script::Method&, torch::jit::SourceRange const&) const at functional:1921\r\n    frame #16: 0x0000000118fa0fe3 libtorch.dylib`torch::jit::script::Environment::getSugaredVar(this=0x000000011b5202f8, ident=\"torch\", range=SourceRange @ 0x00007ffeefbf81a0, required=true) at compiler.cpp:316\r\n    frame #17: 0x0000000118fb5dd4 libtorch.dylib`torch::jit::script::Environment::getSugaredVar(this=0x000000011b5202f8, ident=0x00007ffeefbf8470, required=true) at compiler.cpp:306\r\n    frame #18: 0x0000000118f9ab96 libtorch.dylib`torch::jit::script::to_ir::emitSugaredExpr(this=0x00007ffeefbfb2f0, tree=Expr @ 0x00007ffeefbf8700, n_binders=1) at compiler.cpp:1444\r\n    frame #19: 0x0000000118f9ac92 libtorch.dylib`torch::jit::script::to_ir::emitSugaredExpr(this=0x00007ffeefbfb2f0, tree=Expr @ 0x00007ffeefbf88b8, n_binders=1) at compiler.cpp:1447\r\n    frame #20: 0x0000000118fb6c5f libtorch.dylib`torch::jit::script::to_ir::emitApplyExpr(this=0x00007ffeefbfb2f0, callee=Expr @ 0x00007ffeefbf89f8, inputs=size=1, attributes=ArrayRef<torch::jit::NamedValue> @ 0x00007ffeefbf88e8, n_binders=1) at compiler.cpp:1418\r\n    frame #21: 0x0000000118f9b21f libtorch.dylib`torch::jit::script::to_ir::emitSugaredExpr(this=0x00007ffeefbfb2f0, tree=Expr @ 0x00007ffeefbf8c90, n_binders=1) at compiler.cpp:1460\r\n    frame #22: 0x0000000118f9c671 libtorch.dylib`torch::jit::script::to_ir::emitExpr(this=0x00007ffeefbfb2f0, tree=Expr @ 0x00007ffeefbf8d78) at compiler.cpp:1423\r\n    frame #23: 0x0000000118fb9109 libtorch.dylib`torch::jit::script::to_ir::getNamedValues(this=0x00007ffeefbfb2f0, trees=<unavailable>, maybe_unpack=true) at compiler.cpp:1381\r\n    frame #24: 0x0000000118fd1fe0 libtorch.dylib`torch::jit::script::to_ir::getValues(this=0x00007ffeefbfb2f0, trees=<unavailable>, maybe_unpack=true) at compiler.cpp:1395\r\n    frame #25: 0x0000000118f8d384 libtorch.dylib`torch::jit::script::to_ir::getValues(this=0x00007ffeefbfb2f0, trees=<unavailable>, maybe_unpack=true) at compiler.cpp:1400\r\n    frame #26: 0x0000000118f8954e libtorch.dylib`torch::jit::script::to_ir::to_ir(this=0x00007ffeefbfb2f0, def=Def @ 0x00007ffeefbfb2e0, function_table=size=1, resolver=0x000000011b5202a0, self=nullptr, method=0x000000011b520c10)> const&, std::__1::shared_ptr<torch::jit::script::SugaredValue>, torch::jit::script::Method&) at compiler.cpp:791\r\n    frame #27: 0x0000000118f8743d libtorch.dylib`torch::jit::script::to_ir::to_ir(this=0x00007ffeefbfb2f0, def=<unavailable>, function_table=size=1, resolver=0x000000011b5202a0, self=<unavailable>, method=0x000000011b520c10)> const&, std::__1::shared_ptr<torch::jit::script::SugaredValue>, torch::jit::script::Method&) at compiler.cpp:737\r\n    frame #28: 0x0000000118f8739e libtorch.dylib`torch::jit::script::defineMethodsInModule(this=0x000000011b520fa0, method=0x000000011b520c10)>, std::__1::allocator<std::__1::function<std::__1::shared_ptr<torch::jit::script::SugaredValue> (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, torch::jit::script::Method&, torch::jit::SourceRange const&)> > > const&, std::__1::shared_ptr<torch::jit::script::SugaredValue>)::$_4::operator()(torch::jit::script::Method&) const at compiler.cpp:1823\r\n    frame #29: 0x0000000118f8727d libtorch.dylib`void std::__1::__invoke_void_return_wrapper<void>::__call<torch::jit::script::defineMethodsInModule(torch::jit::script::Module&, std::__1::vector<torch::jit::script::Def, std::__1::allocator<torch::jit::script::Def> > const&, std::__1::vector<std::__1::function<std::__1::shared_ptr<torch::jit::script::SugaredValue> (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, torch::jit::script::Method&, torch::jit::SourceRange const&)>, std::__1::allocator<std::__1::function<std::__1::shared_ptr<torch::jit::script::SugaredValue> (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, torch::jit::script::Method&, torch::jit::SourceRange const&)> > > const&, std::__1::shared_ptr<torch::jit::script::SugaredValue>)::$_4&, torch::jit::script::Method&>(torch::jit::script::defineMethodsInModule(torch::jit::script::Module&, std::__1::vector<torch::jit::script::Def, std::__1::allocator<torch::jit::script::Def> > const&, std::__1::vector<std::__1::function<std::__1::shared_ptr<torch::jit::script::SugaredValue> (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, torch::jit::script::Method&, torch::jit::SourceRange const&)>, std::__1::allocator<std::__1::function<std::__1::shared_ptr<torch::jit::script::SugaredValue> (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, torch::jit::script::Method&, torch::jit::SourceRange const&)> > > const&, std::__1::shared_ptr<torch::jit::script::SugaredValue>)::$_4&&&, torch::jit::script::Method&&&) [inlined] decltype(__f=0x000000011b520fa0, __args=0x000000011b520c10)>, std::__1::allocator<std::__1::function<std::__1::shared_ptr<torch::jit::script::SugaredValue> (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, torch::jit::script::Method&, torch::jit::SourceRange const&)> > > const&, std::__1::shared_ptr<torch::jit::script::SugaredValue>)::$_4&>(fp)(std::__1::forward<torch::jit::script::Method&>(fp0))) std::__1::__invoke<torch::jit::script::defineMethodsInModule(torch::jit::script::Module&, std::__1::vector<torch::jit::script::Def, std::__1::allocator<torch::jit::script::Def> > const&, std::__1::vector<std::__1::function<std::__1::shared_ptr<torch::jit::script::SugaredValue> (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, torch::jit::script::Method&, torch::jit::SourceRange const&)>, std::__1::allocator<std::__1::function<std::__1::shared_ptr<torch::jit::script::SugaredValue> (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, torch::jit::script::Method&, torch::jit::SourceRange const&)> > > const&, std::__1::shared_ptr<torch::jit::script::SugaredValue>)::$_4&, torch::jit::script::Method&>(torch::jit::script::defineMethodsInModule(torch::jit::script::Module&, std::__1::vector<torch::jit::script::Def, std::__1::allocator<torch::jit::script::Def> > const&, std::__1::vector<std::__1::function<std::__1::shared_ptr<torch::jit::script::SugaredValue> (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, torch::jit::script::Method&, torch::jit::SourceRange const&)>, std::__1::allocator<std::__1::function<std::__1::shared_ptr<torch::jit::script::SugaredValue> (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, torch::jit::script::Method&, torch::jit::SourceRange const&)> > > const&, std::__1::shared_ptr<torch::jit::script::SugaredValue>)::$_4&&&, torch::jit::script::Method&&&) at type_traits:4323\r\n    frame #30: 0x0000000118f87260 libtorch.dylib`void std::__1::__invoke_void_return_wrapper<void>::__call<torch::jit::script::defineMethodsInModule(__args=0x000000011b520fa0, __args=0x000000011b520c10)>, std::__1::allocator<std::__1::function<std::__1::shared_ptr<torch::jit::script::SugaredValue> (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, torch::jit::script::Method&, torch::jit::SourceRange const&)> > > const&, std::__1::shared_ptr<torch::jit::script::SugaredValue>)::$_4&, torch::jit::script::Method&>(torch::jit::script::defineMethodsInModule(torch::jit::script::Module&, std::__1::vector<torch::jit::script::Def, std::__1::allocator<torch::jit::script::Def> > const&, std::__1::vector<std::__1::function<std::__1::shared_ptr<torch::jit::script::SugaredValue> (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, torch::jit::script::Method&, torch::jit::SourceRange const&)>, std::__1::allocator<std::__1::function<std::__1::shared_ptr<torch::jit::script::SugaredValue> (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, torch::jit::script::Method&, torch::jit::SourceRange const&)> > > const&, std::__1::shared_ptr<torch::jit::script::SugaredValue>)::$_4&&&, torch::jit::script::Method&&&) at __functional_base:349\r\n    frame #31: 0x0000000118f86e79 libtorch.dylib`std::__1::__function::__func<torch::jit::script::defineMethodsInModule(torch::jit::script::Module&, std::__1::vector<torch::jit::script::Def, std::__1::allocator<torch::jit::script::Def> > const&, std::__1::vector<std::__1::function<std::__1::shared_ptr<torch::jit::script::SugaredValue> (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, torch::jit::script::Method&, torch::jit::SourceRange const&)>, std::__1::allocator<std::__1::function<std::__1::shared_ptr<torch::jit::script::SugaredValue> (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, torch::jit::script::Method&, torch::jit::SourceRange const&)> > > const&, std::__1::shared_ptr<torch::jit::script::SugaredValue>)::$_4, std::__1::allocator<torch::jit::script::defineMethodsInModule(torch::jit::script::Module&, std::__1::vector<torch::jit::script::Def, std::__1::allocator<torch::jit::script::Def> > const&, std::__1::vector<std::__1::function<std::__1::shared_ptr<torch::jit::script::SugaredValue> (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, torch::jit::script::Method&, torch::jit::SourceRange const&)>, std::__1::allocator<std::__1::function<std::__1::shared_ptr<torch::jit::script::SugaredValue> (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, torch::jit::script::Method&, torch::jit::SourceRange const&)> > > const&, std::__1::shared_ptr<torch::jit::script::SugaredValue>)::$_4>, void (torch::jit::script::Method&)>::operator(this=0x000000011b520f90, __arg=0x000000011b520c10)(torch::jit::script::Method&) at functional:1562\r\n    frame #32: 0x0000000110a59e0e _C.cpython-37m-darwin.so`std::__1::function<void (torch::jit::script::Method&)>::operator(this=0x000000011b520f90, __arg=0x000000011b520c10)(torch::jit::script::Method&) const at functional:1921\r\n    frame #33: 0x000000011900a2b2 libtorch.dylib`torch::jit::script::Method::ensure_defined(this=0x000000011b520c10) at module.cpp:69\r\n    frame #34: 0x0000000118f489d7 libtorch.dylib`torch::jit::script::defineMethodsInModule(m=0x00007ffeefbfca18, definitions=size=1, resolvers=size=1, self=nullptr)>, std::__1::allocator<std::__1::function<std::__1::shared_ptr<torch::jit::script::SugaredValue> (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, torch::jit::script::Method&, torch::jit::SourceRange const&)> > > const&, std::__1::shared_ptr<torch::jit::script::SugaredValue>) at compiler.cpp:1836\r\n    frame #35: 0x0000000118f5051c libtorch.dylib`torch::jit::script::compileFunction(def=Def @ 0x00007ffeefbfcd80, resolver=0x000000011a6ce950)> const&) at compiler.cpp:1958\r\n    frame #36: 0x0000000110a13e2a _C.cpython-37m-darwin.so`torch::jit::script::initJitScriptBindings(this=0x000000011a6b67e8, def=0x000000011a6d5160, rcb=0x000000011a6d0410)::$_21::operator()(torch::jit::script::Def const&, std::__1::function<pybind11::function (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >)>) const at init.cpp:534\r\n    frame #37: 0x0000000110a13d39 _C.cpython-37m-darwin.so`std::__1::shared_ptr<torch::jit::Graph> pybind11::detail::argument_loader<torch::jit::script::Def const&, std::__1::function<pybind11::function (this=0x00007ffeefbfcff0, f=0x000000011a6b67e8, (null)=index_sequence<0, 1> @ 0x00007ffeefbfce80, (null)=0x00007ffeefbfcf20)> >::call_impl<std::__1::shared_ptr<torch::jit::Graph>, torch::jit::script::initJitScriptBindings(_object*)::$_21&, 0ul, 1ul, pybind11::detail::void_type>(torch::jit::script::initJitScriptBindings(_object*)::$_21&&&, pybind11::detail::index_sequence<0ul, 1ul>, pybind11::detail::void_type&&) at cast.h:1866\r\n    frame #38: 0x0000000110a13768 _C.cpython-37m-darwin.so`std::__1::enable_if<!(std::is_void<std::__1::shared_ptr<torch::jit::Graph> >::value), std::__1::shared_ptr<torch::jit::Graph> >::type pybind11::detail::argument_loader<torch::jit::script::Def const&, std::__1::function<pybind11::function (this=0x00007ffeefbfcff0, f=0x000000011a6b67e8)> >::call<std::__1::shared_ptr<torch::jit::Graph>, pybind11::detail::void_type, torch::jit::script::initJitScriptBindings(_object*)::$_21&>(torch::jit::script::initJitScriptBindings(_object*)::$_21&&&) at cast.h:1843\r\n    frame #39: 0x0000000110a135da _C.cpython-37m-darwin.so`void pybind11::cpp_function::initialize<torch::jit::script::initJitScriptBindings(_object*)::$_21, std::__1::shared_ptr<torch::jit::Graph>, torch::jit::script::Def const&, std::__1::function<pybind11::function (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >)>, pybind11::name, pybind11::scope, pybind11::sibling>(this=0x0000000110a134a0, call=0x00007ffeefbfd978)::$_21&&, std::__1::shared_ptr<torch::jit::Graph> (*)(torch::jit::script::Def const&, std::__1::function<pybind11::function (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >)>), pybind11::name const&, pybind11::scope const&, pybind11::sibling const&)::'lambda'(pybind11::detail::function_call&)::operator()(pybind11::detail::function_call&) const at pybind11.h:155\r\n    frame #40: 0x0000000110a134b8 _C.cpython-37m-darwin.so`void pybind11::cpp_function::initialize<torch::jit::script::initJitScriptBindings(_object*)::$_21, std::__1::shared_ptr<torch::jit::Graph>, torch::jit::script::Def const&, std::__1::function<pybind11::function (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >)>, pybind11::name, pybind11::scope, pybind11::sibling>(call=0x00007ffeefbfd978)::$_21&&, std::__1::shared_ptr<torch::jit::Graph> (*)(torch::jit::script::Def const&, std::__1::function<pybind11::function (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >)>), pybind11::name const&, pybind11::scope const&, pybind11::sibling const&)::'lambda'(pybind11::detail::function_call&)::__invoke(pybind11::detail::function_call&) at pybind11.h:132\r\n    frame #41: 0x0000000110277ed7 _C.cpython-37m-darwin.so`pybind11::cpp_function::dispatcher(self=0x000000011a374e70, args_in=0x000000011b4b5288, kwargs_in=0x0000000000000000) at pybind11.h:619\r\n    frame #42: 0x000000010002ec48 python`_PyMethodDef_RawFastCallKeywords + 392\r\n    frame #43: 0x000000010016f2b1 python`call_function + 257\r\n    frame #44: 0x000000010016cf99 python`_PyEval_EvalFrameDefault + 45705\r\n    frame #45: 0x0000000100160a42 python`_PyEval_EvalCodeWithName + 418\r\n    frame #46: 0x000000010002ea73 python`_PyFunction_FastCallKeywords + 195\r\n    frame #47: 0x000000010016f265 python`call_function + 181\r\n    frame #48: 0x000000010016cf99 python`_PyEval_EvalFrameDefault + 45705\r\n    frame #49: 0x0000000100160a42 python`_PyEval_EvalCodeWithName + 418\r\n    frame #50: 0x00000001001c49a0 python`PyRun_FileExFlags + 256\r\n    frame #51: 0x00000001001c4104 python`PyRun_SimpleFileExFlags + 388\r\n    frame #52: 0x00000001001efedc python`pymain_main + 9148\r\n    frame #53: 0x0000000100000ece python`main + 142\r\n    frame #54: 0x00007fff77298015 libdyld.dylib`start + 1\r\n```\r\nThe symbol being resolved is `torch`:\r\n```\r\nframe #11: 0x0000000112e71ab9 _C.cpython-37m-darwin.so`torch::jit::script::pythonResolver(this=0x0000000101aecf40, name=\"torch\", m=0x000000011c8a52f0, loc=0x00007ffeefbf6360)>)::$_0::operator()(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, torch::jit::script::Method&, torch::jit::SourceRange const&) const at init.cpp:367\r\n   364 \t             Method& m,\r\n   365 \t             const SourceRange& loc) -> std::shared_ptr<SugaredValue> {\r\n   366 \t    AutoGIL ag;\r\n-> 367 \t    py::object obj = rcb(name);\r\n   368 \t    if (obj.is(py::none())) {\r\n   369 \t      return nullptr;\r\n   370 \t    }\r\n(lldb) p rcb\r\n(torch::jit::script::ResolutionCallback) $0 = 0x0000000101aca650\r\n(lldb) p name\r\n(std::__1::string) $1 = \"torch\"\r\n```\r\nand script works fine with e.g. `a + b`. I get the same issue when I build from a commit before #10847, but `mwe.py` works fine if I rebuild with Python 3.6.6.",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/11419/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/11419/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/11157",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/11157/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/11157/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/11157/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/11157",
        "id": 356116557,
        "node_id": "MDU6SXNzdWUzNTYxMTY1NTc=",
        "number": 11157,
        "title": "[JIT] torch.einsum not supported by JIT tracer",
        "user": {
            "login": "neerajprad",
            "id": 1762463,
            "node_id": "MDQ6VXNlcjE3NjI0NjM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1762463?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/neerajprad",
            "html_url": "https://github.com/neerajprad",
            "followers_url": "https://api.github.com/users/neerajprad/followers",
            "following_url": "https://api.github.com/users/neerajprad/following{/other_user}",
            "gists_url": "https://api.github.com/users/neerajprad/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/neerajprad/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neerajprad/subscriptions",
            "organizations_url": "https://api.github.com/users/neerajprad/orgs",
            "repos_url": "https://api.github.com/users/neerajprad/repos",
            "events_url": "https://api.github.com/users/neerajprad/events{/privacy}",
            "received_events_url": "https://api.github.com/users/neerajprad/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2018-08-31T20:36:31Z",
        "updated_at": "2018-09-11T13:04:04Z",
        "closed_at": "2018-09-11T13:04:04Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "## Issue description\r\n\r\nWe are using the `torch.einsum` operation in many Pyro models (e.g. `HMM`), and it appears that the JIT tracer does not currently support the `einsum` operation. cc. @t-vi, @apaszke, @fritzo.\r\n\r\n## Code example\r\n\r\nThe following example:\r\n\r\n```python\r\n@torch.jit.trace(torch.ones(2, 3), torch.ones(2, 3))\r\ndef fn(x, y):\r\n    return torch.einsum('ab,ab->b', [x, y])\r\n\r\n\r\nfn(torch.ones(2, 3), torch.ones(2, 3))\r\n```\r\n\r\nthrows an error on a recent PyTorch commit:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"examples/ein.py\", line 4, in <module>\r\n    @torch.jit.trace(torch.ones(2, 3), torch.ones(2, 3))\r\n  File \"/Users/npradhan/miniconda2/envs/pytorch-master/lib/python3.6/site-packages/torch/jit/__init__.py\", line 290, in wrapper\r\n    module._create_method_from_trace('forward', func, tuple(args))\r\n  File \"examples/ein.py\", line 6, in fn\r\n    return torch.einsum('ab,ab->b', [x, y])\r\n  File \"/Users/npradhan/miniconda2/envs/pytorch-master/lib/python3.6/site-packages/torch/functional.py\", line 239, in einsum\r\n    return torch._C._VariableFunctions.einsum(equation, operands)\r\nRuntimeError: Found an unsupported argument type in the JIT tracer. File a bug report.\r\n```\r\n\r\n## System Info\r\n\r\n```\r\n  $ python collect_env.py\r\nCollecting environment information...\r\nPyTorch version: 0.5.0a0+72f91b1\r\nIs debug build: Yes\r\nCUDA used to build PyTorch: None\r\n\r\nOS: Mac OSX 10.13.3\r\nGCC version: Could not collect\r\nCMake version: version 3.12.0\r\n\r\nPython version: 3.6\r\nIs CUDA available: No\r\nCUDA runtime version: No CUDA\r\nGPU models and configuration: No CUDA\r\nNvidia driver version: No CUDA\r\ncuDNN version: No CUDA\r\n\r\nVersions of relevant libraries:\r\n[pip] numpy (1.15.0)\r\n[pip] torch (0.5.0a0+e449a27)\r\n[pip] torchfile (0.1.0)\r\n[pip] torchvision (0.2.1)\r\n[conda] torch                     0.5.0a0+e449a27           <pip>\r\n[conda] torch                     0.5.0a0+cb32e38           <pip>\r\n[conda] torch                     0.5.0a0+c98d748           <pip>\r\n[conda] torch                     0.5.0a0+64a6003           <pip>\r\n[conda] torch                     0.5.0a0+72f91b1           <pip>\r\n[conda] torch                     0.5.0a0+6456b94           <pip>\r\n[conda] torch                     0.5.0a0+cd53b78           <pip>\r\n[conda] torchfile                 0.1.0                     <pip>\r\n[conda] torchvision               0.2.1                     <pip>\r\n```",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/11157/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/11157/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/11057",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/11057/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/11057/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/11057/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/11057",
        "id": 355395012,
        "node_id": "MDU6SXNzdWUzNTUzOTUwMTI=",
        "number": 11057,
        "title": "[JIT] Bad error message when tracing a function with unsupported return type",
        "user": {
            "login": "jamesr66a",
            "id": 4685384,
            "node_id": "MDQ6VXNlcjQ2ODUzODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4685384?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesr66a",
            "html_url": "https://github.com/jamesr66a",
            "followers_url": "https://api.github.com/users/jamesr66a/followers",
            "following_url": "https://api.github.com/users/jamesr66a/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesr66a/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesr66a/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesr66a/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesr66a/orgs",
            "repos_url": "https://api.github.com/users/jamesr66a/repos",
            "events_url": "https://api.github.com/users/jamesr66a/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesr66a/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2018-08-30T02:00:04Z",
        "updated_at": "2018-09-05T17:58:14Z",
        "closed_at": "2018-09-05T17:58:14Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "Code example:\r\n\r\n```\r\nimport torch\r\n\r\n@torch.jit.trace(torch.rand(3, 4))\r\ndef foo(x):\r\n    pass\r\n```\r\n\r\nOutput:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"retval.py\", line 3, in <module>\r\n    @torch.jit.trace(torch.rand(3, 4))\r\n  File \"/Users/jamesreed/onnx-fairseq/pytorch/torch/jit/__init__.py\", line 446, in wrapper\r\n    module._create_method_from_trace('forward', func, tuple(args))\r\nRuntimeError: Only tensors and tuples of tensors are supported as inputs to traced functions (toIValue at /Users/jamesreed/onnx-fairseq/pytorch/torch/csrc/jit/pybind_utils.h:62)\r\nframe #0: torch::jit::toIValue(pybind11::handle) + 725 (0x10f0ee125 in _C.cpython-36m-darwin.so)\r\nframe #1: torch::jit::toStack(pybind11::tuple const&) + 54 (0x10f0edd66 in _C.cpython-36m-darwin.so)\r\nframe #2: torch::jit::tracer::createGraphByTracing(pybind11::function, std::__1::vector<torch::jit::IValue, std::__1::allocator<torch::jit::IValue> >, at::optional<unsigned long>) + 1443 (0x10f213973 in _C.cpython-36m-darwin.so)\r\nframe #3: torch::jit::script::initJitScriptBindings(_object*)::$_13::operator()(torch::jit::script::Module&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, pybind11::function, pybind11::tuple) const + 1660 (0x10f29368c in _C.cpython-36m-darwin.so)\r\nframe #4: void pybind11::detail::argument_loader<torch::jit::script::Module&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, pybind11::function, pybind11::tuple>::call_impl<void, torch::jit::script::initJitScriptBindings(_object*)::$_13&, 0ul, 1ul, 2ul, 3ul, pybind11::detail::void_type>(torch::jit::script::initJitScriptBindings(_object*)::$_13&&&, pybind11::detail::index_sequence<0ul, 1ul, 2ul, 3ul>, pybind11::detail::void_type&&) + 318 (0x10f292f9e in _C.cpython-36m-darwin.so)\r\nframe #5: std::__1::enable_if<std::is_void<void>::value, pybind11::detail::void_type>::type pybind11::detail::argument_loader<torch::jit::script::Module&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, pybind11::function, pybind11::tuple>::call<void, pybind11::detail::void_type, torch::jit::script::initJitScriptBindings(_object*)::$_13&>(torch::jit::script::initJitScriptBindings(_object*)::$_13&&&) + 49 (0x10f2925c1 in _C.cpython-36m-darwin.so)\r\nframe #6: void pybind11::cpp_function::initialize<torch::jit::script::initJitScriptBindings(_object*)::$_13, void, torch::jit::script::Module&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, pybind11::function, pybind11::tuple, pybind11::name, pybind11::is_method, pybind11::sibling>(torch::jit::script::initJitScriptBindings(_object*)::$_13&&, void (*)(torch::jit::script::Module&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, pybind11::function, pybind11::tuple), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&)::'lambda'(pybind11::detail::function_call&)::operator()(pybind11::detail::function_call&) const + 233 (0x10f2924a9 in _C.cpython-36m-darwin.so)\r\nframe #7: void pybind11::cpp_function::initialize<torch::jit::script::initJitScriptBindings(_object*)::$_13, void, torch::jit::script::Module&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, pybind11::function, pybind11::tuple, pybind11::name, pybind11::is_method, pybind11::sibling>(torch::jit::script::initJitScriptBindings(_object*)::$_13&&, void (*)(torch::jit::script::Module&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, pybind11::function, pybind11::tuple), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&)::'lambda'(pybind11::detail::function_call&)::__invoke(pybind11::detail::function_call&) + 24 (0x10f2923a8 in _C.cpython-36m-darwin.so)\r\nframe #8: pybind11::cpp_function::dispatcher(_object*, _object*, _object*) + 6919 (0x10eaf3da7 in _C.cpython-36m-darwin.so)\r\n<omitting python frames>\r\nframe #22: start + 1 (0x7fff5ec53015 in libdyld.dylib)\r\n```",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/11057/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/11057/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/10873",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/10873/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/10873/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/10873/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/10873",
        "id": 353966532,
        "node_id": "MDU6SXNzdWUzNTM5NjY1MzI=",
        "number": 10873,
        "title": "[JIT][ONNX] aten::add and aten::sub ST overloads don't have alpha, so they don't match the ONNX symbolic",
        "user": {
            "login": "jamesr66a",
            "id": 4685384,
            "node_id": "MDQ6VXNlcjQ2ODUzODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4685384?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesr66a",
            "html_url": "https://github.com/jamesr66a",
            "followers_url": "https://api.github.com/users/jamesr66a/followers",
            "following_url": "https://api.github.com/users/jamesr66a/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesr66a/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesr66a/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesr66a/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesr66a/orgs",
            "repos_url": "https://api.github.com/users/jamesr66a/repos",
            "events_url": "https://api.github.com/users/jamesr66a/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesr66a/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2018-08-25T00:39:16Z",
        "updated_at": "2018-09-18T20:56:55Z",
        "closed_at": "2018-09-18T20:56:55Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "Repro (aten::add):\r\n\r\n```\r\nimport torch\r\n\r\nclass SomeModule(torch.jit.ScriptModule):\r\n\r\n    @torch.jit.script_method\r\n    def forward(self, x : torch.Tensor):\r\n        bs = x.size(0)\r\n        return bs + 1\r\n\r\nexample_outputs = (torch.LongTensor([SomeModule()(torch.rand(3, 4))]),)\r\n\r\nimport io\r\nf = io.BytesIO()\r\ntorch.onnx._export(SomeModule(), (torch.rand(3, 4),), f, verbose=True, example_outputs=example_outputs)\r\n```\r\n\r\n```\r\naten::size(Tensor self, int dim) -> int\r\naten::add(Tensor self, Tensor other, *, Scalar alpha=<default>) -> Tensor\r\naten::add(Tensor self, Scalar other, Scalar alpha=<default>) -> Tensor\r\naten::add(int[] a, int[] b) -> int[]\r\naten::add(float[] a, float[] b) -> float[]\r\naten::add(Tensor[] a, Tensor[] b) -> Tensor[]\r\naten::add(int a, int b) -> int\r\naten::size(Tensor self, int dim) -> int\r\naten::add(Tensor self, Tensor other, *, Scalar alpha=<default>) -> Tensor\r\naten::add(Tensor self, Scalar other, Scalar alpha=<default>) -> Tensor\r\naten::add(int[] a, int[] b) -> int[]\r\naten::add(float[] a, float[] b) -> float[]\r\naten::add(Tensor[] a, Tensor[] b) -> Tensor[]\r\naten::add(int a, int b) -> int\r\nTraceback (most recent call last):\r\n  File \"test_sub.py\", line 14, in <module>\r\n    torch.onnx._export(SomeModule(), (torch.rand(3, 4),), f, verbose=True, example_outputs=example_outputs)\r\n  File \"/Users/jamesreed/onnx-fairseq/pytorch/torch/onnx/__init__.py\", line 22, in _export\r\n    return utils._export(*args, **kwargs)\r\n  File \"/Users/jamesreed/onnx-fairseq/pytorch/torch/onnx/utils.py\", line 257, in _export\r\n    example_outputs, propagate)\r\n  File \"/Users/jamesreed/onnx-fairseq/pytorch/torch/onnx/utils.py\", line 210, in _model_to_graph\r\n    graph = _optimize_graph(graph, operator_export_type)\r\n  File \"/Users/jamesreed/onnx-fairseq/pytorch/torch/onnx/utils.py\", line 138, in _optimize_graph\r\n    graph = torch._C._jit_pass_onnx(graph, operator_export_type)\r\n  File \"/Users/jamesreed/onnx-fairseq/pytorch/torch/onnx/__init__.py\", line 52, in _run_symbolic_function\r\n    return utils._run_symbolic_function(*args, **kwargs)\r\n  File \"/Users/jamesreed/onnx-fairseq/pytorch/torch/onnx/utils.py\", line 480, in _run_symbolic_function\r\n    return fn(g, *inputs, **attrs)\r\n  File \"/Users/jamesreed/onnx-fairseq/pytorch/torch/onnx/symbolic.py\", line 82, in wrapper\r\n    assert len(arg_descriptors) == len(args)\r\n```\r\n\r\nUnderlying issue is that `DEFINE_ST_OP` does not define a Scalar alpha argument for `aten::add` and `aten::sub` (https://github.com/pytorch/pytorch/blob/master/torch/csrc/jit/register_prim_ops.cpp#L370), therefore the schema of these ops does not match the ONNX symbolic (https://github.com/pytorch/pytorch/blob/master/torch/onnx/symbolic.py#L188).\r\n",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/10873/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/10873/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/10839",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/10839/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/10839/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/10839/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/10839",
        "id": 353591776,
        "node_id": "MDU6SXNzdWUzNTM1OTE3NzY=",
        "number": 10839,
        "title": "[JIT] Addmm fusion in peephole optimizers breaks when scalar types don't agree",
        "user": {
            "login": "jamesr66a",
            "id": 4685384,
            "node_id": "MDQ6VXNlcjQ2ODUzODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4685384?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesr66a",
            "html_url": "https://github.com/jamesr66a",
            "followers_url": "https://api.github.com/users/jamesr66a/followers",
            "following_url": "https://api.github.com/users/jamesr66a/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesr66a/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesr66a/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesr66a/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesr66a/orgs",
            "repos_url": "https://api.github.com/users/jamesr66a/repos",
            "events_url": "https://api.github.com/users/jamesr66a/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesr66a/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2018-08-23T23:36:01Z",
        "updated_at": "2018-08-31T14:26:06Z",
        "closed_at": "2018-08-31T14:26:06Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "Motivating example: https://gist.github.com/jamesr66a/c02dcae6976f74ee1c12f9491d610682\r\n\r\nI think either the pass needs to examine the scalar types and make sure they agree (maybe via casting) or tracing should insert the casts explicitly",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/10839/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/10839/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/10654",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/10654/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/10654/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/10654/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/10654",
        "id": 351796621,
        "node_id": "MDU6SXNzdWUzNTE3OTY2MjE=",
        "number": 10654,
        "title": "torch.jit.trace fails when the model has the function nn.functional.interpolate",
        "user": {
            "login": "labor00",
            "id": 36332518,
            "node_id": "MDQ6VXNlcjM2MzMyNTE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/36332518?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/labor00",
            "html_url": "https://github.com/labor00",
            "followers_url": "https://api.github.com/users/labor00/followers",
            "following_url": "https://api.github.com/users/labor00/following{/other_user}",
            "gists_url": "https://api.github.com/users/labor00/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/labor00/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/labor00/subscriptions",
            "organizations_url": "https://api.github.com/users/labor00/orgs",
            "repos_url": "https://api.github.com/users/labor00/repos",
            "events_url": "https://api.github.com/users/labor00/events{/privacy}",
            "received_events_url": "https://api.github.com/users/labor00/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "eellison",
            "id": 11477974,
            "node_id": "MDQ6VXNlcjExNDc3OTc0",
            "avatar_url": "https://avatars.githubusercontent.com/u/11477974?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eellison",
            "html_url": "https://github.com/eellison",
            "followers_url": "https://api.github.com/users/eellison/followers",
            "following_url": "https://api.github.com/users/eellison/following{/other_user}",
            "gists_url": "https://api.github.com/users/eellison/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eellison/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eellison/subscriptions",
            "organizations_url": "https://api.github.com/users/eellison/orgs",
            "repos_url": "https://api.github.com/users/eellison/repos",
            "events_url": "https://api.github.com/users/eellison/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eellison/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "eellison",
                "id": 11477974,
                "node_id": "MDQ6VXNlcjExNDc3OTc0",
                "avatar_url": "https://avatars.githubusercontent.com/u/11477974?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/eellison",
                "html_url": "https://github.com/eellison",
                "followers_url": "https://api.github.com/users/eellison/followers",
                "following_url": "https://api.github.com/users/eellison/following{/other_user}",
                "gists_url": "https://api.github.com/users/eellison/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/eellison/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eellison/subscriptions",
                "organizations_url": "https://api.github.com/users/eellison/orgs",
                "repos_url": "https://api.github.com/users/eellison/repos",
                "events_url": "https://api.github.com/users/eellison/events{/privacy}",
                "received_events_url": "https://api.github.com/users/eellison/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2018-08-18T06:42:20Z",
        "updated_at": "2019-05-29T08:49:20Z",
        "closed_at": "2019-04-06T00:57:22Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## Issue description\r\n\r\ntorch.jit.trace fails when the model contain nn.functional.interpolate, returning the error:\r\n```bash\r\nRuntimeError: invalid argument 2: input and output sizes should be greater than 0, but got input (H: 28, W: 28) output (H: 0, W: 0) at /home/disk0/.pytorch/pytorch/aten/src/THNN/generic/SpatialUpSamplingBilinear.c:19\r\n```\r\n## Code example\r\n```python\r\nimport torch\r\nimport torch.nn as nn\r\nfrom torch.jit import trace\r\nclass test(nn.Module):\r\n        def __init__(self):\r\n                super(test, self).__init__()\r\n                self.conv = nn.Conv2d(1, 32, kernel_size=3,padding=1)\r\n\r\n        def forward(self, x):\r\n                y = self.conv(x)\r\n                w = nn.functional.interpolate(y, mode='bilinear', align_corners=False, scale_factor=0.5)\r\n                return w\r\n\r\nf=test()\r\nx = torch.zeros(1,1,28,28)\r\nret = trace(x)(f)\r\n\r\nRuntimeError                              Traceback (most recent call last)\r\n<ipython-input-1-65fe10b64581> in <module>()\r\n     14 f=test()\r\n     15 x = torch.zeros(1,1,28,28)\r\n---> 16 ret = trace(x)(f)\r\n\r\n~/nn/pytorch/lib/python3.6/site-packages/torch/jit/__init__.py in wrapper(func)\r\n    288 \r\n    289         module = TopLevelTracedModule(func, **executor_options)\r\n--> 290         module._create_method_from_trace('forward', func, args)\r\n    291         return module\r\n    292 \r\n\r\n~/nn/pytorch/lib/python3.6/site-packages/torch/nn/modules/module.py in __call__(self, *input, **kwargs)\r\n    473             hook(self, input)\r\n    474         if torch._C._get_tracing_state():\r\n--> 475             result = self._slow_forward(*input, **kwargs)\r\n    476         else:\r\n    477             result = self.forward(*input, **kwargs)\r\n\r\n~/nn/pytorch/lib/python3.6/site-packages/torch/nn/modules/module.py in _slow_forward(self, *input, **kwargs)\r\n    463         tracing_state._traced_module_stack.append(self)\r\n    464         try:\r\n--> 465             result = self.forward(*input, **kwargs)\r\n    466         finally:\r\n    467             tracing_state.pop_scope()\r\n\r\n<ipython-input-1-65fe10b64581> in forward(self, x)\r\n      9         def forward(self, x):\r\n     10                 y = self.conv(x)\r\n---> 11                 w = nn.functional.interpolate(y, mode='bilinear', align_corners=False, scale_factor=0.5)\r\n     12                 return w\r\n     13 \r\n~/nn/pytorch/lib/python3.6/site-packages/torch/nn/functional.py in interpolate(input, size, scale_factor, mode, align_corners)\r\n   2069         raise NotImplementedError(\"Got 4D input, but linear mode needs 3D input\")\r\n   2070     elif input.dim() == 4 and mode == 'bilinear':\r\n-> 2071         return torch._C._nn.upsample_bilinear2d(input, _output_size(2), align_corners)\r\n   2072     elif input.dim() == 4 and mode == 'trilinear':\r\n   2073         raise NotImplementedError(\"Got 4D input, but trilinear mode needs 5D input\")\r\n\r\nRuntimeError: invalid argument 2: input and output sizes should be greater than 0, but got input (H: 28, W: 28) output (H: 0, W: 0) at /home/disk0/.pytorch/pytorch/aten/src/THNN/generic/SpatialUpSamplingBilinear.c:19\r\n```\r\n## System Info\r\n\r\n``` bash\r\nCollecting environment information...\r\nPyTorch version: 0.5.0a0+152762a\r\nIs debug build: No\r\nCUDA used to build PyTorch: 9.2.148\r\n\r\nOS: Fedora release 28 (Twenty Eight)\r\nGCC version: (GCC) 7.3.0\r\nCMake version: version 3.11.2\r\n\r\nPython version: 3.6\r\nIs CUDA available: Yes\r\nCUDA runtime version: 9.2.148\r\nGPU models and configuration: GPU 0: GeForce GTX 1080\r\nNvidia driver version: 396.45\r\ncuDNN version: Probably one of the following:\r\n/usr/local/cuda-9.2/lib64/libcudnn.so.7.2.1\r\n/usr/local/cuda-9.2/lib64/libcudnn_static.a\r\n```",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/10654/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/10654/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/10632",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/10632/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/10632/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/10632/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/10632",
        "id": 351695061,
        "node_id": "MDU6SXNzdWUzNTE2OTUwNjE=",
        "number": 10632,
        "title": "[JIT][script] dtype argument on tensor constructors doesn't work",
        "user": {
            "login": "jamesr66a",
            "id": 4685384,
            "node_id": "MDQ6VXNlcjQ2ODUzODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4685384?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesr66a",
            "html_url": "https://github.com/jamesr66a",
            "followers_url": "https://api.github.com/users/jamesr66a/followers",
            "following_url": "https://api.github.com/users/jamesr66a/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesr66a/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesr66a/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesr66a/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesr66a/orgs",
            "repos_url": "https://api.github.com/users/jamesr66a/repos",
            "events_url": "https://api.github.com/users/jamesr66a/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesr66a/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "jamesr66a",
            "id": 4685384,
            "node_id": "MDQ6VXNlcjQ2ODUzODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4685384?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesr66a",
            "html_url": "https://github.com/jamesr66a",
            "followers_url": "https://api.github.com/users/jamesr66a/followers",
            "following_url": "https://api.github.com/users/jamesr66a/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesr66a/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesr66a/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesr66a/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesr66a/orgs",
            "repos_url": "https://api.github.com/users/jamesr66a/repos",
            "events_url": "https://api.github.com/users/jamesr66a/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesr66a/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "jamesr66a",
                "id": 4685384,
                "node_id": "MDQ6VXNlcjQ2ODUzODQ=",
                "avatar_url": "https://avatars.githubusercontent.com/u/4685384?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/jamesr66a",
                "html_url": "https://github.com/jamesr66a",
                "followers_url": "https://api.github.com/users/jamesr66a/followers",
                "following_url": "https://api.github.com/users/jamesr66a/following{/other_user}",
                "gists_url": "https://api.github.com/users/jamesr66a/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/jamesr66a/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jamesr66a/subscriptions",
                "organizations_url": "https://api.github.com/users/jamesr66a/orgs",
                "repos_url": "https://api.github.com/users/jamesr66a/repos",
                "events_url": "https://api.github.com/users/jamesr66a/events{/privacy}",
                "received_events_url": "https://api.github.com/users/jamesr66a/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2018-08-17T18:26:37Z",
        "updated_at": "2018-08-23T22:11:42Z",
        "closed_at": "2018-08-23T22:11:42Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "If I try to do this:\r\n\r\n```\r\nimport torch\r\n\r\n@torch.jit.script\r\ndef create_zeros():\r\n    return torch.zeros(1, 2, 3, dtype=torch.long)\r\n```\r\n\r\nIt fails like this:\r\n\r\n```\r\n\ufeff\ufeffTraceback (most recent call last):\r\n  File \"dtype.py\", line 3, in <module>\r\n    @torch.jit.script\r\n  File \"/Users/jamesreed/onnx-fairseq/pytorch/torch/jit/__init__.py\", line 351, in script\r\n    graph = _jit_script_compile(ast, rcb)\r\nRuntimeError: \r\narguments for call are not valid:\r\n  \r\n  for operator aten::zeros(int[] size, *, int dtype=<default>, int layout=<default>, int[] device=<default>) -> Tensor:\r\n  argument dtype specified twice \r\n  @torch.jit.script\r\n  def create_zeros():\r\n      return torch.zeros(1, 2, 3, dtype=torch.long)\r\n                                        ~~~~~~~~~~ <--- HERE\r\nfor call at:\r\n@torch.jit.script\r\ndef create_zeros():\r\n    return torch.zeros(1, 2, 3, dtype=torch.long)\r\n           ~~~~~~~~~~~ <--- HERE\r\n\r\n\r\n```",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/10632/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/10632/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/10631",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/10631/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/10631/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/10631/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/10631",
        "id": 351694435,
        "node_id": "MDU6SXNzdWUzNTE2OTQ0MzU=",
        "number": 10631,
        "title": "[JIT][script] Support method-style casts in script",
        "user": {
            "login": "jamesr66a",
            "id": 4685384,
            "node_id": "MDQ6VXNlcjQ2ODUzODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4685384?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesr66a",
            "html_url": "https://github.com/jamesr66a",
            "followers_url": "https://api.github.com/users/jamesr66a/followers",
            "following_url": "https://api.github.com/users/jamesr66a/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesr66a/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesr66a/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesr66a/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesr66a/orgs",
            "repos_url": "https://api.github.com/users/jamesr66a/repos",
            "events_url": "https://api.github.com/users/jamesr66a/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesr66a/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "jamesr66a",
            "id": 4685384,
            "node_id": "MDQ6VXNlcjQ2ODUzODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4685384?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesr66a",
            "html_url": "https://github.com/jamesr66a",
            "followers_url": "https://api.github.com/users/jamesr66a/followers",
            "following_url": "https://api.github.com/users/jamesr66a/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesr66a/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesr66a/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesr66a/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesr66a/orgs",
            "repos_url": "https://api.github.com/users/jamesr66a/repos",
            "events_url": "https://api.github.com/users/jamesr66a/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesr66a/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "jamesr66a",
                "id": 4685384,
                "node_id": "MDQ6VXNlcjQ2ODUzODQ=",
                "avatar_url": "https://avatars.githubusercontent.com/u/4685384?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/jamesr66a",
                "html_url": "https://github.com/jamesr66a",
                "followers_url": "https://api.github.com/users/jamesr66a/followers",
                "following_url": "https://api.github.com/users/jamesr66a/following{/other_user}",
                "gists_url": "https://api.github.com/users/jamesr66a/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/jamesr66a/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jamesr66a/subscriptions",
                "organizations_url": "https://api.github.com/users/jamesr66a/orgs",
                "repos_url": "https://api.github.com/users/jamesr66a/repos",
                "events_url": "https://api.github.com/users/jamesr66a/events{/privacy}",
                "received_events_url": "https://api.github.com/users/jamesr66a/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2018-08-17T18:24:42Z",
        "updated_at": "2018-08-20T21:11:31Z",
        "closed_at": "2018-08-20T21:11:31Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "Method-style casts such as `.int()` and `.long()` currently don't work. Example:\r\n\r\n```\r\nimport torch\r\n\r\n@torch.jit.script\r\ndef cast_to_int(x):\r\n    return x.int()\r\n```\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"method_casts.py\", line 3, in <module>\r\n    @torch.jit.script\r\n  File \"/Users/jamesreed/onnx-fairseq/pytorch/torch/jit/__init__.py\", line 351, in script\r\n    graph = _jit_script_compile(ast, rcb)\r\nRuntimeError: \r\nunknown builtin op:\r\n@torch.jit.script\r\ndef cast_to_int(x):\r\n    return x.int()\r\n           ~~~~~ <--- HERE\r\n\r\n\r\n```",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/10631/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/10631/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/10456",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/10456/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/10456/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/10456/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/10456",
        "id": 350042418,
        "node_id": "MDU6SXNzdWUzNTAwNDI0MTg=",
        "number": 10456,
        "title": "[jit] FusedConcat can crash the fusion compiler",
        "user": {
            "login": "zou3519",
            "id": 5652049,
            "node_id": "MDQ6VXNlcjU2NTIwNDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5652049?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zou3519",
            "html_url": "https://github.com/zou3519",
            "followers_url": "https://api.github.com/users/zou3519/followers",
            "following_url": "https://api.github.com/users/zou3519/following{/other_user}",
            "gists_url": "https://api.github.com/users/zou3519/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zou3519/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zou3519/subscriptions",
            "organizations_url": "https://api.github.com/users/zou3519/orgs",
            "repos_url": "https://api.github.com/users/zou3519/repos",
            "events_url": "https://api.github.com/users/zou3519/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zou3519/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "zou3519",
            "id": 5652049,
            "node_id": "MDQ6VXNlcjU2NTIwNDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5652049?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zou3519",
            "html_url": "https://github.com/zou3519",
            "followers_url": "https://api.github.com/users/zou3519/followers",
            "following_url": "https://api.github.com/users/zou3519/following{/other_user}",
            "gists_url": "https://api.github.com/users/zou3519/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zou3519/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zou3519/subscriptions",
            "organizations_url": "https://api.github.com/users/zou3519/orgs",
            "repos_url": "https://api.github.com/users/zou3519/repos",
            "events_url": "https://api.github.com/users/zou3519/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zou3519/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "zou3519",
                "id": 5652049,
                "node_id": "MDQ6VXNlcjU2NTIwNDk=",
                "avatar_url": "https://avatars.githubusercontent.com/u/5652049?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/zou3519",
                "html_url": "https://github.com/zou3519",
                "followers_url": "https://api.github.com/users/zou3519/followers",
                "following_url": "https://api.github.com/users/zou3519/following{/other_user}",
                "gists_url": "https://api.github.com/users/zou3519/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/zou3519/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zou3519/subscriptions",
                "organizations_url": "https://api.github.com/users/zou3519/orgs",
                "repos_url": "https://api.github.com/users/zou3519/repos",
                "events_url": "https://api.github.com/users/zou3519/events{/privacy}",
                "received_events_url": "https://api.github.com/users/zou3519/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2018-08-13T14:00:08Z",
        "updated_at": "2018-08-14T04:10:20Z",
        "closed_at": "2018-08-14T04:10:20Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "Repro: the following code\r\n```\r\nimport torch\r\n@torch.jit.script\r\ndef fn(x, y, z):\r\n    x1 = x + y \r\n    y1 = x - y\r\n    w = torch.cat([x1, y1])\r\n    return w + z\r\n\r\nx = torch.randn(2, 2, dtype=torch.float, device='cpu')\r\ny = torch.randn(2, 2, dtype=torch.float, device='cpu')\r\nz = torch.randn(4, 2, dtype=torch.float, device='cpu')\r\nfn(x, y, z)\r\nfn.graph_for(x, y, z)\r\n```\r\nproduces the following optimized graph:\r\n```\r\n(gdb) cout *graph\r\ngraph(%x : Float(2, 2)\r\n      %y : Float(2, 2)\r\n      %z : Float(4, 2)) {\r\n  %3 : int = prim::Constant[value=1]()\r\n  %y1 : Float(2, 2) = aten::sub(%x, %y, %3)\r\n  %8 : int = prim::Constant[value=0]()\r\n  %14 : Float(4, 2) = prim::FusionGroup_0[device=-1](%z, %y1, %x, %y)\r\n  return (%14);\r\n}\r\nwith prim::FusionGroup_0 = graph(%1 : Float(4, 2)\r\n      %5 : Float(2, 2)\r\n      %7 : Float(2, 2)\r\n      %8 : Float(2, 2)) {\r\n  %11 : int = prim::Constant[value=1]()\r\n  %9 : int = prim::Constant[value=1]()\r\n  %x1 : Float(2, 2) = aten::add(%7, %8, %9)\r\n  %w : Float(4, 2) = prim::FusedConcat[dim=0](%x1, %5)\r\n  %2 : int = prim::Constant[value=1]()\r\n  %3 : Float(4, 2) = aten::add(%w, %1, %2)\r\n  return (%3);\r\n}\r\n```\r\n\r\nThe graph fuser ends up producing a graph with a prim::FusedConcat node as well as the \"w + z\" node at the end that _uses_ the output of the prim::FusedConcat node, which is a violation of the invariant that the output of a prim::FusedConcat node may not be used inside a fusion group.\r\n",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/10456/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/10456/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/10096",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/10096/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/10096/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/10096/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/10096",
        "id": 346374545,
        "node_id": "MDU6SXNzdWUzNDYzNzQ1NDU=",
        "number": 10096,
        "title": "[jit] Proposal: fuse add ops that expand tensors",
        "user": {
            "login": "zou3519",
            "id": 5652049,
            "node_id": "MDQ6VXNlcjU2NTIwNDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5652049?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zou3519",
            "html_url": "https://github.com/zou3519",
            "followers_url": "https://api.github.com/users/zou3519/followers",
            "following_url": "https://api.github.com/users/zou3519/following{/other_user}",
            "gists_url": "https://api.github.com/users/zou3519/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zou3519/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zou3519/subscriptions",
            "organizations_url": "https://api.github.com/users/zou3519/orgs",
            "repos_url": "https://api.github.com/users/zou3519/repos",
            "events_url": "https://api.github.com/users/zou3519/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zou3519/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "zou3519",
            "id": 5652049,
            "node_id": "MDQ6VXNlcjU2NTIwNDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5652049?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zou3519",
            "html_url": "https://github.com/zou3519",
            "followers_url": "https://api.github.com/users/zou3519/followers",
            "following_url": "https://api.github.com/users/zou3519/following{/other_user}",
            "gists_url": "https://api.github.com/users/zou3519/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zou3519/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zou3519/subscriptions",
            "organizations_url": "https://api.github.com/users/zou3519/orgs",
            "repos_url": "https://api.github.com/users/zou3519/repos",
            "events_url": "https://api.github.com/users/zou3519/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zou3519/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "zou3519",
                "id": 5652049,
                "node_id": "MDQ6VXNlcjU2NTIwNDk=",
                "avatar_url": "https://avatars.githubusercontent.com/u/5652049?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/zou3519",
                "html_url": "https://github.com/zou3519",
                "followers_url": "https://api.github.com/users/zou3519/followers",
                "following_url": "https://api.github.com/users/zou3519/following{/other_user}",
                "gists_url": "https://api.github.com/users/zou3519/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/zou3519/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zou3519/subscriptions",
                "organizations_url": "https://api.github.com/users/zou3519/orgs",
                "repos_url": "https://api.github.com/users/zou3519/repos",
                "events_url": "https://api.github.com/users/zou3519/events{/privacy}",
                "received_events_url": "https://api.github.com/users/zou3519/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 6,
        "created_at": "2018-07-31T22:01:08Z",
        "updated_at": "2018-08-17T23:05:14Z",
        "closed_at": "2018-08-17T23:05:14Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "Let's say we have `torch.add(self, other)` and `self` has size `(64, 2048)`, while other has size `(2048)`. This isn't fusable into a FusionGroup because the inputs (self, other) have different sizes.\r\n\r\nHowever, `other` can be expanded into the size of `self`. If we insert an `expand` node, then the operation will be fusable into a FusionGroup. The cost of an expand is around 3 microseconds, which is less than launching a kernel specifically for adding `self, other` (launch overhead of 6-12 microseconds).\r\n\r\nThis matters for LSTM perf: the following graph is the nvprof output for a lstm cell's forward pass.\r\n![image](https://user-images.githubusercontent.com/5652049/43489620-9b9a95b0-94eb-11e8-850f-f4199c9d51d5.png)\r\n\r\nThe two kernels after the second sgemm are add kernels that \"should\" be fusable into the FusionGroup kernel on the right.\r\n\r\ncc @zdevito @apaszke ",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/10096/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/10096/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/10032",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/10032/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/10032/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/10032/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/10032",
        "id": 345935131,
        "node_id": "MDU6SXNzdWUzNDU5MzUxMzE=",
        "number": 10032,
        "title": "3x regression in JIT LSTM speeds",
        "user": {
            "login": "zou3519",
            "id": 5652049,
            "node_id": "MDQ6VXNlcjU2NTIwNDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5652049?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zou3519",
            "html_url": "https://github.com/zou3519",
            "followers_url": "https://api.github.com/users/zou3519/followers",
            "following_url": "https://api.github.com/users/zou3519/following{/other_user}",
            "gists_url": "https://api.github.com/users/zou3519/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zou3519/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zou3519/subscriptions",
            "organizations_url": "https://api.github.com/users/zou3519/orgs",
            "repos_url": "https://api.github.com/users/zou3519/repos",
            "events_url": "https://api.github.com/users/zou3519/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zou3519/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "zou3519",
            "id": 5652049,
            "node_id": "MDQ6VXNlcjU2NTIwNDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5652049?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zou3519",
            "html_url": "https://github.com/zou3519",
            "followers_url": "https://api.github.com/users/zou3519/followers",
            "following_url": "https://api.github.com/users/zou3519/following{/other_user}",
            "gists_url": "https://api.github.com/users/zou3519/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zou3519/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zou3519/subscriptions",
            "organizations_url": "https://api.github.com/users/zou3519/orgs",
            "repos_url": "https://api.github.com/users/zou3519/repos",
            "events_url": "https://api.github.com/users/zou3519/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zou3519/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "zou3519",
                "id": 5652049,
                "node_id": "MDQ6VXNlcjU2NTIwNDk=",
                "avatar_url": "https://avatars.githubusercontent.com/u/5652049?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/zou3519",
                "html_url": "https://github.com/zou3519",
                "followers_url": "https://api.github.com/users/zou3519/followers",
                "following_url": "https://api.github.com/users/zou3519/following{/other_user}",
                "gists_url": "https://api.github.com/users/zou3519/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/zou3519/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zou3519/subscriptions",
                "organizations_url": "https://api.github.com/users/zou3519/orgs",
                "repos_url": "https://api.github.com/users/zou3519/repos",
                "events_url": "https://api.github.com/users/zou3519/events{/privacy}",
                "received_events_url": "https://api.github.com/users/zou3519/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 9,
        "created_at": "2018-07-30T21:07:04Z",
        "updated_at": "2018-08-05T22:02:43Z",
        "closed_at": "2018-08-05T22:02:43Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "On a branch that hasn't pulled master in 7-days:\r\n\r\nBenchmarking LSTM model forward pass with 1 layer, 512 hidden size, 512 input size, 100 seq length. All the weights have requires_grad=True.\r\n```\r\nthnn    cudnn   jit\r\n9.2708  6.6107  11.4282\r\n```\r\nOn current master:\r\n```\r\nthnn    cudnn   jit\r\n9.8962  6.6269  30.7209\r\n```\r\n\r\ncc @zdevito ",
        "closed_by": {
            "login": "zou3519",
            "id": 5652049,
            "node_id": "MDQ6VXNlcjU2NTIwNDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5652049?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zou3519",
            "html_url": "https://github.com/zou3519",
            "followers_url": "https://api.github.com/users/zou3519/followers",
            "following_url": "https://api.github.com/users/zou3519/following{/other_user}",
            "gists_url": "https://api.github.com/users/zou3519/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zou3519/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zou3519/subscriptions",
            "organizations_url": "https://api.github.com/users/zou3519/orgs",
            "repos_url": "https://api.github.com/users/zou3519/repos",
            "events_url": "https://api.github.com/users/zou3519/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zou3519/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/10032/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/10032/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/9940",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/9940/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/9940/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/9940/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/9940",
        "id": 345310317,
        "node_id": "MDU6SXNzdWUzNDUzMTAzMTc=",
        "number": 9940,
        "title": "JIT fuser can't handle scalar ops",
        "user": {
            "login": "apaszke",
            "id": 4583066,
            "node_id": "MDQ6VXNlcjQ1ODMwNjY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4583066?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/apaszke",
            "html_url": "https://github.com/apaszke",
            "followers_url": "https://api.github.com/users/apaszke/followers",
            "following_url": "https://api.github.com/users/apaszke/following{/other_user}",
            "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions",
            "organizations_url": "https://api.github.com/users/apaszke/orgs",
            "repos_url": "https://api.github.com/users/apaszke/repos",
            "events_url": "https://api.github.com/users/apaszke/events{/privacy}",
            "received_events_url": "https://api.github.com/users/apaszke/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2018-07-27T17:42:34Z",
        "updated_at": "2019-03-22T20:54:22Z",
        "closed_at": "2019-03-22T20:54:22Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "#8919 changes the semantics of the most basic binary ops, and we need to update the JIT code to handle that.\r\n\r\nPreviously, the fuser depended on shape propagation to insert numerous expands, making the sizes of inputs to pointwise ops match (this is a hard requirement of our codegen). However, this is no longer a sound transformation, because the type inference rules depend on input ranks and the \"scalar-auto-wrapping status\" of input tensors.\r\n\r\nSince all this is fundamentally only a requirement of the fuser, it makes sense to handle it there. We will need to special case the pointwise operators between regular tensors and (possibly CPU, possibly differently typed) tensors representing scalars. There are two ways to approach this:\r\n\r\n1. Allow the codegen to take scalars as plain kernel arguments. This even gives us some nice perf benefits we didn't have before.\r\n2. If the `TensorIterator` actually allows to easily write CUDA kernels, and handles type promotion and expands for us, we might want to use that in our codegen and relax some constraints. I'm not very familiar with this functionality, so I don't know how feasible this is.\r\n3. (inferior to previous) insert `type_as` and `expand` nodes, making the inputs amenable to fusion",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/9940/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/9940/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/9513",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/9513/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/9513/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/9513/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/9513",
        "id": 342114341,
        "node_id": "MDU6SXNzdWUzNDIxMTQzNDE=",
        "number": 9513,
        "title": "[jit] support at::optional",
        "user": {
            "login": "ssnl",
            "id": 5674597,
            "node_id": "MDQ6VXNlcjU2NzQ1OTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5674597?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ssnl",
            "html_url": "https://github.com/ssnl",
            "followers_url": "https://api.github.com/users/ssnl/followers",
            "following_url": "https://api.github.com/users/ssnl/following{/other_user}",
            "gists_url": "https://api.github.com/users/ssnl/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ssnl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ssnl/subscriptions",
            "organizations_url": "https://api.github.com/users/ssnl/orgs",
            "repos_url": "https://api.github.com/users/ssnl/repos",
            "events_url": "https://api.github.com/users/ssnl/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ssnl/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "wanchaol",
            "id": 9443650,
            "node_id": "MDQ6VXNlcjk0NDM2NTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9443650?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wanchaol",
            "html_url": "https://github.com/wanchaol",
            "followers_url": "https://api.github.com/users/wanchaol/followers",
            "following_url": "https://api.github.com/users/wanchaol/following{/other_user}",
            "gists_url": "https://api.github.com/users/wanchaol/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wanchaol/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wanchaol/subscriptions",
            "organizations_url": "https://api.github.com/users/wanchaol/orgs",
            "repos_url": "https://api.github.com/users/wanchaol/repos",
            "events_url": "https://api.github.com/users/wanchaol/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wanchaol/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "wanchaol",
                "id": 9443650,
                "node_id": "MDQ6VXNlcjk0NDM2NTA=",
                "avatar_url": "https://avatars.githubusercontent.com/u/9443650?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/wanchaol",
                "html_url": "https://github.com/wanchaol",
                "followers_url": "https://api.github.com/users/wanchaol/followers",
                "following_url": "https://api.github.com/users/wanchaol/following{/other_user}",
                "gists_url": "https://api.github.com/users/wanchaol/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/wanchaol/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wanchaol/subscriptions",
                "organizations_url": "https://api.github.com/users/wanchaol/orgs",
                "repos_url": "https://api.github.com/users/wanchaol/repos",
                "events_url": "https://api.github.com/users/wanchaol/events{/privacy}",
                "received_events_url": "https://api.github.com/users/wanchaol/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 4,
        "created_at": "2018-07-17T22:39:36Z",
        "updated_at": "2018-10-25T23:09:48Z",
        "closed_at": "2018-10-25T23:09:48Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "Currently we can't use `at::optional` in input argument of a native function. I am aware of some on-going work for this which plans to trace `None` numeric types as `nan`. IMO, this isn't ideal because:\r\n1. `nan` is a perfect valid input, and we can't differentiate python input `None` from `math.nan`.\r\n2. `nan` doesn't make sense for integral types.\r\n3. what about other types like `at::optional<std::string>`?",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/9513/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/9513/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/9409",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/9409/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/9409/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/9409/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/9409",
        "id": 340847016,
        "node_id": "MDU6SXNzdWUzNDA4NDcwMTY=",
        "number": 9409,
        "title": "[JIT] batched tests called compiler when run every test cases individually ",
        "user": {
            "login": "wanchaol",
            "id": 9443650,
            "node_id": "MDQ6VXNlcjk0NDM2NTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9443650?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wanchaol",
            "html_url": "https://github.com/wanchaol",
            "followers_url": "https://api.github.com/users/wanchaol/followers",
            "following_url": "https://api.github.com/users/wanchaol/following{/other_user}",
            "gists_url": "https://api.github.com/users/wanchaol/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wanchaol/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wanchaol/subscriptions",
            "organizations_url": "https://api.github.com/users/wanchaol/orgs",
            "repos_url": "https://api.github.com/users/wanchaol/repos",
            "events_url": "https://api.github.com/users/wanchaol/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wanchaol/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2018-07-13T01:04:30Z",
        "updated_at": "2018-07-16T22:41:30Z",
        "closed_at": "2018-07-16T22:41:30Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "```\r\npython test/test_jit.py TestScript.test_add                                                                                           master \r\nir: (ident batch_tanh)\r\n\r\nir: (ident batch_sigmoid)\r\n\r\nir: (ident batch_add)\r\n\r\nir: (ident batch_mul)\r\n\r\nir: (ident batch_mm)\r\n\r\nir: (ident batch_matmul)\r\n\r\nir: (ident batch_select)\r\n\r\nir: (ident batch_where)\r\n\r\nir: (ident func)\r\n\r\nir: (ident func)\r\n\r\n.\r\n----------------------------------------------------------------------\r\nRan 1 test in 0.012s\r\n\r\nOK\r\n```",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/9409/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/9409/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/8867",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/8867/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/8867/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/8867/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/8867",
        "id": 335551529,
        "node_id": "MDU6SXNzdWUzMzU1NTE1Mjk=",
        "number": 8867,
        "title": "[JIT] Normalize representation of traced and scripted functions/modules ",
        "user": {
            "login": "jamesr66a",
            "id": 4685384,
            "node_id": "MDQ6VXNlcjQ2ODUzODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4685384?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesr66a",
            "html_url": "https://github.com/jamesr66a",
            "followers_url": "https://api.github.com/users/jamesr66a/followers",
            "following_url": "https://api.github.com/users/jamesr66a/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesr66a/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesr66a/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesr66a/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesr66a/orgs",
            "repos_url": "https://api.github.com/users/jamesr66a/repos",
            "events_url": "https://api.github.com/users/jamesr66a/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesr66a/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "jamesr66a",
            "id": 4685384,
            "node_id": "MDQ6VXNlcjQ2ODUzODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4685384?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesr66a",
            "html_url": "https://github.com/jamesr66a",
            "followers_url": "https://api.github.com/users/jamesr66a/followers",
            "following_url": "https://api.github.com/users/jamesr66a/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesr66a/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesr66a/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesr66a/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesr66a/orgs",
            "repos_url": "https://api.github.com/users/jamesr66a/repos",
            "events_url": "https://api.github.com/users/jamesr66a/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesr66a/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "jamesr66a",
                "id": 4685384,
                "node_id": "MDQ6VXNlcjQ2ODUzODQ=",
                "avatar_url": "https://avatars.githubusercontent.com/u/4685384?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/jamesr66a",
                "html_url": "https://github.com/jamesr66a",
                "followers_url": "https://api.github.com/users/jamesr66a/followers",
                "following_url": "https://api.github.com/users/jamesr66a/following{/other_user}",
                "gists_url": "https://api.github.com/users/jamesr66a/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/jamesr66a/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jamesr66a/subscriptions",
                "organizations_url": "https://api.github.com/users/jamesr66a/orgs",
                "repos_url": "https://api.github.com/users/jamesr66a/repos",
                "events_url": "https://api.github.com/users/jamesr66a/events{/privacy}",
                "received_events_url": "https://api.github.com/users/jamesr66a/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2018-06-25T20:15:05Z",
        "updated_at": "2018-06-28T23:45:23Z",
        "closed_at": "2018-06-28T23:45:23Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "Currently we have a mix of actual types when we script/trace a function/module:\r\n\r\n```\r\nimport torch\r\n\r\n@torch.jit.script\r\ndef script_fn(x):\r\n    return x\r\n\r\nprint('*****Script function*****')\r\nprint(type(script_fn))\r\nprint(isinstance(script_fn, torch._C.GraphExecutor))\r\n\r\n@torch.jit.trace(torch.zeros(3, 3))\r\ndef trace_fn(x):\r\n    return x\r\n\r\nprint('*****Traced function*****')\r\nprint(type(trace_fn))\r\nprint(isinstance(trace_fn, torch._C.GraphExecutor))\r\n\r\nclass ScriptModule(torch.jit.ScriptModule):\r\n    @torch.jit.script_method\r\n    def forward(self, x):\r\n        return x\r\nsm = ScriptModule()\r\n\r\nprint('*****Script module*****')\r\nprint(type(sm))\r\nprint(isinstance(sm, torch._C.GraphExecutor))\r\n\r\nclass TracedModule(torch.nn.Module):\r\n    def forward(self, x):\r\n        return x\r\ntm = torch.jit.trace(torch.zeros(3, 3))(TracedModule())\r\n\r\nprint('*****Traced module*****')\r\nprint(type(tm))\r\nprint(isinstance(tm, torch._C.GraphExecutor))\r\n\r\n```\r\n\r\n\r\n```\r\n*****Script function*****\r\n<class 'torch._C.GraphExecutor'>\r\nTrue\r\n*****Traced function*****\r\n<class 'torch._C.GraphExecutor'>\r\nTrue\r\n*****Script module*****\r\n<class '__main__.ScriptModule'>\r\nFalse\r\n*****Traced module*****\r\n<class 'torch.jit.TopLevelTracedModule'>\r\nFalse\r\n```\r\n\r\nThis causes issues, for example, since we can only inline a `PythonValue` into a ScriptModule if it's an instance of GraphExecutor(https://github.com/pytorch/pytorch/blob/2b926aafb09575dd83ebf4fe2a76cbe239596f0b/torch/csrc/jit/script/init.cpp#L82). This causes problems in the case of calling Script/Traced modules from script functions -- they show up as `PythonOp`s.\r\n\r\nLet's make it so that all of {script,traced} {function,module} produce a Module, and re-work the inlining logic to merge modules in all cases. This will greatly simplify the logic and make things easier to understand and maintain",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/8867/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/8867/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/8769",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/8769/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/8769/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/8769/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/8769",
        "id": 334681592,
        "node_id": "MDU6SXNzdWUzMzQ2ODE1OTI=",
        "number": 8769,
        "title": "[JIT] IntList arguments for call are not valid",
        "user": {
            "login": "wanchaol",
            "id": 9443650,
            "node_id": "MDQ6VXNlcjk0NDM2NTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9443650?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wanchaol",
            "html_url": "https://github.com/wanchaol",
            "followers_url": "https://api.github.com/users/wanchaol/followers",
            "following_url": "https://api.github.com/users/wanchaol/following{/other_user}",
            "gists_url": "https://api.github.com/users/wanchaol/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wanchaol/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wanchaol/subscriptions",
            "organizations_url": "https://api.github.com/users/wanchaol/orgs",
            "repos_url": "https://api.github.com/users/wanchaol/repos",
            "events_url": "https://api.github.com/users/wanchaol/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wanchaol/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2018-06-21T22:36:36Z",
        "updated_at": "2018-09-07T23:23:27Z",
        "closed_at": "2018-09-07T23:23:27Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "After PR #8687, we are unable to define something like this:\r\n\r\n```\r\ndef test(input):\r\n    a = torch.zeros((input.size(0), 50), dtype=torch.double)\r\n```\r\nThe problem is that we are now treating the IntList as a listOfInt, but input.size(0) returns a Dynamic, so it will throw up errors like:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"test/test_jit.py\", line 4407, in test_time_sequence_prediction\r\n    self.checkTrace(Sequence(), (torch.rand(97, 999),), verbose=True)\r\n  File \"/Users/wanchaol/pytorch/torch/jit/__init__.py\", line 558, in init_then_register\r\n    self._create_methods(asts, rcbs)\r\nRuntimeError:\r\narguments for call are not valid:\r\n\r\n  for operator zeros(IntList size, int64_t dtype=<default>, IntList device=<default>, int64_t layout=<default>):\r\n  expected a value of type Tensor for argument 'size' but found (Tensor, int)\r\n\r\n```\r\n\r\nCurrently we seems not doing the TensorToNum if we are into this case. @zou3519 do you have any suggestions on how this could be fix?\r\n",
        "closed_by": {
            "login": "wanchaol",
            "id": 9443650,
            "node_id": "MDQ6VXNlcjk0NDM2NTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9443650?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wanchaol",
            "html_url": "https://github.com/wanchaol",
            "followers_url": "https://api.github.com/users/wanchaol/followers",
            "following_url": "https://api.github.com/users/wanchaol/following{/other_user}",
            "gists_url": "https://api.github.com/users/wanchaol/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wanchaol/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wanchaol/subscriptions",
            "organizations_url": "https://api.github.com/users/wanchaol/orgs",
            "repos_url": "https://api.github.com/users/wanchaol/repos",
            "events_url": "https://api.github.com/users/wanchaol/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wanchaol/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/8769/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/8769/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/8560",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/8560/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/8560/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/8560/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/8560",
        "id": 332859634,
        "node_id": "MDU6SXNzdWUzMzI4NTk2MzQ=",
        "number": 8560,
        "title": "[JIT] scalars tensors inside the fuser cause an assertion failure in dimension compression.",
        "user": {
            "login": "zou3519",
            "id": 5652049,
            "node_id": "MDQ6VXNlcjU2NTIwNDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5652049?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zou3519",
            "html_url": "https://github.com/zou3519",
            "followers_url": "https://api.github.com/users/zou3519/followers",
            "following_url": "https://api.github.com/users/zou3519/following{/other_user}",
            "gists_url": "https://api.github.com/users/zou3519/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zou3519/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zou3519/subscriptions",
            "organizations_url": "https://api.github.com/users/zou3519/orgs",
            "repos_url": "https://api.github.com/users/zou3519/repos",
            "events_url": "https://api.github.com/users/zou3519/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zou3519/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "zou3519",
            "id": 5652049,
            "node_id": "MDQ6VXNlcjU2NTIwNDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5652049?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zou3519",
            "html_url": "https://github.com/zou3519",
            "followers_url": "https://api.github.com/users/zou3519/followers",
            "following_url": "https://api.github.com/users/zou3519/following{/other_user}",
            "gists_url": "https://api.github.com/users/zou3519/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zou3519/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zou3519/subscriptions",
            "organizations_url": "https://api.github.com/users/zou3519/orgs",
            "repos_url": "https://api.github.com/users/zou3519/repos",
            "events_url": "https://api.github.com/users/zou3519/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zou3519/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "zou3519",
                "id": 5652049,
                "node_id": "MDQ6VXNlcjU2NTIwNDk=",
                "avatar_url": "https://avatars.githubusercontent.com/u/5652049?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/zou3519",
                "html_url": "https://github.com/zou3519",
                "followers_url": "https://api.github.com/users/zou3519/followers",
                "following_url": "https://api.github.com/users/zou3519/following{/other_user}",
                "gists_url": "https://api.github.com/users/zou3519/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/zou3519/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zou3519/subscriptions",
                "organizations_url": "https://api.github.com/users/zou3519/orgs",
                "repos_url": "https://api.github.com/users/zou3519/repos",
                "events_url": "https://api.github.com/users/zou3519/events{/privacy}",
                "received_events_url": "https://api.github.com/users/zou3519/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 3,
        "created_at": "2018-06-15T17:38:26Z",
        "updated_at": "2018-09-06T14:56:19Z",
        "closed_at": "2018-09-06T14:56:19Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "This errors out:\r\n```\r\nimport torch\r\n@torch.jit.script\r\ndef func1(x, y):\r\n    return x + y.type_as(x)\r\nx = torch.tensor(0.1)\r\ny = torch.tensor(1)\r\nfunc1(x, y)\r\n---------------------------------------------------------------------------\r\nRuntimeError                              Traceback (most recent call last)\r\n<ipython-input-7-36d19baf43bf> in <module>()\r\n      5 x = torch.tensor(0.1)\r\n      6 y = torch.tensor(1)\r\n----> 7 func1(x, y)\r\n\r\nRuntimeError: torch/csrc/jit/fusion_compiler.cpp:450: operator(): Assertion `nDim <= uncompressedDim` failed.\r\n```\r\n\r\nThis works as expected:\r\n```\r\nimport torch\r\n@torch.jit.script\r\ndef func2(x, y):\r\n    return x + y.type_as(x)\r\nx = torch.tensor([0.1])\r\ny = torch.tensor([1])\r\nfunc2(x, y)\r\n\r\nOut[8]: tensor([1.1000])\r\n```\r\n\r\nRelevant PR: #8058",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/8560/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/8560/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/8525",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/8525/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/8525/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/8525/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/8525",
        "id": 332571524,
        "node_id": "MDU6SXNzdWUzMzI1NzE1MjQ=",
        "number": 8525,
        "title": "[JIT] split: expected a value of type Tensor for argument 'split_size' but found (LongTensor[], LongTensor[], LongTensor[])",
        "user": {
            "login": "jamesr66a",
            "id": 4685384,
            "node_id": "MDQ6VXNlcjQ2ODUzODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4685384?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesr66a",
            "html_url": "https://github.com/jamesr66a",
            "followers_url": "https://api.github.com/users/jamesr66a/followers",
            "following_url": "https://api.github.com/users/jamesr66a/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesr66a/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesr66a/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesr66a/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesr66a/orgs",
            "repos_url": "https://api.github.com/users/jamesr66a/repos",
            "events_url": "https://api.github.com/users/jamesr66a/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesr66a/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2018-06-14T21:30:45Z",
        "updated_at": "2018-09-07T22:40:33Z",
        "closed_at": "2018-09-07T22:40:33Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "Operator level tests failing. Example failure:\r\n\r\n```\r\n======================================================================\r\nERROR: test_split_size_list (__main__.TestAutogradGenerated)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"test/test_autograd.py\", line 3665, in do_test\r\n    check(name)\r\n  File \"test/test_autograd.py\", line 3592, in check\r\n    fn, (self_variable,) + args_variable)\r\n  File \"test/test_autograd.py\", line 3498, in check_against_reference\r\n    outputs_test = func(*nograd_inputs)\r\n  File \"test/test_autograd.py\", line 3473, in script_fn\r\n    CU = torch.jit.CompilationUnit(script)\r\n  File \"/data/users/zdevito/pytorch/torch/jit/__init__.py\", line 352, in __init__\r\n    self.define(lang, _frames_up=_frames_up + 1)\r\n  File \"/data/users/zdevito/pytorch/torch/jit/__init__.py\", line 358, in define\r\n    self.module._define(lang, rcb, False)\r\nRuntimeError: \r\narguments for call are not valid:\r\n  \r\n  for operator split(Tensor self, int64_t split_size, int64_t dim=<default>):\r\n  expected a value of type Tensor for argument 'split_size' but found (LongTensor[], LongTensor[], LongTensor[])\r\n  \r\n  def the_method(i0):\r\n      return i0.split([1, 3, 1])\r\n                      ~~~~~~~~ <--- HERE\r\nfor call at:\r\n\r\ndef the_method(i0):\r\n    return i0.split([1, 3, 1])\r\n           ~~~~~~~~ <--- HERE\r\n```\r\n\r\nAffected tests:\r\n- `test_split_size_list`\r\n- `test_split_size_list_dim`\r\n- `test_split_size_list_dim_neg0`\r\n",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/8525/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/8525/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/8520",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/8520/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/8520/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/8520/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/8520",
        "id": 332560162,
        "node_id": "MDU6SXNzdWUzMzI1NjAxNjI=",
        "number": 8520,
        "title": "[JIT] Don't support torch.Size() in the script",
        "user": {
            "login": "jamesr66a",
            "id": 4685384,
            "node_id": "MDQ6VXNlcjQ2ODUzODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4685384?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesr66a",
            "html_url": "https://github.com/jamesr66a",
            "followers_url": "https://api.github.com/users/jamesr66a/followers",
            "following_url": "https://api.github.com/users/jamesr66a/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesr66a/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesr66a/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesr66a/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesr66a/orgs",
            "repos_url": "https://api.github.com/users/jamesr66a/repos",
            "events_url": "https://api.github.com/users/jamesr66a/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesr66a/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2018-06-14T20:52:06Z",
        "updated_at": "2019-07-05T22:13:22Z",
        "closed_at": "2018-09-07T22:40:33Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "Operator-level tests fail. Example failure:\r\n\r\n```\r\n======================================================================\r\nERROR: test_reshape_size (__main__.TestAutogradGenerated)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"test/test_autograd.py\", line 3665, in do_test\r\n    check(name)\r\n  File \"test/test_autograd.py\", line 3592, in check\r\n    fn, (self_variable,) + args_variable)\r\n  File \"test/test_autograd.py\", line 3498, in check_against_reference\r\n    outputs_test = func(*nograd_inputs)\r\n  File \"test/test_autograd.py\", line 3473, in script_fn\r\n    CU = torch.jit.CompilationUnit(script)\r\n  File \"/data/users/zdevito/pytorch/torch/jit/__init__.py\", line 352, in __init__\r\n    self.define(lang, _frames_up=_frames_up + 1)\r\n  File \"/data/users/zdevito/pytorch/torch/jit/__init__.py\", line 358, in define\r\n    self.module._define(lang, rcb, False)\r\nRuntimeError: \r\nunknown builtin op:\r\n\r\ndef the_method(i0):\r\n    return i0.reshape(torch.Size([25, 5]))\r\n                      ~~~~~~~~~~ <--- HERE\r\n```\r\n\r\nAffected tests:\r\n- `test_reshape_size`\r\n- `test_view_size`",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/8520/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/8520/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/8516",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/8516/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/8516/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/8516/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/8516",
        "id": 332557439,
        "node_id": "MDU6SXNzdWUzMzI1NTc0Mzk=",
        "number": 8516,
        "title": "[JIT] Better handle IntList arguments for ops like permute",
        "user": {
            "login": "jamesr66a",
            "id": 4685384,
            "node_id": "MDQ6VXNlcjQ2ODUzODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4685384?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesr66a",
            "html_url": "https://github.com/jamesr66a",
            "followers_url": "https://api.github.com/users/jamesr66a/followers",
            "following_url": "https://api.github.com/users/jamesr66a/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesr66a/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesr66a/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesr66a/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesr66a/orgs",
            "repos_url": "https://api.github.com/users/jamesr66a/repos",
            "events_url": "https://api.github.com/users/jamesr66a/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesr66a/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "wanchaol",
            "id": 9443650,
            "node_id": "MDQ6VXNlcjk0NDM2NTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9443650?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wanchaol",
            "html_url": "https://github.com/wanchaol",
            "followers_url": "https://api.github.com/users/wanchaol/followers",
            "following_url": "https://api.github.com/users/wanchaol/following{/other_user}",
            "gists_url": "https://api.github.com/users/wanchaol/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wanchaol/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wanchaol/subscriptions",
            "organizations_url": "https://api.github.com/users/wanchaol/orgs",
            "repos_url": "https://api.github.com/users/wanchaol/repos",
            "events_url": "https://api.github.com/users/wanchaol/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wanchaol/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "wanchaol",
                "id": 9443650,
                "node_id": "MDQ6VXNlcjk0NDM2NTA=",
                "avatar_url": "https://avatars.githubusercontent.com/u/9443650?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/wanchaol",
                "html_url": "https://github.com/wanchaol",
                "followers_url": "https://api.github.com/users/wanchaol/followers",
                "following_url": "https://api.github.com/users/wanchaol/following{/other_user}",
                "gists_url": "https://api.github.com/users/wanchaol/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/wanchaol/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wanchaol/subscriptions",
                "organizations_url": "https://api.github.com/users/wanchaol/orgs",
                "repos_url": "https://api.github.com/users/wanchaol/repos",
                "events_url": "https://api.github.com/users/wanchaol/events{/privacy}",
                "received_events_url": "https://api.github.com/users/wanchaol/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 2,
        "created_at": "2018-06-14T20:44:12Z",
        "updated_at": "2018-08-23T22:11:42Z",
        "closed_at": "2018-08-23T22:11:42Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "The following tests show invocations of `permute` that are valid in Python but not script. We should make it so that the behavior of script matches the python arg parser, e.g. https://github.com/pytorch/pytorch/blob/0829d4502de40c77f191e85983edf7f67a843c70/torch/csrc/utils/python_arg_parser.cpp:\r\n\r\n```\r\n\r\n======================================================================\r\nERROR: test_permute (__main__.TestAutogradGenerated)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"test/test_autograd.py\", line 3665, in do_test\r\n    check(name)\r\n  File \"test/test_autograd.py\", line 3592, in check\r\n    fn, (self_variable,) + args_variable)\r\n  File \"test/test_autograd.py\", line 3498, in check_against_reference\r\n    outputs_test = func(*nograd_inputs)\r\n  File \"test/test_autograd.py\", line 3473, in script_fn\r\n    CU = torch.jit.CompilationUnit(script)\r\n  File \"/data/users/zdevito/pytorch/torch/jit/__init__.py\", line 352, in __init__\r\n    self.define(lang, _frames_up=_frames_up + 1)\r\n  File \"/data/users/zdevito/pytorch/torch/jit/__init__.py\", line 358, in define\r\n    self.module._define(lang, rcb, False)\r\nRuntimeError: \r\narguments for call are not valid:\r\n  \r\n  for operator permute(Tensor self, IntList dims):\r\n  expected at most 2 arguments  but found 5\r\n  \r\n  def the_method(i0):\r\n      return i0.permute(0, 2, 3, 1)\r\n             ~~~~~~~~~~ <--- HERE\r\n  \r\nfor call at:\r\n\r\ndef the_method(i0):\r\n    return i0.permute(0, 2, 3, 1)\r\n           ~~~~~~~~~~ <--- HERE\r\n\r\n\r\n======================================================================\r\nERROR: test_permute_neg_dim (__main__.TestAutogradGenerated)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"test/test_autograd.py\", line 3665, in do_test\r\n    check(name)\r\n  File \"test/test_autograd.py\", line 3592, in check\r\n    fn, (self_variable,) + args_variable)\r\n  File \"test/test_autograd.py\", line 3498, in check_against_reference\r\n    outputs_test = func(*nograd_inputs)\r\n  File \"test/test_autograd.py\", line 3473, in script_fn\r\n    CU = torch.jit.CompilationUnit(script)\r\n  File \"/data/users/zdevito/pytorch/torch/jit/__init__.py\", line 352, in __init__\r\n    self.define(lang, _frames_up=_frames_up + 1)\r\n  File \"/data/users/zdevito/pytorch/torch/jit/__init__.py\", line 358, in define\r\n    self.module._define(lang, rcb, False)\r\nRuntimeError: \r\narguments for call are not valid:\r\n  \r\n  for operator permute(Tensor self, IntList dims):\r\n  expected at most 2 arguments  but found 5\r\n  \r\n  def the_method(i0):\r\n      return i0.permute(0, -2, -1, 1)\r\n             ~~~~~~~~~~ <--- HERE\r\n  \r\nfor call at:\r\n\r\ndef the_method(i0):\r\n    return i0.permute(0, -2, -1, 1)\r\n           ~~~~~~~~~~ <--- HERE\r\n```\r\n\r\nWe should probably improve this.\r\n\r\nAffected tests:\r\n- `test_permute`\r\n- `test_permute_neg_dim`\r\n- `test_repeat`\r\n- `test_repeat_scalar`\r\n- `test_repeat_unsqueeze`\r\n- `test_reshape`\r\n- `test_view`\r\n- `test_expand`\r\n- `test_expand_1_element`\r\n- `test_expand_new_dim`\r\n- `test_expand_new_dim_front_old_front_1`\r\n- `test_expand_scalar_to_dims`\r\n- `test_expand_size`\r\n- `test_repeat_single_number`\r\n- `test_reshape_1d`\r\n- `test_reshape_scalar_to_1d`\r\n- `test_view_1d`\r\n- `test_view_scalar_to_1d`",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/8516/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/8516/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/8515",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/8515/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/8515/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/8515/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/8515",
        "id": 332556970,
        "node_id": "MDU6SXNzdWUzMzI1NTY5NzA=",
        "number": 8515,
        "title": "[JIT] Don't support inf in the script",
        "user": {
            "login": "jamesr66a",
            "id": 4685384,
            "node_id": "MDQ6VXNlcjQ2ODUzODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4685384?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesr66a",
            "html_url": "https://github.com/jamesr66a",
            "followers_url": "https://api.github.com/users/jamesr66a/followers",
            "following_url": "https://api.github.com/users/jamesr66a/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesr66a/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesr66a/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesr66a/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesr66a/orgs",
            "repos_url": "https://api.github.com/users/jamesr66a/repos",
            "events_url": "https://api.github.com/users/jamesr66a/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesr66a/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2018-06-14T20:42:32Z",
        "updated_at": "2018-09-17T21:09:42Z",
        "closed_at": "2018-09-17T21:09:42Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "Operator level test fails:\r\n\r\n```\r\n======================================================================\r\nERROR: test_norm_inf (__main__.TestAutogradGenerated)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"test/test_autograd.py\", line 3665, in do_test\r\n    check(name)\r\n  File \"test/test_autograd.py\", line 3592, in check\r\n    fn, (self_variable,) + args_variable)\r\n  File \"test/test_autograd.py\", line 3498, in check_against_reference\r\n    outputs_test = func(*nograd_inputs)\r\n  File \"test/test_autograd.py\", line 3473, in script_fn\r\n    CU = torch.jit.CompilationUnit(script)\r\n  File \"/data/users/zdevito/pytorch/torch/jit/__init__.py\", line 352, in __init__\r\n    self.define(lang, _frames_up=_frames_up + 1)\r\n  File \"/data/users/zdevito/pytorch/torch/jit/__init__.py\", line 358, in define\r\n    self.module._define(lang, rcb, False)\r\nRuntimeError: \r\nundefined value inf:\r\n\r\ndef the_method(i0):\r\n    return i0.norm(inf)\r\n                   ~~~ <--- HERE\r\n```\r\n\r\nAffected tests:\r\n- `test_norm_inf`\r\n- `test_renorm_norm_inf`",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/8515/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/8515/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/8502",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/8502/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/8502/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/8502/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/8502",
        "id": 332537196,
        "node_id": "MDU6SXNzdWUzMzI1MzcxOTY=",
        "number": 8502,
        "title": "[JIT] Don't support None in the script",
        "user": {
            "login": "jamesr66a",
            "id": 4685384,
            "node_id": "MDQ6VXNlcjQ2ODUzODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4685384?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesr66a",
            "html_url": "https://github.com/jamesr66a",
            "followers_url": "https://api.github.com/users/jamesr66a/followers",
            "following_url": "https://api.github.com/users/jamesr66a/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesr66a/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesr66a/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesr66a/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesr66a/orgs",
            "repos_url": "https://api.github.com/users/jamesr66a/repos",
            "events_url": "https://api.github.com/users/jamesr66a/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesr66a/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2018-06-14T19:39:13Z",
        "updated_at": "2018-07-28T05:55:35Z",
        "closed_at": "2018-07-28T05:55:35Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "Operator-level tests fail because we're using `None` in the script. Example failure:\r\n\r\n```\r\n======================================================================\r\nERROR: test_clamp_max (__main__.TestAutogradGenerated)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"test/test_autograd.py\", line 3665, in do_test\r\n    check(name)\r\n  File \"test/test_autograd.py\", line 3592, in check\r\n    fn, (self_variable,) + args_variable)\r\n  File \"test/test_autograd.py\", line 3498, in check_against_reference\r\n    outputs_test = func(*nograd_inputs)\r\n  File \"test/test_autograd.py\", line 3473, in script_fn\r\n    CU = torch.jit.CompilationUnit(script)\r\n  File \"/data/users/zdevito/pytorch/torch/jit/__init__.py\", line 352, in __init__\r\n    self.define(lang, _frames_up=_frames_up + 1)\r\n  File \"/data/users/zdevito/pytorch/torch/jit/__init__.py\", line 358, in define\r\n    self.module._define(lang, rcb, False)\r\nRuntimeError: \r\nundefined value None:\r\n\r\ndef the_method(i0):\r\n    return i0.clamp(0.5, None)\r\n                         ~~~~ <--- HERE\r\n```\r\n\r\nAffected tests:\r\n\r\n- `test_clamp_max`\r\n- `test_clamp_max_scalar`\r\n- `test_clamp_min`\r\n- `test_clamp_min_scalar`",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/8502/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/8502/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/8439",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/8439/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/8439/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/8439/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/8439",
        "id": 332123748,
        "node_id": "MDU6SXNzdWUzMzIxMjM3NDg=",
        "number": 8439,
        "title": "[JIT] ONNX InstanceNormalization symbolic interferes with regular tracing",
        "user": {
            "login": "jamesr66a",
            "id": 4685384,
            "node_id": "MDQ6VXNlcjQ2ODUzODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4685384?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesr66a",
            "html_url": "https://github.com/jamesr66a",
            "followers_url": "https://api.github.com/users/jamesr66a/followers",
            "following_url": "https://api.github.com/users/jamesr66a/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesr66a/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesr66a/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesr66a/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesr66a/orgs",
            "repos_url": "https://api.github.com/users/jamesr66a/repos",
            "events_url": "https://api.github.com/users/jamesr66a/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesr66a/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2018-06-13T19:03:45Z",
        "updated_at": "2018-09-13T19:27:45Z",
        "closed_at": "2018-09-13T19:27:45Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "Example:\r\n\r\n```\r\nimport torch\r\n\r\nclass ConvLayer(torch.nn.Module):\r\n    def __init__(self, in_channels, out_channels, kernel_size, stride):\r\n        super(ConvLayer, self).__init__()\r\n        reflection_padding = kernel_size // 2\r\n        self.reflection_pad = torch.nn.ReflectionPad2d(reflection_padding)\r\n        self.conv2d = torch.nn.Conv2d(in_channels, out_channels, kernel_size, stride)\r\n\r\n    def forward(self, x):\r\n        out = self.reflection_pad(x)\r\n        out = self.conv2d(out)\r\n        return out\r\n\r\nclass TransformerNet(torch.nn.Module):\r\n    def __init__(self):\r\n        super(TransformerNet, self).__init__()\r\n        # Initial convolution layers\r\n        self.conv1 = ConvLayer(3, 32, kernel_size=9, stride=1)\r\n        self.in1 = torch.nn.InstanceNorm2d(32, affine=True)\r\n\r\n    def forward(self, x):\r\n        return self.in1(self.conv1(x))\r\n\r\nx = torch.rand(5, 3, 224, 224)\r\ntn = TransformerNet()\r\ntraced = torch.jit.trace(x)(tn)\r\nprint(traced.__getattr__('forward').graph)\r\ntraced(x)\r\n```\r\n\r\nOutput:\r\n\r\n```\r\ngraph(%0 : Float(5, 3, 224, 224)\r\n      %1 : Float(32, 3, 9, 9)\r\n      %2 : Float(32)\r\n      %3 : Float(32)\r\n      %4 : Float(32)) {\r\n  %6 : Float(5, 3, 232, 232) = aten::reflection_pad2d[padding=[4, 4, 4, 4]](%0)\r\n  %12 : Float(5, 32, 224, 224) = aten::_convolution[stride=[1, 1], padding=[0, 0], dilation=[1, 1], transposed=0, output_padding=[0, 0], groups=1, benchmark=0, deterministic=0, cudnn_enabled=1](%6, %1, %2)\r\n  %51 : Dynamic = onnx::Constant[value=<Tensor>]()\r\n  %52 : Dynamic = onnx::Constant[value=<Tensor>]()\r\n  %53 : Float(5, 32, 224, 224) = onnx::InstanceNormalization[epsilon=1e-05](%12, %51, %52)\r\n  return (%53);\r\n}\r\n\r\nTraceback (most recent call last):\r\n  File \"instance.py\", line 29, in <module>\r\n    traced(x)\r\n  File \"/Users/jamesreed/onnx-fairseq/pytorch/torch/nn/modules/module.py\", line 468, in __call__\r\n    result = self.forward(*input, **kwargs)\r\n  File \"/Users/jamesreed/onnx-fairseq/pytorch/torch/jit/__init__.py\", line 690, in forward\r\n    return self._get_method('forward')(*args, **kwargs)\r\nRuntimeError: torch/csrc/jit/generated/aten_dispatch.cpp:13384: getDescriptor: Assertion `n->kind().is_aten()` failed: onnx::Constant is not an ATen op\r\n```\r\n\r\n`torch.onnx.symbolic_override*` decorators kick in unconditionally when tracing, whether we're calling them in an ONNX export context or not. This breaks JIT tracing for e.g. the super-resolution example",
        "closed_by": {
            "login": "facebook-github-bot",
            "id": 6422482,
            "node_id": "MDQ6VXNlcjY0MjI0ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6422482?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/facebook-github-bot",
            "html_url": "https://github.com/facebook-github-bot",
            "followers_url": "https://api.github.com/users/facebook-github-bot/followers",
            "following_url": "https://api.github.com/users/facebook-github-bot/following{/other_user}",
            "gists_url": "https://api.github.com/users/facebook-github-bot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/facebook-github-bot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/facebook-github-bot/subscriptions",
            "organizations_url": "https://api.github.com/users/facebook-github-bot/orgs",
            "repos_url": "https://api.github.com/users/facebook-github-bot/repos",
            "events_url": "https://api.github.com/users/facebook-github-bot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/facebook-github-bot/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/8439/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/8439/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/7818",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/7818/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/7818/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/7818/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/7818",
        "id": 326244322,
        "node_id": "MDU6SXNzdWUzMjYyNDQzMjI=",
        "number": 7818,
        "title": "[JIT][script] Bug in how loop-carried dependencies are captured across nested blocks",
        "user": {
            "login": "jamesr66a",
            "id": 4685384,
            "node_id": "MDQ6VXNlcjQ2ODUzODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4685384?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesr66a",
            "html_url": "https://github.com/jamesr66a",
            "followers_url": "https://api.github.com/users/jamesr66a/followers",
            "following_url": "https://api.github.com/users/jamesr66a/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesr66a/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesr66a/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesr66a/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesr66a/orgs",
            "repos_url": "https://api.github.com/users/jamesr66a/repos",
            "events_url": "https://api.github.com/users/jamesr66a/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesr66a/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "wanchaol",
            "id": 9443650,
            "node_id": "MDQ6VXNlcjk0NDM2NTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9443650?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wanchaol",
            "html_url": "https://github.com/wanchaol",
            "followers_url": "https://api.github.com/users/wanchaol/followers",
            "following_url": "https://api.github.com/users/wanchaol/following{/other_user}",
            "gists_url": "https://api.github.com/users/wanchaol/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wanchaol/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wanchaol/subscriptions",
            "organizations_url": "https://api.github.com/users/wanchaol/orgs",
            "repos_url": "https://api.github.com/users/wanchaol/repos",
            "events_url": "https://api.github.com/users/wanchaol/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wanchaol/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "wanchaol",
                "id": 9443650,
                "node_id": "MDQ6VXNlcjk0NDM2NTA=",
                "avatar_url": "https://avatars.githubusercontent.com/u/9443650?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/wanchaol",
                "html_url": "https://github.com/wanchaol",
                "followers_url": "https://api.github.com/users/wanchaol/followers",
                "following_url": "https://api.github.com/users/wanchaol/following{/other_user}",
                "gists_url": "https://api.github.com/users/wanchaol/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/wanchaol/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wanchaol/subscriptions",
                "organizations_url": "https://api.github.com/users/wanchaol/orgs",
                "repos_url": "https://api.github.com/users/wanchaol/repos",
                "events_url": "https://api.github.com/users/wanchaol/events{/privacy}",
                "received_events_url": "https://api.github.com/users/wanchaol/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2018-05-24T18:44:07Z",
        "updated_at": "2018-06-20T19:09:25Z",
        "closed_at": "2018-06-20T19:09:25Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "Code example:\r\n```\r\nimport torch\r\n\r\n@torch.jit.script\r\ndef capture_bug(x):\r\n    output = 0\r\n    for i in range(20):\r\n        if i == 0:\r\n            output = x.unsqueeze(0)\r\n        else:\r\n            output = torch.cat((output, x.unsqueeze(0)), dim=0)\r\n    return output\r\n\r\nprint(capture_bug.graph)\r\n```\r\n\r\nCreates:\r\n```\r\ngraph(%x : Dynamic) {\r\n  %output.1 : Long() = prim::Constant[value={0}]()\r\n  %2 : Long() = prim::Constant[value={20}]()\r\n  %3 : Byte() = prim::Constant[value={1}]()\r\n  %output : Dynamic = prim::Loop(%2, %3, %output.1)\r\n    block0(%i : Dynamic, %15 : Dynamic) {\r\n      %5 : Long() = prim::Constant[value={0}]()\r\n      %6 : Dynamic = aten::eq(%i, %5)\r\n      %output.4 : Dynamic = prim::If(%6)\r\n        block0() {\r\n          %output.2 : Dynamic = aten::unsqueeze[dim=0](%x)\r\n          -> (%output.2)\r\n        }\r\n        block1() {\r\n          %10 : Dynamic = aten::unsqueeze[dim=0](%x)\r\n          %12 : Long() = prim::Constant[value={0}]()\r\n          %output.3 : Dynamic = aten::cat(%output.1, %10, %12)\r\n          -> (%output.3)\r\n        }\r\n      %16 : Byte() = prim::Constant[value={1}]()\r\n      -> (%16, %output.4)\r\n    }\r\n  return (%output);\r\n}\r\n```\r\n\r\nThe first operand to `cat` in `block1()` should be a captured value, not `%output.1`\r\n",
        "closed_by": {
            "login": "wanchaol",
            "id": 9443650,
            "node_id": "MDQ6VXNlcjk0NDM2NTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9443650?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wanchaol",
            "html_url": "https://github.com/wanchaol",
            "followers_url": "https://api.github.com/users/wanchaol/followers",
            "following_url": "https://api.github.com/users/wanchaol/following{/other_user}",
            "gists_url": "https://api.github.com/users/wanchaol/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wanchaol/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wanchaol/subscriptions",
            "organizations_url": "https://api.github.com/users/wanchaol/orgs",
            "repos_url": "https://api.github.com/users/wanchaol/repos",
            "events_url": "https://api.github.com/users/wanchaol/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wanchaol/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/7818/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/7818/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/7817",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/7817/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/7817/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/7817/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/7817",
        "id": 326243766,
        "node_id": "MDU6SXNzdWUzMjYyNDM3NjY=",
        "number": 7817,
        "title": "Investigate need for transposes in pytorch->onnx rnn conversion",
        "user": {
            "login": "anderspapitto",
            "id": 1388690,
            "node_id": "MDQ6VXNlcjEzODg2OTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1388690?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/anderspapitto",
            "html_url": "https://github.com/anderspapitto",
            "followers_url": "https://api.github.com/users/anderspapitto/followers",
            "following_url": "https://api.github.com/users/anderspapitto/following{/other_user}",
            "gists_url": "https://api.github.com/users/anderspapitto/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/anderspapitto/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/anderspapitto/subscriptions",
            "organizations_url": "https://api.github.com/users/anderspapitto/orgs",
            "repos_url": "https://api.github.com/users/anderspapitto/repos",
            "events_url": "https://api.github.com/users/anderspapitto/events{/privacy}",
            "received_events_url": "https://api.github.com/users/anderspapitto/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "anderspapitto",
            "id": 1388690,
            "node_id": "MDQ6VXNlcjEzODg2OTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1388690?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/anderspapitto",
            "html_url": "https://github.com/anderspapitto",
            "followers_url": "https://api.github.com/users/anderspapitto/followers",
            "following_url": "https://api.github.com/users/anderspapitto/following{/other_user}",
            "gists_url": "https://api.github.com/users/anderspapitto/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/anderspapitto/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/anderspapitto/subscriptions",
            "organizations_url": "https://api.github.com/users/anderspapitto/orgs",
            "repos_url": "https://api.github.com/users/anderspapitto/repos",
            "events_url": "https://api.github.com/users/anderspapitto/events{/privacy}",
            "received_events_url": "https://api.github.com/users/anderspapitto/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "anderspapitto",
                "id": 1388690,
                "node_id": "MDQ6VXNlcjEzODg2OTA=",
                "avatar_url": "https://avatars.githubusercontent.com/u/1388690?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/anderspapitto",
                "html_url": "https://github.com/anderspapitto",
                "followers_url": "https://api.github.com/users/anderspapitto/followers",
                "following_url": "https://api.github.com/users/anderspapitto/following{/other_user}",
                "gists_url": "https://api.github.com/users/anderspapitto/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/anderspapitto/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/anderspapitto/subscriptions",
                "organizations_url": "https://api.github.com/users/anderspapitto/orgs",
                "repos_url": "https://api.github.com/users/anderspapitto/repos",
                "events_url": "https://api.github.com/users/anderspapitto/events{/privacy}",
                "received_events_url": "https://api.github.com/users/anderspapitto/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2018-05-24T18:42:27Z",
        "updated_at": "2018-05-25T19:56:58Z",
        "closed_at": "2018-05-25T19:56:58Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "as described in https://github.com/pytorch/pytorch/pull/7809#issuecomment-391775282",
        "closed_by": {
            "login": "anderspapitto",
            "id": 1388690,
            "node_id": "MDQ6VXNlcjEzODg2OTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1388690?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/anderspapitto",
            "html_url": "https://github.com/anderspapitto",
            "followers_url": "https://api.github.com/users/anderspapitto/followers",
            "following_url": "https://api.github.com/users/anderspapitto/following{/other_user}",
            "gists_url": "https://api.github.com/users/anderspapitto/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/anderspapitto/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/anderspapitto/subscriptions",
            "organizations_url": "https://api.github.com/users/anderspapitto/orgs",
            "repos_url": "https://api.github.com/users/anderspapitto/repos",
            "events_url": "https://api.github.com/users/anderspapitto/events{/privacy}",
            "received_events_url": "https://api.github.com/users/anderspapitto/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/7817/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/7817/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/6734",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/6734/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/6734/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/6734/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/6734",
        "id": 315670092,
        "node_id": "MDU6SXNzdWUzMTU2NzAwOTI=",
        "number": 6734,
        "title": "[JIT] jit does not properly handle IntList[x] params",
        "user": {
            "login": "t-vi",
            "id": 20787943,
            "node_id": "MDQ6VXNlcjIwNzg3OTQz",
            "avatar_url": "https://avatars.githubusercontent.com/u/20787943?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/t-vi",
            "html_url": "https://github.com/t-vi",
            "followers_url": "https://api.github.com/users/t-vi/followers",
            "following_url": "https://api.github.com/users/t-vi/following{/other_user}",
            "gists_url": "https://api.github.com/users/t-vi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/t-vi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/t-vi/subscriptions",
            "organizations_url": "https://api.github.com/users/t-vi/orgs",
            "repos_url": "https://api.github.com/users/t-vi/repos",
            "events_url": "https://api.github.com/users/t-vi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/t-vi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2018-04-18T22:56:00Z",
        "updated_at": "2018-04-30T03:09:05Z",
        "closed_at": "2018-04-30T03:09:05Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "For example, `adaptive_avg_pool1d` has an `IntList[1]` parameter as the second argument in `native_functions.yaml`.\r\n```\r\n@torch.jit.script\r\ndef func(x):\r\n  return torch.nn.functional.adaptive_avg_pool1d(x, output_size=1)\r\n```\r\ngives\r\n```\r\nunknown builtin op:\r\n@torch.jit.script\r\ndef func(x):\r\n    return torch.nn.functional.adaptive_avg_pool1d(x, output_size=1)\r\n           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~ <--- HERE\r\n```\r\nwhereas \r\n```\r\n@torch.jit.script\r\ndef func(x):\r\n  return torch.nn.functional.adaptive_avg_pool1d(x, output_size=[1])\r\n```\r\nworks. When you remove the `output_size=` it's the other way around.\r\n\r\nThis is on current master.\r\nI came across this because it causes the build failure in #6152 .\r\n\r\nIn terms of work-around, maybe one could generate `i` and `is` signatures when one encounters `IntList[x]`.\r\n\r\nBest regards\r\n\r\nThomas",
        "closed_by": {
            "login": "ezyang",
            "id": 13564,
            "node_id": "MDQ6VXNlcjEzNTY0",
            "avatar_url": "https://avatars.githubusercontent.com/u/13564?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ezyang",
            "html_url": "https://github.com/ezyang",
            "followers_url": "https://api.github.com/users/ezyang/followers",
            "following_url": "https://api.github.com/users/ezyang/following{/other_user}",
            "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions",
            "organizations_url": "https://api.github.com/users/ezyang/orgs",
            "repos_url": "https://api.github.com/users/ezyang/repos",
            "events_url": "https://api.github.com/users/ezyang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ezyang/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/6734/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/6734/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/6576",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/6576/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/6576/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/6576/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/6576",
        "id": 313929953,
        "node_id": "MDU6SXNzdWUzMTM5Mjk5NTM=",
        "number": 6576,
        "title": "[JIT] Python operations (e.g. Dropout) traced in wrong mode",
        "user": {
            "login": "jamesr66a",
            "id": 4685384,
            "node_id": "MDQ6VXNlcjQ2ODUzODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4685384?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesr66a",
            "html_url": "https://github.com/jamesr66a",
            "followers_url": "https://api.github.com/users/jamesr66a/followers",
            "following_url": "https://api.github.com/users/jamesr66a/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesr66a/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesr66a/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesr66a/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesr66a/orgs",
            "repos_url": "https://api.github.com/users/jamesr66a/repos",
            "events_url": "https://api.github.com/users/jamesr66a/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesr66a/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "apaszke",
            "id": 4583066,
            "node_id": "MDQ6VXNlcjQ1ODMwNjY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4583066?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/apaszke",
            "html_url": "https://github.com/apaszke",
            "followers_url": "https://api.github.com/users/apaszke/followers",
            "following_url": "https://api.github.com/users/apaszke/following{/other_user}",
            "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions",
            "organizations_url": "https://api.github.com/users/apaszke/orgs",
            "repos_url": "https://api.github.com/users/apaszke/repos",
            "events_url": "https://api.github.com/users/apaszke/events{/privacy}",
            "received_events_url": "https://api.github.com/users/apaszke/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "apaszke",
                "id": 4583066,
                "node_id": "MDQ6VXNlcjQ1ODMwNjY=",
                "avatar_url": "https://avatars.githubusercontent.com/u/4583066?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/apaszke",
                "html_url": "https://github.com/apaszke",
                "followers_url": "https://api.github.com/users/apaszke/followers",
                "following_url": "https://api.github.com/users/apaszke/following{/other_user}",
                "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions",
                "organizations_url": "https://api.github.com/users/apaszke/orgs",
                "repos_url": "https://api.github.com/users/apaszke/repos",
                "events_url": "https://api.github.com/users/apaszke/events{/privacy}",
                "received_events_url": "https://api.github.com/users/apaszke/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 4,
        "created_at": "2018-04-13T00:22:21Z",
        "updated_at": "2018-06-12T19:14:55Z",
        "closed_at": "2018-06-12T19:14:55Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "Code example:\r\n\r\n```\r\nimport torch\r\nimport torch.nn.functional as F\r\n\r\n@torch.jit.trace(torch.zeros(1, 2, 3))\r\ndef dropout_test(x):\r\n    x = torch.neg(x)\r\n    return F.dropout(x)\r\n\r\ndropout_test(torch.zeros(1, 2, 3, requires_grad=True))\r\n```\r\n\r\nOutput:\r\n```\r\n17:20:04 ~ $ python dropoutcrash.py\r\nTraceback (most recent call last):\r\n  File \"dropoutcrash.py\", line 9, in <module>\r\n    dropout_test(torch.zeros(1, 2, 3, requires_grad=True))\r\nRuntimeError:\r\nVariableType::ID() not implemented:\r\noperation failed in interpreter:\r\n/Users/jamesreed/onnx-fairseq/pytorch/torch/nn/functional.py(555): dropout\r\ndropoutcrash.py(7): dropout_test\r\n/Users/jamesreed/onnx-fairseq/pytorch/torch/jit/__init__.py(475): wrapper\r\ndropoutcrash.py(4): <module>\r\n```\r\n\r\nDiscussed with @zdevito offline, this appears to the the tracer tracing this op in the wrong mode, and two things are incorrect:\r\n\r\n1) The `tracing_autograd_python_function` flag is set\r\n2) The op has a Handle output",
        "closed_by": {
            "login": "jamesr66a",
            "id": 4685384,
            "node_id": "MDQ6VXNlcjQ2ODUzODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4685384?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesr66a",
            "html_url": "https://github.com/jamesr66a",
            "followers_url": "https://api.github.com/users/jamesr66a/followers",
            "following_url": "https://api.github.com/users/jamesr66a/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesr66a/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesr66a/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesr66a/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesr66a/orgs",
            "repos_url": "https://api.github.com/users/jamesr66a/repos",
            "events_url": "https://api.github.com/users/jamesr66a/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesr66a/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/6576/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/6576/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/6011",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/6011/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/6011/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/6011/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/6011",
        "id": 308703331,
        "node_id": "MDU6SXNzdWUzMDg3MDMzMzE=",
        "number": 6011,
        "title": "Add expand nodes to point-wise operators generated by @script",
        "user": {
            "login": "zdevito",
            "id": 370202,
            "node_id": "MDQ6VXNlcjM3MDIwMg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/370202?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zdevito",
            "html_url": "https://github.com/zdevito",
            "followers_url": "https://api.github.com/users/zdevito/followers",
            "following_url": "https://api.github.com/users/zdevito/following{/other_user}",
            "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions",
            "organizations_url": "https://api.github.com/users/zdevito/orgs",
            "repos_url": "https://api.github.com/users/zdevito/repos",
            "events_url": "https://api.github.com/users/zdevito/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zdevito/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2018-03-26T19:25:25Z",
        "updated_at": "2018-04-06T00:07:54Z",
        "closed_at": "2018-04-06T00:07:54Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "@script doesn't insert expand nodes, but our fuser assumes that point-wise operators cannot broadcast, which is unsafe. We need to fix this in a way makes the fuser safe, while still having it produce good fusions for @script nodes. This can be a modification to shape analysis that is aware of the (relatively small) set of point-wise operators that do broadcasting.\r\n\r\n```\r\n# before analysis\r\ny = rand(1,4)\r\nz = rand(4,4)\r\nx = exp(add(y, z)) # broadcasting add\r\n\r\n# using the result of shape analysis, we insert expand nodes and replace\r\n# broadcasting add with a non-broadcasting variant:\r\n\r\n# after\r\ny = rand(1,4)\r\nz = rand(4,4)\r\nx = exp(add_nobroadcast(expand_to(y, z), z)) # non-broadcasting add, nobroadcast could be an attribute if that turns out to work.\r\n\r\n# fuser is modified to only work on non-broadcasting adds.\r\n\r\n```\r\n",
        "closed_by": {
            "login": "zdevito",
            "id": 370202,
            "node_id": "MDQ6VXNlcjM3MDIwMg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/370202?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zdevito",
            "html_url": "https://github.com/zdevito",
            "followers_url": "https://api.github.com/users/zdevito/followers",
            "following_url": "https://api.github.com/users/zdevito/following{/other_user}",
            "gists_url": "https://api.github.com/users/zdevito/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zdevito/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zdevito/subscriptions",
            "organizations_url": "https://api.github.com/users/zdevito/orgs",
            "repos_url": "https://api.github.com/users/zdevito/repos",
            "events_url": "https://api.github.com/users/zdevito/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zdevito/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/6011/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/6011/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/4549",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/4549/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/4549/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/4549/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/4549",
        "id": 286945316,
        "node_id": "MDU6SXNzdWUyODY5NDUzMTY=",
        "number": 4549,
        "title": "RuntimeError: Unsupported op descriptor: thnn_batch_norm_forward-5-eps-momentum-training. File a bug report.",
        "user": {
            "login": "deepbrain",
            "id": 10003025,
            "node_id": "MDQ6VXNlcjEwMDAzMDI1",
            "avatar_url": "https://avatars.githubusercontent.com/u/10003025?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/deepbrain",
            "html_url": "https://github.com/deepbrain",
            "followers_url": "https://api.github.com/users/deepbrain/followers",
            "following_url": "https://api.github.com/users/deepbrain/following{/other_user}",
            "gists_url": "https://api.github.com/users/deepbrain/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/deepbrain/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/deepbrain/subscriptions",
            "organizations_url": "https://api.github.com/users/deepbrain/orgs",
            "repos_url": "https://api.github.com/users/deepbrain/repos",
            "events_url": "https://api.github.com/users/deepbrain/events{/privacy}",
            "received_events_url": "https://api.github.com/users/deepbrain/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            },
            {
                "id": 797012849,
                "node_id": "MDU6TGFiZWw3OTcwMTI4NDk=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/in%20progress",
                "name": "in progress",
                "color": "ededed",
                "default": false,
                "description": null
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "apaszke",
            "id": 4583066,
            "node_id": "MDQ6VXNlcjQ1ODMwNjY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4583066?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/apaszke",
            "html_url": "https://github.com/apaszke",
            "followers_url": "https://api.github.com/users/apaszke/followers",
            "following_url": "https://api.github.com/users/apaszke/following{/other_user}",
            "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions",
            "organizations_url": "https://api.github.com/users/apaszke/orgs",
            "repos_url": "https://api.github.com/users/apaszke/repos",
            "events_url": "https://api.github.com/users/apaszke/events{/privacy}",
            "received_events_url": "https://api.github.com/users/apaszke/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "apaszke",
                "id": 4583066,
                "node_id": "MDQ6VXNlcjQ1ODMwNjY=",
                "avatar_url": "https://avatars.githubusercontent.com/u/4583066?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/apaszke",
                "html_url": "https://github.com/apaszke",
                "followers_url": "https://api.github.com/users/apaszke/followers",
                "following_url": "https://api.github.com/users/apaszke/following{/other_user}",
                "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions",
                "organizations_url": "https://api.github.com/users/apaszke/orgs",
                "repos_url": "https://api.github.com/users/apaszke/repos",
                "events_url": "https://api.github.com/users/apaszke/events{/privacy}",
                "received_events_url": "https://api.github.com/users/apaszke/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 6,
        "created_at": "2018-01-09T01:50:05Z",
        "updated_at": "2018-01-14T22:37:45Z",
        "closed_at": "2018-01-14T22:37:45Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I started getting this with the latest code while using JIT:\r\n\r\nRuntimeError: Unsupported op descriptor: thnn_batch_norm_forward-5-eps-momentum-training. File a bug report.\r\n\r\nIt did not happen 7 days ago and still does not happen if I roll back pytorch to the version I had 7 days ago.  Do you need any simplified test case to fix it?\r\n  ",
        "closed_by": {
            "login": "apaszke",
            "id": 4583066,
            "node_id": "MDQ6VXNlcjQ1ODMwNjY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4583066?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/apaszke",
            "html_url": "https://github.com/apaszke",
            "followers_url": "https://api.github.com/users/apaszke/followers",
            "following_url": "https://api.github.com/users/apaszke/following{/other_user}",
            "gists_url": "https://api.github.com/users/apaszke/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/apaszke/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/apaszke/subscriptions",
            "organizations_url": "https://api.github.com/users/apaszke/orgs",
            "repos_url": "https://api.github.com/users/apaszke/repos",
            "events_url": "https://api.github.com/users/apaszke/events{/privacy}",
            "received_events_url": "https://api.github.com/users/apaszke/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/4549/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/4549/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/pytorch/pytorch/issues/4396",
        "repository_url": "https://api.github.com/repos/pytorch/pytorch",
        "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/4396/labels{/name}",
        "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/4396/comments",
        "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/4396/events",
        "html_url": "https://github.com/pytorch/pytorch/issues/4396",
        "id": 284998068,
        "node_id": "MDU6SXNzdWUyODQ5OTgwNjg=",
        "number": 4396,
        "title": "JIT leaks memory in nets with dropout layer ",
        "user": {
            "login": "deepbrain",
            "id": 10003025,
            "node_id": "MDQ6VXNlcjEwMDAzMDI1",
            "avatar_url": "https://avatars.githubusercontent.com/u/10003025?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/deepbrain",
            "html_url": "https://github.com/deepbrain",
            "followers_url": "https://api.github.com/users/deepbrain/followers",
            "following_url": "https://api.github.com/users/deepbrain/following{/other_user}",
            "gists_url": "https://api.github.com/users/deepbrain/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/deepbrain/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/deepbrain/subscriptions",
            "organizations_url": "https://api.github.com/users/deepbrain/orgs",
            "repos_url": "https://api.github.com/users/deepbrain/repos",
            "events_url": "https://api.github.com/users/deepbrain/events{/privacy}",
            "received_events_url": "https://api.github.com/users/deepbrain/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 679953983,
                "node_id": "MDU6TGFiZWw2Nzk5NTM5ODM=",
                "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20jit",
                "name": "oncall: jit",
                "color": "c5def5",
                "default": false,
                "description": "Add this issue/PR to JIT oncall triage queue"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 11,
        "created_at": "2017-12-28T22:03:11Z",
        "updated_at": "2018-01-04T01:33:47Z",
        "closed_at": "2018-01-03T18:44:50Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "if I add a dropout layer in FC layers, a JIT compiled forward pass of a net starts to seriously leak memory in the backward pass. I made a simple test case below. When it runs, you will see a rapidly increasing GPU/CPU memory usage in nvidia-smi/top and it will crash with an out of memory exception soon. Without the dropout layer or the backward pass, it works fine. \r\n\r\n```python\r\nimport torch\r\nfrom torch import jit\r\nimport torch.nn as nn\r\nfrom torch.autograd import Variable\r\n\r\nclass TestNet(nn.Module):\r\n    def __init__(self):\r\n        super(TestNet, self).__init__()\r\n        self.net1 = nn.Linear(100, 200)\r\n        self.net2 = nn.Linear(200, 1)\r\n        self.sigmoid = nn.Sigmoid()\r\n        self.ReLU = nn.ReLU(inplace=False)\r\n        self.drop = nn.Dropout(0.5)\r\n               \r\n    def forward(self, V):\r\n        return self.sigmoid(self.net2(self.drop(self.ReLU(self.net1(V))))).squeeze() \r\n\r\n\r\nuse_cuda = True\r\nnet = TestNet()\r\ncriterion = nn.BCELoss()\r\nif use_cuda:\r\n    net.cuda()\r\n    criterion.cuda()\r\n    V = Variable(torch.randn(100, 100)).cuda()\r\n    label = Variable(torch.randn(100)).cuda()\r\nelse:\r\n    V = Variable(torch.randn(100, 100))\r\n    label = Variable(torch.randn(100))\r\n\r\nnet.train()\r\nfwd = jit.compile(net.forward)\r\nfor i in range(0,1000000):\r\n    r = fwd(V)\r\n    err = criterion(r, label)\r\n    err.backward()   \r\n\r\n```\r\n\r\n",
        "closed_by": {
            "login": "ezyang",
            "id": 13564,
            "node_id": "MDQ6VXNlcjEzNTY0",
            "avatar_url": "https://avatars.githubusercontent.com/u/13564?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ezyang",
            "html_url": "https://github.com/ezyang",
            "followers_url": "https://api.github.com/users/ezyang/followers",
            "following_url": "https://api.github.com/users/ezyang/following{/other_user}",
            "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions",
            "organizations_url": "https://api.github.com/users/ezyang/orgs",
            "repos_url": "https://api.github.com/users/ezyang/repos",
            "events_url": "https://api.github.com/users/ezyang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ezyang/received_events",
            "type": "User",
            "site_admin": false
        },
        "reactions": {
            "url": "https://api.github.com/repos/pytorch/pytorch/issues/4396/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/4396/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    }
]