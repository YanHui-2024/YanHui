 torch._C._infer_size
"""
Output:
RuntimeError                              Traceback (most recent call last)
<ipython-input-16-f97503a43d0d> in <module>()
     28     some_tensor = torch.Tensor([0.5, 1.5])
     29     print(some_tensor)
---> 30     test(some_tensor)
     31     print(test.code)
RuntimeError: The following operation failed in the TorchScript interpreter.
Traceback of TorchScript (most recent call last):
  File "test/tinytest.py", line 28, in forward
        _0 = torch._C._infer_size(self.some_tensor_, 1)
        ~~~~~~~~~~~~~~~~~~~~~~~ <--- HERE
RuntimeError: The type int is not supported by TorchScript yet!
"""
# Version: PyTorch version: 1.7.0, PyTorch nightly version: 2c5806d
# Labels: oncall: jit, module: onnx, module: amp (automated mixed precision), onnx-triaged
# PR Title: TorchScript number type is cast to an integer during assignment inside jit.trace
import torch
@torch.jit.script
def test(some_tensor: torch.Tensor):
    for loop_idx in range(some_tensor.shape[0]):
        temp = some_tensor[loop_idx].item()
        print(temp)
        some_tensor[loop_idx] = temp
    return some_tensor
some_tensor = torch.Tensor([0.5, 1.5])
print(some_tensor)
print(test(some_tensor), '\n')
print(test.code)
# API: torch._C._infer_size
"""
Output:
RuntimeError                              Traceback (most recent call last)
<ipython-input-36-3a3c5c9204aa> in <module>()
     28     some_tensor = torch.Tensor([0.5, 1.5])
     29     print(some_tensor)
---> 30     test(some_tensor)
     31     print(test.code)
RuntimeError: The following operation failed in the TorchScript interpreter.
Traceback of TorchScript (most recent call last):
  File "test/tinytest.py", line 28, in forward
        _0 = torch._C._infer_size(self.some_tensor_, 1)
        ~~~~~~~~~~~~~~~~~~~~~~~ <--- HERE
RuntimeError: The type int is not supported by TorchScript yet!
"""
# Version: PyTorch version: 1.8.0, PyTorch nightly version: 2c5806d
# Labels: oncall: jit, module: onnx, module: amp (automated mixed precision), onnx-triaged
# PR Title: TorchScript number type is cast to an integer during assignment inside jit.trace
import torch
@torch.jit.script
def test(some_tensor: torch.Tensor):
    for loop_idx in range(some_tensor.shape[0]):
        temp = some_tensor[loop_idx].item()
        print(temp)
        some_tensor[loop_idx] = temp
    return some_tensor
some_tensor = torch.Tensor([0.5, 1.5])
print(some_tensor)
print(test(some_tensor), '\n')
print(test.code)
# API: torch._C._infer_size
"""
Output:
RuntimeError                              Traceback (most recent call last)
<ipython-input-36-3a3c5c9204aa> in <module>()
     28     some_tensor = torch.Tensor([0.5, 1.5])
     29     print(some_tensor)
---> 30     test(some_tensor)
     31     print(test.code)
RuntimeError: The following operation failed in the TorchScript interpreter.
Traceback of TorchScript (most recent call last):
  File "test/tinytest.py", line 28, in forward
        _0 = torch._C._infer_size(self.some_tensor_, 1)
        ~~~~~~~~~~~~~~~~~~~~~~~ <--- HERE
RuntimeError: The type int is not supported by TorchScript yet!
"""
# Version: PyTorch version: 1.7.0, PyTorch nightly version: 2c5806d
# Labels: oncall: jit, module: onnx, module: amp (automated mixed precision), onnx-triaged
# PR Title: TorchScript number type is cast to an integer during assignment inside jit.trace
import torch
@torch.jit.script
def test(some_tensor: torch.Tensor):
    for loop_idx in range(some_tensor.shape[0]):
        temp = some_tensor[loop_idx].item()
        print(temp)
        some_tensor[loop_idx] = temp
    return some_tensor
some_tensor = torch.Tensor([0.5, 1.5])
print(some_tensor)
print(test(some_tensor), '\n')
print(test.code)
# API: torch._C._infer_size
"""
Output:
RuntimeError                              Traceback (most recent call last)
<ipython-input-36-3a3c5c9204aa> in <module>()
     28     some_tensor = torch.Tensor([0.5, 1.5])
     29     print(some_tensor)
---> 30     test(some_tensor)
     31     print(test.code)
RuntimeError: The following operation failed in the TorchScript interpreter.
Traceback of TorchScript (most recent call last):
  File "test/tinytest.py", line 28, in forward
        _0 = torch._C._infer_size(self.some_tensor_, 1)
        ~~~~~~~~~~~~~~~~~~~~~~~ <--- HERE
RuntimeError: The type int is not supported by TorchScript yet!
"""
# Version: PyTorch version: 1.8.0, PyTorch nightly version: a92e6c47ddf6399a4b5752d7101ed19c1babde71
# Labels: oncall: jit, module: onnx, module: amp (automated mixed precision), onnx-triaged
# PR Title: TorchScript number type is cast to an integer during assignment inside jit.trace
import torch
@torch.jit.script
def test(some_tensor: torch.Tensor):
    for loop_idx in range(some_tensor.shape[0]):
        temp = some_tensor[loop_idx].item()
        print(temp)
        some_tensor[loop_idx] = temp
    return some_tensor
some_tensor = torch.Tensor([0.5, 1.5])
print(some_tensor)
print(test(some_tensor), '\n')
print(test.code)
# API: torch._C._infer_size
"""
Output:
RuntimeError                              Traceback (most recent call last)
<ipython-input-36-3a3c5c9204aa> in <module>()
     28     some_tensor = torch.Tensor([0.5, 1.5])
     29     print(some_tensor)
---> 30     test(some_tensor)
     31     print(test.code)
RuntimeError: The following operation failed in the TorchScript interpreter.
Traceback of TorchScript (most recent call last):
  File "test/tinytest.py", line 28, in forward
        _0 = torch._C._infer_size(self.some_tensor_, 1)
        ~~~~~~~~~~~~~~~~~~~~~~~ <--- HERE
RuntimeError: The type int is not supported by TorchScript yet!
"""
# Version: PyTorch version: 1.7.0, PyTorch nightly version: a92e6c47ddf6399a4b5752d7101ed19c1babde71
# Labels: oncall: jit, module: onnx, module: amp (automated mixed precision), onnx-triaged
# PR Title: Tor