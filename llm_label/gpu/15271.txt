# Title: Corrupted RNN parameters in models exported on GPU (torch.jit)
"""
Output:
        # PARAMETER :  renet1.rnn.weight_hh_l0
        * GPU :  tensor([-0.5195, -0.7641,  0.7705,  0.6834,  0.0681], device='cuda:0')
        * CPU :  tensor([ 0.0051,  0.0621,  0.0859, -0.0506, -0.1000])

        # PARAMETER :  renet1.rnn.bias_ih_l0
        * GPU :  tensor([0., 0., 0., 0., 0.], device='cuda:0')
        * CPU :  tensor([-0.0004,  0.0263,  0.0537, -0.0810,  0.0930])

        # PARAMETER :  renet1.rnn.bias_hh_l0
        * GPU :  tensor([0., 0., 0., 0., 0.], device='cuda:0')
        * CPU :  tensor([ 0.0439, -0.0063,  0.0250,  0.0784,  0.0408])

        # PARAMETER :  renet1.rnn.weight_ih_l0_reverse
        * GPU :  tensor([0., 0., 0., 0., 0.], device='cuda:0')
        * CPU :  tensor([-0.0755, -0.0730, -0.0435, -0.0522, -0.0979])

        # PARAMETER :  renet1.rnn.weight_hh_l0_reverse
        * GPU :  tensor([0., 0., 0., 0., 0.], device='cuda:0')
        * CPU :  tensor([ 0.0104,  0.1401, -0.0695,  0.0870, -0.0896])

        # PARAMETER :  renet1.rnn.bias_ih_l0_reverse
        * GPU :  tensor([0.0165, 0.0165, 0.0383, 0.0383, 0.0000], device='cuda:0')
        * CPU :  tensor([ 0.0596,  0.1129, -0.1282,  0.0738, -0.0051])

        # PARAMETER :  renet1.rnn.bias_hh_l0_reverse
        * GPU :  tensor([ 0.0419,  0.0845, -0.0466, -0.1143, -0.0606], device='cuda:0')
        * CPU :  tensor([-0.0844,  0.0941, -0.1149,  0.0188, -0.0276])
"""
# Version: PyTorch version: 1.0.0
# Labels: oncall: jit
# PR Title: Corrupted RNN parameters in models exported on GPU (torch.jit)
model_cpu = Architecture()
model_gpu = copy.deepcopy(model_cpu).to(torch.device("cuda"))

dummy_input = torch.randn(1, 3, 224, 224)

traced_model_cpu = torch.jit.trace(model_cpu, dummy_input)
traced_model_gpu = torch.jit.trace(model_gpu, dummy_input.to(torch.device('cuda')))
