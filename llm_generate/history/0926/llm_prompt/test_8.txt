# API: onnx.topk
# Bug description: argsort not found when ONNX exporting [JIT]
#                  when using torch.jit.trace in PyTorch v1.4.0
import torch
from torch import nn
import numpy as np

class Demo(torch.nn.Module):
    def __init__(self):
        super().__init__()

    def forward(self, x):
        v, inds = x.sort(descending=True)
        # inds = x.argsort(descending=True)
        return inds

if __name__ == "__main__":
    input_tensor = torch.range(20, 80)
    demo = Demo()
    out = demo(input_tensor)
    torch.onnx.export(demo, input_tensor, "debug.onnx", verbose=True,
                        input_names=['data'],
                        opset_version=11,
                        do_constant_folding=True,
                        dynamic_axes={'data':{0:'batch'}})


# API: In-place ops in JIT graph
# Bug description: Incorrect traced graph for in-place ops
#                  in current master (1.3.0)
import torch

class IndexPutModel(torch.nn.Module):
    def forward(self, x, update):
        x[..., torch.tensor([2, 1, 3]), 2:4] += update
        return x

x = torch.randn(3, 4, 5, 6, 7)
update = torch.randn(3, 1, 1, 3, 2)

trace_graph, torch_out, inputs_states = torch.jit.get_trace_graph(IndexPutModel(), (x, update), _force_outplace=True, _return_inputs_states=True)

print(trace_graph)


# API: torch.chunk
# Bug description: in-place ops don't behave correctly after chunking when using @torch.jit.script in PyTorch v1.0.0
import torch

@torch.jit.script
def foo(x):
    chunked = torch.chunk(x, 2)
    foo = chunked[0]
    foo.add_(5)

foo(torch.zeros(12))


# API: torch.Tensor.reshape (), flatten()
# Bug description: TorchScript does not handle Tensor.reshape properly.
import torch


def reshape_test(t: torch.Tensor):
    t.reshape(-1)[0] = torch.tensor(1, dtype=t.dtype, device=t.device)

    return t


t = torch.zeros([2, 2])
print('PyTorch function result')
print(reshape_test(t))
print()

reshape_test = torch.jit.script(reshape_test)
t = torch.zeros([2, 2])
print('TorchScript function result')
print(reshape_test(t))
print()

print('TorchScript function graph')
print(reshape_test.graph)



# API: