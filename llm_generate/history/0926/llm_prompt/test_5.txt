# API: torch.nn.RNN
# Bug description: Trace sanity check fails when using autocast on Conv node
#                  when using torch.jit.trace in PyTorch v1.12.1
import torch
import torch.nn as nn

torch.jit.script(nn.RNN(32, 64, 1))


# API: autograd.grad
# Bug description: Trace sanity check fails when using `retain_graph` in autograd when using torch.jit.script in PyTorch v1.3.1
import torch

@torch.jit.script
def f(x):
    return torch.autograd.grad([x.sum()], [x], retain_graph=True)


# API: split_with_sizes()
# Bug description: TypeError raised on torch.split_with_sizes() in tracing mode
import torch


class MyModule(torch.nn.Module):
    def forward(self, x):
        return torch.split(x, x.size(1))


m = MyModule()
x = torch.randn(1, 2, 3, 4)

# ok to run the model
m(x)

# fail to trace it
print(torch.jit.trace(m, x))


# API: cat
# Bug description: Torchscript thinks that cat nodes broadcast their inputs
#                  when using torch.jit.trace in PyTorch v1.0rc1
import torch                                                    
                                                                
@torch.jit.script                                               
def f(x):                                                       
    a, b, c, d = x.chunk(4, 1)                                  
    r = (a * b) + (c * d)                                       
    return x.sum(), r                                           
                                                                
x = torch.randn(2, 10, device='cuda', requires_grad=True)       
s, r = f(x)                                                     
grad_x, = torch.autograd.grad(s + r.sum(), x, create_graph=True)
grad_grad_x = torch.autograd.grad(grad_x.sum() + s + r.sum(), x)


# API: