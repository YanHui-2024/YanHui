# API: Python function signature for `torch.tensordot` in Python
# Bug description: when passing a tuple of int as the dimension pair, TorchScript JIT compilation fails
In [1]: import torch

In [2]: x, y = torch.randn(3, 4), torch.randn(4, 3)

In [3]: torch.tensordot(x, y, dims=((1,), (0,)))
Out[3]: 
tensor([[-0.2011,  0.1324,  0.7855],
        [ 0.4894, -2.1793, -0.4989],
        [ 2.4699,  0.4472, -0.5411]])

In [5]: @torch.jit.script
   ...: def f(x, y):
   ...:     return torch.tensordot(x, y, dims=((1,), (0,)))
   ...: 
---------------------------------------------------------------------------
RuntimeError: 
Arguments for call are not valid.
The following variants are available:
  
  aten::tensordot(Tensor self, Tensor other, int[] dims_self, int[] dims_other) -> (Tensor):
  Argument dims_self not provided.
  
  aten::tensordot.out(Tensor self, Tensor other, int[] dims_self, int[] dims_other, *, Tensor(a!) out) -> (Tensor(a!)):
  Argument dims_self not provided.

The original call is:
  File "<ipython-input-5-61613126bcad>", line 3
@torch.jit.script
def f(x, y):
    return torch.tensordot(x, y, dims=((1,), (0,)))
           ~~~~~~~~~~~~~~~ <--- HERE


In [6]: @torch.jit.script
   ...: def f(x, y):
   ...:     return torch.tensordot(x, y, dims_self=[1], dims_other=[0])

In [7]: torch.tensordot(x, y, dims_self=[1], dims_other=[0])
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
<ipython-input-7-be1bfc130a4a> in <module>
----> 1 torch.tensordot(x, y, dims_self=[1], dims_other=[0])

TypeError: tensordot() got an unexpected keyword argument 'dims_self'


# API: JIT trace of Dropout with negative input
# Bug description: Trace sanity check fails when using torch.jit.trace on a model that uses the Dropout op
#                  when using PyTorch v1.7.0 or v1.8.0 (reproducible)
import torch
import torch.nn.functional as F

@torch.jit.trace(torch.zeros(1, 2, 3))
def dropout_test(x):
    x = torch.neg(x)
    return F.dropout(x)

dropout_test(torch.zeros(1, 2, 3, requires_grad=True))


# API: torch.load
# Bug description: Load tensor from file in C++ fails (caused by missing shared library?)
#                  when using PyTorch v1.1.0 or lower, but works for the latest version?
#include <torch/torch.h>

int main() {
  torch::Tensor tensor;
  torch::load(tensor, "tensor.pt");
  std::cout << tensor << std::endl;
}


# API: